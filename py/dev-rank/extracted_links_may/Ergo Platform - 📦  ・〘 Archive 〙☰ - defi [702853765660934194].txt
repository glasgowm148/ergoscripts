==============================================================
Guild: Ergo Platform
Channel: üì¶  „Éª„Äò Archive „Äô‚ò∞ / defi
==============================================================

[04/23/2020 1:12 PM] kushti#0978
This channel is to discuss decentralized finance applications on top of Ergo as well as corresponding infrastructure: oracles, decentralized options and bonds, loans, algorithmic stablecoins etc.


[04/23/2020 1:14 PM] kushti#0978
Let's start with overviewing existing schemes, contracts and tools already done in Ergo (oracles, yAssets contracts etc, zero-interest loans) and then talk about applications and more complex protocols, such as algo stablecoins.


[04/23/2020 1:15 PM] kushti#0978
SoK on stablecoins: http://www.ifca.ai/fc20/preproceedings/119.pdf


[04/23/2020 2:09 PM] Robert K#0722
Terra stablecoin: https://terra.money/Terra_White_paper.pdf


[04/23/2020 2:11 PM] Robert K#0722
Here's some thoughts on designing oracles that I mentioned to Kushti in a previous chat that may or may not be useful:
```
In essence the oracle has a contract on-chain (probably with an NFT to make it easy to track) where it holds the latest posted oracle data and where others deposit funds into to fund the oracle.
If the funds present are > than the "cost" that the oracle has defined for data posting, then it posts the data according to a schedule.
For DeFi dApps that require oracle data to be posted, we likely can use this kind of scheme where any time someone performs an action then they also add a little bit of Erg to the oracle's box thereby pre-loading some funds for the oracle to keep fresh data theoretically always available.
I think this is the best way to do it where you have a payment per oracle data posting together with a schedule, and thus you can pre-pay ahead, and we can bootstrap the process by putting like 3-6 months worth of Erg in the oracle boxes to start when creating a new DeFi dApp to ensure proper functioning in the short-term
You can thereby also create more complex schemes with multi-oracles. The oracle contract has a list of oracles, a posting schedule, and a submission period defined. Let's say 4 oracles, 1h sched, 10 minute submission period.

Each oracle has a 10 minute submission period before the posting schedule time where they must submit data to the contract. The reward (payout) for each posting schedule period is pre-defined and so to be rewarded an oracle must submit their data in said period or else they receive nothing. As such you incentivize the oracles to all post (and thus make sure they have near 100% uptime), and you essentially are creating an oracle "pool".
We can obviously make this naive example better by requiring each oracle to create their own boxes separately with their data in a register allowing for scaling improvements  by using all boxes as inputs.
```


[04/25/2020 11:45 PM] kushti#0978
https://www.youtube.com/watch?v=lpPfqj88hhohttps://www.youtube.com/watch?v=lpPfqj88hho

{Embed}
ETHDenver
https://www.youtube.com/watch?v=lpPfqj88hho
MakerDAO: Deconstructing the Oracle Stack ‚Äì Niklas Kunkel
This talk is from ETHDenver, the world‚Äôs largest Web3 BUIDLathon and Community Gathering. ETHDenver‚Äôs content is crypto and blockchain focused. 

Subscribe to our channel to learn more + connect on Twitter: https://twitter.com/EthereumDenver. 

Speaker: Nik Kunkel of Maker DAO...
https://images-ext-2.discordapp.net/external/1LOsIfScvC5JnceWxNbbNwg7pAgjbC15Iw3bOhmueio/https/i.ytimg.com/vi/lpPfqj88hho/maxresdefault.jpg


[04/25/2020 11:45 PM] kushti#0978
It seems Maker's approach is to have as many sources as possible, do most of the work offchain, and then aggregating oracle onchain


[04/26/2020 11:43 PM] kushti#0978
one-way convertible tokens being bought from the holding contract https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/9

{Embed}
https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/9
Tethering a token to USD using the rate oracle
Another attempt:  An oracle associated with singleton token 1b26f80bb93977e85ffda7b54572e31a68d77295fc4c8a1b762071a44350bad6 now tracking price of USD in nanoErgs (based on CoinMarketCap data).  Slightly modified script:  https://wallet.plutomonkey.com/p2s/?source=ewogIHZhbCBu...


[04/27/2020 10:11 AM] kushti#0978
@Robert K @scalahub I think next weekend I can do informal spec for yAssets + real transactions on the chain, to test all the stack )

{Reactions}
üôÇ 

[04/27/2020 3:05 PM] Robert K#0722
Ah nice, that's very exciting.


[05/09/2020 11:55 AM] kushti#0978
https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3466371

{Embed}
https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3466371
SoK: Demystifying Stablecoins by Jeremy Clark, Didem Demirag, Seyed...
This papers aims to provide an understandable survey of 'stablecoins'---cryptocurrencies designed to have lower volatility than Bitcoin or Ether. We distil the


[05/18/2020 2:51 PM] Robert K#0722
Alright, so now that the grant/partnership is getting rolling this channel should likely get some more use. Currently I am  helping on-board the company into the Ergo ecosystem, help them with Yoroi Integration, etc. so I likely won't be able to spend a majority of my time on the Stablecoin research, but we can definitely start to scan the horizon for every existing protocol and take steps forward.

{Reactions}
üëç 

[05/18/2020 3:01 PM] kushti#0978
Perfect! I've read SoK papers on the stablecoins, looking into Maker. Also got in touch with a guy who was Ripple advisor many years ago among many other consultancy jobs on tokenomics and cryptoeconomy primitives, also he had talks with Basis and Maker founders (maybe also consulted them lemme check).


[05/18/2020 3:02 PM] Robert K#0722
Oh nice.


[05/18/2020 3:03 PM] Robert K#0722
I also ran into this recently but it literally looks like a Maker clone with trusted gateways for Bitcoin on top of Cosmos: https://www.kava.io/

{Embed}
https://www.kava.io/
Kava - DeFi for crypto
Leverage assets in the Cosmos ecosystem using Kava's state-of-the-art CDP system.


[05/18/2020 3:03 PM] Robert K#0722
Their "paper" is literally a marketing slideshow though lol


[05/18/2020 3:05 PM] kushti#0978
ahaha it happens in the space unfortunately


[05/18/2020 3:05 PM] kushti#0978
and very often


[05/18/2020 6:18 PM] kushti#0978
going to read this tonight : https://arxiv.org/pdf/2005.04377.pdf

{Reactions}
üëç 

[05/18/2020 7:09 PM] Robert K#0722
In regards to Oracles, here's what I came up with just over a week ago for improving on existing schemes and allow for dynamic entry.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/712003870997348472/Oracle-Pools.md

{Reactions}
üëçüèª 

[05/18/2020 7:09 PM] Robert K#0722
I kind of borrowed from the idea above for Claim Pools/data accumulator pools.


[05/18/2020 7:11 PM] Robert K#0722
The idea of Oracle Pools is kind of interesting because you can form arbitraryily large hierarchies of pools made of pools made of pools which give you higher assurance at the cost of speed. This also allows you to have an easy way to fund all the pools by funding the top of the hierarchy and then all lower levels can get paid out for acting properly.


[05/19/2020 2:47 PM] kushti#0978
@Robert K looks good! slow speed could be good actually, to filter out sudden slippages

{Reactions}
üëç 

[05/21/2020 5:31 PM] kushti#0978
@Robert K thought a bit about dynamic pools, it seems some cheating is possible there: a data provider may just provide average data from others in order to get paid, without delivering actual data from outside


[05/21/2020 5:34 PM] Robert K#0722
Hmm, good point. I attempted to prevent that for an aspiring oracle trying to enter the pool by requiring that they post their datapoint before the approved oracles, but that doesn't stop anyone from doing so within the oracle pool itself.


[05/21/2020 5:35 PM] Robert K#0722
I guess we'd need to have some sort of scheme where oracles are required to be the first to post at least a certain percentage of the time?


[05/21/2020 5:36 PM] Robert K#0722
Or maybe we come up with an algorithm for determing the required order (or more specifically which block height/block height range) that an oracle is supposed to post?


[05/21/2020 5:36 PM] Robert K#0722
So say we have an oracle pool consisting of `Oracle A` `Oracle B` `Oracle C`


[05/21/2020 5:38 PM] Robert K#0722
The schedule is to post every 50 blocks for the oracle pool. Every oracle has a 2 block range to post their data. In epoch one the order is `A` `B` `C`.


[05/21/2020 5:39 PM] Robert K#0722
Therefore `A` must post between block 44-45, `B` 46-47, `C` 48-49.


[05/21/2020 5:39 PM] Robert K#0722
Then in epoch #2, it rotates so that the posting order is `C` `A` `B`


[05/21/2020 5:40 PM] Robert K#0722
Epoch #3: `B` `C` `A`


[05/21/2020 5:40 PM] Robert K#0722
Epoch #4: `A` `B` `C`


[05/21/2020 5:43 PM] Robert K#0722
And then with larger oracle pools you can have something similar with more posting periods. I guess it should be possible to have 2 or more oracles in a posting period, but then you increase the chance of data copying depending on how many oracles are in a posting period and the length of the period.


[05/21/2020 5:45 PM] Robert K#0722
Hmm, actually you could even have a simpler scheme, with only 2 posting periods where the first posting period is only comprised of 1 single oracle, and the 2nd posting period is everyone else.


[05/21/2020 5:46 PM] Robert K#0722
Every epoch a new oracle is chosen to be this "leader" who must post the data in the first posting period. All other oracles are in the "seconary" posting period.


[05/21/2020 5:47 PM] Robert K#0722
If a leader fails to post their data, then we can do some collateral slashing for example.


[05/21/2020 11:15 PM] kushti#0978
sounds interesting let me think deeper on that


[05/25/2020 7:45 PM] Robert K#0722
I think it may be a good idea for us to compile a list of all relevant papers/documents that we can find with specific sections for stablecoins, oracles, (and potentially other related DeFi).


[05/25/2020 7:45 PM] Robert K#0722
Just so we have a place to keep tabs on/easily add to so that everyone is on the same page of what's out there.


[05/25/2020 7:58 PM] Robert K#0722
I've created a google doc for this (anyone with the link can edit so feel free to add to it) and personally added a few papers to start: https://docs.google.com/document/d/1jmyOlC7FuW9DkUw4BcSTv4-r4Mbguf0ukOMTrCdhem4/edit?usp=sharing

{Embed}
https://docs.google.com/document/d/1jmyOlC7FuW9DkUw4BcSTv4-r4Mbguf0ukOMTrCdhem4/edit?usp=sharing
DeFi Research - Links/Papers/Docs
DeFi Research - Links/Papers/Docs  This document is a list of relevant links/papers/documents pertaining to DeFi that may be useful to look at for reference while designing a stablecoin protocol for Ergo.    Stablecoins Dai Stablecoin System Whitepaper (2017) The Maker Protoco...
https://images-ext-1.discordapp.net/external/JZKlyiOE-TwKvxfetaxLTQvYlvRKpTAFdfUOViev6wI/https/lh4.googleusercontent.com/bPfD71ktCEUPrRCX02BXXeFgQZ8MKz-SzHBjVfJPAeErkXNtsfAP_eUK0Z796d1lAE9HPhlZbg%3Dw1200-h630-p

{Reactions}
üëç 

[05/25/2020 10:17 PM] kushti#0978
@Robert K thanks a lot!


[05/25/2020 10:21 PM] kushti#0978
@Robert K checked Maker again during the weekend. It seems oracles is the very core component needed. Other parts (auctions, governance) add a lot of complexity.
So some rough thought is : what if algo stablecoin contract is using oracles and issuing liquidity to any instance of a contract from pre-agreed  templatizable set, with parameters making sense (e.g. collateralization is >= 100 ? or, say, 120)


[05/26/2020 12:39 AM] Robert K#0722
Yeah, I garee @kushti. This is kind of the design pattern I went with designing the Convexity protocol (Compound) where I threw away the governance/complexity and essentially had one core contract that allowed redeeming of cTokens if users created boxes with collateral with some pre-defined traits  (though I didn't end up finishing the design fully).


[05/26/2020 12:41 AM] Robert K#0722
I think for the first version of algo stablecoin, we should definitely remove governance/auctions out of the scope.


[05/26/2020 12:45 AM] Robert K#0722
(I have thought a bit about an on-chain treasury using tokens for showing support for treasury spending, which the design pattern can be replicated similarly later on when we want to do governance voting for protocols. As with the oracle pools, for now please don't share this publicly)

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/714625232740155432/On-Chan_Voting_Treasury.md


[05/26/2020 12:49 AM] Robert K#0722
I think we could plan an initial v1 to have paramters hardcoded and only Erg as collateral, with the intention to release a v2 which adds governance any potentially fancier liquidation methods like auctions.


[05/26/2020 12:50 AM] Robert K#0722
We can likely also do our best to formally verify v1 (if it's not too complex) which we can then use for marketing that we have formally verified that our liquidation method of CDPs is safe from situations like Black Thursday in liquidation (https://medium.com/@whiterabbit_hq/black-thursday-for-makerdao-8-32-million-was-liquidated-for-0-dai-36b83cac56b6)

{Reactions}
üëçüèª 

[05/26/2020 12:52 AM] Robert K#0722
This is probably thinking a bit too far ahead, but if NiPoPoWs/TxChain become used on multiple chains, we could even one day have an updated version that takes multi-assets including those from other chains as collateral which would be great for marketing appeal.


[05/26/2020 12:54 AM] Robert K#0722
One plus about the oracle pools design pattern is that they can aid in preventing Black Thursday like events due to congestion, because the oracle are only awarded on post of data, while in Ethereum they get awarded by someone calling their contract, and then they post data seperately. Oracle pools would actually do something like stake slashing or some other disincentive for missing a post, while in Ethereum oracles typically just wait until it's not too costly.


[05/26/2020 12:58 AM] Robert K#0722
With all of that said, I think v1 we should keep things as simple/safe as possible so that we can get a live stablecoin on mainnet that works. A big focus for that will be making oracle pools work reliably (probably without dynamic entry), having a good liquidaton method that is easy to perform, and setting paramters that even may be a bit overly conservative.


[05/26/2020 2:58 PM] kushti#0978
Sounds like a perfect plan!


[05/27/2020 5:13 PM] scalahub#2618
@Robert K nice voting idea. quite general use for other cases as well


[05/27/2020 5:18 PM] Robert K#0722
Ah thanks. Yeah it's quite generalizable.


[05/27/2020 7:54 PM] Robert K#0722
I think this might be a helpful realization/simple design pattern for you guys in thinking about oracle pools. Essentially in any on-chain protocol which is separated into epochs, you can guarantee that a box has been posted in a given epoch by:

Proving Oracle Has Posted *After* A Specfic Epoch
----
Oracle datapoint boxes must contain the box id (hash of contents) of the last oracle pool box in a register thereby showing that said box was created after the last pool posting/update.


Proving Oracle Has Posted *Before* A Specfic Height
----
"creationHeight" in R3 (which upon evaluation checks creationHeight <= HEIGHT)

{Reactions}
üëç 

[05/27/2020 8:33 PM] scalahub#2618
hmm isn't the rule creationHeight >= HEIGHT ?


[05/27/2020 8:37 PM] scalahub#2618
Actually my bad, its <= HEIGHT .. just checked.. and yes these are indeed useful patterns üôÇ


[05/27/2020 9:29 PM] Robert K#0722
I think I've also figured out how to trustlessly do collateral slashing for non-active oracles and collateral slashing for oracles who censor/fail to collect others' datapoints.


[05/27/2020 9:32 PM] Robert K#0722
Need to sort out the thoughts because it's messy, but it's looking like oracle pools should be able to have pretty decent incentive mechanisms in place even if you have a trusted list of oracles.

{Reactions}
üëç üëçüèª 

[05/28/2020 3:40 PM] kushti#0978
Nice! And looks like we have new patterns yes )


[05/28/2020 5:29 PM] Robert K#0722
Yeah, there's going to be at least a couple novel design patterns from this I believe


[05/28/2020 5:29 PM] Robert K#0722
One of which I posted since it's pretty high-level/abstract, having secure entry into multi-stage protocols: https://www.ergoforum.org/t/secure-user-entry-bootstrap-funneling-in-multi-stage-protocols/228/2

{Embed}
https://www.ergoforum.org/t/secure-user-entry-bootstrap-funneling-in-multi-stage-protocols/228/2
Secure User Entry/Bootstrap Funneling In Multi Stage Protocols
When creating more complex multi-stage protocols, enforcing that data can only be updated in certain ways is a key component. However one major issue is that when actors enter into a multi-stage protocol they don‚Äôt have any data/tokens locked under a stage/contract from the pr...


[05/28/2020 5:30 PM] Robert K#0722
Right now I'm working with the trusted entry option, but it shouldn't be that hard to adjust the protocol design to allow for trustless later on if we ever want to explore into dynamic entry for example.


[05/28/2020 9:40 PM] Robert K#0722
Okay, so since I was spending so much time on figuring this out, I've ended up deciding that I'm going to write out a full informal spec draft for an oracle pool protocol with trusted setup/oracles + collateral slashing. I'm 90% sure I've figured out all of the hard problems and gotten the whole structure down, and it's more so just getting it all down into the format so that it's readable/understandable.


[05/28/2020 9:40 PM] Robert K#0722
I'm leaving a thing or two out so as to not scope it in being too crazy, but I think I can get it done by the end of the day tomorrow.


[05/28/2020 9:42 PM] Robert K#0722
For now I'm designing it so that if an oracle fails to submit a datapoint in an epoch or fails to collect another's datapoint, then they get all of their collateral slashed. If an oracle submits a datapoint outside of the error of margin, for now I am just going to keep it that the oracle won't get paid for being inaccurate.


[05/28/2020 9:43 PM] Robert K#0722
Not sure if we want to do collaterall slashing in the case or not (maybe a bit too aggressive to do so?) but this is just to keep the scope down for now.


[05/28/2020 9:43 PM] Robert K#0722
I'm sure there'll be a lot of improvements and possibly easier ways to do some of the stuff (or maybe just better ideas from you guys), but for now I want to finish this to iron out all the ideas as best as possible to then be able to scrutinize them effectively.


[05/28/2020 11:32 PM] kushti#0978
yes, better to start with something!


[05/28/2020 11:33 PM] kushti#0978
on slashing for inaccurate data, that maybe too rough, but time will tell


[05/28/2020 11:35 PM] kushti#0978
I'm currently busy with core development, maybe can spend some time on oracles during the weekend . 
@scalahub how's it going on your side ?


[05/28/2020 11:35 PM] kushti#0978
@Robert K for contracts, @greenhat can help with testing them in ergo-playground


[05/28/2020 11:40 PM] Robert K#0722
Ah, that's be great. While I have a reasonable handle of the Ergo contract model, I have barely touched scala in my life and have not set up a dev environment for writing/testing contracts.


[05/28/2020 11:41 PM] Robert K#0722
What Jason is working on with a full ide for us non-scala folks is very much appreciated and hope I'll get to test it out soon.


[05/29/2020 5:03 AM] greenhat#6562
I‚Äôll be happy to help!

{Reactions}
üëç 

[05/29/2020 8:50 AM] scalahub#2618
> I'm currently busy with core development, maybe can spend some time on oracles during the weekend . 
> @scalahub how's it going on your side ?
@kushti looking at the oracle idea and see if we can make some stablecoins on it


[05/29/2020 9:09 PM] Robert K#0722
Alright, I've got a first draft pretty much complete. I haven't finished all of the `action conditions`  yet for the collect datapoints action because there's going to be *a lot* and we probably are going to change some specifics around, but otherwise all other actions have all the important conditions that should matter (I think I may have missed simple stuff like checking input box collateral is in output box that's easily addable).


[05/29/2020 9:10 PM] Robert K#0722
I made it very verbose in preambles/explanations so you can understand what is going on in the protocol. I'd recommend reading the intro first, then what hte stages are, then start with the two bootstrap actions.


[05/29/2020 9:10 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/716020781296910366/Stake-Slashing-Pool-Spec.md


[05/29/2020 9:11 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/716020797151641651/Stake-Slashing-Pool-Spec.pdf

{Reactions}
üëç 

[05/29/2020 9:11 PM] Robert K#0722
And here's a more pretty pdf version to read easier since it's pretty lengthy ^ (though hyperlinking doesn't seem to work unfortunately)


[05/29/2020 10:41 PM] kushti#0978
nice! will take a look in my morning


[06/01/2020 2:45 PM] Robert K#0722
Good morning, did anyone read through the informal spec over the weekend by chance/have any thoughts?


[06/01/2020 2:50 PM] kushti#0978
@Robert K yes, I did!


[06/01/2020 2:50 PM] kushti#0978
gimme some time to write down feedback

{Reactions}
üëå 

[06/01/2020 2:50 PM] kushti#0978
like 15-20 minutes


[06/01/2020 3:55 PM] kushti#0978
@Robert K sorry, Monday is a bit insane (as usually though).

In general, looks good. And it looks like finite state machine description exactly, so at some point it would be interesting to try tabular or visual representation of such contracts as well. 

Some things could be simplified, e.g. for "Commit Datapoint" conditions: 
5) "Ergs total is equivalent in input/output boxes"
7) "No other output boxes exist"

is not friendly to mining fees. A workaround that was figured out by @scalahub is about checking that last output value is e.g. <= 0.003, and other boxes belong to the contract.


[06/01/2020 3:56 PM] kushti#0978
@scalahub did you check the writing ? ^


[06/01/2020 3:56 PM] kushti#0978
maybe some other small workarounds will be needed, but for now the design looks good to me


[06/01/2020 3:57 PM] kushti#0978
how will we do implementation? manual transactions first ? @Robert K


[06/01/2020 4:48 PM] Robert K#0722
I agree it looks very close to a FSM, but I think technically due to the potential parallel nature of stages (ie. deposting funds) technically they aren't due to FSMs being sequential (I guess every stage that gets bootstrapped into could be viewed as a separate initial FSM state, and then when it gets spent with another FSM, they converge?). It would definitely be interesting to have visual representations for sure though.


[06/01/2020 4:52 PM] Robert K#0722
Right, I didn't think about fees/efficiency at all so I'm sure there's a number of workarounds needed here or there.


[06/01/2020 4:53 PM] Robert K#0722
Hmm, I just realized that I think the protocol breaks down if there is no money in the pool's box and an epoch passes.


[06/01/2020 4:55 PM] Robert K#0722
I'll need to think about how it's possible to allow "empty epochs" where no datapoints are posted because no funds (and thus no epoch height adjustment in the register of the pool box)


[06/01/2020 5:04 PM] Robert K#0722
I think manual transactions make the most sense to start. Or we can probably whip up a python script/fork the current oracle posting script for testing and even manually feed it data to test things.


[06/01/2020 5:06 PM] Robert K#0722
@greenhat Does the playground support creating tokens which then get locked under another contract/more complex multi-stage scenarios for testing?


[06/01/2020 5:56 PM] greenhat#6562
@Robert K yes! The whole scenario (issue, lock, spend/whatever)  have to be in the same playground though.


[06/01/2020 5:59 PM] greenhat#6562
I‚Äôll make a Scastie link with the latest playground environment.

{Reactions}
üëç 

[06/01/2020 7:27 PM] Robert K#0722
Thanks @greenhat


[06/01/2020 7:27 PM] Robert K#0722
Currently dealing with Yoroi integration designing, but I'll try to keep this in the back burner and think of how to solve the missed epoch problem.


[06/02/2020 6:07 AM] greenhat#6562
@Robert K Here is Scastie link with latest playground env and DEX contracts. 
https://scastie.scala-lang.org/mh3h6SrESnKJwdqZjKnVkw
The playground env library is set in "Build Settings" -> "Extra Sbt Configuration". 
```
libraryDependencies ++= Seq(
  "org.ergoplatform" %% "ergo-playground-env" % "0.0.0-89-e4798629-SNAPSHOT"
)
```
When you change code in Scastie it'll generate new unique URL, so feel free to write your code right there.

{Embed}
https://scastie.scala-lang.org/mh3h6SrESnKJwdqZjKnVkw
Scastie - An interactive playground for Scala.
Scastie can run any Scala program with any library in your browser. You don‚Äôt need to download or install anything.
https://images-ext-2.discordapp.net/external/KrYReWZj2NuY8SonLKj1Vz1h-7mqORfiqtVgiCaZ0XQ/https/scastie.scala-lang.org/public/sharing-image.png

{Reactions}
üëå 

[06/02/2020 2:42 PM] kushti#0978
@scalahub maybe you can do some manual transactions or Kiosk-based playground? Also you can play with Ergo Playground btw )


[06/02/2020 3:40 PM] scalahub#2618
> 7) "No other output boxes exist"
> 
> is not friendly to mining fees. A workaround that was figured out by @scalahub is about checking that last output value is e.g. <= 0.003, and other boxes belong to the contract.
@kushti yes the idea is to enforce relevant outputs using index and account for all ergs in those outputs.. so example `isValid(OUTPUTS(0))` and possibly cap the inputs. Then ensure that only fee amount is left unclaimed from inputs.


[06/02/2020 3:44 PM] scalahub#2618
> @scalahub maybe you can do some manual transactions or Kiosk-based playground? Also you can play with Ergo Playground btw )
@kushti I'm updating Kiosk to use appkit (so it has the ability to sign transactions).


[06/03/2020 2:09 PM] Robert K#0722
Alright, before I feel asslep last night I figured out how to deal with the case if funds ever go below the posting price and an epoch is missed. It can be fixed by adding a new stage which the oracle pool which much be spent into if Ergs ever go under the post price. This new stage only allows for it to be respent back into the normal oracle pool stage if extra ergs of sufficient value are added and the new epoch start height saved in the register are equal to or greater than the post schedule. In essence you provide an infinite amount of time for people to post oracle pool fund deposit boxes, and restart the oracle pool after they have been collected after 1 epoch duration of delay (this is to ensure all oracles are prepared & also to keep the intervals predictable between oracle pool actions and make it easier for oracles)


[06/03/2020 2:10 PM] Robert K#0722
Just need to find time today to add it into the informal spec üòÖ


[06/03/2020 2:11 PM] Robert K#0722
(Also I was thinking it might make sense for us to first build an oracle pool with no collateral/slashing, and then once that works we can develop the contracts further to add-on collateral slashing. This makes it easier to get things started, and we can later post the code of both protocols, allowing people to utilize either in their own dApps, learn, and/or build off one or the other with some other protocol extensions. I'll probably create a 2nd informal spec with all of the collateral slashing elements removed too so we can first focus on building that out.)


[06/03/2020 5:19 PM] kushti#0978
@Robert K yes, we can start without slashing, for simplicity's sake.


[06/03/2020 8:17 PM] Robert K#0722
I figured out a simpler way to solve the empty/inactive epoch with 1 new action & a couple extra checks on different actions, but I just realized my protocol is slightly broken üòÖ


[06/03/2020 8:18 PM] Robert K#0722
Everything should work, but if funds are ever collected, they change the box id of the oracle pool box which breaks the basis that a single `oracle pool box id` per epoch.


[06/03/2020 8:19 PM] Robert K#0722
So it seems that there either 
a) needs to be a small windows between epochs which allows fund collection to take place, or
b) fund collection needs to take place at the same time as datapoint collect in a single super-large action


[06/04/2020 2:29 PM] kushti#0978
@Robert K have you any updated writing for detailed review ?


[06/04/2020 2:34 PM] Robert K#0722
@kushti I've added the new action for restarting the pool (without the conditions) if you want to check that out.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/718095277713653790/Stake-Slashing-Pool-Spec.md


[06/04/2020 2:34 PM] Robert K#0722
Otherwise I'm still 75% focused on Yoroi implementation currently and just coming up with solutions for the pools in the background.


[06/04/2020 2:35 PM] Robert K#0722
Still undecided what is the better fix for the collecting funds problem.


[06/04/2020 2:36 PM] Robert K#0722
If you have any thoughts/ideas for the best way to do that (or anyone else) that would be great to get some other opinions.


[06/04/2020 3:34 PM] Robert K#0722
I think it might make sense to implement a new stage for the oracle pool box which is the "In-Between Epochs" stage (or "New Epoch Preparation" stage or something like that).


[06/04/2020 3:34 PM] Robert K#0722
When datapoints are collected, the oracle pool box moves to this stage, instead of back to itself in a new epoch.


[06/04/2020 3:36 PM] Robert K#0722
This stage is only 2 blocks long, and allows for funds to be collected + provides a time frame for oracles who were not included in the datapoint collection to slash the collateral of the bad-acting collector (which is something that I put in a note had to be addressed in the future)


[06/04/2020 3:42 PM] Robert K#0722
I think this approach makes it more clean when the pool is underfunded too, because it's stuck in this "New Epoch Preparation" stage.


[06/04/2020 4:28 PM] Robert K#0722
Okay I think I've come up with a better design on a high level by separating the oracle pool into two stages, one for "Epoch Preparation" where funds can be collected/epochs can be missed by underfunded pool/collateral slashing happens, and one "Oracle Pool Epoch" stage for the epoch being actually active and oracles required to post datapoints.


[06/04/2020 4:29 PM] Robert K#0722
This separates a lot of the logic and fixes some of the weakpoints in the last design. It'll probably take a 50% rewrite though üòÖ


[06/05/2020 8:50 PM] Robert K#0722
Cool, the new redesign for the oracle pool protocol looks like it should be a lot more efficient than my original design. There's a lot less boxes being spent which means the contract logic should also generally be simpler for a lot of the actions.


[06/05/2020 8:54 PM] Robert K#0722
I think on a high level for on-chain protocols which have a time/epoch-based scheme, splitting time up into "active epoch" where the protocol is running, and "preparing for next epoch" where incentives/payouts/potentially governance happens which affects future epochs is the design pattern to go with.

{Reactions}
üëç (2) 

[06/05/2020 8:55 PM] Robert K#0722
I initially tried to always have an "active epoch" with my first spec, but that makes a lot of things quite a bit more complicated.


[06/05/2020 8:55 PM] Robert K#0722
I still have a bit to work out, but I should have the spec mostly done by Tuesday.


[06/05/2020 9:00 PM] Robert K#0722
(Thinking about it, I think it should actually be reasonably trivial to add governance to this new oracle pool design into the "preparing for next epoch" period together with the simple treasury/dao voting idea I came up with previously. We could use this to allow the oracles to trustlessly change the posting price if 75%+ agree, or other such things. That's way too much to deal with for now, but I actually see nothing stopping us from implementing that in the farther future)


[06/08/2020 3:10 PM] kushti#0978
oh nice


[06/08/2020 3:10 PM] kushti#0978
it seems I'll be totally overbusy until Wed


[06/08/2020 3:10 PM] kushti#0978
with the news coming )


[06/08/2020 3:10 PM] kushti#0978
then can check the updated design


[06/08/2020 3:10 PM] kushti#0978
@scalahub what's your progress ?


[06/08/2020 4:21 PM] scalahub#2618
@kushti looking at @Robert K 's oracle pool idea. Will revert with my comments by Wed


[06/08/2020 5:14 PM] scalahub#2618
> https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3466371
@kushti Also video about the paper https://www.youtube.com/watch?v=qTR-hUBVBF0

{Embed}
Smart Cybersecurity Network (SERENE-RISC)
https://www.youtube.com/watch?v=qTR-hUBVBF0
Demystifying Stablecoins
Presented by Mahsa Moosavi from the Concordia University as part of the Cybersecurity Revolution. 

The Cybersecurity Revolution is a round the world conference held on YouTube.  The program is available at: 
https://secrev.serene-risc.ca

This unique event aims to:
-Provide a...
https://images-ext-1.discordapp.net/external/oOCoIeelH34HO8ua1NGG2XesB8C22unLEiNnav5wTRQ/https/i.ytimg.com/vi/qTR-hUBVBF0/maxresdefault.jpg


[06/08/2020 8:21 PM] Robert K#0722
@kushti @scalahub Alright, I've managed to complete the first draft informal spec of the new design. This time because the logic ended up being a lot simpler, I've also filled out all of the action conditions and so it's essentially *complete* and as far as I can tell the design should work.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/719632101720326235/Stake-Slashing-Pool-Spec.pdf


[06/08/2020 8:21 PM] Robert K#0722
Wednesday sounds good for us to regroup on this project and how we want to move forward.


[06/08/2020 8:23 PM] Robert K#0722
I might take a stab at how hard adding in governance would be into the spec before we talk on Wednesday since it sounds like it shouldn't be too hard. (Obviously we won't bother for first implementation, but might as well get it down in a spec if it's possible for the future)


[06/08/2020 10:00 PM] kushti#0978
good, lets chat on Wed


[06/09/2020 7:49 PM] Robert K#0722
Governance was really easy to add for changing the pool price (on a design level). Everything is set up that it ends up being similar to Ergo blockchain voting where oracles cast their vote together with their datapoint commitment.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/719986564934926426/Governance-Stake-Slashing-Pool-Spec.md


[06/09/2020 7:50 PM] Robert K#0722
The only question is if it makes the datapoint collection action too computationally expensive, but I think it shouldn't be too bad.


[06/10/2020 2:40 PM] Robert K#0722
@kushti @scalahub When's a good time for you guys to have our meeting/chat today? In an hour or two?


[06/10/2020 2:42 PM] kushti#0978
I'm good about one hour, @scalahub ?


[06/10/2020 3:01 PM] kushti#0978
@Robert K so 15:00 UTC ?


[06/10/2020 3:15 PM] Robert K#0722
Sounds good


[06/10/2020 3:32 PM] scalahub#2618
Yes 1500 utc


[06/10/2020 3:39 PM] scalahub#2618
Actually let's do at 1530 UTC.


[06/10/2020 3:56 PM] kushti#0978
ok


[06/10/2020 3:58 PM] Robert K#0722
Alright


[06/10/2020 4:32 PM] Robert K#0722
Okay, so are you guys good to start?


[06/10/2020 4:33 PM] kushti#0978
I'm around


[06/10/2020 4:33 PM] scalahub#2618
yes; lets start


[06/10/2020 4:34 PM] scalahub#2618
So the idea is that in smart contracts we will hardcode the oracle pool id


[06/10/2020 4:34 PM] scalahub#2618
and use the rate from that


[06/10/2020 4:34 PM] scalahub#2618
Is this right?


[06/10/2020 4:34 PM] Robert K#0722
Yeah, the ID of the NFT/singleton token.


[06/10/2020 4:34 PM] Robert K#0722
And then use it as a data-input


[06/10/2020 4:35 PM] scalahub#2618
ok but hardwiring the oracle may create problem? What if some oracles stop functioning


[06/10/2020 4:35 PM] scalahub#2618
*hardwiring trusted oracle names


[06/10/2020 4:35 PM] Robert K#0722
We can include governance in the stablecoin protocol


[06/10/2020 4:35 PM] Robert K#0722
and/or have multiple pools in the future


[06/10/2020 4:35 PM] Robert K#0722
But that's a bit far ahead imo


[06/10/2020 4:36 PM] Robert K#0722
It wouldn't be hard though from a design perspective, just keep the oracle pool ID in a register, and vote via governance to change the register.


[06/10/2020 4:36 PM] scalahub#2618
I've still to read the governance article.. does it allow changing oracles?


[06/10/2020 4:36 PM] scalahub#2618
keeping the pool id same


[06/10/2020 4:36 PM] scalahub#2618
so that way, we could do the governance in pool rather than in the smart contract


[06/10/2020 4:37 PM] Robert K#0722
Right, we could go either way. Voting for adding/removing oracles in the pool and having it hardcoded, or having governance in the stablecoin.


[06/10/2020 4:37 PM] scalahub#2618
so stablecoin contract becomes cleaner


[06/10/2020 4:38 PM] Robert K#0722
Sure, we would just need to establish entry mechanisms into the pool too


[06/10/2020 4:38 PM] scalahub#2618
about the pool, any ergoscript code exists yet?


[06/10/2020 4:38 PM] Robert K#0722
Well, obviously not yet, I just finished writing out the first spec yesterday that should work.


[06/10/2020 4:39 PM] Robert K#0722
We need to make sure the protocol makes sense before writing random code, right?


[06/10/2020 4:39 PM] Robert K#0722
So I was hoping you guys could look it over and see if there's any holes to poke.


[06/10/2020 4:39 PM] kushti#0978
yes, exactly


[06/10/2020 4:39 PM] scalahub#2618
yes sure I think idea is still in development phase


[06/10/2020 4:39 PM] kushti#0978
from overviewing the text, it looks okay


[06/10/2020 4:39 PM] scalahub#2618
but will be good to have snippets to formalize what we are discussing.. let me see if I can work on it


[06/10/2020 4:39 PM] kushti#0978
on swapping the oracles, there could be different approaches


[06/10/2020 4:40 PM] kushti#0978
but better to postpone this maybe yes


[06/10/2020 4:40 PM] scalahub#2618
yes text looks ok


[06/10/2020 4:40 PM] Robert K#0722
So I think the first thing is how we want to scope all of this, right? For the first implementation we can throw away stake slashing and governance.


[06/10/2020 4:40 PM] scalahub#2618
yes as long as we can ensure that at least one oracle is enough to make it run


[06/10/2020 4:41 PM] Robert K#0722
To get the bare logic encoded in contracts and the off-chain scripts working


[06/10/2020 4:41 PM] Robert K#0722
(Yeah there should only need to be 1 oracle to run the pool with the current design)


[06/10/2020 4:42 PM] scalahub#2618
yes lets skip the oracle swapping and governance


[06/10/2020 4:43 PM] Robert K#0722
So for oracle pools, I can cut out all the extra features and have a copy of the spec that just has the bare-minimum we need. From there do we want to then start writing the contracts and the off-chain code as the next step?


[06/10/2020 4:44 PM] scalahub#2618
yes that sounds good


[06/10/2020 4:44 PM] kushti#0978
yes, I guess we can find something during implementation


[06/10/2020 4:44 PM] kushti#0978
for now everything seems pretty doable


[06/10/2020 4:44 PM] Robert K#0722
In that case, you mentioned you could start on the contracts @scalahub, right?


[06/10/2020 4:45 PM] scalahub#2618
yes I can start on the contracts after the spec


[06/10/2020 4:45 PM] Robert K#0722
Would you like to take a stab at that, while I plan out what would be required for the off-chain code to do.


[06/10/2020 4:45 PM] Robert K#0722
@kushti Has EIP-1 been implemented in the node? We'll need UTXO set scanning for boxes with a specific token ID.


[06/10/2020 4:45 PM] scalahub#2618
yes sure; I'll stare once you share the bare-minimum spec


[06/10/2020 4:46 PM] scalahub#2618
any ETA on that?


[06/10/2020 4:46 PM] Robert K#0722
It'll be like 1 hour after we finish this discussion.


[06/10/2020 4:46 PM] kushti#0978
@Robert K implemented in 3.3.0 but not merged still (


[06/10/2020 4:46 PM] scalahub#2618
sure üôÇ


[06/10/2020 4:46 PM] Robert K#0722
It should be simple to remove the fluff.


[06/10/2020 4:46 PM] kushti#0978
but it passed few review rounds


[06/10/2020 4:46 PM] kushti#0978
and will be merged soon


[06/10/2020 4:46 PM] kushti#0978
3.3.0 is huuge )


[06/10/2020 4:46 PM] kushti#0978
I mean a lot of code changed


[06/10/2020 4:47 PM] Robert K#0722
Okay sounds good. I can start working on the design for how the off-chain could would work, and abstract out scanning for now.


[06/10/2020 4:47 PM] scalahub#2618
Can we use explorer to do the job of EIP-0001?


[06/10/2020 4:47 PM] kushti#0978
can it show boxes by token id ?


[06/10/2020 4:47 PM] scalahub#2618
not sure if it supports canning by token.. I have to check too


[06/10/2020 4:47 PM] kushti#0978
you can run 3.3.0 branch also


[06/10/2020 4:48 PM] kushti#0978
it has openapi.yaml descriptions etc


[06/10/2020 4:48 PM] Robert K#0722
Right, good point.


[06/10/2020 4:48 PM] kushti#0978
everything done there


[06/10/2020 4:48 PM] kushti#0978
in 3.3.0


[06/10/2020 4:49 PM] scalahub#2618
we could implement the one-way usd token using the pool


[06/10/2020 4:49 PM] kushti#0978
@scalahub so you're doing the contracts ?


[06/10/2020 4:50 PM] scalahub#2618
I'll take the initial stab at it... maybe in Kiosk and then you guys can enhance

{Reactions}
üëç 

[06/10/2020 4:50 PM] kushti#0978
good


[06/10/2020 4:50 PM] scalahub#2618
how many contracts in total for the pool?


[06/10/2020 4:51 PM] Robert K#0722
4


[06/10/2020 4:51 PM] scalahub#2618
without governance?


[06/10/2020 4:51 PM] kushti#0978
@scalahub see stages in the doc


[06/10/2020 4:51 PM] kushti#0978
stage = contracts


[06/10/2020 4:51 PM] Robert K#0722
Though one is simply for adding funds to the pool.


[06/10/2020 4:51 PM] Robert K#0722
So it's like 2 lines


[06/10/2020 4:51 PM] kushti#0978
action = branch, roughly


[06/10/2020 4:52 PM] scalahub#2618
yes or maybe sometimes if the branch is heavy, one branch can be a contract


[06/10/2020 4:52 PM] Robert K#0722
If you move branches out into their own contracts you will likely break the protocol


[06/10/2020 4:52 PM] Robert K#0722
With this one specifically at least.


[06/10/2020 4:53 PM] scalahub#2618
yes so 4 contracts for now.. Splitting branch into contract  maybe good topic for a paper üôÇ


[06/10/2020 4:55 PM] Robert K#0722
If it's possible, could definitely be.


[06/10/2020 4:56 PM] Robert K#0722
The problem here is that each oracle has their own "oracle pool token" which identifies it's current datapoint.


[06/10/2020 4:56 PM] Robert K#0722
So anyone can just find the datapoint & verify by searching for said token. So it's harder to split into it's own contract as there's only 1 token.


[06/10/2020 4:57 PM] Robert K#0722
So, in regards to the off-chain code, do you guys have any preferences/ideas for what to write it in?


[06/10/2020 4:57 PM] Robert K#0722
Do we want to just continue with the current oracle script in Python, and build off of that? Maybe fork some other project?


[06/10/2020 4:59 PM] scalahub#2618
@kushti do you have any suggestion? I prefer to do the offchain bit in Scala


[06/10/2020 5:00 PM] Robert K#0722
I have 0 experience with scala, so I would prefer not to go that route if possible üòÑ


[06/10/2020 5:00 PM] kushti#0978
I don't care) Maybe Rust? )


[06/10/2020 5:00 PM] kushti#0978
@scalahub what languages are you experienced in. outside of Scala ? (& Kotlin?)


[06/10/2020 5:00 PM] scalahub#2618
I don't have too much experience with Python but don't mind learning..


[06/10/2020 5:01 PM] scalahub#2618
I know bit of Java


[06/10/2020 5:01 PM] scalahub#2618
I'm ok with anything actually in that case üôÇ


[06/10/2020 5:01 PM] kushti#0978
who will do offchain part ?


[06/10/2020 5:02 PM] kushti#0978
@Robert K what are available solutions ?


[06/10/2020 5:02 PM] Robert K#0722
I can work on the offchain part if scalahub is doing the contracts


[06/10/2020 5:02 PM] scalahub#2618
yes it should be based on who will do what bit and what language he prefers


[06/10/2020 5:02 PM] scalahub#2618
yes lets do that


[06/10/2020 5:02 PM] Robert K#0722
I'm fine with python or Rust


[06/10/2020 5:02 PM] scalahub#2618
Rust sounds nicer if you want to give that a try


[06/10/2020 5:03 PM] Robert K#0722
Yeah sure, probably better to have core ecosystem infrastructure written in safer languages.


[06/10/2020 5:04 PM] kushti#0978
@Robert K also , crowdfunding CLI tool is already in rust ? )


[06/10/2020 5:04 PM] Robert K#0722
Yep


[06/10/2020 5:05 PM] Robert K#0722
I may end up reusing a bit of the code (probably for submtiting to the full node).


[06/10/2020 5:05 PM] Robert K#0722
So what I think makes the most sense is that we will have an "oracle core" which has an REST api which allows the owner to submit datapoints via http.


[06/10/2020 5:05 PM] Robert K#0722
This allows for easy integration with any data source.


[06/10/2020 5:06 PM] Robert K#0722
Or even scripts on top which accumulate from multiple data sources, and then submit the final datapoint to the oracle core.


[06/10/2020 5:06 PM] Robert K#0722
The oracle core then builds the tx, does any scanning needing, and submits the datapoint tx.


[06/10/2020 5:06 PM] Robert K#0722
(And also scans for collateral slashing after an epoch ends)


[06/10/2020 5:06 PM] Robert K#0722
Does that sounds like a good high level design, or anyone else have any other ideas?


[06/10/2020 5:09 PM] kushti#0978
Sounds good


[06/10/2020 5:09 PM] kushti#0978
also, make in on top of EIP-1 ?


[06/10/2020 5:09 PM] kushti#0978
3.3.0


[06/10/2020 5:10 PM] Robert K#0722
Yeah


[06/10/2020 5:10 PM] kushti#0978
may help with it if needed


[06/10/2020 5:10 PM] Robert K#0722
So each oracle runs their own "core" and their own full node.


[06/10/2020 5:11 PM] scalahub#2618
Crowdfunding cli will be good as starting point


[06/10/2020 5:12 PM] Robert K#0722
So, we now have a good plan for how to move forward with oracles. (I can probably release an overview doc in Emurgo Research repo and get a marketing push in 2 weeks about the topic too)


[06/10/2020 5:12 PM] scalahub#2618
If we can hardwire token in contract we can search by address


[06/10/2020 5:13 PM] scalahub#2618
(maybe)


[06/10/2020 5:13 PM] kushti#0978
will take a look into crowdfunding cli in coming days )


[06/10/2020 5:14 PM] kushti#0978
@scalahub do you have anything else on your side ?


[06/10/2020 5:14 PM] kushti#0978
so you can start contracts right now I guess ?


[06/10/2020 5:14 PM] scalahub#2618
No that's it for now


[06/10/2020 5:14 PM] scalahub#2618
Yes I can


[06/10/2020 5:14 PM] Robert K#0722
I'll get the bare-bones spec done in the next hour or so and post it here.


[06/10/2020 5:15 PM] Robert K#0722
For the topic of stablecoins themselves, do we want to wait until we get further/almost done with oracle pools, or do we want to start thinking about what we want to do now?


[06/10/2020 5:15 PM] scalahub#2618
Will do it in kiosk.. @Robert K what's the status of making it public?


[06/10/2020 5:16 PM] scalahub#2618
Let's discuss stablecoins in next call?


[06/10/2020 5:16 PM] Robert K#0722
Sure, sounds good.


[06/10/2020 5:16 PM] Robert K#0722
We established a good next step, so we can get going on that and thinking about what to do for stablecoins.


[06/10/2020 5:17 PM] Robert K#0722
In regards to making things public, I think we want to keep everything private and time key releases with small marketing campaigns.


[06/10/2020 5:17 PM] scalahub#2618
Can I push the contracts to a public branch?


[06/10/2020 5:17 PM] Robert K#0722
Hmm, I think it's probably not that big of a deal if there's no comments explaining what the contracts are tbh.


[06/10/2020 5:17 PM] scalahub#2618
Otherwise I'll make a private repo on GitHub and add you and kushti

{Reactions}
üëç 

[06/10/2020 5:17 PM] Robert K#0722
But probably better private if you can


[06/10/2020 5:18 PM] Robert K#0722
That sounds good for now (private repo)


[06/10/2020 5:18 PM] kushti#0978
but let's start to think about issuance


[06/10/2020 5:18 PM] kushti#0978
we can discuss it next time


[06/10/2020 5:19 PM] scalahub#2618
Yes stablecoins using pool


[06/10/2020 5:19 PM] Robert K#0722
Sounds good


[06/10/2020 5:19 PM] Robert K#0722
@scalahub Can you actually make a generic "oracle pool" private repo for us?


[06/10/2020 5:19 PM] Robert K#0722
I can have a folder there for the "oracle core" in rust too


[06/10/2020 5:19 PM] scalahub#2618
Yes sure will do


[06/10/2020 5:20 PM] kushti#0978
let's start to think about stablecoins, after oracles the next question is about minting/burning stablecoin tokens ?


[06/10/2020 5:21 PM] Robert K#0722
(Actually, do you guys think it's better to have the "oracle core" be it's own private repo for now and then make it public later keeping all of the commits?)


[06/10/2020 5:21 PM] scalahub#2618
Maybe the first example is the one way token you have already implemented @kushti


[06/10/2020 5:22 PM] scalahub#2618
Yes better to have private repo on ergoplatform


[06/10/2020 5:24 PM] Robert K#0722
So we previously spoke a little about making a trimmed-down version of Maker without the governance.


[06/10/2020 5:24 PM] Robert K#0722
Do you guys think that is still the best approach?


[06/10/2020 5:24 PM] kushti#0978
CDP - based stablecoin ?


[06/10/2020 5:24 PM] kushti#0978
possible


[06/10/2020 5:24 PM] kushti#0978
also we can do bonds-based


[06/10/2020 5:24 PM] kushti#0978
i.e. yAssets


[06/10/2020 5:25 PM] Robert K#0722
Is that in the yAssets paper?


[06/10/2020 5:25 PM] kushti#0978
> (Actually, do you guys think it's better to have the "oracle core" be it's own private repo for now and then make it public later keeping all of the commits?)
@Robert K sounds good )


[06/10/2020 5:25 PM] Robert K#0722
I only ended up reading oTokens and not yAssets


[06/10/2020 5:25 PM] kushti#0978
> Is that in the yAssets paper?
@Robert K yeah, we have contracts actually


[06/10/2020 5:25 PM] Robert K#0722
So what's the mechanism for stability?


[06/10/2020 5:25 PM] scalahub#2618
what is the mechanism in Maker?


[06/10/2020 5:26 PM] kushti#0978
bonds have margin call in yAssets


[06/10/2020 5:26 PM] kushti#0978
and zero coupons


[06/10/2020 5:26 PM] Robert K#0722
Maker = Dai = CDPs/liquidation as prices goes down


[06/10/2020 5:27 PM] Robert K#0722
Are there benefits of yAsset stablecoin over CDPs?


[06/10/2020 5:27 PM] kushti#0978
idk


[06/10/2020 5:27 PM] kushti#0978
let's think on that

{Reactions}
üëç 

[06/10/2020 5:27 PM] kushti#0978
CDPs are simpler I guess


[06/10/2020 5:27 PM] kushti#0978
and so maybe better )


[06/10/2020 5:28 PM] scalahub#2618
yes I thought they are same thing üôÇ


[06/10/2020 5:28 PM] kushti#0978
need to run away for ~1 hour


[06/10/2020 5:28 PM] Robert K#0722
But we can get better marketing material if we use a new protocol üòâ  But yes, lets read and see what is easiest/best.


[06/10/2020 5:28 PM] Robert K#0722
Sounds good, good meeting guys.


[06/10/2020 5:29 PM] scalahub#2618
@Robert K what will be in the "oracle core" repo?


[06/10/2020 5:29 PM] scalahub#2618
just the offchain part?


[06/10/2020 5:30 PM] Robert K#0722
Yeah


[06/10/2020 5:30 PM] Robert K#0722
The program that does all the off-chain logic and interacts with the full node


[06/10/2020 5:30 PM] Robert K#0722
And provides a REST interface for users to submit data


[06/10/2020 5:30 PM] scalahub#2618
ok then you will make one separate for that .. right?


[06/10/2020 5:30 PM] Robert K#0722
And I'll probably also add creating an oracle pool automatically eventually


[06/10/2020 5:30 PM] Robert K#0722
Yes


[06/10/2020 5:31 PM] scalahub#2618
got it! lets reconnect after I've got the basic contracts ready

{Reactions}
üëç (2) 

[06/10/2020 5:31 PM] Robert K#0722
I'll get the barebones spec to you in an hour or so

{Reactions}
üëç (2) 

[06/10/2020 5:57 PM] Robert K#0722
Oh yeah, I read through the "A First Look Into DeFi Oracles" paper and in the conclusion they state:
```Accountability. We believe that oracles, becoming critical
trusted parties, should be held accountable for their actions.
In the blockchain ecosystem, we can envision that a feasi-
ble way of implementing accountability is crypto-incentives.
Therefore, to incentivize oracles to report accurate prices
in promised frequency, we can imagine that the platforms
implement mechanisms that would punish an oracle violat-
ing its manifest or platform policies, e.g., events like late or
missing reports, or provable misbehavior like a high price
deviation. Such a mechanism could be partially implemented
by a smart contract, but it would require oracles to deposit
some substantial amount of cryptoassets.
```


[06/10/2020 5:58 PM] Robert K#0722
And since that paper was released in May 2020, it means if we get out a stake slashing oracle pool implementation, we will have the first oracle scheme with disincentives in place and we can probably get good marketing material out of it.

{Reactions}
üëçüèª 

[06/10/2020 5:59 PM] Robert K#0722
Also it was surprising that 0.77-3% of oracle txs tended to run out of gas somehow which was very interesting to read.


[06/10/2020 7:09 PM] Robert K#0722
I think it should be good, but I'll still double check right now over the next few minutes. Everything is quite connected/designed for collateral/stake slashing so it's a bit harder than I thought to separate.


[06/10/2020 7:33 PM] Robert K#0722
Here's the basic spec @scalahub

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/720344798925553774/Basic-Oracle-Pool-Spec.md

{Reactions}
üëç (2) 

[06/10/2020 7:33 PM] Robert K#0722
And if you could please create a "oracle-core" repo in the Ergo github organization and give me rights to it that would be great @scalahub (https://github.com/robkorn)


[06/10/2020 7:34 PM] Robert K#0722
I spoke internally in Emurgo and for most of the DeFi work we'll do (minus research I post for Emurgo Research) can be in your guys' organazation repos to keep things tidy/easily findable.

{Reactions}
üëç (2) 

[06/11/2020 11:17 AM] kushti#0978
@Robert K @scalahub sent invitations to the ergoplatform organization!


[06/11/2020 11:17 AM] kushti#0978
You'll have a right to create new repos


[06/11/2020 2:04 PM] Robert K#0722
Great, thanks.


[06/12/2020 12:11 PM] scalahub#2618
> Here's the basic spec @scalahub
@Robert K Will try to get a draft of the contracts done over the weekend

{Reactions}
üëç 

[06/12/2020 1:59 PM] Robert K#0722
Great @scalahub . I have my hands full with a number of different angles (writing the Emurgo Research pieces, recording videos explaining said pieces, helping others at Emugro understand Ergo, figuring out design decisions for Yoroi, ...) on top of the oracle-core right now, so it's going to definitely take a bit longer than a couple days on my end.


[06/12/2020 2:01 PM] Robert K#0722
As of right now, I've created the repo and come up with some initial ideas for api endpoints and what would be required for the user to provide in a config: https://github.com/ergoplatform/oracle-core

{Reactions}
üëç 

[06/12/2020 2:16 PM] Robert K#0722
For now I'm not going to implement bootstrapping, as we can do that manually for now and it adds a bit of complexity which we don't need to deal with.


[06/12/2020 2:17 PM] Robert K#0722
Eventually we can probably add like a `--bootstrap` when launching, and it takes people through a CLI interface for setting up an oracle pool (potentially with custom oracle pool scripts the user can provide)


[06/12/2020 2:57 PM] Robert K#0722
@kushti, I've built 3.3.0 and am reading through EIP-1 to recall everything. So the basic workflow is `/application/register` and then calling `/application/unspentBoxes/{appId}/application/unspentBoxes/{appId}` every so often to get the current state of the UTXO-set for said application, right?


[06/12/2020 2:58 PM] Robert K#0722
How long does the initial scan take after registering an application, and if it takes a bit of time, is there some way to check the status/know when the scanning is finished? (So you know for sure what the current state is when you register an app and don't provide false information to the user before it's fully ready)


[06/12/2020 3:42 PM] Robert K#0722
And as side note/question, using v3.3.0, it seems that I'm not really able to sync with the network? (Is that expected?) I get a bunch of `Received message ...`  and am connected to several peers, yet blocks don't seem to get downloaded and the panel doesn't show anything more than this

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/721011586705129472/unknown.png


[06/12/2020 3:43 PM] Robert K#0722
Using the current latest release I have no trouble syncing.


[06/12/2020 4:16 PM] kushti#0978
@Robert K lemme check, I guess, 3.3.0 merged with some intermediate experimental version, will update it today


[06/12/2020 4:17 PM] Robert K#0722
Thanks.


[06/12/2020 4:18 PM] Robert K#0722
And one other comment. For oracle pools I will likely have to register 4 "apps" to get scanning for each of the stages in protocol. Since this isn't released yet, maybe it could be a good idea to change the name of these to something like "scans"?


[06/12/2020 4:19 PM] Robert K#0722
The multi-stage nature makes it likely that the majority of dApps will have multiple scans it seems.


[06/12/2020 4:19 PM] kushti#0978
so "Application" => "Scan" ?


[06/12/2020 4:19 PM] Robert K#0722
Yeah


[06/12/2020 4:19 PM] Robert K#0722
and so `scanName`


[06/12/2020 4:19 PM] Robert K#0722
and you register a scan/deregister.


[06/12/2020 4:19 PM] Robert K#0722
`scanID`


[06/12/2020 4:21 PM] Robert K#0722
And then  instead we could also have `stopTracking` -> `stopScanning` as the endpoint name.


[06/12/2020 4:22 PM] kushti#0978
sounds good


[06/12/2020 4:22 PM] kushti#0978
merging 3.3.0 with latest develop

{Reactions}
üëç 

[06/12/2020 4:23 PM] Robert K#0722
One possible idea, is that we could also have some sort of a category attached to every `scan` too. So you can group scans into a single `application`.


[06/12/2020 4:23 PM] Robert K#0722
Though that probably is extra work without much benefit, because in off-chain code for your dApp you'll likely save the `scanID`s and request only the ones you need at a given moment.


[06/12/2020 5:15 PM] kushti#0978
@Robert K categories can be made off-the-node I guess ?

{Reactions}
üëç 

[06/12/2020 5:15 PM] kushti#0978
@Robert K please check latest commit


[06/12/2020 5:15 PM] kushti#0978
checked syncing a bit, works well it seems


[06/12/2020 5:16 PM] kushti#0978
will check wallet sync later today


[06/12/2020 5:17 PM] kushti#0978
@Robert K how's Yoroi integration is going ?


[06/12/2020 5:22 PM] Robert K#0722
Yeah I think categories make sense off the node.


[06/12/2020 5:22 PM] Robert K#0722
Will check the latest commit.


[06/12/2020 5:23 PM] Robert K#0722
Things are moving forward with Yoroi integration. A lot of code had to be refactored because Yoroi was desinged to be a 1 currency wallet.


[06/12/2020 5:23 PM] Robert K#0722
And people in the company are reading the Ergo papers and so on forth to understand how things work.


[06/12/2020 5:24 PM] Robert K#0722
The first release will likely just having sending/receiving Erg support and should be done by the end of the month (not sure what our release cycle is looking though so that may be + a week or so).


[06/12/2020 5:25 PM] kushti#0978
> How long does the initial scan take after registering an application, and if it takes a bit of time, is there some way to check the status/know when the scanning is finished? (So you know for sure what the current state is when you register an app and don't provide false information to the user before it's fully ready)
@Robert K wallet is scanning only forwards currently, so application state will be immediately updated after application being added


[06/12/2020 5:25 PM] kushti#0978
> The first release will likely just having sending/receiving Erg support and should be done by the end of the month (not sure what our release cycle is looking though so that may be + a week or so).
@Robert K sounds good!


[06/12/2020 5:26 PM] Robert K#0722
> @Robert K wallet is scanning only forwards currently, so application state will be immediately updated after application being added
@kushti Ah, so it doesn't scan the current utxo-set, only new changes to the current set?


[06/12/2020 5:30 PM] Robert K#0722
> @Robert K please check latest commit
@kushti Latest commit of develop?


[06/12/2020 5:35 PM] kushti#0978
> @kushti Latest commit of develop?
@Robert K to 3.3.0 (i942 branch)


[06/12/2020 5:36 PM] kushti#0978
> @kushti Ah, so it doesn't scan the current utxo-set, only new changes to the current set?
@Robert K yes, it is scanning blocks coming


[06/12/2020 5:36 PM] kushti#0978
scanning UTXO set could be costly without additional indexes


[06/12/2020 5:42 PM] Robert K#0722
Right, hmmm.


[06/12/2020 5:44 PM] Robert K#0722
I guess that means oracle cores should be up and scanning the blockchain before bootstrapping happens so that they may find their initial boxes.


[06/12/2020 5:44 PM] kushti#0978
well, yes. Is it okay, I guess ?


[06/12/2020 5:45 PM] Robert K#0722
Yeah it should be fine. There's some small potential problems where ifs somehow the oracle core loses it's local state then it would need to rescan the whole utxo-set most likely.


[06/12/2020 5:45 PM] Robert K#0722
But thats just edge cases which we can worry about later.


[06/12/2020 5:46 PM] Robert K#0722
(I do think having a general current UTXO scan could be a good idea though even if it's costly, so people can pick back up if they ever do lose their local state they are tracking as a backup mechanism)


[06/12/2020 6:28 PM] kushti#0978
currently it is fast to get a box by id from the UTXO set ( as authenticated AVL+ tree gives natural by-id with O(log) access). Linear scan would be slow with a big UTXO set (not the case now)

{Reactions}
üëç 

[06/12/2020 6:41 PM] Robert K#0722
Ah nice. I guess that means that backing up your state (even just box ids) will always be a good idea. (Though I still think eventually implementing a linear scan with the same API as the current scanning as a backup mechanism or for websites to be dApp explorers for example will be important eventually. Inefficient for sure, but sometimes waiting hours to get to get the full state will still be worth it.)


[06/12/2020 7:10 PM] kushti#0978
@Robert K yes, I guess we need first to get some notifications API, a client would like to get a call for the node on the scan being done I imagine


[06/12/2020 7:32 PM] Robert K#0722
Good point. I guess if we wanted to keep things super simple, when a client asks for unspentBoxes with a `scanID` if there is a full utxo set scan being done on said `scanID` then the response could be `Currently Scanning. X% Finished` and if the scan is finished (thus it's now just a future-looking scan) then we could return the unspent boxes.


[06/12/2020 7:33 PM] Robert K#0722
As such after initiating a full linear scan, then the client gets the `scanID`, and they can keep asking for unspent boxes with the `scanID` to see if the scan is complete.


[06/12/2020 7:35 PM] Robert K#0722
So we'd technically only need to add 1 api endpoint, something like `fullScanRegister`.


[06/15/2020 3:43 PM] Robert K#0722
Hey @scalahub, how did drafting out the smart contracts go over the weekend?


[06/15/2020 4:29 PM] scalahub#2618
@Robert K will update by Tuesday


[06/15/2020 5:08 PM] Robert K#0722
Sounds good.


[06/15/2020 5:15 PM] Robert K#0722
On my end, I'm primarly now working on the design/structure of the oracle core in terms of what the core is required to do (based on the spec) and how to structure the code itself/interface with the node to do said actions.


[06/15/2020 5:17 PM] Robert K#0722
I have some initial ideas in the readme if anyone cares to follow along, but it's likely going to be revamped overtime as I get more into implementation and see what's required/makes sense: https://github.com/ergoplatform/oracle-core


[06/16/2020 1:35 PM] scalahub#2618
@Robert K I made some tweaks to the basic model, mostly trying to make pool members dynamic (using threshold signatures); maybe need a day more to give initial contracts.  Got a bit tied up for modifications to Kiosk (to support such contracts).


[06/16/2020 2:04 PM] Robert K#0722
Ah very cool. Yeah I initially wanted to have the pool members not be hardcoded but I got more busy figuring out how to make the epoch model work practically & stake slashing.


[06/16/2020 2:10 PM] Robert K#0722
I guess you could require an oracle to spend their own `Datapoint` box to prove they are a participant oracle in the pool potentially.


[06/16/2020 4:06 PM] scalahub#2618
I was thinking of a simpler design where there are a bunch of "pool tokens" controlled by a pool box and each oracle can withdraw exactly one from this (using threshold sig) and that too in a box that restricts its transfer


[06/16/2020 4:08 PM] Robert K#0722
Hmm, isn't that essentially already happening in the protocol spec I wrote? That's just addressing the bootstrapping right?


[06/16/2020 4:08 PM] Robert K#0722
The problem is you still need to hardcode the addresses in the contracts otherwise other people can spend the boxes and cause spam attacks


[06/16/2020 4:08 PM] scalahub#2618
yes so instead of multiple NFTs, just one token type and a simple threshold sig to add/remove oracles


[06/16/2020 4:08 PM] scalahub#2618
(rest all is same)


[06/16/2020 4:09 PM] scalahub#2618
but why hardcode, maybe we can keep in R4


[06/16/2020 4:09 PM] scalahub#2618
and when spending, the new R4 can contain new addresses


[06/16/2020 4:09 PM] Robert K#0722
So then you need to incorporate a way for oracles to add themselves to the register.


[06/16/2020 4:10 PM] Robert K#0722
That has to be in the epoch preparation stage, else you break the protocol box id == epoch requirement.


[06/16/2020 4:10 PM] scalahub#2618
(I mean keeping a collection of group elements in R4 as the "pool directors"


[06/16/2020 4:10 PM] scalahub#2618
and R5 contains threshold (Int)


[06/16/2020 4:10 PM] scalahub#2618
when spending, R4 and R5 can be accordingly updated as per consensus


[06/16/2020 4:11 PM] Robert K#0722
So this is a 2nd oracle pool box?


[06/16/2020 4:11 PM] scalahub#2618
yes its a "governance box"


[06/16/2020 4:11 PM] scalahub#2618
that allows adding or removing oracles.. I was thinking that oracles themselves can be pool directors?


[06/16/2020 4:11 PM] Robert K#0722
Right, but I thought we were aiming to build out the simplest possible oracle pool first üòÖ


[06/16/2020 4:12 PM] scalahub#2618
yes true, the simplification I wanted to do was to keep single token and then this lead to how to distribute that token


[06/16/2020 4:12 PM] scalahub#2618
and then to governance üôÇ


[06/16/2020 4:12 PM] Robert K#0722
Haha, yeah exploring into new design patterns seems to do that


[06/16/2020 4:12 PM] Robert K#0722
There's a lot of potential with all of this.


[06/16/2020 4:12 PM] scalahub#2618
so the pool box simply has token and no info about pool


[06/16/2020 4:13 PM] scalahub#2618
(makes the pool box simpler)


[06/16/2020 4:13 PM] Robert K#0722
Yeah, but that makes the off-chain logic more complicated


[06/16/2020 4:13 PM] Robert K#0722
Which is fine, but minimizing complexity to start is helpful so we can get something running


[06/16/2020 4:14 PM] scalahub#2618
hmm I'm hoping it remains same as that should only be concerned in pushing a rate to the blockchain?


[06/16/2020 4:14 PM] scalahub#2618
or am I missing something


[06/16/2020 4:14 PM] scalahub#2618
so if there is a simple API to spend an oracle box, I think it should be same


[06/16/2020 4:15 PM] Robert K#0722
The protocol is pretty advanced


[06/16/2020 4:15 PM] Robert K#0722
You have an epoch scheme which the off-chain app must keep track of


[06/16/2020 4:15 PM] Robert K#0722
See which stage the pool box is in, whether they have submit a datapoint in the current epoch, when the epoch ends.


[06/16/2020 4:15 PM] Robert K#0722
The boxes they are required to find/scan for to then generate the collection at the end of an epoch.


[06/16/2020 4:15 PM] Robert K#0722
The boxes to find to fund the oracle pool.


[06/16/2020 4:16 PM] Robert K#0722
The API for the end-user is simple, they just submit a datapoint to the oracle core every time a new epoch initiates, but the logic isn't at all to make it all automated and work cleanly.


[06/16/2020 4:17 PM] Robert K#0722
Especially if we get into stake slashing, then there's even more scans required & creating/submitting slashing actions only in the epoch preparation stage.


[06/16/2020 4:18 PM] Robert K#0722
And if we then add an extra bootstrap/pool participant governance box, then that's another scan, and a lot of logic to detmine if the oracle pool protocol is in a state where said action is allowed.


[06/16/2020 4:18 PM] Robert K#0722
Then how do we set up the api for an end user to vote


[06/16/2020 4:18 PM] Robert K#0722
Etc etc.


[06/16/2020 4:18 PM] scalahub#2618
yes that part will be exactly same.. the only difference will be that instead of multiple tokens, single token used but let me check if that creates offchain issues


[06/16/2020 4:19 PM] scalahub#2618
but we can always fix the pub keys if it turns out to be an issue


[06/16/2020 4:27 PM] Robert K#0722
For off-chain it's a bit annoying because there's a new box/state that needs to be tracked in order to use it as a data-input/input.


[06/16/2020 4:28 PM] Robert K#0722
But I don't see how this decreases the number of tokens? If anything it would increase it.


[06/16/2020 4:29 PM] Robert K#0722
Both the oracle pool box and the governance box need to own their own NFT/singleton token. Otherwise a second instance of the same contract can be issued and used as as an input/data-input breaking the protocol by one of the oracles.


[06/16/2020 4:30 PM] Robert K#0722
Every unique box which holds data that must be unique *must* hold a NFT (or at least a certain token that has a trustless bootstrap in order to acquire).


[06/16/2020 4:44 PM] Robert K#0722
This also would make bootstrapping more complicated as well.


[06/16/2020 4:56 PM] scalahub#2618
There should be two tokens only. One for each oracle box (same token A) and another singleton token B for the pool box. And think of governance box as another box that allows modifying the list of addresses hardwired. So if the offchain bit does not hardcode two parameters (1) list of oracles (2) number of oracles, then that part should not change.


[06/16/2020 4:57 PM] scalahub#2618
The same token in multiple oracle boxes needs a trustless bootstrap, which is what the governance box will do. The contract inside the oracle box will ensure that oracles cannot destroy or transfer this token


[06/16/2020 5:03 PM] scalahub#2618
so my attempt is to not have an NFT for every oracle box that contains data.


[06/16/2020 5:04 PM] scalahub#2618
but this needs trustless bootstrap like you said, hence the governance box


[06/16/2020 5:04 PM] Robert K#0722
The initial design has the same token in multiple boxes, not NFTs.


[06/16/2020 5:04 PM] Robert K#0722
Why would they need to be NFTs?


[06/16/2020 5:04 PM] scalahub#2618
yes I saw but your earlier design had multiple NFT


[06/16/2020 5:04 PM] Robert K#0722
And the governance box needs it's own NFT so that a bad acting oracle can't create a box at the same address.


[06/16/2020 5:04 PM] scalahub#2618
why did you remove?


[06/16/2020 5:04 PM] Robert K#0722
I don't think it ever did.


[06/16/2020 5:05 PM] scalahub#2618
hmm maybe I had misread. üòõ


[06/16/2020 5:05 PM] Robert K#0722
Maybe I messed up a sentence or two to suggest that they were.


[06/16/2020 5:05 PM] scalahub#2618
I guess you meant single NFT in all boxes?


[06/16/2020 5:06 PM] scalahub#2618
> Every unique box which holds data that must be unique *must* hold a NFT (or at least a certain token that has a trustless bootstrap in order to acquire).
@Robert K can you elaborate more on what you meant?


[06/16/2020 5:07 PM] Robert K#0722
> I guess you meant single NFT in all boxes?
@scalahub One NFT for the oracle pool box, and a oracle pool participant token for every oracle datapoint box. Each datapoint box is unique because of the oracle's address in R4.


[06/16/2020 5:07 PM] scalahub#2618
ok then I have the same thing in mind üôÇ

{Reactions}
üëç 

[06/16/2020 5:07 PM] scalahub#2618
two tokens then.. maybe we don't need one for the governance box?


[06/16/2020 5:08 PM] Robert K#0722
> @Robert K can you elaborate more on what you meant?
@scalahub So your governance box would have a list of whitelisted oracles in a register. If it doesn't have an NFT, anyone else can create a box at the same contract/address.


[06/16/2020 5:08 PM] scalahub#2618
that governance box will hold the oracle tokens


[06/16/2020 5:08 PM] scalahub#2618
so its like a "token emission box" for new oracles to join


[06/16/2020 5:08 PM] Robert K#0722
And so in the protocol you can only specify that the input/data-input is the contract address (since it has no NFT/unique token).


[06/16/2020 5:08 PM] Robert K#0722
And so anyone can create such a box with their own oracle list in a register.


[06/16/2020 5:08 PM] scalahub#2618
yes it will have public key in R4


[06/16/2020 5:09 PM] scalahub#2618
(sequence of group elements)


[06/16/2020 5:09 PM] Robert K#0722
So a bad acting oracle can create a new list of oracles, use it as an input, and boom, oracle pool broken.


[06/16/2020 5:09 PM] scalahub#2618
so R4 = public keys , R5 = threshold and to spend the box Atleast(R5, R4.size) signatures needed


[06/16/2020 5:10 PM] scalahub#2618
in intial design pool box controllers and oracles are same but we could have different registers


[06/16/2020 5:10 PM] Robert K#0722
> so its like a "token emission box" for new oracles to join
@scalahub Yeah, essentially that is the design pattern for trustless bootstrapping I believe. A token emission box that enforces the actor to create outputs putting them into an initial state in the protocol. I avoided adding that in for now because it adds a decent bit of complexity.


[06/16/2020 5:11 PM] Robert K#0722
> so R4 = public keys , R5 = threshold and to spend the box Atleast(R5, R4.size) signatures needed
@scalahub Right, but you are thinking about the logic in the governance box. How in the oracle pool box can you guarantee that the real governance box is used without an NFT in the governance box to make it unique?


[06/16/2020 5:11 PM] scalahub#2618
not an NFT, just the token id stored in the governance box.. would that not work?


[06/16/2020 5:11 PM] scalahub#2618
so contract and token id


[06/16/2020 5:12 PM] Robert K#0722
As long as no one else can get the same token, then yeah.


[06/16/2020 5:12 PM] scalahub#2618
(and emission pattern guarantees that tokens can only be stored in either pool box or oracle box)


[06/16/2020 5:12 PM] Robert K#0722
Otherwise whoever has that token can attack the protocol right.


[06/16/2020 5:12 PM] Robert K#0722
Ah right, I guess we could use the same token.


[06/16/2020 5:13 PM] scalahub#2618
and the oracle box contract does the enforcing actually


[06/16/2020 5:13 PM] Robert K#0722
Both boxes would check the other's token to make sure it's being spent with the correct other box (governance/oracle pool box)


[06/16/2020 5:14 PM] Robert K#0722
But I still think we shouldn't bother with trustless bootstrapping because it complicates a lot for now.


[06/16/2020 5:15 PM] Robert K#0722
It's more contracts, more logic, and this is literally the first extended UTXO dApp using multiple UTXO-set scans with 4 contracts/stages already, so I think we are ambitious enough in scope üòÖ


[06/16/2020 5:18 PM] scalahub#2618
so the idea is we can avoid some checks with trusteless bootstrap.. For example if we ensure that initial tokens are distributed correctly then we can avoid checking scripts


[06/16/2020 5:20 PM] Robert K#0722
Ah interesting.


[06/16/2020 5:21 PM] Robert K#0722
You can do the same thing with trusted bootstrap, it's just that a person does the same thing what the emission contract would enforce.


[06/16/2020 5:22 PM] Robert K#0722
But yeah, I think a key part in multi-stage protocol design will be figuring out which contract must enforce which logic for a given action.


[06/16/2020 5:22 PM] scalahub#2618
btw will you be adding pool details to oracle-core repo?


[06/16/2020 5:23 PM] scalahub#2618
the MD file


[06/16/2020 5:24 PM] Robert K#0722
Pool details?


[06/16/2020 5:25 PM] scalahub#2618
the file `Basic-Oracle-Pool-Spec.md`


[06/16/2020 5:26 PM] Robert K#0722
Ah, yeah that's a good idea. I'll create a `docs` folder and likely move most of the implementation information into there.

{Reactions}
üëç 

[06/16/2020 5:26 PM] scalahub#2618
so I can refer to it from code üôÇ


[06/16/2020 5:26 PM] Robert K#0722
Will add it right now


[06/16/2020 5:29 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md


[06/16/2020 5:59 PM] scalahub#2618
awesome!


[06/17/2020 1:41 AM] Robert K#0722
@kushti Would you like me to make a PR tomorrow with an updated EIP-1 with my suggested name changes from application -> scanning? (And my idea for full utxo set scanning registration I guess too)


[06/17/2020 5:42 PM] Robert K#0722
@kushti Not sure if you missed my previous message so pinging you again.


[06/17/2020 5:42 PM] kushti#0978
@Robert K oh sorry) yes, please do


[06/17/2020 5:43 PM] kushti#0978
on UTXO set can, I've forgotten to discuss notification API today (


[06/17/2020 5:43 PM] kushti#0978
during the devs chat


[06/17/2020 5:43 PM] Robert K#0722
Ah yeah.


[06/17/2020 5:43 PM] Robert K#0722
Do we need notifications for anything else in the wallet?


[06/17/2020 5:44 PM] Robert K#0722
Otherwise the option I proposed, where the user simply keeps requesting the scanID and if it's not finished then it returns a result that says it's still scanning (and if its finished then the boxes) is probably an easy way to implement it for just this given use case.


[06/17/2020 5:50 PM] kushti#0978
@Robert K yes, notifications (blockNotify / txNotify) would be useful for external apps, popular around Bitcoin/ Eth


[06/17/2020 5:51 PM] kushti#0978
but if no consensus will be found on them again


[06/17/2020 5:51 PM] kushti#0978
then the simplest option also good )


[06/17/2020 6:02 PM] Robert K#0722
Ah right.


[06/17/2020 6:03 PM] Robert K#0722
Couldn't we go with the simplest option first, and then later on once notifications are implemented add a notification on top of the same endpoint?


[06/17/2020 6:18 PM] Robert K#0722
Also, `/application/makeCertain/{applicationId}/{boxId}` seems like it's not really needed imo.


[06/17/2020 6:19 PM] Robert K#0722
`/stopTracking` makes sense to me, but I feel like it's more the dApps responsibility to keep track of relevant boxes on it's side and then calling stopTracking for any boxes found during scanning but not relevant


[06/17/2020 10:07 PM] kushti#0978
certain / uncertain already removed from the code


[06/17/2020 10:07 PM] kushti#0978
will update the text also


[06/17/2020 10:09 PM] Robert K#0722
Right, so the endpoints in 3.3.0 are the ones we are going with. Sounds good.


[06/18/2020 8:31 AM] kushti#0978
yes, endpoint are pretty much done!


[06/19/2020 12:08 AM] Robert K#0722
Just a heads on current progress, I'm rewriting the Oracle Pools overview doc and adding a lot more information/making it a bit more general so we can release it in the Emurgo Research github repo. Should likely get it done by tomorrow, worst case Monday, and I'll share it here early if anyone wants to read it. (Once that releases, I think it'll be a good point to be a bit more open about this being our first step into DeFi with the new partnership)


[06/19/2020 12:09 AM] Robert K#0722
For the oracle core, I have a couple blockades currently with no access to decoding ErgoBox registers in Rust and with the scanning api not fully functional (at least for me with a syncing node due to a timeout bug it seems).

{Reactions}
üëç (3) 

[06/19/2020 4:19 PM] kushti#0978
@Robert K you mean that timeout issue reported in the node channel?


[06/19/2020 4:20 PM] kushti#0978
on my side, I've finished w. OpenAPI description for new distributed-signatures related API methods and 3.2.7. so fully in 3.3.0 now. Will fix timeout issue over the weekend hopefully.

{Reactions}
üëç 

[06/19/2020 4:32 PM] Robert K#0722
@kushti Yes, I tried bootstrapping from 0, copying my blockchain state from a working node on an 3.2.X version, and fiddled around a bit to see if it was something else than syncing but the timeout problem was still there.


[06/19/2020 4:40 PM] Robert K#0722
And nice, good to hear distributed-signatures is pretty much done, you made great progress on that in short time.


[06/19/2020 4:47 PM] kushti#0978
@Robert K you copied db from 3.2.x ?


[06/19/2020 4:48 PM] kushti#0978
3.3.0 is about different DB format


[06/19/2020 4:48 PM] kushti#0978
so resync is needed anyway


[06/19/2020 4:56 PM] Robert K#0722
Ah I see.


[06/19/2020 5:04 PM] Robert K#0722
Were there any other changes, say in the config, that I maybe haven't taken into account? The v3.3.0 seems to also have issues syncing now that I booted it up again even from 0. It has peers, but doesn't seem to make any progress syncing, and the `history` and `state` folders are empty.


[06/19/2020 6:38 PM] Robert K#0722
Alright I'll definitely be finishing off writing the first draft of the oracle pools overview today. This idea, of oracle pool data feeds becoming core blockchain infrastructure, is kind of neat imo so I'll share if anyone's interested


[06/19/2020 6:39 PM] Robert K#0722
```
One of the great things about oracle pools on top of extended UTXO systems (which support data-inputs) is that everyone on the network can benefit from utilizing the same oracle pool for a given datapoint. 

Rather than each dApp creating it's own price feed made of custom oracles & accumulator contracts, the blockchain ecosystem can focus on creating large oracle pools which provide a highly accurate and trustworthy data source. Thanks to incentives being a key part of oracle pools (especially with collateral slashing), the larger the set of oracles which take part, the harder it is for a subset of the oracles to go rogue and try to disrupt the system.

Since oracle pool postings are on a schedule and provide publicly available data in a UTXO, this means that oracle pools act as a public good for all users on the network. Thus even tiny p2p dApps, which only involve 2 participants, still have the ability to utilize the oracle pool datapoints for free by using the pool UTXO as a data-input. This potentially has a waterfall effect in aiding the development of the dApp ecosystem as the barrier of entry for new developers shrinks thanks to well used oracle pool datafeeds becoming commonplace and the equivalent of public/core infrastructure.
```

{Reactions}
üëç üòç 

[06/19/2020 6:40 PM] kushti#0978
@Robert K will check 3.3.0 on my side, maybe something got broken during a lot of merges

{Reactions}
üëå 

[06/19/2020 6:41 PM] Robert K#0722
Thanks.


[06/19/2020 8:58 PM] kushti#0978
@Robert K so oracle pools then is pretty much like cost-efficient and publicly available alternative to ChainLink (also, without a token) ?


[06/19/2020 10:03 PM] Robert K#0722
I think that could definitely be one way to sell it.


[06/19/2020 10:03 PM] Robert K#0722
Higher assurance, publicly available, cost-efficient, safer due to incentives/disincentive schemes & readily useable.


[06/19/2020 10:04 PM] Robert K#0722
I also came up with a way to classify assurance level of oracle data on-chain into tiers.


[06/19/2020 10:04 PM] Robert K#0722
I'm almost done with the piece and will post it here so anyone who finds time over the weekend can take a read through (and if you have any feedback/edits they are always more than welcome).


[06/19/2020 10:13 PM] kushti#0978
I would be happy to read it over the weekend, @Robert K . Also, is code in the repo up-to-date?


[06/19/2020 10:23 PM] Robert K#0722
Ah yeah it is up to date, however I will be deleting the box implementation and using the sigma/ergo-rust implementation of the struct and building on top of it next week when @greenhat implements a couple more things.


[06/19/2020 10:25 PM] Robert K#0722
I've been a bit sidetracked with the recording of the video, writing this new oracle pool doc, a bit with Yoroi/Plutus considerations, and now awaiting v3.3.0 timeout bug + rust-sigma new additions (which I am grateful that I don't have to end up writing myself).


[06/19/2020 10:26 PM] Robert K#0722
That said, I think I have the general design of the oracle core mostly in place for how things will be structured either in notes or in the structs for the state of the oracle pool.


[06/19/2020 10:27 PM] kushti#0978
oh yeah these days pretty insane


[06/19/2020 10:27 PM] kushti#0978
btw my 3.3.0 node is syncing (latest commit)


[06/19/2020 10:28 PM] kushti#0978
tomorrow will work on the timeout and application => scan renaming

{Reactions}
üëç 

[06/19/2020 10:35 PM] Robert K#0722
Hmm odd, I'm not sure what is preventing the sync. I will try recompiling afresh on Monday and see if it works.


[06/19/2020 10:40 PM] kushti#0978
how do you compile / assembly ?


[06/19/2020 10:40 PM] kushti#0978
try sbt clean ...


[06/19/2020 10:56 PM] Robert K#0722
`sbt assembly`


[06/19/2020 10:56 PM] Robert K#0722
Alright, will try that


[06/19/2020 10:59 PM] Robert K#0722
Here's the oracle pool overview doc:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/723658256190537808/Oracle-Pools.pdf

{Reactions}
üòç (3) 

[06/19/2020 11:00 PM] Robert K#0722
Compared to the initial overview doc I sent, everything is rewritten and the most interesting new parts are in oracle as core infrastructure section & datapoint hierarchies of confidence.


[06/21/2020 5:02 PM] kushti#0978
@Robert K nice writeup! Will you do a video ? )


[06/21/2020 5:06 PM] kushti#0978
@Robert K btw for per-epoch aggregated datapoints, oracle can  create an unspendable box instead of spending an  old one. This will simplify clients , and created dust is not problematic , even more, good for miners in the long-term due to storage rent!


[06/21/2020 10:07 PM] scalahub#2618
> I think this might be a helpful realization/simple design pattern for you guys in thinking about oracle pools. Essentially in any on-chain protocol which is separated into epochs, you can guarantee that a box has been posted in a given epoch by:
> ...
> Proving Oracle Has Posted *Before* A Specfic Height
> ----
> "creationHeight" in R3 (which upon evaluation checks creationHeight <= HEIGHT)
@Robert K Perhaps I missed something but checking that `creationHeight < specficHeight` does not imply `HEIGHT <= specficHeight` We can only check that `crationHeight > specficHeight` to ensure that Oracle has Posted *After* A Specific Height


[06/22/2020 2:48 PM] Robert K#0722
> 
> @Robert K nice writeup! Will you do a video ? )
> @kushti Thanks. Yes I will. So the release schele we're going for is research writeup one week, and then video covering writeup next week.


[06/22/2020 2:48 PM] Robert K#0722
So we'll release this writeup sometime this week, and then the video in the following.


[06/22/2020 2:50 PM] Robert K#0722
The idea is to get one social media push per week from Emurgo Research, and so this was decided to be the best way to do it. So I'll link to when this doc is released, and if you guys can push it on twitter too that'd be appreciated.


[06/22/2020 2:51 PM] Robert K#0722
> @Robert K btw for per-epoch aggregated datapoints, oracle can  create an unspendable box instead of spending an  old one. This will simplify clients , and created dust is not problematic , even more, good for miners in the long-term due to storage rent!
@kushti Hmm, technically this is not possible with the existing protocol, because the oracle pool has a NFT that distinguishes it and makes it unique/unforgable.


[06/22/2020 2:51 PM] Robert K#0722
Ah, actually, you mean the finalized datapoint itself can be a new box, right? Or did you mean the oracle's single datapoints themselves?


[06/22/2020 2:56 PM] Robert K#0722
I think it might be possible to leave the oracle single datapoint in their own boxes, but it does not make the protocol simpler, more complex actually. We would then need to separate the oracles' collateral + oracle pool participant token into their own boxes/contracts which then get spent (or used as data-input) when performing txs.


[06/22/2020 2:58 PM] Robert K#0722
The other problem with old data, is that it's not that easy to find, because we would separate the oracle pool participant token from the datapoint box, and so it's not as easily scanable especially if one address is used for multiple pools for example.


[06/22/2020 2:59 PM] Robert K#0722
So for now, I'd advise us to not go down this route. If we want we could trivially add making a copy of the epoch finalized datapoint into their own boxes for historical purposes (quite trivial) but changing how the core protocol works by leaving boxes unspent runs into a lot of issues.


[06/22/2020 3:12 PM] kushti#0978
ah I see, ok , let's stick to the design that written down


[06/22/2020 3:12 PM] kushti#0978
@scalahub what's your progress ?


[06/22/2020 3:13 PM] kushti#0978
I made some changes in 3.3.0 to tackle with timeout errors

{Reactions}
üëç 

[06/22/2020 3:17 PM] Robert K#0722
> @Robert K Perhaps I missed something but checking that `creationHeight < specficHeight` does not imply `HEIGHT <= specficHeight` We can only check that `crationHeight > specficHeight` to ensure that Oracle has Posted *After* A Specific Height
@scalahub Hmm, right good point, I was thinking about it the wrong way around. Thanks for correcting that.


[06/22/2020 3:18 PM] Robert K#0722
> I made some changes in 3.3.0 to tackle with timeout errors
@kushti Great, I'll take a look at it today.


[06/22/2020 3:19 PM] scalahub#2618
> @scalahub Hmm, right good point, I was thinking about it the wrong way around. Thanks for correcting that.
@Robert K Lol I only caught it when I started implementing the oracle contract


[06/22/2020 3:20 PM] Robert K#0722
I think the design should still be implementable right? It mostly relies on checking the current height compared to a previous height defined in the pool box.


[06/22/2020 3:28 PM] scalahub#2618
Yes true it should be fine


[06/22/2020 6:13 PM] Robert K#0722
Great, registering scans (technically still apps), seems to work, haven't tested if the actual scanning part works but the API endpoint does üëç


[06/24/2020 4:40 AM] scalahub#2618
@Robert K @kushti Here is initial draft of a simplified variant of the oracle pool idea (work in progress). https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/OraclePool.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/OraclePool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[06/24/2020 2:11 PM] Robert K#0722
Nice @scalahub, but why is it a variant?
If we both don't follow the spec and just build around different protocols for the contracts/off-chain portion, it's going to be a miserable experience getting the two to match.

This is why I wrote a spec. If we'd like to simplify, I'd recommend simplify from the spec first so we can all agree what the protocol is, and then spend time working from there, rather than doing 2 completely different things based off of different ideas of what we are building.


[06/24/2020 2:12 PM] Robert K#0722
If we keep just adding/removing things from the protocol randomly, it's really not an efficient dev process when the off-chain/on-chain don't match, and the logic may need to be completely reworked if one side changes.


[06/24/2020 2:44 PM] Robert K#0722
Also, it would help if you explain the changes you made to the protocol so we can understand this 3-script scheme you chose and the expected actions/spending paths and how it's all supposed to work.


[06/24/2020 9:21 PM] scalahub#2618
Yes I'm going to write up a description once the scripts are completed. One main change is the use of a management box and not hardwiring oracle names.. makes the system more flexible.  Other changes are also all related to increasing flexibility... Such as not hardwiring scripts.


[06/24/2020 9:27 PM] scalahub#2618
Things to be added: logic to check that rate published by oracle is within bounds, more checks to ensure epoch is correctly followed


[06/24/2020 9:39 PM] scalahub#2618
@Robert K Here is a brief summary to understand the 3 contracts. 
There will be two tokens as in your original design. The first, A, is stored in the mangement and oracle boxes and the second, B, is a singleton and stored in pool box. End users will reference only B and won't care about A. 
Token A is to be stored in oracle box, one per box. The management box has a lot of tokens A and can give one to an oracle box each time using a threshold signature. 
An oracle box has rate in R4 and its public key in R5 that will be used to pay reward for publishing data point. Oracle box can only be spent by oracle private key and creation height is used to enforce and keep track of when the box was created.. 
The pool box has rate in R4. Epoch enforcement is done using creationHeight only. 
Pool box can be spent by anyone (the "collector") and the oracle boxes are used as data inputs, with data points in R4. This is enforced by hardwiring token A's id in the pool box. 
The incentive to include as many data points is by ensuring that collector gets reward proportional to the number of pool boxes included.
The incentive for pools to publish rate is there because the collector must also pay reward to each oracle during collection time.
Also need to add stake slashing, collateral, etc but I think we can keep them out in V0 and let the management committee take care of collateral off chain. 
Probably the pool box should be spendible only by oracles and there should be a mechanism to revoke oracle. (currently working on this)
What are the changes from the original model that break the offchain part?


[06/24/2020 10:25 PM] Robert K#0722
Just a heads up @scalahub, an NFT == Singleton token. So your design has 1 NFT and 1 normal type of token (just to keep things clear).


[06/24/2020 10:25 PM] scalahub#2618
ah yes.. will fix


[06/24/2020 10:26 PM] Robert K#0722
In regards to what does this break from the origina model, half the design right? I've already began modelling all the structs for the states of all the different boxes and how they'll interact, and now that's inherently changed since you now have a different model.


[06/24/2020 10:27 PM] Robert K#0722
I would also ask you to try and write an informal spec, or something similar at the very least because I went through a lot of effort to make it as clear as possible to write the off-chain logic & on-chain contracts, and it's kind of a pain to have to reverse-enginner all the requires actions/txs from your codebase.


[06/24/2020 10:28 PM] scalahub#2618
ok but lets not just "go by the specs" and maybe keep both flexible? The contracts are just initial iteration and can always be modified but the goal should be to get the optimal design, which may require us to iterate back to the specs


[06/24/2020 10:29 PM] scalahub#2618
also I'll create PR with some changes to offchain (will try to ensure that offchain is same as your design unless there is some major improvement)


[06/24/2020 10:29 PM] Robert K#0722
I don't really agree on this point. We're dealing with complicated stuff, and I have a lot of other responsibilities beside just writing the off-chain logic, and if every 2 days I have throw away some code it's rather tedious when we could have spent that time in the initial designing before getting to the point of coding.


[06/24/2020 10:29 PM] scalahub#2618
will send another version of the contracts shortly


[06/24/2020 10:30 PM] Robert K#0722
We were also thinking about releasing one of the informal specs for Emurgo Research so people can see what the protocol will be like.


[06/24/2020 10:30 PM] Robert K#0722
And so if we throw it away for a new design, with just a short description from you, well that is not enough and so would require more work to rewrite the spec.


[06/24/2020 10:31 PM] Robert K#0722
I'm fine with being agile, but if we are going to do so, let's agree upfront.


[06/24/2020 10:31 PM] scalahub#2618
Yes I'd prefer to get the on chain part as thin as possible so that the contracts are easy to analyze..


[06/24/2020 10:31 PM] scalahub#2618
but without breaking anything in your original design


[06/24/2020 10:32 PM] Robert K#0722
I'm just a bit annoyed because I did ask if we wanted to go with the spec, everyone agreed and you said you'd work on writing the contracts, and then after not saying much for a week or two, come back with new contracts/design.


[06/24/2020 10:32 PM] scalahub#2618
At this point, I don't want to rewrite the specs again so will try to rewrite the contracts as per your specs. 
My changes can be a different proposal then


[06/24/2020 10:32 PM] scalahub#2618
This was just to get the "hands dirty" with the contracts


[06/24/2020 10:33 PM] Robert K#0722
I'd prefer in the future if we could just communicate a bit better here if we're intending to be flexible so that our ideas/plans don't diverge going forward.


[06/24/2020 10:34 PM] Robert K#0722
That said, I am glad to see that you have improved the protocol.


[06/24/2020 10:35 PM] scalahub#2618
yes there is always possibility to create another variant with improvements later.. üôÇ


[06/24/2020 10:37 PM] Robert K#0722
In regards to direct benefits, your design allows for non-hardcoded oracles right? Are the txs less complex as well?


[06/24/2020 10:38 PM] scalahub#2618
Where is the latest version of the "offcial" specs? I guess there are many iterations so need to check the current status


[06/24/2020 10:38 PM] Robert K#0722
In the oracle-core repo as you requested: https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md


[06/24/2020 10:39 PM] scalahub#2618
ok so looking at same then


[06/24/2020 10:39 PM] Robert K#0722
Yeah, nothing has changed since.


[06/24/2020 10:40 PM] scalahub#2618
I'll work out a comparison document between the two variants then


[06/24/2020 10:40 PM] Robert K#0722
Alright, sounds good. If it's not too different, as you say, we can change the spec and it shouldn't take too much time technically.


[06/24/2020 10:40 PM] scalahub#2618
the major difference is no hardcoded oracles. .Rest are all cosmetic changes (like not storing in R5 the epoch but instead reusing creation hight, still those need to be documented)


[06/24/2020 10:41 PM] Robert K#0722
Right. Though changing from using box ID to denote an epoch to creation height is a decent bit of a protocol change which may have alternate implications.


[06/24/2020 10:42 PM] scalahub#2618
but I am still not sure about if that works correctly so may go back to using R5


[06/24/2020 10:42 PM] Robert K#0722
Yeah, I'll think about it too and see if it makes sense/has the same guarantees.


[06/24/2020 10:42 PM] scalahub#2618
```  val oracleBoxes = CONTEXT.dataInputs.filter{(b:Box) =>
    b.creationInfo._1 >= HEIGHT - epoch &&
    b.tokens(0)._1 == oracleTokenId
  }
```


[06/24/2020 10:43 PM] scalahub#2618
this is the check that ensures that data points are fresh


[06/24/2020 10:44 PM] scalahub#2618
and this check https://github.com/scalahub/Kiosk/blob/92cb90c6062c8d3ba33b585451a65685b7fab897/src/test/scala/kiosk/OraclePool.scala#L86
based on jasondavies perpetual token logic to ensure that sufficent delay between epochs

{Embed}
https://github.com/scalahub/Kiosk/blob/92cb90c6062c8d3ba33b585451a65685b7fab897/src/test/scala/kiosk/OraclePool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[06/24/2020 10:47 PM] Robert K#0722
So theoretically, as long as the bootstrapping tx provides a timely creation height, then all the future epochs should also work.


[06/24/2020 10:47 PM] Robert K#0722
But your model doesn't allow for missing epochs, right?


[06/24/2020 10:47 PM] Robert K#0722
If the pool is underfunded.


[06/24/2020 10:48 PM] Robert K#0722
This is why I rewrote my initial design, for having an "epoch preparation" period which allows for epochs to be missed if the pool is underfunded.


[06/24/2020 10:54 PM] Robert K#0722
I think it might be possible to use your creation height idea together with the epoch preparation in-between stage too to enable missed epochs.


[06/24/2020 10:55 PM] Robert K#0722
The question then becomes what are the actual tradeoffs of using box ids vs. creation heights.


[06/24/2020 11:03 PM] Robert K#0722
Ah, also good idea with paying the collector out proportional to the number of datapoints to incentivize including even more directly.


[06/24/2020 11:05 PM] Robert K#0722
I need to get going for tonight, but before I go I think for now we should just stick to the spec and get everything implemented and working. I think we'll get more marketing attention if we release something that works in a shorter timeframe and then have more announcements as we improve the model over time.


[06/24/2020 11:07 PM] Robert K#0722
You've clearly figured out some good improvements to the model I came up with (and some to think over the benefits/negatives) and that's really awesome for the future (especially non-hard coded oracles).


[06/24/2020 11:09 PM] Robert K#0722
So if you're fine with sticking to the spec for right now @scalahub, I think that's the best path forward, but please do write down all of these potential improvements and we'll definitely work towards implementing them over time.


[06/24/2020 11:23 PM] scalahub#2618
@Robert K I don't see the purpose of "Epoch Preparation" stage separately.. perhaps I have missed something but I feel it can be merged with the "previous epoch". So epoch preparation also starts for the next epoch as soon as the current epoch has started. does this make sense?


[06/24/2020 11:27 PM] scalahub#2618
We also need to consider delays and congestion so a tx may be in mempool for a while before getting confirmed and requiring everything to be done like clockwork will be a problem


[06/24/2020 11:28 PM] scalahub#2618
Let me revert on your point of "missing epoch".. I thought this should be handled. For example, if due to congestion collection does not happen in time then a new collection can be done in future assuming the oracles have posted a new rate.


[06/24/2020 11:29 PM] scalahub#2618
till then we can use the old rate (we will have creationHeight to know that the rate is stale)


[06/24/2020 11:31 PM] scalahub#2618
> So theoretically, as long as the bootstrapping tx provides a timely creation height, then all the future epochs should also work.
@Robert K yes exactly, so lot of complicated checks can be offloaded to bootstrapping and users can check that bootstrapping was done correctly before hardwiring token id


[06/24/2020 11:33 PM] scalahub#2618
storing box id in registers is an antipattern (box id can change if box is spent or storage rent is taken - though latter should not happen in our case).


[06/25/2020 12:06 AM] scalahub#2618
```
Each epoch period must be >= 30 blocks. Valid oracles must be within 30 blocks of collection

0     5         15       25          40           55       65         75
|                                     |
|<------- (epoch 1: 40 blocks) ------>|<---- (epoch 2: 35 blocks) ---->| 

      ^         ^        ^            ^            ^        ^          ^
      |         |        |            |            |        |          |
   oracle1   oracle2  oracle3         |         oracle1  oracle2       |
      |         |        |            |            |        |          |
    (bad)      (ok)     (ok)          |           (ok)     (ok)        |
                                      |                                |
         |                            |   |                            |
         |<-------- 30 blocks ------->|   |<-------- 30 blocks ------->|
         |    (valid oracle period)   |   |    (valid oracle period)   |
                                      |                                |
                                      |                                |
                                  collection                       collection 
                               (epoch 2 starts)                 (epoch 3 starts)
```


[06/25/2020 12:06 AM] scalahub#2618
The above figure explains the logic I have in mind


[06/25/2020 12:29 AM] scalahub#2618
A smart contract will say 
```val poolBox = Context.dataInputs(0)
val maxAgeDiff = 100 // I will accept pool box created within 100 blocks
val validRate = poolBox.tokens(0)._1 == poolTokenId && 
                poolBox.creationHeight >= HEIGHT - maxAgeDiff```


[06/25/2020 12:38 AM] scalahub#2618
I propose the following way forward @Robert K @kushti 
1. Skip dynamic oracle part (I'll remove management contract and hardwire oracle pub keys in pool box), since this is more like a standard pattern that can be plugged in later. 
2. Discuss the architecural changes I am proposing such as no explicit "Epoch preparation" and that "deposit stage" for next epoch is same as the current epoch. (essentially the contracts I have created)
I can do the necessary modifications to the specifications to capture the new requrements. Offchain will also be quite simple with this (only two operations: oracle and collect).

We should model the epochs based in block-times in mining. Oracles are posting "unconfirmed transactions" and collector is "mining" unconfirmed transactions. 
Thus, 
1) there should not be any "preparation" phase between one epoch ending and next epoch starting, similar to there being no such phase between one block being mined and next mining phase to begin. 
All oracles must be watching the blockchain to know when the collection happens similar to all miners watching to know when to start mining next block.
2) Similarly, if a block is not found for a long time, does not make the blockchain in an invalid state, so we should also allow the current epoch to continue until the next one starts, even if more than 30 blocks have passed.


[06/25/2020 2:46 PM] Robert K#0722
> storing box id in registers is an antipattern (box id can change if box is spent or storage rent is taken - though latter should not happen in our case).
@scalahub Technically storing box id is not an anti pattern, it's intentionally the design pattern of the protocol in this case where an individual box id is tied to an epoch and there is no chance storage rent happens if an oracle pool actually does it's job. There are cases where this is limiting, but it's the core of the protocol of the design I came up with, and will likely have other usecases too.

`"Each epoch period must be >= 30 blocks. Valid oracles must be within 30 blocks of collection"`
Doesn't this means that this penalize good acting oracles who posted in the start of an epoch (say block 2), but due to network congestion the collection was delayed by 3 blocks, automatically causing the oracle to be "bad" as you stated in your diagram.

With the above point, and in general, I'm not convinced a dynamic epoch length is a good thing. I think it's more open to collusion with miners and/or other oracles to do their best to delay the epoch until an oracle they are colluding against has their datapoint out of reach for example. The variability also makes it less ideal for actual usecases where dApps need a steady source of data. With the epoch preparation/epoch dichotomy, even if collection of epoch (n-1) is slow, epoch n is still going to be on the normal post schedule nonetheless (since the next epoch end time is predefined by the previous end time, so there's no variability except if the pool becomes underfunded). This is something that I purposefully attempted to encode in the protocol, as one of the major points of oracle pools is to provide a more trusted/steady/predictable supply of oracle data which fits a predefined schedule. I think this is a very good reason to have a preparation stage, and it makes it easier to fit in governance/stake slashing as well in a clean manner.


[06/25/2020 2:54 PM] Robert K#0722
> I propose the following way forward @Robert K @kushti 
> 1. Skip dynamic oracle part (I'll remove management contract and hardwire oracle pub keys in pool box), since this is more like a standard pattern that can be plugged in later. 
> 
@scalahub I agree, having a dynamic whitelist should be relatively easy to add in the future so it's not needed right now (which is why I ignored it in the spec originally)

In regards to your second recommendation for the way forward, I am still not convinced it is in fact better/provides benefits over the epoch preparation scheme I initially stipulated. It seems to be simpler logic-wise, but epoch variability seems to be a pretty decent negative imo. 

Also, in regards to stake slashing & governance which we'll like to add eventually, are there clean ways to add both in your approach without running into any issues? I think they should both be possible without too much problem, but I haven't thought through your version in detail and whether there's weird actions bad actors can take with say posting datapoints at the end of an epoch, or at the same time as with collection, which causes issues.


[06/25/2020 2:59 PM] Robert K#0722
One of the nice things about using oracle pool box id & having a stable epoch duration length, is that oracle datapoint posting is tied specifically to a given epoch. There is no way you can collect & post a datapoint for the next epoch, which I believe could cause issues with stake slashing potentially with your model.


[06/25/2020 3:03 PM] Robert K#0722
(As an aside, I think with all of these discussions we're having, we can abstract out the two design patterns we've come up with for defining epoch-based protocols on extended UTXO systems later on and explain them in more length and the benefits/negatives of each approach in a piece of some sort. I don't think there's going to be too many other approachs for solving this problem, so these are good insights to expand on for others to use too when we find time)

{Reactions}
üëçüèª 

[06/26/2020 2:08 PM] Robert K#0722
@scalahub So in the end, which direction are we going to pursue?


[06/26/2020 2:09 PM] Robert K#0722
It would be good to agree on something so we can have steady footing to move forward.


[06/26/2020 2:18 PM] Robert K#0722
Also, in other news, the Oracle Pools overview doc will be released today.


[06/26/2020 2:19 PM] Robert K#0722
There's also going to be three new Emurgo in-house created graphs so it's going to be a bit easier for less techy people to understand (and some more images to show off for when posted on social media and so on forth).


[06/26/2020 2:25 PM] kushti#0978
@scalahub yeah, let's find a common ground


[06/26/2020 2:25 PM] kushti#0978
let's have a chat on Mon also ?


[06/26/2020 3:10 PM] Robert K#0722
Alright sounds good.


[06/28/2020 10:13 AM] scalahub#2618
yes lets connect monday. @Robert K Could you add some kind of flow diagram to your writeup to explain the transitions between the stages? 
(this document -> https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md)
Regarding which approach to go for implementation, IDK.. we could have two set of  contracts based on the two variants like we have in LETS and then implement one of them (or both)


[06/28/2020 10:16 AM] scalahub#2618
About keeping box Id in R5, I'm thinking this could have some advantages... (a new design pattern. let me revert)


[06/28/2020 10:56 AM] scalahub#2618
> @scalahub Technically storing box id is not an anti pattern, it's intentionally the design pattern of the protocol in this case where an individual box id is tied to an epoch and there is no chance storage rent happens if an oracle pool actually does it's job. There are cases where this is limiting, but it's the core of the protocol of the design I came up with, and will likely have other usecases too.
Storing boxId does seem to be a useful design pattern on its own but I was thinking we could do without it as it complicates a lot.. BTW, does it ensure no unspendable boxes if oracle forgets to post?
> @Robert K


[06/28/2020 10:58 AM] scalahub#2618
> @scalahub Doesn't this means that this penalize good acting oracles who posted in the start of an epoch (say block 2), but due to network congestion the collection was delayed by 3 blocks, automatically causing the oracle to be "bad" as you stated in your diagram.
1) it also incentivizes the earlier oracles to collect asap 2) oracles can post their data towards the end of epoch 3) Oracles can respend their box multiple times in an epoch, maybe every block, guaranteeing that only last one is collected
> With the above point, and in general, I'm not convinced a dynamic epoch length is a good thing. I think it's more open to collusion with miners and/or other oracles to do their best to delay the epoch until an oracle they are colluding against has their datapoint out of reach for example. 
Even your model keeps epoch length dynamic because the start of next epoch is not guaranteed to happen at the exact end of current epoch in at least 2 cases:
1) If collection is not mined in time. 2) If no one collects and pool goes into "Epoch Preparation" stage. 
So both models are actually same. 
Regarding collusion between miners, I think both are equally succeptible. 
Perphaps this point I misunderstood and in this case there will be clear advantage of keeping boxId in R5.
@Robert K


[06/28/2020 10:59 AM] scalahub#2618
> @scalahub The variability also makes it less ideal for actual usecases where dApps need a steady source of data. With the epoch preparation/epoch dichotomy, even if collection of epoch (n-1) is slow, epoch n is still going to be on the normal post schedule nonetheless (since the next epoch end time is predefined by the previous end time, so there's no variability except if the pool becomes underfunded). This is something that I purposefully attempted to encode in the protocol, as one of the major points of oracle pools is to provide a more trusted/steady/predictable supply of oracle data which fits a predefined schedule. I think this is a very good reason to have a preparation stage, and it makes it easier to fit in governance/stake slashing as well in a clean manner.
Same in my model; to get the collection reward, collection would happen asap, thereby giving a steady supply.
Plus creation height in the pool box will tell smart contract how old the pool box is.
@Robert K


[06/28/2020 11:00 AM] scalahub#2618
To better explain my variant, I've created this writeup https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/OraclePool.md

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/OraclePool.md
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[06/28/2020 11:09 AM] scalahub#2618
> One of the nice things about using oracle pool box id & having a stable epoch duration length, is that oracle datapoint posting is tied specifically to a given epoch. There is no way you can collect & post a datapoint for the next epoch, which I believe could cause issues with stake slashing potentially with your model.
@Robert K 
Doesn't my model also ensure the same? (perhaps I misunderstood, but what do you mean by "There is no way you can collect & post a datapoint for the next epoch"?)
When collection, an oracle box is valid only if it was posted during the last 30 blocks and new epoch can only start after at least 30 blocks have passed since last epoch started..


[06/29/2020 3:14 PM] Robert K#0722
> 
> Storing boxId does seem to be a useful design pattern on its own but I was thinking we could do without it as it complicates a lot.. BTW, does it ensure no unspendable boxes if oracle forgets to post?
 An oracle can always spend their datapoint box in an epoch (in collateral slashing, they obviously need collateral though), and so it's always spendable.

`Even your model keeps epoch length dynamic because the start of next epoch is not guaranteed to happen at the exact end of current epoch in at least 2 cases:
1) If collection is not mined in time. 2) If no one collects and pool goes into "Epoch Preparation" stage. `

If the collection is not mined in time, the new epoch is still based off of the old epoch end height + the epoch length. So even if the epoch was collected 5 blocks late, it doesn't matter. It's a simple addition from the previous height. This is different compared to yours, where its based off of the collection block height. If no one collects from the preparation stage, that means the pool is underfunded (or the blockchain is full, which is a different problem), then yes the schedule is not met, but this doesn't mean it's dynamic, just that the schedule has failed to be kept due to funding issues. When the pool restarts after being funded, the epochs are fixed once again. Your model is inherently dynamic, but optimally under best conditions trends towards a near-fixed epoch length, which I think is the main difference.


[06/29/2020 3:14 PM] Robert K#0722
`Regarding collusion between miners, I think both are equally succeptible. `
Ah, since oracles can post multiple times in an epoch in your model, then the collusion becomes a bit less of an issue. I suppose incentivizing posts at the end of an epoch is good as well.

`Doesn't my model also ensure the same? (perhaps I misunderstood, but what do you mean by "There is no way you can collect & post a datapoint for the next epoch"?) When collection, an oracle box is valid only if it was posted during the last 30 blocks and new epoch can only start after at least 30 blocks have passed since last epoch started..`
Right, but what that means (I believe) is that upon collection an oracle can also post a new datapoint for the new epoch which replaces his previous datapoint at the same time as collecting. This thereby provides no time for stake slashing, because the new epoch has already begun and the oracle has already changed their datapoint. They can then update their datapoint again later on to something different (as you've alluded), so stake slashing seems to not work with your model, right (because everyone's best game theoretic approach is to simply post placeholder datapoint to ensure they don't get stake slashed if their datapoint was really off in the previous epoch, and then change it later).


[06/29/2020 3:14 PM] Robert K#0722
In regards to writing both contracts and deciding after, I think we should just decide on one so this doesn't become a long-term pet research project, but something that is actually palpable/useable on mainnet. And so if possible, we should decide today based on:

1. Complexity (on-chain, off-chain, and bootstrapping)
2. Tradeoffs of dynamic vs. fixed epoch length
3. Ability to extend with stake slashing
4. Ability to extend with governance
5. ...

I'll check out the writeup right now.


[06/29/2020 3:20 PM] scalahub#2618
yes lets finalize today. Let me also go through the reply


[06/29/2020 3:22 PM] scalahub#2618
when should we start discussion? Maybe an hour from now?


[06/29/2020 3:27 PM] Robert K#0722
Alright, that works for me.


[06/29/2020 3:29 PM] Robert K#0722
Nice writeup, a small note, I do recommend that even if we go with your dynamic-epoch model, then we still have a "Fund Deposit" stage/contract, so it's a lot easier for anyone to submit funds to the pool (no need to find pool box, just post to a predefined smart contract address that can be stored locally).


[06/29/2020 3:32 PM] scalahub#2618
Hmm yes good improvement


[06/29/2020 3:35 PM] scalahub#2618
While I'm going through can you please check the following edge cases.. if oracle forgets to create data point in current epoch due to some reason and epoch moved to next, will he be able to recover?


[06/29/2020 3:36 PM] scalahub#2618
And also due to network delay if epoch creation gets delayed by several blocks .  Say 2.5 times the epoch length then how we calculate


[06/29/2020 3:39 PM] Robert K#0722
Both edge cases are taken into account. The former is fine, the oracle can always post a new datapoint in a new epoch (assuming sufficient collateral if needed).

For the latter, typically the pool uses the "Start *Next* Epoch" action if it does not miss an epoch. Else it uses the "Start *New* Epoch action" if it does. The former keeps the previous schedule of epochs, while the new action starts a new schedule after being underfunded/missing an epoch (and it starts it based off of the current block height)


[06/29/2020 3:39 PM] Robert K#0722
And I'll be back in 50 minutes for the rest of the discussion.

{Reactions}
üëç 

[06/29/2020 4:30 PM] Robert K#0722
Alright, good to go?


[06/29/2020 4:32 PM] scalahub#2618
yes


[06/29/2020 4:33 PM] scalahub#2618
gimme 5 mins.. a call


[06/29/2020 4:36 PM] scalahub#2618
ok back.. so lets discuss based on the following
1. If we decide fo go with the "dynamic epoch length" approach, as I prefer, then we can address the concerns you have with it
2. If we want to discuss whether we should go with 1. or not, then we can disucss how the original approach is better + any concerns I have with it


[06/29/2020 4:37 PM] scalahub#2618
the dynamic epoch seems to be simpler to implement for both off and onchain so I would recommend considering that first


[06/29/2020 4:38 PM] scalahub#2618
so better can be in terms of "shorter contracts", "less number of states" or "less number of edge cases"


[06/29/2020 4:39 PM] Robert K#0722
Fair point, dynamic epochs do seem to be simpler overall, but one key thing that I am picky about is that I don't see a clean way forward for stake slashing.


[06/29/2020 4:39 PM] scalahub#2618
by stake slashing you mean to penalize oracle for not publishing?


[06/29/2020 4:39 PM] Robert K#0722
And that's kind of important imo. If fixed-length epochs are more complicated, but then implementing stake slashing later on is simpler, then it could be net a better choice.


[06/29/2020 4:40 PM] Robert K#0722
Stake slashing for:
- Not posting
- Posting a datapoint that is an outlier
- Failing to collect everybody


[06/29/2020 4:40 PM] Robert K#0722
For #2 in that list, in dynamic epochs someone can update their datapoint from the last epoch immediately, providing no way to check in the following epoch?


[06/29/2020 4:40 PM] scalahub#2618
Ok got the first two points


[06/29/2020 4:40 PM] scalahub#2618
failing to collect everybody is a bit tricky.. How is it handled in your approach?


[06/29/2020 4:41 PM] Robert K#0722
This is why the epoch preparation stage exists, you have a "dispute period" essentially.


[06/29/2020 4:41 PM] scalahub#2618
Let me see if I can add #1 and 2 to it


[06/29/2020 4:41 PM] Robert K#0722
So for #3, anyone can use their datapoint from the previous epoch as a data-input to prove it was from said epoch


[06/29/2020 4:41 PM] scalahub#2618
ok so I think maybe need some more explanation about the full protocol

{Reactions}
üëå 

[06/29/2020 4:42 PM] scalahub#2618
if its not too much, can you please add following to your document


[06/29/2020 4:42 PM] scalahub#2618
1. motivation for keeping boxId (example of some attack/problem that can occur without it)


[06/29/2020 4:42 PM] scalahub#2618
2. how the differenet stages are supposed to transition from each other (like a flow diagram)


[06/29/2020 4:43 PM] scalahub#2618
3. and how the protocol is supposed to handle delays/uncertanities (such as preparation not happening in time, or collection box not getting mined in time, etc)


[06/29/2020 4:44 PM] scalahub#2618
or someone simply forgetting to perform a step (due to a bug)


[06/29/2020 4:44 PM] scalahub#2618
(and how dispute will be handled for the "failing to collect everybody" case)


[06/29/2020 4:46 PM] Robert K#0722
Sure, I can draw a diagram, but on the other points you raised, I believe I have explained those too pretty well in the preambles to each stage/action, just not in the basic informal spec (since there's no stake slashing there).


[06/29/2020 4:46 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/727188298291740722/Stake-Slashing-Pool-Spec.md


[06/29/2020 4:47 PM] Robert K#0722
Most of the complexity in the design was figuring out how to add in such incentives, and so the basic spec is a bit more complex, but that is to set up a scheme that allows for building on top of.


[06/29/2020 4:49 PM] Robert K#0722
So for your point #1, please read the Slashing related actions. And for point #3 read the "start new epoch" and "start next epoch" actions.


[06/29/2020 4:49 PM] scalahub#2618
ok my main concern was how the protocol will handle congestion since then nothing is predictable, so what is the use of keeping fixed epoch?


[06/29/2020 4:49 PM] scalahub#2618
ok let me check for #1 and #3


[06/29/2020 4:49 PM] scalahub#2618
can you add #2 and #4


[06/29/2020 4:50 PM] Robert K#0722
Because other dApps will need predictable data (at least to some degree). If everyone just decides that everything is dynamicly-long, well it's hard to build dApps on top of that.


[06/29/2020 4:50 PM] Robert K#0722
If dApp X needs a new datapoint before block height Y, and guaranteed needs it to be fresh, it is important that it is provided in time.


[06/29/2020 4:51 PM] Robert K#0722
Sure in the real world when that block height actually happens is variable, but on the blockchain all time is block height based, and so having constants makes everything on top easier to design.


[06/29/2020 4:52 PM] Robert K#0722
And that's why we put stake slashing disincentives in place too.


[06/29/2020 4:52 PM] scalahub#2618
Dynamic epoch does not seem to be issue for first case


[06/29/2020 4:52 PM] scalahub#2618
We can simply check if epoch is active


[06/29/2020 4:52 PM] scalahub#2618
It's the same.. how does it make a difference it a block is mined in exactly 2 minutes or close to it


[06/29/2020 4:53 PM] scalahub#2618
As long as there is guarantee that we can check freshness..


[06/29/2020 4:54 PM] scalahub#2618
So the only thing I see is stake slashing


[06/29/2020 4:54 PM] Robert K#0722
But it's not the same. Because if my dApp needs a new oracle datapoint every 50 blocks, because the dApp also has a 50 block epoch, and it can't wait for new data, then it needs that datapoint on time. If we have dynamic epochs, then sometimes the new datapoint will be ready, sometimes no, we have to add checking logic to the dApp.


[06/29/2020 4:54 PM] Robert K#0722
And then if it ever takes longer, then your epochs get miss-timed, where at some point maybe the datapoint posting epoch was 5 blocks behind, and eventually it becomes 6 blocks ahead.


[06/29/2020 4:55 PM] scalahub#2618
But we can never guarantee exactly that everything happens like clockwork.. we can only check that box is less than certain height


[06/29/2020 4:55 PM] Robert K#0722
You're essentially outsourcing complexity to the dApp developers on top of the oracle pool, instead of keeping it inside.


[06/29/2020 4:56 PM] scalahub#2618
I mean we could but that would make contract unusable


[06/29/2020 4:56 PM] Robert K#0722
Right, but all dApps use block height as a stable measure of time.


[06/29/2020 4:56 PM] scalahub#2618
In times of congestion


[06/29/2020 4:56 PM] Robert K#0722
Right, that's why we have disincentives. So oracles are willing to pay large fees to get their tx accepted.


[06/29/2020 4:56 PM] Robert K#0722
To prevent stake slashing their collateral.


[06/29/2020 4:56 PM] scalahub#2618
Yes but never exact requirement.. only less than or greater than


[06/29/2020 4:57 PM] scalahub#2618
Large fee is not guarantee of mining


[06/29/2020 4:57 PM] scalahub#2618
What if network splits or forks


[06/29/2020 4:57 PM] scalahub#2618
Will that all be handled?


[06/29/2020 4:58 PM] Robert K#0722
In that case you just increase the epoch length to buffer for that, right?


[06/29/2020 4:59 PM] Robert K#0722
The shorter your epoch, the more chance of being effected by forks.


[06/29/2020 4:59 PM] scalahub#2618
We should assume that tx will be accepted at some point but never assume it will be next block or next 4 blocks etc


[06/29/2020 5:00 PM] scalahub#2618
So main thing I want to avoid is storing box id


[06/29/2020 5:00 PM] Robert K#0722
But then it's hard to create any DeFi dapps or anything with timing based on that approach.


[06/29/2020 5:00 PM] scalahub#2618
Rest all looks ok


[06/29/2020 5:00 PM] scalahub#2618
Yes its hard to create dapps .. period :)


[06/29/2020 5:00 PM] scalahub#2618
Because of timing issues


[06/29/2020 5:01 PM] Robert K#0722
If the box id is an issue, I think it may be possible to use creation height with epoch preparation period too


[06/29/2020 5:01 PM] Robert K#0722
But I still don't understand why you want to avoid box id?


[06/29/2020 5:01 PM] scalahub#2618
Yes and the thing about fixed epoch is more related to stake slashing. I believe


[06/29/2020 5:02 PM] scalahub#2618
But could you have a version without box id .  That will be sufficient ;)


[06/29/2020 5:02 PM] scalahub#2618
And also with box id is fine if there is a real reason for it..but maybe need more explanation


[06/29/2020 5:03 PM] Robert K#0722
So the box id allows one to tell when a datapoint was posted. It's essentially an epoch identifier. For each "epoch" period, there exists a box id for the oracle pool for that epoch.


[06/29/2020 5:04 PM] Robert K#0722
And so when you enter the epoch preperation period of a collection, you can tell that the box was posted in the last epoch, or an older one.


[06/29/2020 5:04 PM] scalahub#2618
I don't want to avoid it per se but then if contract depends on box id then we need to take extra care that box doesn't become unspendable


[06/29/2020 5:04 PM] Robert K#0722
We could theoretically use creationHeight for that purpose I believe


[06/29/2020 5:04 PM] scalahub#2618
If that other box stops existing


[06/29/2020 5:04 PM] Robert K#0722
Yep, I believe I've already though through the edge cases by limiting the spending paths.


[06/29/2020 5:05 PM] scalahub#2618
If we could use creation height it will be best because contract becomes shorter and simple


[06/29/2020 5:05 PM] Robert K#0722
Essentially the oracle pool box can only ever recursively go "Epoch Preparation Stage" -> "Epoch Stage" -> "Epoch Preparation Stage -> ...


[06/29/2020 5:05 PM] scalahub#2618
How can you limit other box being spent?


[06/29/2020 5:05 PM] Robert K#0722
Other?


[06/29/2020 5:05 PM] scalahub#2618
If oracle box has pool box id and pool box gets spent


[06/29/2020 5:06 PM] scalahub#2618
Then is oracle box locked ?


[06/29/2020 5:07 PM] Robert K#0722
Oracle box spending is locked if the pool box is in the "Epoch Preparation Stage"


[06/29/2020 5:07 PM] Robert K#0722
This is on purpose, to provide time to do stake slashing/governance.


[06/29/2020 5:07 PM] Robert K#0722
Oracle box can be spent if the pool box is in the "Epoch" stage


[06/29/2020 5:08 PM] scalahub#2618
Yes but if pool box is spent and no longer has same box id.. while oracle box has not been spent for a long time.. say a month.. and now it's stored box id is not matching with pool box id.. is that a problem?


[06/29/2020 5:10 PM] Robert K#0722
No, that is the point of the protocol. The first epoch that said oracle fails to post a datapoint for, they get collateral slashed. It is the other oracles' duty to stake slash that oracle in the first epoch preparation after they failed to post. This is because in the next live epoch, said oracle can repost again.


[06/29/2020 5:10 PM] Robert K#0722
That means if no one slashes the collateral in the first epoch prep, then it's possible for the oracle to post again and "erase" the fact they missed an epoch.


[06/29/2020 5:10 PM] Robert K#0722
So essentially moving into an epoch prepartion period via collecting is like a snapshot of the state of the pool.


[06/29/2020 5:11 PM] scalahub#2618
Ok then definitely needs more explanation üòâ


[06/29/2020 5:11 PM] scalahub#2618
Maybe a small section of rationale of storing box id.


[06/29/2020 5:12 PM] Robert K#0722
I'm essentially explaining what is in the preamble in the spec:
```
An oracle‚Äôs collateral can be slashed during Epoch Preparation if they did not commit a datapoint before the previous epoch had ended. 
This is done by checking if R8 of the Epoch Preparation data-input does not match the R5 of the Datapoint input box, thereby proving that the
oracle‚Äôs latest datapoint was posted in an old epoch (meaning the oracle missed the latest epoch). 
The collateral Ergs are moved into an Pool Deposit box so that the collateral can be collected later on and used to fund future oracle pool
postings. 
```


[06/29/2020 5:12 PM] Robert K#0722
And so R8 and R5 are box id related.


[06/29/2020 5:13 PM] Robert K#0722
Sorry, but I'm failing to understand what is confusing about using box id?


[06/29/2020 5:15 PM] scalahub#2618
Its not confusing but it seems if we could use creation height then will it not be redundant?


[06/29/2020 5:16 PM] Robert K#0722
Yes potentially.


[06/29/2020 5:16 PM] Robert K#0722
I think they are optional stand-ins for each other at this point.


[06/29/2020 5:16 PM] Robert K#0722
But, the epoch prepartation/live epoch dichotomy I think is required.


[06/29/2020 5:17 PM] scalahub#2618
And epoch preparation and epoch can overlap?


[06/29/2020 5:18 PM] Robert K#0722
If a collection happens late, then the previous epoch box continues to exist longer, which would typically be an epoch prep period.


[06/29/2020 5:20 PM] scalahub#2618
Ok then can I please ask you to make a linear diagram as well :) .. something like I made for dynamic epoch. Showing overlaps as well as consecutive stages


[06/29/2020 5:20 PM] scalahub#2618
This shoud clear up everything.


[06/29/2020 5:22 PM] scalahub#2618
And then some of the stages may be there conceptually but need not be modelled explicitly in the contracts


[06/29/2020 5:22 PM] Robert K#0722
Sure, I'll try to whip up a quick diagram.

{Reactions}
üëç 

[06/29/2020 5:23 PM] Robert K#0722
Thinking about it, the epoch preparation period probably should be longer than I initially wrote in (4 blocks) because the overlap may happen.


[06/29/2020 5:23 PM] Robert K#0722
> And then some of the stages may be there conceptually but need not be modelled explicitly in the contracts
@scalahub Not sure what you mean here? All stages and actions are required to make everything run properly as we've discussed.


[06/29/2020 5:23 PM] scalahub#2618
Yes that was my other question.. let's keep these variable.. like "at least 4" if possible


[06/29/2020 5:24 PM] Robert K#0722
This was something I intended to discuss at some point, but forgot admist everything.


[06/29/2020 5:24 PM] scalahub#2618
> @scalahub Not sure what you mean here? All stages and actions are required to make everything run properly as we've discussed.
@Robert K ignore that :) I meant that as long as the functionality is there.

{Reactions}
üëç 

[06/29/2020 5:25 PM] Robert K#0722
The epoch preparation stage duration & the epoch stage duration were the biggest questionmarks in my design which I wanted to address at some point.


[06/29/2020 5:25 PM] scalahub#2618
We could reconnect tomorrow same time?


[06/29/2020 5:26 PM] Robert K#0722
As we could split it up to be 50%/50% of the epoch duration.


[06/29/2020 5:26 PM] scalahub#2618
Yes and also please keep in mind congestion.. even if you think there is enough gap


[06/29/2020 5:27 PM] Robert K#0722
Before we conclude for today, I would like to at least come to a small conclusion.


[06/29/2020 5:27 PM] scalahub#2618
Yes sure ..


[06/29/2020 5:28 PM] scalahub#2618
Not yet concluding :)


[06/29/2020 5:28 PM] Robert K#0722
So, are you agreeing that (as long as it makes sense) the epoch preparation/epoch dichotomy is a good approach.


[06/29/2020 5:28 PM] Robert K#0722
However, you think that using creationHeight rather than box id is better.


[06/29/2020 5:28 PM] Robert K#0722
With fixed epoch lengths (we can make epochs longer to buffer).


[06/29/2020 5:29 PM] scalahub#2618
Yes at a high level .. it it has some rationale.(which it seems)


[06/29/2020 5:30 PM] scalahub#2618
Also there is not much conceptual difference between dynamic epoch and fixed epoch plus waiting stage


[06/29/2020 5:30 PM] scalahub#2618
Since in dynamic epoch I can decide if it's waiting stage or not using creation height even if there is no explicit waiting stage


[06/29/2020 5:31 PM] Robert K#0722
Right, but there is for stake slashing


[06/29/2020 5:31 PM] Robert K#0722
Because people can post new datapoints, removing proof of their previous datapoints not being posted in the right period


[06/29/2020 5:32 PM] scalahub#2618
Yes though the same logic should also work in stake slashing but need to think a bit on it


[06/29/2020 5:32 PM] Robert K#0722
My only question is, why bother with figuring this out for creation height?


[06/29/2020 5:32 PM] Robert K#0722
I've already thought through most of this with the informal spec for box id.


[06/29/2020 5:33 PM] Robert K#0722
I think creation height is a good approach too, I'm just wondering what's the big selling point of switching.


[06/29/2020 5:33 PM] scalahub#2618
Ok so the purpose was to get the contracts as simple as possible with all potential edge cases considered.. and keeping stages to minimum


[06/29/2020 5:33 PM] Robert K#0722
Right, good approach.


[06/29/2020 5:33 PM] scalahub#2618
So the specs are great.. just need few more polishing


[06/29/2020 5:34 PM] Robert K#0722
But I think you can't lower the number of stages even with creation height


[06/29/2020 5:34 PM] scalahub#2618
With the things we discussed.. like a flow diagram


[06/29/2020 5:34 PM] Robert K#0722
Unless we design it so that it's not easy to add stake slashing


[06/29/2020 5:34 PM] Robert K#0722
Which can be done with box id as well.


[06/29/2020 5:34 PM] scalahub#2618
And not looking at reducing number of stages for now


[06/29/2020 5:35 PM] scalahub#2618
Can we remove stake slashing? At least for not posting


[06/29/2020 5:35 PM] scalahub#2618
Not getting reward is punishment enough


[06/29/2020 5:35 PM] Robert K#0722
We can for the start, but the point of using the epoch prep -> epoch dichotomy for the basic spec/first implementation is that it makes it trivial for us to build out stake slashing later on


[06/29/2020 5:36 PM] Robert K#0722
And so all the off-chain logic/automation is already in place.


[06/29/2020 5:36 PM] Robert K#0722
If we start without the epoch prep -> epoch setup, then it will take some rework from the first initial basic oracle pool impl to get to stake slashing.


[06/29/2020 5:37 PM] Robert K#0722
So slower start, more rewards later on


[06/29/2020 5:37 PM] scalahub#2618
Ok in that case maybe keep box id then

{Reactions}
üëç 

[06/29/2020 5:38 PM] scalahub#2618
Because possible easier to do penalize based on box id


[06/29/2020 5:41 PM] scalahub#2618
What I will do is see if any bugs/edge cases not handled in the fixed epoch scenario


[06/29/2020 5:41 PM] scalahub#2618
Mostly due to congestion


[06/29/2020 5:41 PM] Robert K#0722
Perfect, that would be great.


[06/29/2020 5:42 PM] Robert K#0722
I haven't thought too much about that, so maybe we'll need to include some sort of base guidelines/recommended parameters to buffer against congestion.


[06/29/2020 5:43 PM] Robert K#0722
Alright cool, so is there anything you want specifically from me for the box id model to understand it better? Or should I go back to focusing on implementing the oracle core based on the spec?


[06/29/2020 5:44 PM] Robert K#0722
(And as a side note, I think it'll be great if you have a chance later on after we get an implementation out to work out if all of this is also possible with creationHeight and/or dynamic epoch lengths, and see what that research discovers oto)


[06/29/2020 5:44 PM] scalahub#2618
Just a flow diagram between stages and a sequence diagram between epochs showing overlaps etc


[06/29/2020 5:44 PM] Robert K#0722
Alright, will do.

{Reactions}
üëç 

[06/29/2020 5:45 PM] Robert K#0722
Great, so I think that's a good conclusion for today, we can talk more tomorrow then and I'll have the diagrams ready.


[06/29/2020 5:46 PM] scalahub#2618
Yes let's connect tomorrow


[06/29/2020 6:02 PM] scalahub#2618
@Robert K also for further branstorming üôÇ two cases when oracle didnt post in time: 1) oracle actually failed to post in time and 2) oracle posted but transaction failed to confirm in time..  should we punish oracle for 2) ?


[06/29/2020 6:07 PM] scalahub#2618
another question: would our design be able to handle very short epoch times such as 10 minutes?


[06/29/2020 6:07 PM] scalahub#2618
so about 5 blocks


[06/29/2020 6:11 PM] Robert K#0722
First question: Yes, I think it's the responsibility of the oracle to not post so close to the end of the epoch and/or post with such low fees. It's obviously still a chance, but I think there's no way around it. (And if it's straight censorship collusion by miners, well that's a problem outside of our scope) What the oracle is being paid to do is essentially be the middleman who takes on risk (to gain a reward) in order to guarantee that external data enters onto the blockchain in a timely manner.

{Reactions}
üëç 

[06/29/2020 6:12 PM] Robert K#0722
That's the perspective I viewed this all through when designing oracle pools, and I think that's really the only argument for 3rd party oracles, as being paid timely deliverers of external data. (Otherwise you just get signed data from the source).


[06/29/2020 6:13 PM] Robert K#0722
And your other question: Probably not it seems, and so in the spec it would be good to set some basic recommendations/limits that we believe are the minimum requirements.


[06/29/2020 6:13 PM] Robert K#0722
(Maybe dynamic epochs are better for the short duration, kind of a cool idea to have different types for different durations/assurance)


[06/29/2020 6:14 PM] scalahub#2618
ok my personal opnion is that it is too aggressive to penalize for not posting or posting outlier.. Just not getting reward is sufficient for these two cases


[06/29/2020 6:14 PM] Robert K#0722
I agree for outlier, I disagree for not posting.


[06/29/2020 6:14 PM] Robert K#0722
Their whole job is to post.


[06/29/2020 6:14 PM] Robert K#0722
And so there's risk involved, but that can be priced in.


[06/29/2020 6:14 PM] scalahub#2618
what is the incentive to not post


[06/29/2020 6:15 PM] Robert K#0722
None, but they failed to perform their job so we need to incentivize them to pay a lot higher fees to guarantee they are included so they do not lose collateral.


[06/29/2020 6:15 PM] scalahub#2618
but yes that is more of an action..


[06/29/2020 6:15 PM] scalahub#2618
for now we just need to identify the cases and action can be decided later


[06/29/2020 6:16 PM] scalahub#2618
to penalize or not


[06/29/2020 6:16 PM] Robert K#0722
Yep.


[06/29/2020 6:16 PM] Robert K#0722
But I do think the slashing when they don't post is important, but we can argue later. (Was an issue recently with Ethereum congestion, and oracles didn't post data until it was cheaper for them to do so, so as not to pay high fees)


[06/29/2020 6:17 PM] scalahub#2618
agreed, so in v1 we can just leave action empty.. I'm not having a strong opnion on it though


[06/29/2020 6:18 PM] Robert K#0722
Yeah, for the initial impl, we can just not have stake slashing at all like in the basic spec.


[06/29/2020 6:18 PM] scalahub#2618
I think penalizing a little is same is not giving a large reward üòâ


[06/29/2020 6:18 PM] Robert K#0722
But understand how to fit it in and then decide what makes the most sense together.


[06/29/2020 6:18 PM] scalahub#2618
so if reward is large enough like 10x fee then this will not happen


[06/29/2020 6:19 PM] Robert K#0722
Psychology shows losing something is worth more than gaining something to most people.


[06/29/2020 6:19 PM] Robert K#0722
But if we put both at play, then it's even more enticing üôÇ


[06/29/2020 6:19 PM] scalahub#2618
yes why not both üôÇ


[06/29/2020 6:19 PM] Robert K#0722
Plus it's easier to scale disincentives than incentives.

{Reactions}
üëç (2) 

[06/29/2020 6:19 PM] Robert K#0722
Anyways, I need to run, great conversations, and I'm exicted to move forward with all of this.

{Reactions}
üëç (2) 

[06/29/2020 6:52 PM] Robert K#0722
And for anyone who didn't see, Oracle Pools got the Cardano community pretty excited which is great because they'll be more interested to checkout Ergo with the first implementation: https://www.reddit.com/r/cardano/comments/hgdy1d/emurgo_new_research_released_presenting_a_brand/

{Embed}
https://www.reddit.com/r/cardano/comments/hgdy1d/emurgo_new_research_released_presenting_a_brand/
r/cardano - EMURGO: New Research released presenting a brand new mo...
119 votes and 25 comments so far on Reddit

{Reactions}
üëç (2) 

[06/29/2020 8:36 PM] scalahub#2618
> But I do think the slashing when they don't post is important, but we can argue later. (Was an issue recently with Ethereum congestion, and oracles didn't post data until it was cheaper for them to do so, so as not to pay high fees)
Probably good idea to cite the Ethereum example in the pool description to motivate the model


[06/29/2020 9:41 PM] Robert K#0722
Was Ethereum the first to think of stake slashing? I feel like the idea must be older than that.


[06/29/2020 9:43 PM] Robert K#0722
Like I feel there have to be greek/roman references somewhere about having to put up collateral/stake which gets taken if you fail to do your job. Or at least medieval.


[06/29/2020 10:37 PM] scalahub#2618
I meant to cite the congestion issue for why we need to penalize non-posting


[06/30/2020 2:04 PM] scalahub#2618
> I'm essentially explaining what is in the preamble in the spec:
> ```
> An oracle‚Äôs collateral can be slashed during Epoch Preparation if they did not commit a datapoint before the previous epoch had ended. 
> This is done by checking if R8 of the Epoch Preparation data-input does not match the R5 of the Datapoint input box, thereby proving that the
> oracle‚Äôs latest datapoint was posted in an old epoch (meaning the oracle missed the latest epoch). 
> The collateral Ergs are moved into an Pool Deposit box so that the collateral can be collected later on and used to fund future oracle pool
> postings. 
> ```
@Robert K I was referring to these two documents 
https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md
https://github.com/ergoplatform/oracle-core
Could not find details there. Which specs were you referring to? Can you upload it to the above repo?


[06/30/2020 2:08 PM] Robert K#0722
Sure, I provided all the spec like 2 weeks ago, so I assumed when I asked what you guys thought about them, you had already read them.


[06/30/2020 2:08 PM] Robert K#0722
I can add it to the repo nonetheless.


[06/30/2020 2:08 PM] scalahub#2618
yes but hard to keep track of this in channel, so better to keep it in github. üôÇ


[06/30/2020 2:08 PM] Robert K#0722
Yep no worries.


[06/30/2020 2:09 PM] scalahub#2618
and then there is always confusion of which is the latest version


[06/30/2020 2:09 PM] Robert K#0722
And sorry, I couldn't get to creating the graphs you asked for yet, I was tasked to figure out what's the best approach for using signed data with oracle pools, and I wrote a new section the the overview: https://github.com/Emurgo/Emurgo-Research/blob/master/oracles/Oracle-Pools.md

{Embed}
https://github.com/Emurgo/Emurgo-Research/blob/master/oracles/Oracle-Pools.md
Emurgo/Emurgo-Research
Emurgo research made publicly available for the betterment of the open source and blockchain ecosystems. - Emurgo/Emurgo-Research
https://images-ext-1.discordapp.net/external/Wg0j9L8NNKGNDKW0M1atW7IGSPDmoc7C0Qda8-8lmnY/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/36142236


[06/30/2020 2:09 PM] Robert K#0722
Essentially with signed data, we can just have a first-to-post scheme, where whoever posts it first gets rewarded. Since you have a sig, there's no need for consensus.


[06/30/2020 2:10 PM] scalahub#2618
no problem... let me know when you do.


[06/30/2020 2:10 PM] Robert K#0722
More people were interested in oracle pools than expected, and they want responses to everything X is doing or Y says is a good idea üòÖ


[06/30/2020 2:11 PM] scalahub#2618
good writeup.. will go through it as well


[06/30/2020 2:12 PM] Robert K#0722
And they're up: https://github.com/ergoplatform/oracle-core/tree/master/docs


[06/30/2020 2:12 PM] Robert K#0722
The specs go: Basic -> Stake Slashing -> Governance


[06/30/2020 2:13 PM] Robert K#0722
Every proceeding one builds off of the previous


[06/30/2020 2:13 PM] scalahub#2618
awesome! thanks

{Reactions}
üëç (2) 

[06/30/2020 2:14 PM] Robert K#0722
One questions by the way, what were you thinking in regards to a diagram between the stages? With data-inputs and having several oracle boxes it gets a bit complex to consider how to display that visually.


[06/30/2020 2:15 PM] scalahub#2618
I guess we can have two diagrams


[06/30/2020 2:15 PM] Robert K#0722
Do you want a simple mapping of every stage with the actions from each?


[06/30/2020 2:15 PM] scalahub#2618
one will be like a finite state machine showing transaction between different stages


[06/30/2020 2:16 PM] Robert K#0722
Right, but what I'm getting at is that classical FSM diagrams don't fit since it's inherently multiple state machines interacting with some being consumption (inputs) and some being read-only (data-inputs). There's no clear standard for how to draw this stuff.


[06/30/2020 2:16 PM] scalahub#2618
and second will be like a "epoch" sequence diagram more or less like the one that I posted: 
https://discordapp.com/channels/668903786361651200/702853765660934194/725486937871482982

{Reactions}
üëç 

[06/30/2020 2:17 PM] scalahub#2618
ok so for the FSM, the transition between different states that a pool box can be in example `A <----> B ---> C`


[06/30/2020 2:19 PM] scalahub#2618
> Do you want a simple mapping of every stage with the actions from each?
@Robert K anything visual will be useful so if you have something in mind, please go ahead üôÇ


[06/30/2020 2:21 PM] Robert K#0722
Alright, I'll think about what's the best way to draw this out so it's not a big mess of confusing arrows ü§î


[06/30/2020 2:30 PM] scalahub#2618
Lol even pen and paper is fine :)


[06/30/2020 3:06 PM] Robert K#0722
By the way, I noticed an error I made in the specs that probably made it a bit confusing (sorry about that). For bootstrapping the pool, the oracle pool box goes into the Epoch Preparation stage first.


[06/30/2020 3:06 PM] Robert K#0722
I've made the fixes to the specs in the repo

{Reactions}
üëç 

[06/30/2020 3:42 PM] Robert K#0722
Alright, here's a state machine diagram for the basic oracle pool design.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/727534535692255282/basic_oracle_pool_state_machines.jpg


[06/30/2020 3:43 PM] Robert K#0722
Luckily all actions for the basic pool only produce 1 output stage so it's actually not the hardest thing to model.


[06/30/2020 3:43 PM] Robert K#0722
And note, each of the state transitions only show the resulting spends, but does not encode/display the data-inputs used.


[06/30/2020 3:46 PM] Robert K#0722
I think the three core problems we need to solve to visually graph complex multi-stage smart contract protocols for Ergo are:
- How do we cleanly display a single action transitioning into multiple stages at the same time? (multiple ouputs at diff stages)
- How do we cleanly display multiple actions from a single stage without it getting crowded?
- How do we cleanly display data-input relations (if it even makes sense as it might just get messy) as a part of each of said above actions?


[06/30/2020 3:58 PM] scalahub#2618
Thanks.. very helpful! 
For the other comments, I think the best way to model is to always use "boxes" as the primary unit.. And then assume a protocol is made of boxes:
1. box type A (example pool box)
2.box type B (example oracle box)
... 

Each box type is assumed to follow the "self-reproducing" pattern, where the output must be a box with the same script. 
Then we model the transition of each box individually, possibly by using action as the arrow text


[06/30/2020 4:01 PM] scalahub#2618
so we do the state diagram of pool box and oracle box separately


[06/30/2020 4:06 PM] scalahub#2618
and then the state transition diagram for each box will be a fully connected graph


[06/30/2020 4:08 PM] scalahub#2618
it will be more complex when the self-reproducing pattern is broken but in our case fortunately its not


[06/30/2020 4:13 PM] Robert K#0722
Yeah, the thing is that I think the self-reproducing pattern breaks for at least a majority of more complex protocols.


[06/30/2020 4:15 PM] Robert K#0722
Oh, I just noticed I messed up the diagram


[06/30/2020 4:15 PM] Robert K#0722
Sorry, one sec I copied text for the bubbles and forgot to edit the "Pool Deposit" stage

{Reactions}
üëç 

[06/30/2020 4:18 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/727543534865088561/basic_oracle_pool_state_machines.jpg


[06/30/2020 4:18 PM] Robert K#0722
And it's also added to the specs now too: https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md


[06/30/2020 4:20 PM] Robert K#0722
And in regards to self-reproducing being broken, in this design the pool deposit box doesn't self-reproduce (but does get spent in a tx where the "Epoch Preparation" self reproduces), and the actions between the two oracle pool stages recurse into each other, but definitionally that wouldn't be self-reproducing (box with same script).


[06/30/2020 4:44 PM] Robert K#0722
> Thanks.. very helpful! 
> For the other comments, I think the best way to model is to always use "boxes" as the primary unit.. And then assume a protocol is made of boxes:
@scalahub And I don't think boxes are a perfect unit, because there can be an infinite number of oracle boxes or pool deposit boxes for example, and you can't represent that nor would you want to. That's why I used stages, because they represent the different states/contracts that are part of the protocol and the relations between them.


[06/30/2020 5:11 PM] scalahub#2618
yes true but with the NFT, we can think of them as one unit?


[06/30/2020 5:12 PM] scalahub#2618
Also for the other stages, maybe we can still have self-reproducing box with the state stored in one of the registers?


[06/30/2020 5:12 PM] scalahub#2618
(just a general idea)


[06/30/2020 5:14 PM] scalahub#2618
Actually we could maybe not even have self reproducing boxes. Just that as long as each transaction has one relevant output its still easy (we just change box type in the graph node)


[06/30/2020 5:16 PM] scalahub#2618
How long can epoch preparation stage last?


[06/30/2020 5:18 PM] Robert K#0722
Yeah, for any protocol that has one output box for each action it's easy, but that's not always going to be the case. The problem is more so thinking how to display it, rather than trying to define around it.


[06/30/2020 5:18 PM] Robert K#0722
> How long can epoch preparation stage last?
@scalahub This is what we have to decide, in the specs it's written as 4 blocks but as we talked about yesterday, we need to figure out what makes sense for a size.


[06/30/2020 5:19 PM] Robert K#0722
I'm currently creating another graphic with 10 blocks as the default size since you mentioned it could be an issue to have it be small yesterday.


[06/30/2020 5:36 PM] kushti#0978
bigger window could be better actually in regards with filtering out slippages


[06/30/2020 5:37 PM] Robert K#0722
What particularly do you mean about filtering out slippages?


[06/30/2020 5:41 PM] kushti#0978
so if there's a sudden slippage on exchanges (or one exchange, like BitMex) , bigger window will filter out it better ?


[06/30/2020 5:46 PM] Robert K#0722
Ah, yeah for the whole epoch length, indeed.


[06/30/2020 5:47 PM] Robert K#0722
For the epoch preparation period (which we're discussing now with scalahub), no one can submit datapoints during that period and so it's not directly relevant to slippage. It's more for dealing with stake slashing, collecting pool funds from external boxes, and potentially governance.


[06/30/2020 5:47 PM] kushti#0978
right


[06/30/2020 5:48 PM] Robert K#0722
So we'll need to decide on for our first oracle pool collectively are:
- Epoch length
- Epoch preparation length


[06/30/2020 5:49 PM] kushti#0978
isn't epoch length datapoint-dependent ?


[06/30/2020 5:49 PM] kushti#0978
for some data even 1 week is fine maybe


[06/30/2020 5:51 PM] Robert K#0722
Yep


[06/30/2020 5:51 PM] Robert K#0722
I assume we'll want USD/Erg for our first pool?


[06/30/2020 5:52 PM] kushti#0978
yes, then EL = 20 blocks, EPL = 10 blocks ?


[06/30/2020 5:53 PM] kushti#0978
or 30 and 10


[06/30/2020 5:55 PM] Robert K#0722
So I think 20/10 is a reasonable setup, as that means we get a new datapoint every hour (approx.)


[06/30/2020 5:56 PM] Robert K#0722
Or 30/10 works too. Do any of you know what the standard update time is for DeFi oracles?


[06/30/2020 5:57 PM] kushti#0978
need to check, but hourly updates are good for most of applications I guess


[06/30/2020 6:10 PM] Robert K#0722
Alright, here's the epoch timeline for my epoch model.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/727571813470830592/pool_epochs.jpg

{Reactions}
üëç (3) 

[06/30/2020 6:11 PM] Robert K#0722
I put in effort to make both half-decent looking so they can be reused in the specs when we publish them publicly and so that when I record a video it's easier for people to understand visually.


[06/30/2020 6:12 PM] Robert K#0722
So the weakest link as you can see, is that if collection is delayed due to congetsion, it eats into the epoch preparation time.


[06/30/2020 6:13 PM] Robert K#0722
And theoretically, it can eclipse it completely (which means after collecting, the pool box enter the epoch prep stage, but then immediately can be spent into the next epoch the following block). However in most cases that should be alright, because likely there are bigger network-wide problems at hand which are causing datapoints to be submitted late, which means stake slashing isn't really that vital (likely not oracle negligence).


[06/30/2020 6:18 PM] Robert K#0722
But the epoch still has a fixed end block, thus keeping to it's schedule even if the collection is delayed past the epoch prep length. (Unless congestion is so crazy that blocks are maxed out for literally an entire epoch, then the pool would need to wait for things to calm down, and then use the "Create New Epoch" action).


[06/30/2020 6:58 PM] Robert K#0722
I am going to add these two diagrams to the specs now, and reword things so everything is a bit more clear.


[06/30/2020 9:43 PM] Robert K#0722
Alright, so I rewrote a good chunk of the introductions/some of the preambles with new phrasing to match the new epoch diagram I posted. I was slightly overloading the term epoch previously, so that was my bad.

Now we have time split between the "Epoch Preparation" stage and the "Live Epoch" stage. The "Posting Schedule" is the addition of the set expected durations of "Epoch Preparation" + "Live Epoch". As such, the posting schedule is fixed duration as it does not cause delays in one epoch to bleed over into the next epoch thereby pushing it further out/destroying the posting schdule. Thus the posting schedule is static, but the duration of each of the two stages can vary based on blockchain congestion/miners accepting txs.

https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md


[06/30/2020 9:46 PM] Robert K#0722
Also going to rename all the variables/config related stuff to use the "Live Epoch" terminology to keep things 1-to-1 synced naming wise with the code/spec.


[07/01/2020 1:11 PM] kushti#0978
@Robert K https://twitter.com/AlekseiPupyshev/status/1278266992139608064 very good reactions

{Embed}
Aleksei Pupyshev (@AlekseiPupyshev)
https://twitter.com/AlekseiPupyshev/status/1278266992139608064
Let me gently steal a couple of ideas from that beautiful concept to the @ProtocolGravity üëª

more explanations will come soon https://t.co/O88hAzC6J2
Twitter

{Reactions}
üëç (2) 

[07/01/2020 4:25 PM] Robert K#0722
Ah, very cool. Glad to hear it.


[07/06/2020 7:21 PM] Robert K#0722
@scalahub How are the contracts progressing?


[07/07/2020 4:23 AM] scalahub#2618
> @scalahub How are the contracts progressing?
@Robert K  will update by tomorrow


[07/07/2020 2:26 PM] Robert K#0722
Sounds good. No rush as the oracle-core still needs a lot of work, but I'm just curious on a status update.


[07/07/2020 2:27 PM] Robert K#0722
On my end, the oracle-core now has all of the logic in place to register scans, read the boxes acquired from scans, and generate the internal state structs from said boxes.


[07/07/2020 2:27 PM] Robert K#0722
So essentially reading state is implemented, just need to update a few small things with the new scanning update in the node.

{Reactions}
üëç 

[07/07/2020 4:39 PM] scalahub#2618
cool and please keep updating the github repo as and when new updates/bugs (I guess you already do but just saying)


[07/07/2020 4:46 PM] kushti#0978
Checked Rust code yesterday, it looks good!


[07/07/2020 4:52 PM] Robert K#0722
Thanks


[07/07/2020 7:02 PM] Robert K#0722
A cool design pattern for off-chain development when utilizing utxo-set scanning is to have a top-level struct for your multi-stage protocol, with each stage of your protocol being part of said struct.

{Reactions}
üëç (2) 

[07/07/2020 7:02 PM] Robert K#0722
Your stages are then defined as:
```rust
pub struct Stage {
    pub contract_address: String,
    pub scan_id: String,
}
```


[07/07/2020 7:05 PM] Robert K#0722
And if you define funcs on said stage struct for acquiring a single box or a list of boxes from the full node, then you have a clean interface for dealing with multiple stages when writing an action:
```rust
        let live_epoch_box = self.live_epoch_stage.get_box();
        let deposit_box_list = self.pool_deposit_stage.get_boxes()?;
```


[07/07/2020 8:50 PM] kushti#0978
Could be a subject to some micro-framework eventually I guess ?


[07/07/2020 8:57 PM] Robert K#0722
Ah, neat idea. Yeah could definitely be done to streamline development for new devs.


[07/08/2020 3:31 PM] scalahub#2618
@Robert K will be a bit delayed in my update .. maybe later tonight. Was polishing zerojoin paper for submission


[07/08/2020 7:57 PM] Robert K#0722
Got the first action, "Commit Datapoint", finished and the following is the first tx generated by the oracle core automatically from reading a fake state I bootstrapped onto the blockchain: https://explorer.ergoplatform.com/en/transactions/a9ca74bc371c84c70b1cead95bec7ea91aa1cfcdb98b8f91ac747fd9dfd58e70


[07/08/2020 7:58 PM] Robert K#0722
And the tx should technically match the informal spec, including referencing the Live Epoch box id in a register and using it as a data-input. So we're starting to approach basic functionality, which is cool.


[07/08/2020 11:20 PM] kushti#0978
Awesome news!


[07/09/2020 4:31 PM] Robert K#0722
@scalahub Can we just get a quick update on where you are at with the contracts? No need to show anything if it's not ready, just want to have a heads up whether you're working on X or figuring out Y, or so on forth.


[07/09/2020 4:58 PM] kushti#0978
@scalahub yeah could be great!


[07/09/2020 4:58 PM] kushti#0978
@scalahub actually, please provide daily brief updates


[07/09/2020 10:24 PM] scalahub#2618
@Robert K The diagram really helped to understand. The problem earlier was the lack of clarity.


[07/09/2020 10:25 PM] scalahub#2618
I was working on the pool box contract and ran into a few doubts... 
This is referring to https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md

1. Can we change the name of "Collect fund" to "Funding" or something, to avoid overloading the world "Collect datapoint" 
   (for example, in the figure it can confuse which collection the "collect" refers to).

2. In Action: Collect Datapoints -> Action Conditions -> #5 
    "Output #1 R5 is equal to: [Input #1 R5] + [Hardcoded Epoch Length]"
   Should it not be?
    "Output #1 R5 is equal to: [Input #1 R5] + [Hardcoded Epoch Length] + [Epoch preparation duration]"

   Also what is the difference between ("Live Epoch" and "Epoch") and ("Live Epoch Length" and "Epoch Length"). They appear to be interchangable.


[07/09/2020 10:25 PM] scalahub#2618
3. Action: Create New Epoch 
... 
Maximum:
[Current Block Height] + [Live Epoch Length] + [Epoch Preparation Length] + 4
This is to allow a bit of leeway for the tx to be accepted on-chain while also setting an upper limit for when the next Live Epoch begins.
 
Actually this is confusing. What is the Current Block Height. Is it HEIGHT variable? In this case, it will be the heigth at which the tx is mined.
Why do we need 4? Also can we please remove the hard-coded 4 and make it another named variable like [epoch height]?


[07/09/2020 10:26 PM] scalahub#2618
4. Stage: Epoch Preparation 
[... Progression into the proceeding epoch (and thus into the Live Epoch stage once again) 
     is allowed if: ... At least 4 blocks have passed since the Epoch Preparation has started ...]
I am confused here. Should it not check for at least [Epoch preparation duration] blocks or even [last epoch end height + epoch preparation duration]
Or maybe I missed and 4 is serving another purpose. In any case, please use a named variable to make its purpose clear


[07/09/2020 10:26 PM] scalahub#2618
5. The example you gave where oracles didn't post the data point due to high fee in ETH is fine when we need to penalize oracles for not posting data.
But how will this be handled for the "collect datapoint" when the fee is too high and no oracle is posting? Which oracle do we penalize here?
The same issue with the start or create new epoch tx.


[07/09/2020 10:52 PM] scalahub#2618
I have some minor modifications which I'll make in a PR but before that would be good to clarify the above doubts


[07/10/2020 3:08 PM] Robert K#0722
> I was working on the pool box contract and ran into a few doubts... 
> This is referring to https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md
> 
> 1. Can we change the name of "Collect fund" to "Funding" or something, to avoid overloading the world "Collect datapoint" 
>    (for example, in the figure it can confuse which collection the "collect" refers to).
> 
> 2. In Action: Collect Datapoints -> Action Conditions -> #5 
>     "Output #1 R5 is equal to: [Input #1 R5] + [Hardcoded Epoch Length]"
>    Should it not be?
>     "Output #1 R5 is equal to: [Input #1 R5] + [Hardcoded Epoch Length] + [Epoch preparation duration]"
> 
>    Also what is the difference between ("Live Epoch" and "Epoch") and ("Live Epoch Length" and "Epoch Length"). They appear to be interchangable.
@scalahub 1. We can change the names, but I have like 500 different places to edit in the specs & the codebase which is not really an enjoyable experience and no guarantee I'll catch all instances.

2. They are interchangable, and actually prove my point above. I was changing all cases of "epoch" -> "live epoch" to make it clearer, but missed a few.

3. Yes indeed, current block height is precisely the block height that it will be mined. Because an epoch was missed previously, we have to create a new epoch based on the current block height, rather than the end block height of the previous epoch (because who knows how many blocks have gone by). When using the "create new epoch" action, a user has to define the block height of the newly created epoch during tx creation. When creating a new epoch/defining it's end height via said action, we want to limit how far into the future the next epoch will end, and as such in this case limit it to a standard posting schedule plus 4 extra blocks. This also provides 4 extra blocks for the tx to still be validly accepted if it stays in the mempool for a few blocks.


[07/10/2020 3:09 PM] Robert K#0722
So the +4 is a buffer which is required due to the fact that we must decide on the end of the next epoch off-chain during tx creation, and we have no reference to the current height that the tx is accepted. Therefore, it makes no sense to have this be a changable variable, but I am open to increasing this +4 if you feel that is a bit too tight.


[07/10/2020 3:15 PM] Robert K#0722
> 4. Stage: Epoch Preparation 
> [... Progression into the proceeding epoch (and thus into the Live Epoch stage once again) 
>      is allowed if: ... At least 4 blocks have passed since the Epoch Preparation has started ...]
> I am confused here. Should it not check for at least [Epoch preparation duration] blocks or even [last epoch end height + epoch preparation duration]
> Or maybe I missed and 4 is serving another purpose. In any case, please use a named variable to make its purpose clear
@scalahub  Yes, you are correct. It should be the same thing as stated in "start next epoch" `[Finish Block Height Of Upcoming Epoch (R5)] - [Live Epoch Duration] + [Epoch Preparation Duration]` (since you don't have access to previous epoch end height I believe). Sorry, this is a result of me updating the specs and I forgot to change this portion to the new formula. Will edit the specs accordingly, thanks.


[07/10/2020 3:15 PM] scalahub#2618
Ok leave 1 for now.. it's not that critical


[07/10/2020 3:15 PM] scalahub#2618
Can we remove hard-coded 4 and replace with some variable


[07/10/2020 3:16 PM] Robert K#0722
But why use a variable?


[07/10/2020 3:16 PM] scalahub#2618
So I can change in one place only


[07/10/2020 3:16 PM] Robert K#0722
It's a buffer number of blocks that shouldn't matter except during congestion


[07/10/2020 3:16 PM] scalahub#2618
Let's just call it buffer then


[07/10/2020 3:16 PM] Robert K#0722
I think it makes more sense to just agree on a number. But sure.


[07/10/2020 3:17 PM] Robert K#0722
I think now the only place this buffer is used is for the "Create New Epoch" action.


[07/10/2020 3:17 PM] Robert K#0722
It used to be used in a couple of different places, but I believe I fleshed those out.


[07/10/2020 3:17 PM] scalahub#2618
I believe it makes more sense to use a name.. makes it clear the purpose


[07/10/2020 3:18 PM] scalahub#2618
There are a couple of place I saw 4 hard wired


[07/10/2020 3:18 PM] Robert K#0722
Yep, as I said, those shouldn't be there anymore.


[07/10/2020 3:18 PM] scalahub#2618
Cool..


[07/10/2020 3:18 PM] Robert K#0722
I just messed up editing some of the descriptions which is my bad for leaving that in.


[07/10/2020 3:18 PM] scalahub#2618
No issues


[07/10/2020 3:20 PM] scalahub#2618
Let me know once page updated..


[07/10/2020 3:21 PM] Robert K#0722
> > 5. The example you gave where oracles didn't post the data point due to high fee in ETH is fine when we need to penalize oracles for not posting data.
> > But how will this be handled for the "collect datapoint" when the fee is too high and no oracle is posting? Which oracle do we penalize here?
> > The same issue with the start or create new epoch tx.
  Fair point I suppose, there are no disincentives for failing to collect a datapoint or proceeding into the next epoch. The idea is that in those cases you have clear incentives at play to collect (double payout) and to start the next epoch (ability to earn a payout) and so that should be enough as all it requires is a single oracle to act properly to continue the protocol.

In cases when fees are high, it should be up to governance to ensure that the payout is high enough to guarantee that oracles are willing to act properly & post txs with higher fees.


[07/10/2020 3:22 PM] scalahub#2618
Or we follow the prison approach.. if no one collects .. everyone gets punished :)


[07/10/2020 3:22 PM] Robert K#0722
Haha


[07/10/2020 3:23 PM] Robert K#0722
So we'd add in a new action which allows anyone on the blockchain to slash all stakes if the block height gets past a certain point & no one has collected?


[07/10/2020 3:25 PM] Robert K#0722
Though it would be weird if a 3rd party was willing to post higher tx fees in order to slash everyone's stakes (which said 3rd party gets 0 of) rather than one of them collecting.


[07/10/2020 3:26 PM] scalahub#2618
I think maybe no one gets .. the part of the stake just gets locked


[07/10/2020 3:26 PM] scalahub#2618
Automatically so no 3rd party needed


[07/10/2020 3:26 PM] scalahub#2618
Let's leave for later.. but just something to keep in mind


[07/10/2020 3:27 PM] Robert K#0722
Yeah, interesting thought.


[07/10/2020 3:27 PM] Robert K#0722
So, I'll get to fixing the informal specs in a moment.


[07/10/2020 3:28 PM] scalahub#2618
No hurry.


[07/10/2020 3:29 PM] scalahub#2618
Let's have a weekly syncup on Monday or Tuesday


[07/10/2020 3:29 PM] Robert K#0722
From my end I have a couple questions for you:
1. We intend to release the governance oracle pool informal spec this upcoming week for Emurgo Research. Besides the current edits, are you comfortable with the overal design of the protocol & for sure we're going in this direction so we (as Emurgo & Ergo) can publicly say that the spec we release is pretty much what we are going to build.
2. We are estimating that we can get a basic MVP of oracle pools out by the start of August so we can start doing stable coins work as well. Do you think you can get the contracts finished based off of the Basic Oracle Pools spec by the end of the month?


[07/10/2020 3:29 PM] Robert K#0722
> Let's have a weekly syncup on Monday or Tuesday
@scalahub Sure, Tuesday works for me.


[07/10/2020 3:30 PM] scalahub#2618
Yes let's annouce.. but for now we are not doing governance.. right?


[07/10/2020 3:31 PM] Robert K#0722
Yep, just the basic one for now with no stake slashing or governance


[07/10/2020 3:31 PM] scalahub#2618
So unless there is some major bug found . I think the design is pretty robust.. so let's go with it


[07/10/2020 3:31 PM] Robert K#0722
But the logic is already thought of, so better to show off cool features in the spec we release.


[07/10/2020 3:31 PM] Robert K#0722
> So unless there is some major bug found . I think the design is pretty robust.. so let's go with it
@scalahub Awesome, glad to hear üëç


[07/10/2020 3:32 PM] scalahub#2618
Yes sure .. so basically we should do so that adding governance etc is possible on the same box


[07/10/2020 3:33 PM] scalahub#2618
Tuesday is perfect.. so let's do tentative at 1 pm UTC?


[07/10/2020 3:33 PM] Robert K#0722
When we deploy the first oracle pool, we theoretically could add a spending path which allows using multi-sig to spend it into arbitrary address to update it


[07/10/2020 3:33 PM] Robert K#0722
But that's for later to deal with.


[07/10/2020 3:33 PM] Robert K#0722
Can we do 1:30pm or 2pm UTC?


[07/10/2020 3:34 PM] scalahub#2618
Yes actually any time . Why don't you suggest? 2 pm ?


[07/10/2020 3:34 PM] scalahub#2618
Or even later


[07/10/2020 3:34 PM] Robert K#0722
2pm works.


[07/10/2020 3:34 PM] scalahub#2618
Cool


[07/10/2020 3:35 PM] Robert K#0722
Do you have an email for google calendar (if you use it?) I can create an event just so we remember.


[07/10/2020 3:35 PM] scalahub#2618
Is the repo public now?


[07/10/2020 3:35 PM] scalahub#2618
scalahub@gmail.com

{Reactions}
üëç 

[07/10/2020 3:36 PM] Robert K#0722
No, not yet. Releasing things in chunks allows us to get more marketing value out of it so for now just the specs will be released.


[07/10/2020 3:36 PM] Robert K#0722
Later we'll probably make the code public as a seperate marketing push when we're releasing the MVP probably

{Reactions}
üëç (2) 

[07/10/2020 4:03 PM] scalahub#2618
> From my end I have a couple questions for you:
> 1. We intend to release the governance oracle pool informal spec this upcoming week for Emurgo Research. Besides the current edits, are you comfortable with the overal design of the protocol & for sure we're going in this direction so we (as Emurgo & Ergo) can publicly say that the spec we release is pretty much what we are going to build.
> 2. We are estimating that we can get a basic MVP of oracle pools out by the start of August so we can start doing stable coins work as well. Do you think you can get the contracts finished based off of the Basic Oracle Pools spec by the end of the month?
@Robert K For 2, yes that should be ready by then

{Reactions}
üëç (2) 

[07/10/2020 5:02 PM] Robert K#0722
@scalahub Alright, I've made the edits to fix up the spec: https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md


[07/10/2020 5:03 PM] Robert K#0722
I removed all the old useless `+ 4`s that were left behind by mistake, and change the last one to `+ [Buffer]` as you requested and just mentioned in the description that a decent default for buffer is 4


[07/10/2020 5:03 PM] Robert K#0722
And I also clarified some of the preambles/descriptions for each of the stages as I noticed they weren't that great either.


[07/14/2020 3:17 PM] scalahub#2618
@Robert K for today's meeting, please refer to the attached doc. Want to check that the design is captured correctly. Got some questions based on this.


[07/14/2020 3:17 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/732601783678926948/BasicOraclePoolDesignDoc.md


[07/14/2020 4:01 PM] kushti#0978
Is it over the Google Meet? I'm in


[07/14/2020 4:01 PM] Robert K#0722
1 second


[07/14/2020 4:03 PM] kushti#0978
Amitabh ? @scalahub


[07/14/2020 4:03 PM] scalahub#2618
Coming


[07/14/2020 4:12 PM] scalahub#2618
https://www.ergoforum.org/t/a-perpetual-token/205/9

{Embed}
https://www.ergoforum.org/t/a-perpetual-token/205/9
A perpetual token
In multi-stage protocols, one script refers to the script of the next stage (example in script1, we have the statement hash(OUTPUTS(0).propositionBytes) == script2Hash).  But suppose we also want the script2 to refer back to script1, (example we want hash(OUTPUTS(0).propositio...


[07/14/2020 4:46 PM] Robert K#0722
The protocol contract registry idea is actually kind of interesting.

The modularity of each state being it's own contract & each UTXO holding it's own state means that we should be able to have seamless updates theoretically.
- Update contract Y1 -> Y2
- Anyone at contract X will now go to Y2 instead of Y1
- Anyone at contract Y1 or Y2 will go to Z as expected


[07/14/2020 4:48 PM] Robert K#0722
So for example we could update the "Live Epoch" contract and the next time the pool starts a new epoch, they'll be using the new contract rather than the old one in a seamless manner.


[07/14/2020 4:59 PM] Robert K#0722
And I guess this registry would be an example of an 'outsourced computation protocol' from the design patterns doc I wrote (as you asked for examples a month back or so @scalahub  I think this might be the first actually useful usecase)

{Reactions}
üëç 

[07/14/2020 4:59 PM] Robert K#0722
I'll write something on this idea in the coming weeks, other things to do for now.


[07/14/2020 5:28 PM] Robert K#0722
@scalahub Alright, I've updated the specs: https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md

{Reactions}
üëç 

[07/14/2020 5:29 PM] Robert K#0722
I've labled them as "addresses" however I assume we're going to be checking ErgoTree values in reality?


[07/14/2020 5:29 PM] Robert K#0722
(And so for the off-chain code I should post the serialized ErgoTree in R6 of the "Live Epoch" box?)


[07/14/2020 7:43 PM] scalahub#2618
yes but maybe R6 should not have ErgoTree but just 32 byte array (i.e., `Coll[Byte]`, which is hash of some other script represented in serialized ErgoTree)


[07/14/2020 7:44 PM] scalahub#2618
and we check that `blake2b256(OUTPUT(0).propositionBytes) == R6[Coll[Byte]].get`


[07/14/2020 8:24 PM] Robert K#0722
So that makes the storage size lower but increases the computation complexity


[07/14/2020 9:01 PM] scalahub#2618
yes we should do some measurements.. but my guess is that its better to add the computation than the storage


[07/14/2020 9:02 PM] scalahub#2618
but actual would depend on the script size.. lets keep both options open


[07/14/2020 9:32 PM] Robert K#0722
Sounds good.


[07/15/2020 12:11 PM] scalahub#2618
I think its better to call it ErgoTree for now, and later we can replace with hash if needed. Address is technically incorrect as its not a protocol level construct


[07/15/2020 2:50 PM] Robert K#0722
Makes sense, will do.


[07/15/2020 2:51 PM] Robert K#0722
Also, from IOHK one of their employees (Bruno) read through oracle pools and made the following suggestion: 

```
I would suggest requiring (by convention) that each oracle posts, within the live epoch phase, the average value of X during the epoch preparation phase.
```


[07/15/2020 2:52 PM] Robert K#0722
This is a pretty good idea, which means that we could theoretically have longer epoch prep lengths than epoch lengths.


[07/15/2020 2:53 PM] Robert K#0722
And what's nice about this is that this is outside of both the contracts & the oracle-core for adding support for this, so we don't have to change anything in our current plans.


[07/15/2020 2:54 PM] kushti#0978
Right


[07/15/2020 2:54 PM] Robert K#0722
I think first we can just get a single datapoint posted by all oracles for the period, but afterwards we can start to build out extra features like this averaging idea.


[07/15/2020 2:54 PM] kushti#0978
It could be application-specific then?


[07/15/2020 2:54 PM] kushti#0978
For pricing oracles makes perfect sense


[07/15/2020 2:54 PM] Robert K#0722
Yep.


[07/15/2020 2:55 PM] Robert K#0722
This would be in the "adapter" layer (taking ChainLink terminology)


[07/15/2020 2:55 PM] Robert K#0722
So essentially the sourcing/manipulation/averaging of data off-chain is an external component entirely which is application-specific.


[07/15/2020 2:55 PM] Robert K#0722
And we can have various options for these over time developed.


[07/15/2020 2:56 PM] Robert K#0722
All they need to do is target the HTTP/REST api of the oracle-core for reading the current pool state and for submitting datapoints.


[07/15/2020 2:56 PM] Robert K#0722
(Maybe we can fork something from ChainLink even?)


[07/15/2020 3:00 PM] kushti#0978
Offchain logic?


[07/15/2020 3:00 PM] kushti#0978
Why not )


[07/15/2020 3:13 PM] Robert K#0722
Ah, so in ChainLink the nodes do all the logic and the adapters are just for managing HTTP requests and such.


[07/15/2020 3:14 PM] Robert K#0722
In our case the oracle-core just does the pool-related logic & automation, and has a push model rather than a pull model which they use. (nodes use adapters on-demand, while in our case the automation logic/adapters need to push data to the oracle-core)


[07/15/2020 3:15 PM] Robert K#0722
I think outsourcing the data submission to a push-based approach out of the oracle-core makes thing more flexible and easier to work with from the get-go.


[07/15/2020 3:17 PM] Robert K#0722
If we want to we could then build another generalized layer on top which then would do the automation and be customizable/have adapters that plug in to make it easier for non-devs to set up. This is kind of irrelevant to us now, but I guess it's just good to know we could build it out to this if demands requires it eventually.

{Reactions}
üëçüèª 

[07/15/2020 5:34 PM] Robert K#0722
@scalahub For the "Finalize Datapoint Function", how are we going to go about implementing this in order to limit on-chain computation?


[07/15/2020 5:35 PM] Robert K#0722
The naive approach is to:
1. Take average of all datapoints
2. Check margin of error
3. Remove outliers
4. Recalculate average
5. Check margin of error
6. Remove outliers
...


[07/15/2020 5:35 PM] Robert K#0722
And stop the algorithm when no outlier are found/removed.


[07/15/2020 7:46 PM] Robert K#0722
The problem with the above though is that if the datapoints are divergent enough it can make the average outside the margin of error for all datapoints and make it impossible to collect.


[07/15/2020 8:27 PM] Robert K#0722
Maybe we filter out outliers off-chain by not including them as data-inputs?


[07/15/2020 8:28 PM] Robert K#0722
Then when we implement stake-slashing, a collector can only be stake slashed if the datapoint is from the previous epoch and wasn't an outlier (within margin of error).


[07/15/2020 8:29 PM] Robert K#0722
Otherwise there contracts are going to be high complexity.


[07/15/2020 8:57 PM] Robert K#0722
Yeah, I think filtering outliers in the oracle-core is the right approach. We lower tx size, contract complexity, and we can doublecheck margin of error during stake slashing (when we implement that) and so I see no negatives.


[07/15/2020 9:00 PM] Robert K#0722
And even if a bad actor includes outliers as data-inputs, this increases tx size (so more fees required to likely be selected by nodes) and we can still use the above naive algorithm which prevents collecting/finalizing a datapoint with outliers.


[07/15/2020 9:50 PM] Robert K#0722
I guess this means oracle pools are also secure up to 51%, where if more than 51% of oracle are compromised then the averaging will go in their favour if they all collude and provide a outlier datapoint. (Theoretically good-acting nodes can still get their tx accepted first with a high enough fee, but they get stake slashed as a result).


[07/16/2020 8:06 PM] Robert K#0722
@kushti @scalahub I need to define some milestones for oracle pools.

Does this seem realistic/make sense?
```
Oracle Pool Milestones:
- By July 31st: Software (off-chain oracle core/on-chain contact) written.

- August 1-5: Write oracle Erg/USD data connector. 

- August 5-13: Deploying private/test oracle pool to ensure everything works.

- Mid August: Release a public oracle pool for Erg/USD
```


[07/16/2020 10:12 PM] kushti#0978
@scalahub how's it going ?


[07/16/2020 10:27 PM] kushti#0978
Milestones depend on the contracts.


[07/17/2020 4:23 AM] scalahub#2618
If outlier computed offchain would it be verifiable onchain?


[07/17/2020 4:25 AM] scalahub#2618
> @kushti @scalahub I need to define some milestones for oracle pools.
> 
> Does this seem realistic/make sense?
> ```
> Oracle Pool Milestones:
> - By July 31st: Software (off-chain oracle core/on-chain contact) written.
> 
> - August 1-5: Write oracle Erg/USD data connector. 
> 
> - August 5-13: Deploying private/test oracle pool to ensure everything works.
> 
> - Mid August: Release a public oracle pool for Erg/USD
> ```
@Robert K let me revert later today


[07/17/2020 4:25 AM] scalahub#2618
Also how about skipping outliers and do simple average. Perhaps add some check that current rate must be within a certain margin of previous rate for each oracle box


[07/17/2020 4:44 AM] scalahub#2618
> Also, from IOHK one of their employees (Bruno) read through oracle pools and made the following suggestion: 
> 
> ```
> I would suggest requiring (by convention) that each oracle posts, within the live epoch phase, the average value of X during the epoch preparation phase.
> ```
@Robert K Didn't understand this. Do you mean the average of all committed datapoints from the previous live epoch? In which box and what would be the purpose?


[07/17/2020 2:43 PM] Robert K#0722
> If outlier computed offchain would it be verifiable onchain?
@scalahub Yeah. The idea is you compute it off-chain and don't include the outliers in the data-inputs. If you failed to compute properly and ignore someone who isn't an outlier you get stake slashed (once that's implemented).


[07/17/2020 2:45 PM] Robert K#0722
> Also how about skipping outliers and do simple average. Perhaps add some check that current rate must be within a certain margin of previous rate for each oracle box
@scalahub We could do that too, but that does make it worrisome if 1 oracle glitches or something and the price is still within range but way off.


[07/17/2020 2:51 PM] Robert K#0722
> @Robert K Didn't understand this. Do you mean the average of all committed datapoints from the previous live epoch? In which box and what would be the purpose?
@scalahub We can skip implementing this, but it was just a comment for the future. Essentially if we have a 6 hour posting schedule, we could make the epoch prep 5 hours. Every hour in those 5 hours the oracles source a datapoint. Then at the end of the epoch prep, they average those 5 datatpoints (1 from each hour) and post that datapoint on-chain.


[07/17/2020 2:59 PM] Robert K#0722
> @Robert K let me revert later today
@scalahub And did you mean you'll get back to me by the end of the day here?


[07/17/2020 3:44 PM] scalahub#2618
Yes


[07/17/2020 3:48 PM] scalahub#2618
Contracts should be done by 31. Erg/USD data connector.. is it about getting rate offchain and committing on chain?


[07/17/2020 4:01 PM] Robert K#0722
Alright great to hear.


[07/17/2020 4:02 PM] Robert K#0722
The Erg/USD connector is about getting the rate and then submitting it to the oracle core via a REST API when it is a live epoch.


[07/17/2020 4:03 PM] Robert K#0722
The oracle core provides endpoints to check if it is a live epoch/if the connector has submit a datapoint in the current epoch.


[07/17/2020 4:03 PM] Robert K#0722
The oracle core takes the datapoint from the connector and creates the tx/submit it (and automatically submits other action txs like starting next epoch without connector/user input)


[07/17/2020 4:05 PM] Robert K#0722
I can end up writing the connector in Rust in a couple days or so as well as that should be pretty simple logic.


[07/17/2020 5:01 PM] Robert K#0722
And as we enter into August, we can start to plan a public marketing campaign around the release of the first oracle pool


[07/17/2020 5:02 PM] Robert K#0722
Try to make it a bit of a big deal as the first palpable thing out of the Emurgo <-> Ergo parternship and get some attention.

{Reactions}
üíØ (2) 

[07/17/2020 7:09 PM] Robert K#0722
@scalahub Actually I think you're right for the very first implementation, let's just average out all of the datapoints with no outlier checking.


[07/17/2020 7:10 PM] Robert K#0722
We need to get something that works running, and improving the finalization/averaging/outlier equations can be added later on.


[07/19/2020 10:24 PM] scalahub#2618
@Robert K @kushti Below are some optimizations and improvements to the pool. let me know what you think
1. Don't hardcode oracle keys in contract but use oracle token id to enforce spender. The public key is determined from the data input


[07/19/2020 10:26 PM] scalahub#2618
2. Reward depends on number of data inputs, so instead of `(number of oracles + 1 ) * reward`, we do `(number of oracles) * dataReward` for data (1 to each oracle) and additionally `(number of oracles) * collectionReward` for collection to the collector


[07/19/2020 10:27 PM] scalahub#2618
This way, the collector is directly incentivized to collect more without additional logic


[07/19/2020 10:30 PM] scalahub#2618
The collection reward per data point can be low, so that for 75% it can be equal to 1 oracle reward.. That way it is close to earlier logic of `number or oracles + 1`


[07/19/2020 10:37 PM] scalahub#2618
Also why do we need the collectors to be the oracles? Is it to enable some sort of dispute/penalty process for wrong collection?


[07/20/2020 2:46 PM] Robert K#0722
> Also why do we need the collectors to be the oracles? Is it to enable some sort of dispute/penalty process for wrong collection?
@scalahub Yes. For stake slashing one of the oracles (who have collateral submitted) must do the collection. We theoretically could outsource this to a 2nd class who also supply collateral eventually, but that is a lot more complicated. Otherwise if anyone could do it they can just damage the oracle pool by collecting badly/ignoring people.


[07/20/2020 2:50 PM] Robert K#0722
1. I thought about this a bit before, however I didn't think it was possible. Could you clarify? Anyone can use a data-input, right? So how does enforcing via data-input token id help to prevent outsiders? The only way I could see this working is if we add new spending paths for `Datapoint` boxes so the owner can prove it is him/her.


[07/20/2020 2:51 PM] Robert K#0722
This as a consequence would make the `Datapoint` contract a bit more complicated together with all of the actions because they require spending the `Datapoint` box in order to prove a valid participant is doing so.


[07/20/2020 2:52 PM] Robert K#0722
I'd avoid this for now, unless I'm understanding you wrong and there is a good/clean solution.


[07/20/2020 2:55 PM] scalahub#2618
for 1. we will use context vars


[07/20/2020 2:55 PM] scalahub#2618
so we will have something like...


[07/20/2020 2:56 PM] Robert K#0722
> 2. Sure, we can do this.


[07/20/2020 2:56 PM] scalahub#2618
``` val spenderIndex = getVar(0)[Int].get
  val grpElem = oracleBoxes(spenderIndex).R4[GroupElement].get

  val oraclePubKey = proveDlog(grpElem)```


[07/20/2020 2:57 PM] scalahub#2618
and then we add `oraclePubKey` to the spending condition


[07/20/2020 2:57 PM] scalahub#2618
and oracleBoxes is defined as:


[07/20/2020 2:57 PM] scalahub#2618
```  val oracleBoxes = CONTEXT.dataInputs.filter{(b:Box) =>
    b.R5[Coll[Byte]].get == SELF.id &&
    b.tokens(0)._1 == oracleTokenId
  }
```


[07/20/2020 3:03 PM] Robert K#0722
Sorry, so this would be implemented in the `Live Epoch` contract for datapoint collection?


[07/20/2020 3:03 PM] Robert K#0722
What is the context var `spenderIndex` exactly?


[07/20/2020 3:04 PM] Robert K#0722
I don't quite understand how this would prevent someone else from collecting using your box as a data-input?


[07/20/2020 3:23 PM] Robert K#0722
And by the way Nico will be joining us for our weekly oracle pools meeting tomorrow. He just wanted to sit in for a bit to see how progress is going.


[07/20/2020 3:27 PM] mx#5165
please let me know if there is need to grant additional role to someone, this invite link should be still active discordapp.com/invite/gYrVrjS

{Reactions}
üëå (2) 

[07/20/2020 3:30 PM] scalahub#2618
Yes this is live epoch box.. let me get the full contract out before discussing this


[07/20/2020 3:31 PM] scalahub#2618
So the spender will supply the index while spending..


[07/20/2020 3:31 PM] scalahub#2618
It will prevent because of proveDlog because no one else can do that


[07/20/2020 3:32 PM] Robert K#0722
I'm pretty naive on how proveDlog works.


[07/20/2020 3:32 PM] Robert K#0722
Does it check the signature of the current tx?


[07/20/2020 3:32 PM] scalahub#2618
No worries. let me send the Full contract


[07/20/2020 3:33 PM] scalahub#2618
Yes proveDlog is essentially requirment of signature


[07/20/2020 3:34 PM] Robert K#0722
Do we need a spenderIndex then? What is it's usecase?


[07/20/2020 3:35 PM] Robert K#0722
Can't we specify that dataInput[0] is our oracle's box in the contract, and then off-chain just be forced to include that as the first dataInput?


[07/20/2020 3:43 PM] Robert K#0722
This does seem look a good improvement, however for the time being I would still advise we hardcode the addresses. To keep things simple.


[07/20/2020 3:45 PM] Robert K#0722
This can definitely be one of the first additions we make in the future, but it's not going to add any benefits for our initial release.


[07/20/2020 3:46 PM] Robert K#0722
I think (maybe in the oracle core repo?) we can create a doc with a bunch of "Improvement To-Dos" and include stuff like this, the outsourced registry contract, etc.


[07/20/2020 4:27 PM] scalahub#2618
Yes we could specify dataInput(0) as our box as well, which is actually a better idea than giving index.. good point.


[07/20/2020 4:27 PM] scalahub#2618
basic contract here
https://gist.github.com/scalahub/8da11037aa3600d19de4d1e278c79d30

{Embed}
https://gist.github.com/scalahub/8da11037aa3600d19de4d1e278c79d30
Oracle Pool Contact
Oracle Pool Contact. GitHub Gist: instantly share code, notes, and snippets.
https://images-ext-1.discordapp.net/external/v2ToTBFZ7zHPk2sQlBt80EaH2hhwBfD3Zdf1J_uxMxs/https/github.githubassets.com/images/modules/gists/gist-og-image.png


[07/20/2020 4:27 PM] scalahub#2618
Hmm using first data input is better than hardcoding public keys (which are actually going to be proveDlogs anyway)


[07/20/2020 4:28 PM] scalahub#2618
makes contract much shorter and we don't gain anything .. lets discuss in tomorrows meeting


[07/20/2020 4:29 PM] scalahub#2618
Let @kushti also give his feedback


[07/20/2020 4:35 PM] Robert K#0722
I'm fine with improving it, it's just that it means I have to rewrite all 3 specs (which I'm about to release one publicly) then change some of the code I already have written as well.


[07/20/2020 4:36 PM] Robert K#0722
The constant changes make everything kind of annoying to adapt continously. (Which is why I was hoping we can decide on specifics in the spec phase, and not the development phase)


[07/20/2020 4:37 PM] Robert K#0722
But yes, we can discuss tomorrow.


[07/20/2020 5:11 PM] scalahub#2618
hmm no need to change all the specs.. Lets just change the basic spec.. And I think this only affects the bootstrap step


[07/20/2020 5:12 PM] Robert K#0722
Hmm? As mentioned we are trying to release a spec publicly for Emurgo Research.


[07/20/2020 5:12 PM] Robert K#0722
So we need to keep them all up to date.


[07/20/2020 5:12 PM] Robert K#0722
And how would it only affect the bootstrap step? Your changing the logic of how everything works.


[07/20/2020 5:12 PM] scalahub#2618
ok then lets discuss tomorrows meeting..


[07/20/2020 5:13 PM] Robert K#0722
Every tx requires a data-input now.


[07/20/2020 5:13 PM] scalahub#2618
how am I changing the logic? The only change is that instead of hardwiring the keys Im readign from oracle


[07/20/2020 5:13 PM] Robert K#0722
The checks need to be added to every action spending path.


[07/20/2020 5:13 PM] Robert K#0722
It's simple to implement in the contracts, but specifying it is an annoying change.


[07/20/2020 5:14 PM] scalahub#2618
ok but lets still discuss the contract size


[07/20/2020 5:14 PM] scalahub#2618
its going to be huge to hardwire all the pub keys


[07/20/2020 5:14 PM] Robert K#0722
I agree, we can change this.


[07/20/2020 5:15 PM] Robert K#0722
Just I would prefer if we can think about this stuff 2 weeks prior.


[07/20/2020 5:15 PM] scalahub#2618
its simple to specify the spec but when the actual contracts are being written, we should try to make it optimal


[07/20/2020 5:15 PM] scalahub#2618
after all this is going to be a major announcement üôÇ


[07/20/2020 5:15 PM] Robert K#0722
One other thing to note:


[07/20/2020 5:15 PM] Robert K#0722
With change #2 of how payouts are calculated, we need to keep track of # of oracles.


[07/20/2020 5:15 PM] scalahub#2618
this was the only thing that was in my mind.


[07/20/2020 5:15 PM] scalahub#2618
actually #2 maybe we should disucss a bit


[07/20/2020 5:16 PM] scalahub#2618
Im not sure if its the best approac


[07/20/2020 5:16 PM] Robert K#0722
The way I had it originally I divided, not multiplied. And so you had X amount for the posting price, and whoever posts gets a portion of that.


[07/20/2020 5:16 PM] scalahub#2618
*approach


[07/20/2020 5:16 PM] Robert K#0722
With multiplying we need to know how many oracles there are in order to know if an oracle pool is funded


[07/20/2020 5:16 PM] scalahub#2618
the only reason is to incentivize people to collect more boxes


[07/20/2020 5:16 PM] Robert K#0722
To allow moving to "Live Epoch" stage


[07/20/2020 5:17 PM] scalahub#2618
yes or maybe we could figure out some fixed value per oracle independent of the number of oracles?


[07/20/2020 5:18 PM] scalahub#2618
its much simpler to implement the earlier logic you wrote.. so I'm in two minds on this one


[07/20/2020 5:18 PM] scalahub#2618
how many oracles do you expect


[07/20/2020 5:19 PM] Robert K#0722
3-5?


[07/20/2020 5:19 PM] scalahub#2618
Let me check the other spending paths and see if hardwiring oracles makes it simpler overall.. will do by tonight


[07/20/2020 5:20 PM] scalahub#2618
ok I was thinkining maybe max 10 is a decent number of oracles


[07/20/2020 5:21 PM] Robert K#0722
Alright sounds good. We can talk more tomorrow during the call.


[07/20/2020 5:21 PM] Robert K#0722
Main two topics:
1. Not hard-wiring oracles.
2. Payouts.


[07/20/2020 5:21 PM] scalahub#2618
ok I only considered the epoch box in the modification.. maybe when all the other actions are considered, it may be simpler to hardwire


[07/20/2020 5:23 PM] scalahub#2618
yes tomorrow agenda sounds good.. also we could discuss the mod suggested by Bruno of IOHK


[07/20/2020 5:23 PM] Robert K#0722
Ah yeah sure. We can leave that as a future improvement to implement, but we can discuss it.


[07/20/2020 5:23 PM] scalahub#2618
cool but still I would like to understand it üôÇ


[07/20/2020 5:24 PM] Robert K#0722
üëå


[07/20/2020 5:28 PM] scalahub#2618
ok and for the not hardwiring .. i'm still not 100% sure until I look at the other paths..  so keep that option open


[07/20/2020 5:30 PM] Robert K#0722
Alright, sounds good.


[07/20/2020 5:31 PM] scalahub#2618
if oracles are five or less than hardwiring is better


[07/20/2020 5:32 PM] Robert K#0722
Ah, then for our initial implementation hardwiring sounds like the way to go.


[07/20/2020 5:32 PM] scalahub#2618
lol yes


[07/20/2020 5:32 PM] Robert K#0722
I imagine we'll have like 4 or 5 oracles max.


[07/20/2020 5:32 PM] scalahub#2618
lets also mention that


[07/20/2020 5:32 PM] Robert K#0722
Hmm, I think we need to create some more docs in the repo for stuff like this.


[07/20/2020 5:33 PM] scalahub#2618
yes sure I think lots of parameters need to be decided.. like max oracle, reward, epoch length


[07/20/2020 5:33 PM] scalahub#2618
maybe a separate document with these implementation details


[07/20/2020 5:33 PM] scalahub#2618
maybe better to use the idea of registry for boxes to also store oracle ids

{Reactions}
ü§î 

[07/20/2020 5:34 PM] Robert K#0722
Hmm, yeah that could work as well.


[07/20/2020 5:35 PM] Robert K#0722
Maybe we should split this stuff up into "problems" that are part of Oracle pools & "solutions"?


[07/20/2020 5:35 PM] scalahub#2618
the only thing is that we have a token for each oracle (the same token)


[07/20/2020 5:35 PM] scalahub#2618
so would be nice if we could use token Id for the checks rather than other things


[07/20/2020 5:35 PM] Robert K#0722
Yeah.


[07/20/2020 5:35 PM] scalahub#2618
so lets keep that in mind


[07/20/2020 5:36 PM] kushti#0978
@scalahub thanks! will check the scripts!


[07/20/2020 5:36 PM] Robert K#0722
So how about docs for:
1. Initial oracle implementation parameters.
2. Oracle pools extensions/possible design patterns.


[07/20/2020 5:36 PM] scalahub#2618
@kushti this is only one box.. will be uploading others too


[07/20/2020 5:37 PM] scalahub#2618
btw isn't oracle pool a well known idea?


[07/20/2020 5:37 PM] scalahub#2618
used in other places?


[07/20/2020 5:37 PM] Robert K#0722
They have accumulation contracts typically, but not really as entities on their own.


[07/20/2020 5:38 PM] Robert K#0722
And lack governance/stake slashing.


[07/20/2020 5:38 PM] Robert K#0722
It's more like individual oracles + a fold on top.


[07/20/2020 5:38 PM] scalahub#2618
ok I see so maybe a taxonomy on this will be good article at some point


[07/20/2020 5:39 PM] kushti#0978
@scalahub you can listen this in background https://www.youtube.com/watch?v=lpPfqj88hho

{Embed}
ETHDenver
https://www.youtube.com/watch?v=lpPfqj88hho
MakerDAO: Deconstructing the Oracle Stack ‚Äì Niklas Kunkel
This talk is from ETHDenver, the world‚Äôs largest Web3 BUIDLathon and Community Gathering. ETHDenver‚Äôs content is crypto and blockchain focused. 

Subscribe to our channel to learn more + connect on Twitter: https://twitter.com/EthereumDenver. 

Speaker: Nik Kunkel of Maker DAO...
https://images-ext-2.discordapp.net/external/1LOsIfScvC5JnceWxNbbNwg7pAgjbC15Iw3bOhmueio/https/i.ytimg.com/vi/lpPfqj88hho/maxresdefault.jpg


[07/20/2020 5:40 PM] kushti#0978
so yeah, just simple aggregation on-chain in case of Maker


[07/20/2020 5:41 PM] scalahub#2618
so pool is essentially individual oracles + fold on top, but done only once instead of each time


[07/20/2020 5:43 PM] Robert K#0722
pool also has strict timing via epochs.


[07/20/2020 5:43 PM] scalahub#2618
and one more point, for more reliable rates, more oracles are better, so hopefully we should not cap the number of oracles but allow as many as needed

{Reactions}
üëç 

[07/20/2020 5:43 PM] Robert K#0722
Typically oracles just post whenever they can and the aggregator averages based on the hope everyone posted on time.


[07/20/2020 5:43 PM] scalahub#2618
I think rate of 10 or 20 oracles is more satisfying üôÇ


[07/20/2020 5:44 PM] Robert K#0722
For sure, we also need to find people who we trust and can run them though to make that a reality üòâ


[07/20/2020 5:44 PM] kushti#0978
heh, exactly


[07/20/2020 5:46 PM] scalahub#2618
anway will update before meeting tomorrow..


[07/20/2020 5:46 PM] Robert K#0722
But yeah, I already added the logic to use your #2 payout scheme to the specs in an alternate branch (https://github.com/ergoplatform/oracle-core/blob/alternate-oracle-payout/docs/Basic-Oracle-Pool-Spec.md) and we can discuss tomorrow if it makes sense/do we want to use it, and as we mentioned, if yes we have to figure out how to verify that the pool is funded.


[07/20/2020 5:46 PM] scalahub#2618
watching the video


[07/20/2020 5:48 PM] scalahub#2618
If you are working on alternate, then why not combine both (per oracle additional collection reward) plus original (fixed extra reward to collector)


[07/20/2020 5:49 PM] Robert K#0722
Sure, but that still leaves us with being unable to verify if the pool is funded.


[07/20/2020 5:49 PM] Robert K#0722
As long as you make the payout dynamic based on number of collected datainputs, we can't know beforehand how many that will be unless we do something like hardcoding a max # of oracles to the contract.


[07/20/2020 5:49 PM] scalahub#2618
you mean if fund is not collected?


[07/20/2020 5:50 PM] Robert K#0722
If we're in `Epoch Preperation` stage the contract needs to be able to check that the oracle pool is funded in order to allow progression into next/new live epoch.


[07/20/2020 5:50 PM] Robert K#0722
Otherwise the protocol breaks a bit.


[07/20/2020 5:50 PM] scalahub#2618
the per oracle reward can be tiny so it will just be additional incentive but will be small compared to oracle rewards


[07/20/2020 5:51 PM] scalahub#2618
and yes the funding thing we need to check


[07/20/2020 5:51 PM] Robert K#0722
So how do we check if it's dynamic/open ended?


[07/20/2020 5:52 PM] scalahub#2618
we don't check.. so if there are enough rewards the box can be collected


[07/20/2020 5:52 PM] scalahub#2618
as long as token is used, we assume its ok..


[07/20/2020 5:52 PM] Robert K#0722
The protocol breaks if you don't check though. If you wait until you get to the "Live Epoch" stage to check then you can get into a state where the protocol can't continue.


[07/20/2020 5:53 PM] Robert K#0722
If the protocol is underfunded.


[07/20/2020 5:53 PM] scalahub#2618
hmmm yes let me think


[07/20/2020 5:53 PM] Robert K#0722
That was the whole point of having a posting price and dividing.


[07/20/2020 5:54 PM] scalahub#2618
so there is one price and that is divided among the number of oracles?


[07/20/2020 5:54 PM] scalahub#2618
I think its not really about posting price.. its actually about capping the number of oracles


[07/20/2020 5:54 PM] scalahub#2618
because without the cap, the problem is there anyway


[07/20/2020 5:56 PM] scalahub#2618
so we already have fixed per posting reward... we just consider it as two parts one to oracle and other to collector


[07/20/2020 5:57 PM] Robert K#0722
So you calculate the collector first, substract that from the fixed reward, and then the rest goes to oracles?


[07/20/2020 5:57 PM] Robert K#0722
I mean we can talk about this tomorrow, but as with everything, I have leaned towards the simplest solution for all of these things so we don't get into more minute details like this for hours for the first implementation üôÇ


[07/20/2020 5:58 PM] scalahub#2618
yes tomorrow is better


[07/20/2020 5:58 PM] scalahub#2618
üôÇ


[07/20/2020 5:58 PM] scalahub#2618
and this is for future enhancements so no harm in throwing in ideas

{Reactions}
üëç (2) 

[07/20/2020 7:52 PM] scalahub#2618
@kushti @Robert K Here is the initial iteration of the pool box contracts (Live epoch + epoch preparation)
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
If possible, please have a look before tomorrow's call. Meantime I'll work on the oracle and funding box scripts

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Reactions}
üíØ (2) 

[07/20/2020 8:04 PM] scalahub#2618
The above version does not implement any of the enhancements I suggested.. so its the exact copy of the basic spec


[07/20/2020 8:04 PM] Robert K#0722
Perfect, will take a look.


[07/20/2020 8:10 PM] Robert K#0722
Ah, and what could be cool is if we could end up having both the contract compilation & the off-chain oracle core both use the `oracle-config.yaml` for reading relevant parameters like live epoch length
https://github.com/ergoplatform/oracle-core/blob/master/oracle-config.yaml


[07/20/2020 8:11 PM] scalahub#2618
sure will look at it


[07/20/2020 8:11 PM] Robert K#0722
If we could somehow combine the codebases together into a single repo at the end with a streamlined process so that anyone can set up a config file and get everything compiled neatly, that could be a nice goal to aim for for the future (probably too much to ask for right now).


[07/20/2020 8:12 PM] scalahub#2618
yes that is the idea.. this is just a testbed


[07/20/2020 8:12 PM] scalahub#2618
so right now I want to finalize the scripts then we can port it to oracle-core on ergo github maybe?

{Reactions}
üëç 

[07/20/2020 8:13 PM] scalahub#2618
plan is to finish off the two remaining contracts by tomorrow and then start adding them to oracle-core.. Its much easier to test on Kiosk though


[07/20/2020 8:14 PM] scalahub#2618
hence using it for development


[07/20/2020 8:15 PM] Robert K#0722
Makes sense.


[07/20/2020 8:15 PM] scalahub#2618
would I need to know rust?


[07/20/2020 9:12 PM] Robert K#0722
For using the config file, no it's just straight yaml.


[07/20/2020 9:14 PM] Robert K#0722
Essentially for a streamlined process:
1. someone would fill out the config file for the oracle pool parameters
2. You would read the parameters in scala and compile the contracts.
3. Fill out the rest of the config file with the contract addresses.
4. Run the oracle core.


[07/20/2020 9:14 PM] Robert K#0722
And we could likely streamline that with some sort of compile script.


[07/20/2020 10:05 PM] Robert K#0722
Currently in your live epoch contract you have
```              OUTPUTS(t._1).value >= $oracleReward)
```

That's just hardcoded, but that should be a division of ` [Reward]/[# Of DataInputs]` as we mentioned today so we can verify that a pool is funded.


[07/20/2020 10:07 PM] Robert K#0722
Ah, I see you have ```       |  val enoughFunds = SELF.value >= (${oraclePubKeys.length} + 1) * $oracleReward + $minPoolBoxValue```


[07/20/2020 10:09 PM] Robert K#0722
So actually one question then, should the payout always be the same to oracles like you are doing, or should oracles be paid out more if another oracle misses posting? (So should we use division to divide up the posting price, or should we use a single price and calculate the the limit based on number of oracles)


[07/20/2020 10:09 PM] Robert K#0722
(For tomorrow's chat)


[07/20/2020 10:11 PM] Robert K#0722
The contracts look good otherwise from my quick lookover


[07/21/2020 11:49 AM] scalahub#2618
I think the approach you suggest will encourage oracles to miss data points


[07/21/2020 11:49 AM] scalahub#2618
so better to keep fixed reward for each data point


[07/21/2020 11:50 AM] scalahub#2618
In the pool deposit box we have:
```Hard coded values:
ID of the NFT/singleton token of the oracle pool
Address of the Oracle Pool contract```


[07/21/2020 11:51 AM] scalahub#2618
IS it necessary to encode the address? would the check of token not be enough?


[07/21/2020 11:52 AM] scalahub#2618
One consequence is that the pool box can be spent in a '"collect-datapoint" transaction, but that should not be an issue


[07/21/2020 12:00 PM] scalahub#2618
(btw, this is also for future enhancements)


[07/21/2020 12:13 PM] scalahub#2618
Added oracle and funding contracts as well
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
@Robert K @kushti

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Reactions}
üëç 

[07/21/2020 2:20 PM] Robert K#0722
> One consequence is that the pool box can be spent in a '"collect-datapoint" transaction, but that should not be an issue
@scalahub The contract is so trivial/low execution that I would prefer to add the address to the contract for increased security. Sure, I agree right now it's probably safe, but leaving open ended spending paths is just asking for weird edge cases to pop up once things like governance/stake slashing/... get added eventually imo.


[07/21/2020 2:21 PM] Robert K#0722
It's just a bit nicer to close off the potential chance of opening up the set of potential states based on 3 orders of new changes to the protocol that may eventually happen, and we will undoubtedly forget to look at the funding contract at that point as it's very simple/considered finished.


[07/21/2020 2:22 PM] Robert K#0722
> so better to keep fixed reward for each data point
@scalahub Sure, it just means we have to explicitly define # of oracles in the oracle core as well now (so added to the config).


[07/21/2020 2:28 PM] Robert K#0722
> Added oracle and funding contracts as well
> https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
> @Robert K @kushti
@scalahub Looks good. These contracts end up being pretty clean to read since all the logic is seperated into their own contracts and the spending paths aren't as long as I expected.

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/21/2020 2:56 PM] Robert K#0722
Alright, I've updated the specs to use your static payout idea, and I'll add it to the oracle core shortly.


[07/21/2020 3:59 PM] kushti#0978
where will we have the call ?


[07/21/2020 4:06 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/735150613092106260/scripts_binary.txt


[07/21/2020 4:06 PM] scalahub#2618
uploaded scripts in the current form to see how large they are


[07/21/2020 4:34 PM] Robert K#0722
@scalahub One of my addresses to hard-code for testing:
`9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r`


[07/21/2020 4:35 PM] Robert K#0722
> uploaded scripts in the current form to see how large they are
@scalahub Ah yeah, interesting to see how large the funding script is.


[07/21/2020 4:50 PM] scalahub#2618
just pushed another commit to correctly compute the sizes


[07/21/2020 4:50 PM] scalahub#2618
here is the result:
```Active Epoch script length     : 446
Active Epoch script complexity : 53575
Prep Epoch script length       : 709
Prep Epoch script complexity   : 53225
Oracle script length           : 78
Oracle script complexity       : 13611
Funding script length          : 837
Funding script complexity      : 17653```

{Reactions}
üëç 

[07/21/2020 4:50 PM] scalahub#2618
length is in bytes


[07/21/2020 4:51 PM] kushti#0978
@scalahub what it complexity? cost or complexity ?


[07/21/2020 4:52 PM] scalahub#2618
@kushti complexity is computed using `ErgoTree.complexity`


[07/21/2020 4:52 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/4bd27285255649c129e148f3026a5e45c26dbacd/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L188

{Embed}
https://github.com/scalahub/Kiosk/blob/4bd27285255649c129e148f3026a5e45c26dbacd/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/21/2020 4:52 PM] scalahub#2618
is this right?


[07/21/2020 4:52 PM] kushti#0978
I see


[07/21/2020 4:52 PM] kushti#0978
it's not cost then


[07/21/2020 4:52 PM] kushti#0978
53.5K is good


[07/21/2020 4:53 PM] kushti#0978
Complexity is a property of an execution graph, too complex transactions are not being propagated via the network (still, can be included into blocks)


[07/21/2020 4:54 PM] scalahub#2618
> @scalahub One of my addresses to hard-code for testing:
> `9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r`
@Robert K cool.. what about 2 or 3 more üôÇ


[07/21/2020 4:54 PM] scalahub#2618
I'll use one of mine too


[07/21/2020 4:54 PM] scalahub#2618
@kushti how to calculate cost?


[07/21/2020 4:56 PM] Robert K#0722
@scalahub 
```
- 9iHunbPfq8ARpiJXc4vjmwvseeHWjmgeC797vSrdHSLNKxvKsYo
- 9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF
- 9ebeQK9oJpDpTZSfqk6wdaHt3x1aUUba9S8dMufTpyQQYvE2XKU
```

{Reactions}
üëç 

[07/21/2020 4:58 PM] Robert K#0722
I'm interested as well what the formula is for calculating cost from complexity.


[07/21/2020 5:02 PM] kushti#0978
It depends on context in general case


[07/21/2020 5:02 PM] kushti#0978
So cost can be provided only when context is known


[07/21/2020 5:14 PM] Robert K#0722
Hmm, I think I just realized an edge case.


[07/21/2020 5:14 PM] Robert K#0722
If we're in the live epoch and no one posts a datapoint before the end block height, then the protocol might break.


[07/21/2020 5:15 PM] Robert K#0722
Since I think they should be prevented from posting after the end block height (or is that check not implemented? I need to take a look at the spec again), and I don't think we can collect if there are 0 datapoint boxes.


[07/21/2020 5:26 PM] Robert K#0722
Hmm, @scalahub your Datapoint (or you dubbed "oracle") contract seems to be unfinished.


[07/21/2020 5:27 PM] Robert K#0722
It doesn't reference the Live Epoch as a data-input and acquire it's box id.


[07/21/2020 5:27 PM] scalahub#2618
Hmm yes. I missed that.. good catch


[07/21/2020 5:28 PM] scalahub#2618
Will update and let you know

{Reactions}
üëç 

[07/21/2020 5:29 PM] scalahub#2618
About the edge case when no data point. Maybe someone can post a data point later?


[07/21/2020 5:30 PM] scalahub#2618
Or is that not possible?


[07/21/2020 5:30 PM] Robert K#0722
Nevermind, the logic in the spec says that as long as a "Live Epoch" box exists, then someone can post a datapoint.


[07/21/2020 5:30 PM] Robert K#0722
Which is why we need the data-input to be used/checked.


[07/21/2020 5:30 PM] scalahub#2618
Yes


[07/21/2020 5:30 PM] Robert K#0722
(Sorry, there's so many changes overtime that I forget some of the choices made)


[07/21/2020 5:31 PM] Robert K#0722
I was worried we limited datapoint posting by the end height dictated in the Live Epoch box, but that is not the case. Which is good.


[07/21/2020 5:31 PM] Robert K#0722
So as soon as a collection happens, no datapoints can be posted, which makes sense.


[07/21/2020 6:03 PM] scalahub#2618
> It doesn't reference the Live Epoch as a data-input and acquire it's box id.
@Robert K Fixed and pushed. please review again


[07/21/2020 6:07 PM] Robert K#0722
Looks good. This will add more length to the script address as well, so this will also be something to optimize in the near future.


[07/21/2020 6:20 PM] Robert K#0722
@kushti Chained txs is implemented right? So could I theoretically collect funds & start a new epoch (while in the Epoch Prep period) in the same block?


[07/21/2020 6:20 PM] Robert K#0722
And how would I go about implementing that in terms of api calls to a node.


[07/21/2020 6:47 PM] scalahub#2618
> Looks good. This will add more length to the script address as well, so this will also be something to optimize in the near future.
@Robert K yup, and here are the updated values
```Live Epoch script length       : 446
Live Epoch script complexity   : 53575
Epoch prep script length       : 709
Epoch prep script complexity   : 53225
Oracle script length           : 584
Oracle script complexity       : 20031
Funding script length          : 837
Funding script complexity      : 17653
```

{Reactions}
üëç 

[07/21/2020 7:11 PM] Robert K#0722
(Would you mind changing the names of the contacts to "Datapoint" and "Pool Deposit" when we merge them into the oracle-core repo btw? Would be good to have them all be equivilent throughout the implementations/spec)


[07/21/2020 7:16 PM] scalahub#2618
yes sure


[07/21/2020 7:17 PM] scalahub#2618
will do in next push


[07/21/2020 8:39 PM] kushti#0978
> @kushti Chained txs is implemented right? So could I theoretically collect funds & start a new epoch (while in the Epoch Prep period) in the same block?
@Robert K yes, just tested them today in 3.3.0 )


[07/22/2020 4:42 PM] Robert K#0722
@scalahub So we're thinking about releasing the oracle pool spec today/tomorrow. I know I asked prior already, but any further adjustments you think that would be good to add?


[07/22/2020 4:42 PM] Robert K#0722
(We can still edit the spec after release, but I'd prefer not having major changes/rewrites if we can avoid doing so)


[07/22/2020 4:43 PM] Robert K#0722
We're planning on releasing the governance spec, just to show off what is possible, though we're first implementing the basic spec.


[07/22/2020 5:03 PM] Robert K#0722
@kushti Is there any harm if the oracle core resends the exact same tx every 30 seconds to the local node/network to post?


[07/22/2020 5:04 PM] Robert K#0722
I'm wondering if there's a good reason to implement some sort of internal state which checks if X tx has been sent, or if I can have the more naive logic as I have currently which just sends a tx if the current state of the protocol requires it (and so will keep sending every 30 seconds until the protocol on-chain state updates)


[07/22/2020 5:05 PM] Robert K#0722
On the plus side with this naive logic is the fact that if the node somehow died/broke while accepting the request from the oracle-core, the core will resend the tx again anyways in 30 seconds so you get a bit higher assurance.


[07/22/2020 5:22 PM] kushti#0978
@Robert K yes, you can resend easily. You can check that transaction is already in the pool before that. But no issue in just sending straight, the client will not be penalized )


[07/22/2020 5:24 PM] scalahub#2618
@Robert K for releasing the spec, what adjustments are you referring to?


[07/22/2020 5:25 PM] scalahub#2618
do you mean the optimizations we discussed or are we leaving it for later?


[07/22/2020 5:25 PM] Robert K#0722
For example, we changed the payout function from dividing to multiplication


[07/22/2020 5:25 PM] Robert K#0722
If there's any last-minute adjustments like that


[07/22/2020 5:25 PM] scalahub#2618
yes cool so don't think any change yet..


[07/22/2020 5:25 PM] Robert K#0722
We can add the optimizations later on without issue.


[07/22/2020 5:26 PM] scalahub#2618
the payout was the last one


[07/22/2020 5:26 PM] scalahub#2618
by when do you want to release?


[07/22/2020 5:26 PM] scalahub#2618
I'll have another scan and revert before that


[07/22/2020 5:28 PM] Robert K#0722
Most likely tomorrow.


[07/22/2020 5:28 PM] Robert K#0722
And thanks.


[07/22/2020 5:41 PM] scalahub#2618
perfect


[07/22/2020 5:49 PM] Robert K#0722
Ah, and for the near future when we finish off the contracts & expect to release them, I think Alex's idea about commenting/using latex to document the action/spending conditions from the spec inside of the contract code could be a pretty good approach for

a) Verifying all conditions were encoded
b) Explaining to future devs how the whole workflow works from spec -> contract


[07/22/2020 9:57 PM] Robert K#0722
@scalahub, alright I have implemented the basic automation logic for the oracle core. Feel free to send me the compiled contracts with my hardcoded keys (and yours too) and please set the epoch prep & active epoch length to something short like 4 blocks each. I'll try bootstrap the oracle pool tomorrow and see if we can get the protocol running.

{Reactions}
‚ù§Ô∏è 

[07/22/2020 9:58 PM] Robert K#0722
(Or if you wish to bootstrap ahead of time that would be appreciated as well üôÇ )


[07/22/2020 10:25 PM] scalahub#2618
@Robert K here is the current version of the contracts:
scripts: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
constants: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
I'll add one more address (mine) to the list

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/22/2020 10:26 PM] scalahub#2618
can you tell me the other parameters


[07/22/2020 10:26 PM] scalahub#2618
I'll bootstrap once you confirm them


[07/22/2020 10:27 PM] scalahub#2618
And then I'll create 1 singleton token for pool and maybe 20 tokens for oracles


[07/22/2020 10:31 PM] scalahub#2618
how many oracle tokens should we have?


[07/22/2020 10:31 PM] scalahub#2618
and 4 pub keys?


[07/22/2020 10:32 PM] scalahub#2618
BTW 4 blocks for epoch and prep .. then how much buffer?


[07/22/2020 10:33 PM] scalahub#2618
I'll sign off now so maybe tomorrow I'll bootstrap and send the address


[07/23/2020 2:46 PM] Robert K#0722
Morning üëã


[07/23/2020 2:48 PM] Robert K#0722
Hmm @scalahub , how about:
Prep: 4
Live: 4
Buffer: 2
Praticipant tokens: 20 (for testing, doesn't really matter but if we lose some due to bad logic could be good to have extra lol)
Pub keys: 4 (should be good enough to test with I think?)


[07/23/2020 2:49 PM] Robert K#0722
Oracle Payout/Reward: 1 000 000 (Essentially minimum value Ergs to store in a box)


[07/23/2020 2:51 PM] Robert K#0722
(Hmm, why do you have a hardcoded `minPoolBoxValue` rather than taking `address.len()` and then multiply that (plus 1 for the collector) by the `oracleReward` to get a `minPoolBoxValue`?)


[07/23/2020 3:40 PM] scalahub#2618
We could do what you propose... No particular reason actually for defining min like that


[07/23/2020 3:41 PM] scalahub#2618
I guess I interpreted the spec that way.


[07/23/2020 3:43 PM] scalahub#2618
Have to keep a bit more than that though because cannot have zero value boxes


[07/23/2020 4:00 PM] Robert K#0722
Ah, good point.


[07/23/2020 4:01 PM] Robert K#0722
I guess that calc + 1 000 000 nanoErg?


[07/23/2020 4:04 PM] Robert K#0722
Either way, that's not that big of a deal/is easy to change. Could you please compile the contracts and send me the addresses when you get a chance to bootstrap?


[07/23/2020 4:05 PM] Robert K#0722
And did you get a chance to proofread the informal spec? Any new comments/improvements?


[07/23/2020 4:26 PM] scalahub#2618
Didn't find any issues.

{Reactions}
üëå 

[07/23/2020 4:27 PM] scalahub#2618
sending the addresses soon


[07/23/2020 5:55 PM] scalahub#2618
@Robert K bootstrapped the epoch prep box


[07/23/2020 5:55 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/c6803e5a1bee7a99040d592e136867529a4a318f031419956de9884344ce663d


[07/23/2020 5:56 PM] scalahub#2618
parameters in this file https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/23/2020 5:57 PM] scalahub#2618
addresses

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/735903321717473280/message.txt


[07/23/2020 5:58 PM] scalahub#2618
Used Kiosk to generate it.. specifically this instance https://kiosk.urlwallet.org/session/x26q33bq8LzoENdxUnBCOqn9B#kiosk.Box.getAllBoxes


[07/23/2020 5:59 PM] scalahub#2618
height in the epoch prep box is set to 279508 so it should be spendable in about an hour


[07/23/2020 5:59 PM] scalahub#2618
currently its 279410


[07/23/2020 6:04 PM] scalahub#2618
I used 2000000 for min payout instead of 1000000


[07/23/2020 6:04 PM] scalahub#2618
because 1000000 is currently the min to propagate tx


[07/23/2020 6:19 PM] Robert K#0722
Nice, are you going to bootstrap oracles as well?


[07/23/2020 6:27 PM] scalahub#2618
yes sure. I'll do that shortly..

{Reactions}
üëå 

[07/23/2020 6:28 PM] Robert K#0722
Only technically need 1 for bare-minimum testing.


[07/23/2020 6:32 PM] Robert K#0722
Hmm, actually one annoying thing is that the node can't track the pool box now.


[07/23/2020 6:32 PM] Robert K#0722
Since it's forward-only scanning and I only registered the scans now after you deployed it.


[07/23/2020 6:33 PM] Robert K#0722
I guess I'll just rescan the entire blockchain with the node then.


[07/23/2020 6:37 PM] Robert K#0722
So pool bootstrap workflow should typically be:
1. Generate Pool NFT
2. Generate Participant Tokens
3. Get list of oracle pubkeys.
4. Set parameters.
5. Compile Contracts.
6. Initiate scans in node via oracle-core.
7. Bootstrap "Epoch Prep" pool box.
8. Bootstrap oracle "Datapoint" boxes.

{Reactions}
üëç 

[07/23/2020 6:49 PM] scalahub#2618
bootstrapped all 4 oracles


[07/23/2020 6:49 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/970f3b69808370b9f4b93b2e390b440d6cf2f3c76a2ff1629ede67c8fbbd464d


[07/23/2020 7:05 PM] scalahub#2618
last oracle box has my address.

{Reactions}
üëå 

[07/23/2020 11:19 PM] Robert K#0722
Will get to trying it tomorrow. Had meetings + release spec + node syncing.

{Reactions}
üëç (2) 

[07/24/2020 10:19 AM] scalahub#2618
ok what should I pick up next?


[07/24/2020 10:42 AM] scalahub#2618
lets plan the next to-do list for poc launch


[07/24/2020 11:16 AM] scalahub#2618
so the datapoint boxes cannot be used until the pool is in the live epoch state.. for that the create new epoch must be triggered


[07/24/2020 11:16 AM] scalahub#2618
Shall I try one round with 1 oracle?


[07/24/2020 2:25 PM] Robert K#0722
Feel free to go ahead and try.


[07/24/2020 2:26 PM] Robert K#0722
After I deal with various matters I'll probably test the oracle core in an hour or two.


[07/24/2020 2:44 PM] Robert K#0722
So I tried to just run the oracle core to test if it'd work flawlessly before I get to other matters I need to deal with, and unfortunately I got this error:


[07/24/2020 2:45 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/736217383529742456/message.txt


[07/24/2020 2:45 PM] Robert K#0722
` Failed to sign boxes due to Error in Evaluation.compile.evaluate(s2090 -> MethodCall(s2089, scalan.Base$Ref special.sigma.SigmaDsl$Box.getReg(scalan.Base$Ref,scalan.TypeDescs$Elem), [s28, BaseElemLiftable<Int>], true)):...`


[07/24/2020 2:46 PM] Robert K#0722
Not sure if that means I don't have the right to spend the boxes? Anyone with any insight, let me know.


[07/24/2020 2:47 PM] Robert K#0722
(It was trying to submit the "Create New Epoch" action)


[07/24/2020 3:05 PM] scalahub#2618
Let me experiment with my oracle box and revert. Gimme w few hours


[07/24/2020 3:07 PM] scalahub#2618
(as well as try to create new epoch)


[07/24/2020 3:27 PM] scalahub#2618
@Robert K Unfortunately I bootstrapped the oracle incorrectly. Its R5 is set to Long.. so the box is unspendable.. I'll bootstrap a new oracle shortly and test it


[07/24/2020 3:27 PM] scalahub#2618
the script requires it to be Int


[07/24/2020 3:32 PM] scalahub#2618
also the oracle boxes will need to be recreated because of the hardwired pool token id


[07/24/2020 3:52 PM] Robert K#0722
Ah, I see.


[07/24/2020 3:54 PM] Robert K#0722
The oracle core read the state correctly though, so I think I have it set to Long as well which is kind of funny. (Yes I do have it encoded for Long after checking the code)


[07/24/2020 3:55 PM] Robert K#0722
I think it'd be better to keep it as Long (change the contracts) especially as we may end up working with large datapoints in the future, no?


[07/24/2020 4:01 PM] scalahub#2618
ok but I think height is encoded as Int so I wanted to preserve the types.. no harm in long either


[07/24/2020 4:02 PM] scalahub#2618
this is for height


[07/24/2020 4:02 PM] scalahub#2618
datapoint is already long


[07/24/2020 4:03 PM] scalahub#2618
so the design was R4: Long, R5: Int, R6: Coll[Byte] (for the live epoch)


[07/24/2020 4:48 PM] Robert K#0722
Do you mean height is encoded as Int in the context in the contract?


[07/24/2020 4:49 PM] Robert K#0722
I imagine Long would still be better for height assuming we expect Ergo to live on for a very very long time üòâ


[07/24/2020 5:26 PM] kushti#0978
Int should be enough for ~8166 years


[07/24/2020 5:31 PM] kushti#0978
anything to help with ?


[07/24/2020 5:31 PM] kushti#0978
Think to check carefully informal spec & Rust code over the weekend again


[07/24/2020 5:34 PM] Robert K#0722
> Int should be enough for ~8166 years
@kushti Ah, well then nevermind. Didn't realize it was that long.


[07/24/2020 5:35 PM] Robert K#0722
I'm fine with Int or Long then, whichever one you choose for height I can edit for in the oracle core @scalahub


[07/24/2020 5:37 PM] Robert K#0722
In regards to help, if we don't end up getting the pool bootstrapped today & the actions in the oracle core working, then it could be very helpful if you check that the logic in the contracts/oracle core end up matching @kushti


[07/24/2020 5:40 PM] scalahub#2618
lets keep it Int for now.


[07/24/2020 5:40 PM] scalahub#2618
I'm getting some weird error when creating new epoch.. so I'm now writing ScalaTests for it to debug


[07/24/2020 5:41 PM] scalahub#2618
`Error:  caused by:  caused by:  caused by: assertion failed: Unexpected register type found at register #5: PrimitiveType(Int), expected CollType(PrimitiveType(Byte))`


[07/24/2020 5:41 PM] scalahub#2618
this is the box I'm trying to spend


[07/24/2020 5:41 PM] scalahub#2618
boxId 8e11132b4545f1aad54b96c4b3bc92f919c9c8109f129099218de010e14652c6


[07/24/2020 5:41 PM] scalahub#2618
created here https://explorer.ergoplatform.com/en/transactions/c6803e5a1bee7a99040d592e136867529a4a318f031419956de9884344ce663d


[07/24/2020 5:42 PM] scalahub#2618
see if you can create from this otherwise it'll probably take longer than today for full end to end


[07/24/2020 5:42 PM] scalahub#2618
also there was a small bug in the code which I have updated on github


[07/24/2020 5:43 PM] scalahub#2618
@kushti can you look at the above box and error


[07/24/2020 5:43 PM] scalahub#2618
where is it expecting `Coll[Byte]`?


[07/24/2020 5:44 PM] scalahub#2618
here is the script: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L90:L129

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/24/2020 5:47 PM] scalahub#2618
also @Robert K how hard will it be to change the spec to use hashes of scripts rather than scripts


[07/24/2020 5:47 PM] scalahub#2618
I don't like the large addresses


[07/24/2020 5:48 PM] scalahub#2618
if the implenentation is alreay close to done then leave it


[07/24/2020 5:50 PM] scalahub#2618
@kushti you can see the output I am trying to create here https://kiosk.urlwallet.org/session/fXrqMsW4aBktdfdXbuVZ3YhpD#kiosk.Box.getAllBoxes


[07/24/2020 5:50 PM] scalahub#2618
the `liveEpochBox` is no 4 (you have to click "submit")


[07/24/2020 5:59 PM] scalahub#2618
@Robert K please try again with new box


[07/24/2020 6:00 PM] Robert K#0722
> also @Robert K how hard will it be to change the spec to use hashes of scripts rather than scripts
@scalahub We can change it to hashes, but I would recommend we wait until we actually get an implementation working. No need to optimize while everything is broken imo.


[07/24/2020 6:00 PM] scalahub#2618
yes lets get this to work first, but before production stage, lets move to hashes


[07/24/2020 6:01 PM] Robert K#0722
Sure, we can do that.


[07/24/2020 6:04 PM] Robert K#0722
Also I can't test the new box as I didn't have a scan registered to track it with the full node


[07/24/2020 6:04 PM] Robert K#0722
Since the scans check the oracle pool nft


[07/24/2020 6:07 PM] scalahub#2618
I think the node should support manually adding box to a scan by box id.. @kushti ?


[07/24/2020 6:15 PM] Robert K#0722
Nope not yet, it's a future feature.


[07/24/2020 6:29 PM] Robert K#0722
If you want me to test please generate a new NFT + contract, give me the id, I'll register it, and then you can post the bootstrap tx.


[07/24/2020 6:34 PM] kushti#0978
> I think the node should support manually adding box to a scan by box id.. @kushti ?
@scalahub not implemented, will be in 3.3.1 if there's no urgent need for it


[07/24/2020 6:35 PM] kushti#0978
lemme check the issues


[07/24/2020 8:41 PM] kushti#0978
> `Error:  caused by:  caused by:  caused by: assertion failed: Unexpected register type found at register #5: PrimitiveType(Int), expected CollType(PrimitiveType(Byte))`
@scalahub 05a88f22 in register R5 is Long, but what about R5 in OUTPUTS(0)? what was a spending transaction ?


[07/24/2020 8:45 PM] kushti#0978
from Kiosk:


[07/24/2020 8:45 PM] kushti#0978
{
      "R5": "0e0100",
      "type": "Coll[Byte]"
    }


[07/24/2020 8:45 PM] kushti#0978
it is OUTPUTS(0) right?


[07/24/2020 8:45 PM] kushti#0978
so the problem is here then


[07/24/2020 8:48 PM] kushti#0978
oh liveEpochBox is different


[07/24/2020 8:48 PM] kushti#0978
will debug over the weekend then

{Reactions}
üëå (2) 

[07/24/2020 9:09 PM] scalahub#2618
@kushti I have made a test using mocks where the epoch-prep box can be spent to get a live-epoch box: 
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolSpec.scala#L66:L79

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/24/2020 9:09 PM] scalahub#2618
However, Kiosk currently does not support data inputs, so I cannot test further yet.. If appkit supports them then I can add to Kiosk


[07/24/2020 9:11 PM] kushti#0978
Maybe we can use scala-playground

{Reactions}
üëç (2) 

[07/24/2020 9:18 PM] Robert K#0722
That sounds like a good idea if it supports everything.


[07/24/2020 9:19 PM] scalahub#2618
https://travis-ci.org/github/scalahub/Kiosk/builds/711581370#L609

{Embed}
https://travis-ci.org/github/scalahub/Kiosk/builds/711581370
Travis CI - Test and Deploy Your Code with Confidence
Travis CI enables your team to test and ship your apps with confidence. Easily sync your projects with Travis CI and you'll be testing your code in minutes.


[07/24/2020 9:19 PM] scalahub#2618
here is the output of travis that the test passed


[07/24/2020 9:21 PM] Robert K#0722
@kushti I just finished rewriting all of the error handling to be a lot more robust/clean/actually descriptive in the oracle core. Should be a better read if you end up going through the code this weekend more deeply.


[07/24/2020 9:26 PM] scalahub#2618
so as far as I understand the following can be tested by me
1. create new epoch (epochPrep to liveEpoch seems to work properly ... most likely I messed the end epoch height or the address earlier.. will test again tomorrow)
2. collect funds
3. start next epoch

What I cannot yet test: 
1. publish datapoint 
2. collect datapoint


[07/24/2020 9:45 PM] scalahub#2618
@Robert K can you register these tokens
 `oracleTokenId 12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed`
`poolTokenId b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc`


[07/24/2020 9:46 PM] scalahub#2618
and once you are done let me know and I'll bootstrap the pool..


[07/24/2020 9:50 PM] Robert K#0722
@scalahub Okay, I have registered the scans with the ids/contracts.


[07/24/2020 9:50 PM] Robert K#0722
All the actions are implemented (theoretically according to the spec), so we should be able to test all 5 via the oracle core.


[07/24/2020 9:51 PM] Robert K#0722
The automation logic is also implemented so technically if it works, then the whole protocol will just be played out by itself.


[07/24/2020 9:59 PM] scalahub#2618
ok I'll bootstrap the epoch box and send you soon


[07/24/2020 9:59 PM] scalahub#2618
will send new addresses.. sent old addresses by mistake


[07/24/2020 10:06 PM] scalahub#2618
addresses

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/736328537182830602/message.txt


[07/24/2020 10:06 PM] scalahub#2618
going to bootstrap box as well now


[07/24/2020 10:10 PM] Robert K#0722
1 sec I need to add the scan


[07/24/2020 10:10 PM] Robert K#0722
(since you changed the addresses the scans I registered with the new tokens won't work)


[07/24/2020 10:12 PM] Robert K#0722
Okay they are registered


[07/24/2020 10:19 PM] scalahub#2618
ok bootstrapped pool and created new epoch


[07/24/2020 10:20 PM] scalahub#2618
pool bootstrap (epoch prep box) at this tx: https://explorer.ergoplatform.com/en/transactions/5eb5c5a688a3a8e2b70144f992540496bda07c784206ca129f1046608306157f
create new epoch (live epoch box) at this: https://explorer.ergoplatform.com/en/transactions/1f14ceb31555a8d07d88d709800f6290f870b3b215f111a764609845676f9917


[07/24/2020 10:20 PM] scalahub#2618
I'll create the 4 oracle boxes as well


[07/24/2020 10:21 PM] scalahub#2618
@Robert K not sure if your scan picked up.. sorry if not.. I guess I transmitted too soon


[07/24/2020 10:23 PM] scalahub#2618
hmm the tx was dropped.. i guess because of the delay?


[07/24/2020 10:24 PM] Robert K#0722
I had that happen during mock testing if the fee/byte was too low.


[07/24/2020 10:24 PM] Robert K#0722
And yeah, the scan didn't pick it up.


[07/24/2020 10:28 PM] scalahub#2618
trying once more https://explorer.ergoplatform.com/en/transactions/f0ed494df32459c86f71fd9a05f6d8239470e55e857e994ea52ac7f18ccf5f20


[07/24/2020 10:28 PM] scalahub#2618
lets see


[07/24/2020 10:28 PM] scalahub#2618
by the time it confirms the buffer gets over


[07/24/2020 10:28 PM] scalahub#2618
we need more buffer


[07/24/2020 10:28 PM] scalahub#2618
used more fee as well ... lets see


[07/24/2020 10:29 PM] scalahub#2618
I think we need to change params as follows: prep = live = 10 and buffer = 5


[07/24/2020 10:29 PM] Robert K#0722
It appers to have been spent.


[07/24/2020 10:29 PM] scalahub#2618
ah its confirmed üôÇ


[07/24/2020 10:30 PM] Robert K#0722
We can upgrade the parameters, it just means testing will go slower when things get rolling.


[07/24/2020 10:30 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/f0ed494df32459c86f71fd9a05f6d8239470e55e857e994ea52ac7f18ccf5f20


[07/24/2020 10:30 PM] Robert K#0722
But yeah I think this was just a fee issue.


[07/24/2020 10:30 PM] scalahub#2618
lets see how this goes


[07/24/2020 10:30 PM] scalahub#2618
if not then we try new params


[07/24/2020 10:30 PM] Robert K#0722
Sure


[07/24/2020 10:31 PM] Robert K#0722
What action did you just do?


[07/24/2020 10:31 PM] scalahub#2618
if high fee solves then nice


[07/24/2020 10:31 PM] scalahub#2618
I just did create new epoch


[07/24/2020 10:32 PM] scalahub#2618
@kushti so no need to debug the earlier issue.. it was some error from my side probably.. I guess I might have used live epoch script instead of prep that time


[07/24/2020 10:33 PM] Robert K#0722
Nice. But you can't progess from here right?


[07/24/2020 10:33 PM] Robert K#0722
As you mentioned you can't submit datapoint/collect datapoints


[07/24/2020 10:33 PM] scalahub#2618
I can also create oracle and a funding box


[07/24/2020 10:33 PM] scalahub#2618
but you need to do one data point and collection


[07/24/2020 10:34 PM] Robert K#0722
Okay cool, the scan appears to have found the live epoch box


[07/24/2020 10:35 PM] Robert K#0722
But the oracle core isn't parsing it properly. The height is not a long now right?


[07/24/2020 10:36 PM] scalahub#2618
yes its an int still


[07/24/2020 10:36 PM] scalahub#2618
haven't change the script for that


[07/24/2020 10:36 PM] Robert K#0722
Okay, so I need to add int parsing.


[07/24/2020 10:36 PM] scalahub#2618
please refer to the new (latest version with bugfixes here) https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/24/2020 10:37 PM] scalahub#2618
and the constants here https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/24/2020 10:45 PM] Robert K#0722
Ah, can you also bootstrap my datapoint box?


[07/24/2020 10:45 PM] Robert K#0722
When parsing live epoch state the oracle core also parses the datapoint box to check if a datapoint has been submitted in the current epoch.


[07/24/2020 10:50 PM] scalahub#2618
yes done https://explorer.ergoplatform.com/en/transactions/01ad95e507918dcc48b6f4d026cc152a0c084f99d154dbfbe49123474de827d6


[07/24/2020 10:53 PM] Robert K#0722
Hmm, weird.


[07/24/2020 10:54 PM] Robert K#0722
The scan I have for all datapoint boxes found them all, but the datapoint scan I have for my personal box did not find it.


[07/24/2020 10:54 PM] scalahub#2618
hope I didnt make any mistake in oracle box creation


[07/24/2020 10:54 PM] scalahub#2618
which is your personal box?


[07/24/2020 10:55 PM] scalahub#2618
first 3 are addresses given by you


[07/24/2020 10:55 PM] kushti#0978
ok I will try to check and run on my side over the weekend then


[07/24/2020 10:56 PM] Robert K#0722
Using address `9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF` currently


[07/24/2020 10:57 PM] Robert K#0722
This was the scan for personal datapoint box:
```
{
    "scanId": 70,
    "scanName": "Local Oracle Datapoint Scan",
    "trackingRule": {
      "predicate": "and",
      "args": [
        {
          "predicate": "containsAsset",
          "assetId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed"
        },
        {
          "predicate": "equals",
          "register": "R1",
          "value": "0edb04100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0ec603100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004100580dac4090402048092f401040201010402058092f401130403f0ecb25ce2cc3b73d2da7fcf16cecee23f7d5175d1b82fcc5106399beb13bcc5029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4020a68bdfc28b7cb16ee37e1d74b399bc768550e3f04575fb275e3e2d61bd7d85e0290d9bbac88042a69660b263b4afc29a2084a0ffce4665de89211846d42bb30e4d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305d1ededededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c0297ad730dd9010507cd7205d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493c272037305cd7202"
        },
        {
          "predicate": "equals",
          "register": "R4",
          "value": "0e240008cd029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4"
        }
      ]
    }
  },
```


[07/24/2020 10:58 PM] Robert K#0722
Hmm, all of your datapoint boxes R4 start with `07029...`


[07/24/2020 10:59 PM] scalahub#2618
07 is the data type of group element I think


[07/24/2020 10:59 PM] scalahub#2618
and 02... is the group element


[07/24/2020 10:59 PM] scalahub#2618
https://kiosk.urlwallet.org/session/ospvsPQIKP0yY5NmIUpJTCtCk#kiosk.Box.getAllBoxes


[07/24/2020 10:59 PM] scalahub#2618
see the first box


[07/24/2020 10:59 PM] scalahub#2618
sorry 2nd box


[07/24/2020 10:59 PM] Robert K#0722
I used the `/script/addressToBytes/` endpoint to generate the R4 value.


[07/24/2020 10:59 PM] scalahub#2618
The group element I used is this: 029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4


[07/24/2020 11:00 PM] scalahub#2618
the address for the proveDlog is 9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF


[07/24/2020 11:00 PM] scalahub#2618
hmmm not sure if its direct


[07/24/2020 11:01 PM] scalahub#2618
I mean not sure if you can store the value direct or need to also add the type


[07/24/2020 11:01 PM] scalahub#2618
what is the output of `/script/addressToBytes` for 9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF?


[07/24/2020 11:02 PM] Robert K#0722
`0e240008cd029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4` as is in the scan json I posted.


[07/24/2020 11:02 PM] scalahub#2618
This seems to be extra `0e240008cd`


[07/24/2020 11:02 PM] Robert K#0722
Oh, good point.


[07/24/2020 11:03 PM] scalahub#2618
`07` is the type and `029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4` is the group element (I used appkit's ValueSerializer to do it actually)


[07/24/2020 11:04 PM] scalahub#2618
@kushti would you know what the extra `0e240008cd` is in the addressToBytes?


[07/24/2020 11:04 PM] kushti#0978
cd is proveDlog


[07/24/2020 11:04 PM] kushti#0978
0e is byte array, 24 length probably


[07/24/2020 11:05 PM] kushti#0978
0008 ergotree header likely


[07/24/2020 11:05 PM] scalahub#2618
ok makes sense


[07/24/2020 11:05 PM] scalahub#2618
so do we need to encode this in R4?


[07/24/2020 11:05 PM] scalahub#2618
I just put the group element and then constructed proveDlog inside the script


[07/24/2020 11:05 PM] kushti#0978
so byte array type desc + length + ergo tree header + prove dlog + ecpoint


[07/24/2020 11:06 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L155

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/24/2020 11:06 PM] kushti#0978
> so do we need to encode this in R4?
@scalahub show me a line of code where it is expected


[07/24/2020 11:06 PM] kushti#0978
sec


[07/24/2020 11:06 PM] kushti#0978
val pubKey = SELF.R4[GroupElement].get


[07/24/2020 11:06 PM] scalahub#2618
yes


[07/24/2020 11:06 PM] kushti#0978
then yes, R4 should be 07 + ecpoint


[07/24/2020 11:07 PM] scalahub#2618
ok thanks for clarifying


[07/24/2020 11:07 PM] Robert K#0722
So in that case, is there an endpoint I can use from the full node to get that, or do I use the same endpoint and just cut the front of the string?


[07/24/2020 11:10 PM] kushti#0978
endpoint to get encoded sigma-value ?


[07/24/2020 11:10 PM] kushti#0978
there's no such (


[07/24/2020 11:10 PM] scalahub#2618
how to get group element from address? (assuming its proveDlog)


[07/24/2020 11:12 PM] scalahub#2618
or we could use r4 as sigmaProp instead of groupelement


[07/24/2020 11:12 PM] scalahub#2618
but lets do that after testing


[07/24/2020 11:13 PM] kushti#0978
oh actually


[07/24/2020 11:14 PM] kushti#0978
there's /utils/addressToRaw/{address} API method


[07/24/2020 11:14 PM] kushti#0978
to get EC Point from p2pk


[07/24/2020 11:14 PM] kushti#0978
then 07 to be prepended still


[07/24/2020 11:15 PM] Robert K#0722
Alright, that sounds cleaner to use. Thanks.


[07/24/2020 11:20 PM] scalahub#2618
> so byte array type desc + length + ergo tree header + prove dlog + ecpoint
@kushti ok so this seems to be the raw address encoding.. if we encode this in base58, we should get the same address?


[07/24/2020 11:22 PM] Robert K#0722
Alright, I've added the functions to the oracle-core to use addressToRaw + prepend 07 and get the same base58 string as you have in R4 @scalahub

{Reactions}
üëç (2) 

[07/24/2020 11:26 PM] Robert K#0722
And the scans should now be tracking the datapoint R4 properly.


[07/24/2020 11:27 PM] Robert K#0722
I'm getting pretty tired right now after a long day, I think we can maybe give this another go on Monday @scalahub ? We'd have to bootstrap again to get the scans working, which will take a bit of time.


[07/24/2020 11:27 PM] kushti#0978
> @kushti ok so this seems to be the raw address encoding.. if we encode this in base58, we should get the same address?
@scalahub no , address do not have 0e + byte array length, but has network prefix and checksum, so different format at all


[07/24/2020 11:28 PM] kushti#0978
@Robert K have a good weekend!


[07/24/2020 11:28 PM] kushti#0978
I'm going off as well, late night here


[07/24/2020 11:32 PM] scalahub#2618
@Robert K can you do a rescan instead?


[07/24/2020 11:33 PM] scalahub#2618
anyway lets connect Monday.. Appkit seems to have data inputs under the hood.. I'll see if I can use it


[07/24/2020 11:33 PM] Robert K#0722
Ah, yeah good idea.


[07/24/2020 11:33 PM] Robert K#0722
I'll rescan over the weekend.


[07/24/2020 11:33 PM] Robert K#0722
Great, we've made some solid progress and this is a decent note to end off on.

{Reactions}
üëç (2) 

[07/24/2020 11:34 PM] Robert K#0722
Have a great weekend @scalahub & @kushti .


[07/24/2020 11:34 PM] scalahub#2618
yup you too @Robert K @kushti


[07/24/2020 11:34 PM] kushti#0978
Have a good weekend @Robert K @scalahub !


[07/25/2020 5:03 PM] scalahub#2618
@kushti @Robert K some updates re the oracle-pool
1. Found a bug in live epoch contract and fixed it.
2. Have set buffer to 4 and epoch+prep to 5 blocks each (was having issues with lower values)
3. Added ability to use data inputs to Kiosk and did one end-to-end test with commit + collect. 

The collect transaction is here:
https://explorer.ergoplatform.com/en/transactions/143c0a5c05a5900fb9da741f2030cedb0d1b04b2af28519c5ed8e25822548e0e

latest addresses are at this link (tokenids are same):
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala#L43-L47

latest scripts here:
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L38:L167

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/25/2020 5:24 PM] scalahub#2618
@Robert K please use the new addresses and rescan.. also I've created the datapoint boxes for your 3 addresses
https://explorer.ergoplatform.com/en/transactions/dfad960e6fb085f10e9b700f5631251b11209e7ed09a56c94d8bd91452226344


[07/27/2020 10:37 AM] kushti#0978
@Robert K how to work with API ? http://localhost:9090/oracleInfo does not work


[07/27/2020 12:20 PM] kushti#0978
@Robert K running the core compiled with Rust 1.45, 1.39 gave me some "unstable feature" error


[07/27/2020 12:44 PM] greenhat#6562
@kushti I'm not sure, but seems like rust nightly is required - https://github.com/rust-lang/rustup/blob/master/README.md#working-with-nightly-rust

{Embed}
https://github.com/rust-lang/rustup/blob/master/README.md
rust-lang/rustup
The Rust toolchain installer. Contribute to rust-lang/rustup development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/C9WsXM9RY2JatU8mPNX8By9PyLUrPZJ7bjRmwtl3yhk/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/5430905


[07/27/2020 1:21 PM] kushti#0978
@greenhat well, 1.45 solved the problem, so no need for a nightly )


[07/27/2020 1:23 PM] greenhat#6562
@kushti oh, I misread that it does not compile on 1.45. My bad. üôÇ


[07/27/2020 1:25 PM] kushti#0978
@scalahub anyOracle means ring signature, is that as intended ?


[07/27/2020 1:26 PM] kushti#0978
Can we do joint testing ?


[07/27/2020 1:38 PM] scalahub#2618
> @scalahub anyOracle means ring signature, is that as intended ?
@kushti can you point me to which like you are referring to?


[07/27/2020 1:38 PM] scalahub#2618
Ring aignayure is not intended though.. so this should be fixed


[07/27/2020 1:40 PM] scalahub#2618
I recall removing all such lines.. is it still there in latest commit?


[07/27/2020 1:41 PM] scalahub#2618
Seems to have been removed https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L77

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/27/2020 2:20 PM] kushti#0978
oh right


[07/27/2020 2:20 PM] kushti#0978
I checked some older version during the weekend it seems


[07/27/2020 2:31 PM] kushti#0978
@scalahub in new version : "OUTPUTS(0).R4[Long].get == average &&" on both lines 72 & 75

{Reactions}
üëç 

[07/27/2020 2:36 PM] scalahub#2618
guess scripts will change again.. so for demo shall I leave as is?


[07/27/2020 2:36 PM] scalahub#2618
since already bootstrapped


[07/27/2020 2:39 PM] scalahub#2618
@kushti is `exists` not very efficient?


[07/27/2020 2:40 PM] kushti#0978
should be okay


[07/27/2020 2:40 PM] kushti#0978
@scalahub are you running the oracles ?


[07/27/2020 2:41 PM] Robert K#0722
Okay, so the addresses have changed, but not the token ids @scalahub ?

{Reactions}
üëç 

[07/27/2020 2:44 PM] Robert K#0722
@kushti Is there a way to rescan the current UTXO set without deleting the whole node history/resyncing?


[07/27/2020 2:45 PM] kushti#0978
@Robert K not yet (


[07/27/2020 2:45 PM] kushti#0978
you want to scan UTXO set, not blocks ?


[07/27/2020 2:46 PM] Robert K#0722
Yeah, to get current state of a dApp essentially.


[07/27/2020 2:47 PM] kushti#0978
how to do that


[07/27/2020 2:47 PM] kushti#0978
you want to get boxes by P2S address anyway right ?


[07/27/2020 2:50 PM] Robert K#0722
Boxes by P2S address, tokens held inside, etc.


[07/27/2020 2:50 PM] Robert K#0722
Essentially you have a scan on the node, and you want to rescan the UTXO set to get the real state of that scan.


[07/27/2020 2:51 PM] Robert K#0722
The current problem with scanning is that if you issue a tx before you start the scan, then you need to rescan the *entire* history of the blockchain just to rescan the current unspent boxes with the scans.


[07/27/2020 2:52 PM] Robert K#0722
(Did you end up figuring out all of your Rust-related problems around the oracle core by the way?)


[07/27/2020 2:52 PM] kushti#0978
Yes, running the oracle-core


[07/27/2020 2:53 PM] kushti#0978
on scans, we can add initial height to a scan maybe ?


[07/27/2020 2:53 PM] Robert K#0722
Hmm, yeah that would work.


[07/27/2020 2:53 PM] Robert K#0722
That's a good solution.


[07/27/2020 2:54 PM] kushti#0978
and then /unspentBoxes output will contain height as well


[07/27/2020 2:54 PM] kushti#0978
or range scanned

{Reactions}
üëç 

[07/27/2020 2:57 PM] scalahub#2618
There is one more fix to be done.. so we do do it from scratch a bit later today


[07/27/2020 2:58 PM] kushti#0978
what fix ?


[07/27/2020 2:59 PM] scalahub#2618
> @scalahub in new version : "OUTPUTS(0).R4[Long].get == average &&" on both lines 72 & 75
@kushti this one


[07/27/2020 2:59 PM] scalahub#2618
Doesn't affect functionality but address will change


[07/27/2020 2:59 PM] kushti#0978
yes, but not rush with this I guess


[07/27/2020 2:59 PM] scalahub#2618
Ok


[07/27/2020 3:00 PM] scalahub#2618
Yes sure


[07/27/2020 3:00 PM] kushti#0978
Fix will change nothing in regards with functionality


[07/27/2020 3:00 PM] scalahub#2618
Yes exactly


[07/27/2020 3:01 PM] scalahub#2618
Please test the current bootstrapped one then


[07/27/2020 3:06 PM] Robert K#0722
Okay, I've restarted syncing from scratch with the new scan activated.


[07/27/2020 3:07 PM] Robert K#0722
> and then /unspentBoxes output will contain height as well
@kushti I guess we can just have a `startHeight` variable which is when the scan starts scanning from.


[07/27/2020 3:08 PM] Robert K#0722
Probably a bit simpler than playing around with ranges.


[07/27/2020 3:43 PM] Robert K#0722
In that regard, do you still want me to check the current EIP1 edit proposal and get that passed?


[07/27/2020 3:45 PM] kushti#0978
EIP-1 ?


[07/27/2020 3:45 PM] Robert K#0722
So we can then focus on adding height in v3.3.1? Or should we address that in EIP-1 now?


[07/27/2020 3:45 PM] kushti#0978
morphic made some comments, so for now can address them


[07/27/2020 3:46 PM] kushti#0978
on height, lemme check the code

{Reactions}
üëç 

[07/27/2020 3:46 PM] kushti#0978
maybe it should be done in 3.3.0


[07/27/2020 3:46 PM] kushti#0978
to avoid db format changes


[07/27/2020 3:46 PM] Robert K#0722
Yeah, that's what I'm thinking


[07/27/2020 3:46 PM] Robert K#0722
It's also a core change to some degree, so it'd be good not to have scanning API edits through the versions.


[07/27/2020 3:49 PM] kushti#0978
That's also true


[07/27/2020 3:53 PM] kushti#0978
@Robert K need to check a couple of things then will propose final design and ETA


[07/27/2020 3:59 PM] Robert K#0722
Perfect.


[07/27/2020 4:43 PM] Robert K#0722
Currently resyncing, at height: `135554`


[07/27/2020 4:45 PM] Robert K#0722
I'm going to be recording the video for Emurgo Research for the oracle spec today, as well as a few other things, so won't be having a lot of time to test.


[07/27/2020 4:46 PM] Robert K#0722
But the oracle core should theoretically perform the txs once the node syncs so we'll see.


[07/27/2020 5:20 PM] kushti#0978
Nice ! So addresses in oracle-config.yaml are corresponding to https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala ?

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/27/2020 6:04 PM] Robert K#0722
Yeah, at least based off of the compiled contracts that scalahub linked: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala#L43-L47

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/27/2020 6:29 PM] scalahub#2618
> @scalahub are you running the oracles ?
@kushti I'm not running oracle-core.. so the above tests were manual


[07/27/2020 6:51 PM] scalahub#2618
@kushti @Robert K For future work, I've also created v2 of the contracts that use hashes instead of ergotree directly.
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Demo.scala#L44:L48
and the tests using mocks: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Spec.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Spec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Demo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/27/2020 6:51 PM] scalahub#2618
much shorter scripts


[07/27/2020 7:41 PM] Robert K#0722
Oh wow, it seems to actually work: https://explorer.ergoplatform.com/en/transactions/f33e443f6ab3b074d653e05007ab4ba34475a1cfd0910bfab16e803c4bd22bb0


[07/27/2020 7:41 PM] Robert K#0722
`Create New Epoch` action


[07/27/2020 7:42 PM] Robert K#0722
(Well technically it hasn't confirmed yet)


[07/27/2020 7:43 PM] Robert K#0722
Quick question, if a tx is invalid will it show up in the explorer?


[07/27/2020 7:46 PM] Robert K#0722
Ah I think the fee is too low.


[07/27/2020 7:53 PM] Robert K#0722
Nice, it confirmed: https://explorer.ergoplatform.com/en/transactions/6f75f87e1765e50fac8ff8e97464cbaf02f438f7a7c5f0e08730aa6327267a4c


[07/27/2020 7:53 PM] Robert K#0722
üòÖ  But now the oracle core can't find my datapoint again.


[07/27/2020 8:21 PM] Robert K#0722
Hmm,

So this is the scan I registered:
```json
 {
    "scanId": 80,
    "scanName": "Local Oracle Datapoint Scan",
    "trackingRule": {
      "predicate": "and",
      "args": [
        {
          "predicate": "containsAsset",
          "assetId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed"
        },
        {
          "predicate": "equals",
          "register": "R1",
          "value": "0edf03100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0eca02100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004140580dac4090402048092f401040201010402058092f4010400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad7202d9010563cde4c672050407730d00d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493c272037305cd7202"
        },
        {
          "predicate": "equals",
          "register": "R4",
          "value": "07029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4"
        }
      ]
    }
  },
```


[07/27/2020 8:22 PM] Robert K#0722
And this is the box which didn't get registered:
```json
"box": {
      "boxId": "9441cf85bb564c72426b5eca49bce5f6cb27778c598ad02f34ca4358027b3a44",
      "value": 2000000,
      "ergoTree": "100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0eca02100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004140580dac4090402048092f401040201010402058092f4010400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad7202d9010563cde4c672050407730d00d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493c272037305cd7202",
      "assets": [
        {
          "tokenId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed",
          "amount": 1
        }
      ],
      "creationHeight": 280831,
      "additionalRegisters": {
        "R4": "07029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4",
        "R5": "0e0101"
      },
      "transactionId": "dfad960e6fb085f10e9b700f5631251b11209e7ed09a56c94d8bd91452226344",
      "index": 1
    },
    "spendingHeight": null,
    "inclusionHeight": 280833,
    "spent": false
  }
]
```


[07/27/2020 8:24 PM] Robert K#0722
But this scan did find the above box (the all datapoints scan, not the personal one):
```json
 {
    "scanId": 81,
    "scanName": "All Datapoints Scan",
    "trackingRule": {
      "predicate": "and",
      "args": [
        {
          "predicate": "containsAsset",
          "assetId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed"
        },
        {
          "predicate": "equals",
          "register": "R1",
          "value": "0edf03100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0eca02100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004140580dac4090402048092f401040201010402058092f4010400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad7202d9010563cde4c672050407730d00d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493c272037305cd7202"
        }
      ]
    }
  },
```


[07/27/2020 8:25 PM] Robert K#0722
@kushti This kind of seems like scanning failed here?


[07/27/2020 9:06 PM] scalahub#2618
only the personal box didn't get picked up?


[07/27/2020 9:43 PM] Robert K#0722
Yeah


[07/27/2020 9:44 PM] Robert K#0722
So I assume it means that the R4 check is being weird, because everything else is the same.


[07/28/2020 7:31 AM] kushti#0978
let me check


[07/28/2020 7:40 AM] kushti#0978
I think I know


[07/28/2020 7:40 AM] kushti#0978
from sigma-values currently only byte arrays supported (0e...), EC points not (07...)


[07/28/2020 8:41 AM] kushti#0978
as initially only byte arrays were supported


[07/28/2020 12:05 PM] kushti#0978
@Robert K added support for some new types, including group elements, made a test from your data )

{Reactions}
üíØ 

[07/28/2020 12:06 PM] kushti#0978
on scanning blocks in the past, there are some complexities, but it is simpler than full UTXO scan anyway, will start implementation today

{Reactions}
üíØ 

[07/28/2020 2:13 PM] Robert K#0722
Awesome, thanks Alex.


[07/28/2020 2:14 PM] Robert K#0722
Guess I need to compile and resync the node once again and hopefully we'll get to finally test some more actions in the oracle core


[07/28/2020 2:15 PM] Robert K#0722
(At least we know "Create New Epoch" action was coded properly, as that worked yesterday which is at least a good sign)


[07/28/2020 2:21 PM] Robert K#0722
Will the old scans I registered work @kushti ?


[07/28/2020 2:21 PM] Robert K#0722
Or do I need to reset them?


[07/28/2020 3:40 PM] kushti#0978
@Robert K old scans will work!


[07/28/2020 3:40 PM] kushti#0978
Working on scanning blocks in the past


[07/28/2020 3:59 PM] kushti#0978
what's a link for the call ?


[07/28/2020 4:00 PM] Robert K#0722
@kushti @scalahub  https://meet.google.com/ezj-ceqx-ypc

{Embed}
https://meet.google.com/ezj-ceqx-ypc
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-2.discordapp.net/external/esmkNqRvv_uM84r7jKXLg4PJYn6vHhrSoJ2Qs7oO2Z8/https/www.gstatic.com/images/branding/product/2x/meet_96dp.png


[07/28/2020 4:47 PM] scalahub#2618
@Robert K these are the addresses in the current implementation (V1)
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala#L43:L47

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/28/2020 4:47 PM] scalahub#2618
To avoid confusion, I'll send V2 once we have successfully tested the above

{Reactions}
üëå 

[07/28/2020 4:54 PM] Robert K#0722
These are the addresses I am tracking currently, so we should be good.


[07/28/2020 4:54 PM] Robert K#0722
Current sync height: `261978`


[07/28/2020 5:51 PM] Robert K#0722
The scans work, however it appears that I need to troubleshoot/debug the oracle core.


[07/28/2020 5:51 PM] Robert K#0722
After updating all the error types it seems I may have broke something related to json parsing.


[07/28/2020 6:24 PM] Robert K#0722
Hmm, the problem seems to be that sigma-rust is failing to parse Ergo box json


[07/28/2020 6:28 PM] Robert K#0722
So, I found out that sigma-rust:

Error("feature not yet implemented: parsing of constant value of type SGroupElement is not yet supported"


[07/28/2020 6:37 PM] Robert K#0722
This seems to be a problem for the datapoint box, and I think I could do a hacky fix by reading just the json itself, but I'd prefer to keep the code clean if this doesn't end up being to add support for.


[07/28/2020 6:38 PM] scalahub#2618
ok btw group element encoding is using the standard bitcoin compressed public key prepended with 07 as the type.. so maybe won't be too hard to add?


[07/28/2020 6:40 PM] Robert K#0722
Yeah, Denys mentioned it should be easy/he'll add it tomorrow morning so not a big deal.


[07/28/2020 6:40 PM] scalahub#2618
cool I missed that


[07/28/2020 6:40 PM] Robert K#0722
in #deleted-channel  just now


[07/29/2020 1:50 PM] kushti#0978
@Robert K rescanning blocks in the past for one scan just seems not to be an easy task , especially considering corner cases like prioritization of external scans over the wallet's . Well, as an alternative solution i've already done wallet rescan with no blocks redownloading and reprocessing, the rescan should be fast then , checking it right now


[07/29/2020 2:23 PM] Robert K#0722
Ah alright. Great to hear we can at least do wallet rescan without redownloading/processing. Big improvement.


[07/29/2020 2:38 PM] kushti#0978
with 1 key rescan is about few minutes


[07/29/2020 2:39 PM] Robert K#0722
1 key == 1 "scan" registered?


[07/29/2020 2:49 PM] kushti#0978
pretty much yes, need to check with many keys but should be fast enough anyway


[07/29/2020 2:50 PM] Robert K#0722
Either way, that sounds awesome.


[07/29/2020 2:51 PM] Robert K#0722
This means bootstrapping dApps can be a lot faster with multiple participants. Even if someone messed up/registered a scan late, even if it takes extra minutes for more complex sets of scans, it's such a drastic improvement nonetheless.


[07/29/2020 2:54 PM] Robert K#0722
@scalahub Why do the datapoint boxes only have R4 and R5?


[07/29/2020 2:55 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738032052397408286/unknown.png


[07/29/2020 2:56 PM] Robert K#0722
The oracle core is designed to follow the spec and so the datapoint boxes you bootstrapped are not valid currently.


[07/29/2020 3:05 PM] scalahub#2618
1 min let me check


[07/29/2020 3:08 PM] scalahub#2618
they have R6 https://explorer.ergoplatform.com/en/transactions/1560fe548a76384a418be31521bc81c8c34722ba26664691613c8241daea17cc


[07/29/2020 3:09 PM] scalahub#2618
bootstrap does not have R6 as per spec


[07/29/2020 3:09 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738035530482057276/Screenshot_from_2020-07-29_19-34-21.png


[07/29/2020 3:11 PM] scalahub#2618
also the link at https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md has the same


[07/29/2020 3:12 PM] scalahub#2618
did I miss something?


[07/29/2020 3:14 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738036617163440220/Screenshot_from_2020-07-29_19-40-28.png


[07/29/2020 3:14 PM] scalahub#2618
@Robert K see above


[07/29/2020 3:20 PM] Robert K#0722
Ah, good catch.


[07/29/2020 3:20 PM] Robert K#0722
Sorry about that, will fix the specs.


[07/29/2020 3:21 PM] Robert K#0722
Hmm, the oracle core is breaking because it still found a datapoint box without an R6


[07/29/2020 3:23 PM] Robert K#0722
```json
"{\"boxId\":\"9441cf85bb564c72426b5eca49bce5f6cb27778c598ad02f34ca4358027b3a44\",\"value\":2000000,\"ergoTree\":\"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0eca02100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004140580dac4090402048092f401040201010402058092f4010400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad7202d9010563cde4c672050407730d00d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493c272037305cd7202\",\"assets\":[{\"tokenId\":\"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed\",\"amount\":1}],\"creationHeight\":280831,\"additionalRegisters\":{\"R4\":\"07029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4\",\"R5\":\"0e0101\"},\"transactionId\":\"dfad960e6fb085f10e9b700f5631251b11209e7ed09a56c94d8bd91452226344\",\"index\":1}"```


[07/29/2020 3:23 PM] scalahub#2618
this seems to be bootstrap because R5 is a very small value


[07/29/2020 3:24 PM] scalahub#2618
(box id is 32 bytes so this is not box id)


[07/29/2020 3:26 PM] scalahub#2618
R6 is not needed.. so maybe keep the specs as is? (also same with R5)


[07/29/2020 3:26 PM] Robert K#0722
R6 is not needed but it makes the off-chain logic more complicated


[07/29/2020 3:27 PM] Robert K#0722
Because then I need to check if an R6 is included or not, and then that changes the expected representation of intenal structs


[07/29/2020 3:28 PM] scalahub#2618
ok fair enough


[07/29/2020 3:29 PM] Robert K#0722
Okay, I'll hand jerry-rig the oracle code to spend the bootstrapped datapoint


[07/29/2020 3:29 PM] Robert K#0722
The specs have been updated, so we can just put some default placeholder datapoint on bootstrap from now on.


[07/29/2020 3:30 PM] Robert K#0722
I think in general using placeholder values for bootstrapping any protocol makes the most sense, unless there is an explicit bootstrap period required in the protocol itself which say requires everyone to be bootstrapped 100% for sure before starting.


[07/29/2020 3:31 PM] scalahub#2618
I'll also update the bootstrap logic

{Reactions}
üëç 

[07/29/2020 3:33 PM] scalahub#2618
yes no harm in default placeholders.. also sometimes makes onchain easier (not in this case)


[07/29/2020 3:36 PM] Robert K#0722
Hmm, the "Commit Datapoint" action currently returns this:


[07/29/2020 3:37 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738042399225413652/message.txt


[07/29/2020 3:37 PM] Robert K#0722
```scala
 Failed to sign boxes due to Error in Evaluation.compile.evaluate(s3601 -> MethodCall(s3600, scalan.Base$Ref special.sigma.SigmaDsl$Box.getReg(scalan.Base$Ref,scalan.TypeDescs$Elem), [s90, GroupElementElem<GroupElement>], true)): Vector(ErgoBox(9441cf85bb564c72426b5eca49bce5f6cb27778c598ad02f34ca4358027b3a44,2000000,ErgoTree(16,WrappedArray(IntConstant(0), IntConstant(0), LongConstant(0), IntConstant(0), ConstantNode(Coll(
```


[07/29/2020 3:39 PM] scalahub#2618
Are you using 1000000 nano ergs output?


[07/29/2020 3:40 PM] Robert K#0722
This is the tx request:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738043318352740444/message.txt


[07/29/2020 3:41 PM] scalahub#2618
actually that is fine.. looking at request only


[07/29/2020 3:42 PM] scalahub#2618
do you have the right private key?


[07/29/2020 3:42 PM] scalahub#2618
I think something wrong here


[07/29/2020 3:43 PM] scalahub#2618
`\"R5\":\"0e4061643462366636656239373838393634656139383561616632343238643061646636653537346230633162363836343263623465363433393431323263333737\"`


[07/29/2020 3:43 PM] scalahub#2618
this is not a box id


[07/29/2020 3:43 PM] Robert K#0722
In regards to the private key, yeah.


[07/29/2020 3:43 PM] Robert K#0722
Ah, I encoded it as a byte string.


[07/29/2020 3:44 PM] Robert K#0722
How is it meant to be encoded?


[07/29/2020 3:44 PM] scalahub#2618
so its a Coil[Byte]


[07/29/2020 3:46 PM] scalahub#2618
Probably @kushti can correct me if I'm wrong. its of this form `0e-01-1a` , where `0e` is the type, `01` is the length and `1a` is the byte


[07/29/2020 3:46 PM] scalahub#2618
so it should be `0e-20-[bytes]`


[07/29/2020 3:47 PM] scalahub#2618
what is the boxId?


[07/29/2020 3:47 PM] Robert K#0722
I do have to say, this all needs to get a lot simpler üòÖ


[07/29/2020 3:47 PM] Robert K#0722
The complexity of just encoding values and checking equality is a bit much here for all of these different types of values.


[07/29/2020 3:48 PM] Robert K#0722
It's going to be rough for devs to come in when it's this undocumented and seemingly unapproachable.


[07/29/2020 3:48 PM] Robert K#0722
Here let me print out the boxId


[07/29/2020 3:49 PM] scalahub#2618
yes the library should do this, for example in Kiosk https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Spec.scala#L109

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolV2Spec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/29/2020 3:49 PM] scalahub#2618
`val r5dataPoint = KioskCollByte(liveEpochBox.getId.getBytes)`


[07/29/2020 3:50 PM] Robert K#0722
The id was: `ad4b6f6eb9788964ea985aaf2428d0adf6e574b0c1b68642cb4e64394122c377`


[07/29/2020 3:51 PM] scalahub#2618
this is what the R5 should be set to `0e20ad4b6f6eb9788964ea985aaf2428d0adf6e574b0c1b68642cb4e64394122c377`


[07/29/2020 3:52 PM] scalahub#2618
but sigma-rust should handle this?


[07/29/2020 3:54 PM] Robert K#0722
@greenhat If you could chime in here that would be very much appreciated.


[07/29/2020 3:54 PM] Robert K#0722
I'm currently encoding the box id via this function I wrote for simplicity using sigma-rust:
```rust
pub fn serialize_string(s: &String) -> String {
    let a = s.clone().into_bytes();
    let b: Vec<i8> = a.iter().map(|c| c.clone() as i8).collect();
    let constant: Constant = b.into();
    constant.base16_str()
}
```


[07/29/2020 3:55 PM] scalahub#2618
I think it will be good to document the serialzation on the forums (if not already done).. this is one of the things that need clarity

{Reactions}
üíØ 

[07/29/2020 3:55 PM] greenhat#6562
üëã


[07/29/2020 3:55 PM] Robert K#0722
The result of running the above id via that is `0e4061643462366636656239373838393634656139383561616632343238643061646636653537346230633162363836343263623465363433393431323263333737`
while scalahub is saying it should be:
`0e20ad4b6f6eb9788964ea985aaf2428d0adf6e574b0c1b68642cb4e64394122c377`


[07/29/2020 3:56 PM] Robert K#0722
Is that because I'm serializing the string of the box id?


[07/29/2020 3:56 PM] scalahub#2618
box id is hex encoded


[07/29/2020 3:57 PM] scalahub#2618
so probably serializing the string is not right. you should decode the hex to bytes


[07/29/2020 3:57 PM] scalahub#2618
(but my rust knowledge is almost 0)


[07/29/2020 3:58 PM] Robert K#0722
> I think it will be good to document the serialzation on the forums (if not already done).. this is one of the things that need clarity
@scalahub To be honest there should be a full fledged document laying it out.


[07/29/2020 3:59 PM] greenhat#6562
@Robert K If you're getting box id as string it's most likely a base16 encoded byte array. Yes, decode base16 string into byte array and then make a Constant out of it and serialize it.

{Reactions}
üëå 

[07/29/2020 3:59 PM] scalahub#2618
there is already ergo tree spec but that is too tech to wade through.. just a summary of serialization of each type will be useful in itself

{Reactions}
üëç 

[07/29/2020 4:00 PM] Robert K#0722
Makes sense, thanks @greenhat


[07/29/2020 4:00 PM] greenhat#6562
Happy to help!


[07/29/2020 4:03 PM] Robert K#0722
Actually, @greenhat, isn't that what the above function I posted is doing specifically?


[07/29/2020 4:04 PM] kushti#0978
@Robert K please ping me when you need for a rescan, finishing PR )

{Reactions}
üëç 

[07/29/2020 4:04 PM] greenhat#6562
@Robert K I don‚Äôt see base16 decoding.


[07/29/2020 4:05 PM] Robert K#0722
Ah, yes, sorry I'm blind üòÖ


[07/29/2020 4:14 PM] scalahub#2618
which IDE are you using for rust @Robert K


[07/29/2020 4:19 PM] kushti#0978
@scalahub IDEA is pretty good for Rust actually

{Reactions}
üëç 

[07/29/2020 4:24 PM] Robert K#0722
I personally use VS Code, but there's lot of good options


[07/29/2020 4:25 PM] Robert K#0722
Okay cool, now with the proper Base16 decoding, the register is correctly encoded and I get `0e20ad4b6f6eb9788964ea985aaf2428d0adf6e574b0c1b68642cb4e64394122c377` upon testing


[07/29/2020 4:28 PM] Robert K#0722
Hmmm, still get the same error


[07/29/2020 4:31 PM] Robert K#0722
I do own the private key, as this is one of the addresses in the wallet in the node I am using.


[07/29/2020 4:31 PM] Robert K#0722
And the scan picked up this box, so the address in R4 should indeed be the same/correct address.


[07/29/2020 4:33 PM] Robert K#0722
Here's the new request + error response

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738056612727750756/message.txt


[07/29/2020 4:51 PM] scalahub#2618
can you also explain how you are computing `0e240008cd029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4` for R4


[07/29/2020 4:52 PM] scalahub#2618
R4 should be of the form `070290d9bbac88042a69660b263b4afc29a2084a0ffce4665de89211846d42bb30e4`, where `07` is the group element type and the rest if the EC point


[07/29/2020 4:54 PM] scalahub#2618
so R4 should be exactly 68 chars (34 bytes)


[07/29/2020 4:56 PM] Robert K#0722
Calling `/address_to_bytes/` endpoint on node


[07/29/2020 4:58 PM] Robert K#0722
I forgot to change the action logic to use the correct address as I changed in the scan.


[07/29/2020 4:59 PM] Robert K#0722
Aha! That indeed was the problem. Good catch


[07/29/2020 4:59 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/dac9e74a1636ee233aa0924eb89e96e8a3d4c497d63a74ff8860298df53b3c38


[07/29/2020 5:01 PM] Robert K#0722
Though the fee per byte might be too low, so I may need to adjust that.


[07/29/2020 5:16 PM] scalahub#2618
yes I think need more fee


[07/29/2020 5:17 PM] scalahub#2618
but congrats.. it worked!


[07/29/2020 5:20 PM] scalahub#2618
I'll sign off for now.. will check messages in morning. I'll update and publish the bootstrap script with the new spec tomorrow hopefully


[07/29/2020 5:22 PM] Robert K#0722
Sounds good, I think the rest of the data I automatically encode/serialize should mostly be good from here forward, but there's still a couple things to change for reading the newly encodd box id so I'll address that now and try to get the full protocol running.


[07/29/2020 5:22 PM] Robert K#0722
Will let you know if I hit any serious problems, otherwise hopefully it should be good by tomorrow for you and running.

{Reactions}
üëç (2) 

[07/29/2020 7:45 PM] Robert K#0722
Hmm, `Failed to sign boxes due to Script reduced to false: Vector(ErgoBox(ad4b6f6eb9788964ea985aaf2428d0adf6e574b0c1b68642cb4e64394122c377,16000000,ErgoTree(16,WrappedArray(IntConstant(0), IntConstant`


[07/29/2020 7:45 PM] Robert K#0722
I assume that means the generated tx failed to validate according to the smart contract?


[07/29/2020 8:01 PM] kushti#0978
Yes, the guarding proposition evaluated to false just


[07/29/2020 8:57 PM] Robert K#0722
Got the "Collect Datapoints" action debugged and it works üòÑ  https://explorer.ergoplatform.com/en/transactions/df40e063665bd9def928f5f15571439c5f1f8d2c4e59922e117e2e76c4860e79

{Reactions}
üíü (2) 

[07/29/2020 9:57 PM] Robert K#0722
We definitely need to use hashes, the address for the pool deposit is crazy large indeed

{Reactions}
üëç 

[07/29/2020 10:11 PM] Robert K#0722
Haha, apparently collecting funds, the literal simplest action in the protocol, is causing me more trouble to debug than collect datapoints, the most complicated action.


[07/29/2020 10:12 PM] Robert K#0722
I'm going to call it a day for now, but we're making some good progress nonetheless. 

So far what has been tested/works:
- Create New Epoch
- Collect Datapoints
- Submit Datapoint


[07/29/2020 10:13 PM] Robert K#0722
The final two shouldn't be that hard to figure out since they're similar/have simpler logic.


[07/29/2020 10:15 PM] Robert K#0722
Nonetheless, if anyone wants to take a glance here's the state of the protocol/auto generated "Collect Funds" request/node bad request response:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738142588875309087/message.txt


[07/30/2020 2:11 PM] Robert K#0722
Morning üëã


[07/30/2020 2:12 PM] Robert K#0722
So the error for collect funds I'm getting is:
```scala
. Failed to sign boxes due to Error in Evaluation.compile.evaluate(s2124 -> MethodCall(s2123, scalan.Base$Ref wrappers.scala.WOptions$WOption.get(), [], true)): Vector(ErgoBox(5f68b6d876614c2d50f73d6644cff4ee3e46efec3a2c110bb0a2d18eb1c427f9,12000000,ErgoTree(16,WrappedArray(LongConstant(10000000), IntConstant(0), ConstantNode(Coll(16,14,4,0,4,0,14,32,18,-54,-86,-53,81,-56,-106,70,-6,-55```


[07/30/2020 2:13 PM] Robert K#0722
What does that specifically mean, it failed to compile the contract?


[07/30/2020 2:44 PM] Robert K#0722
@scalahub @kushti Any ideas?


[07/30/2020 3:23 PM] kushti#0978
Here, one second

{Reactions}
üëå 

[07/30/2020 3:25 PM] Robert K#0722
Here's a new version where I fixed one of the registers but still same error:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738401879876304987/message.txt


[07/30/2020 3:28 PM] kushti#0978
the error is something about wrappers.scala.WOptions$WOption.get()


[07/30/2020 3:28 PM] kushti#0978
so unwrapping optional value


[07/30/2020 3:32 PM] kushti#0978
OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
       |    OUTPUTS(0).R5[Int].get == SELF.R5[Int].get


[07/30/2020 3:32 PM] kushti#0978
so here ?


[07/30/2020 3:40 PM] scalahub#2618
the collected pool output should be first one


[07/30/2020 3:40 PM] scalahub#2618
is it the first?


[07/30/2020 3:40 PM] scalahub#2618
wait.. scratch that.. it is the first


[07/30/2020 3:57 PM] kushti#0978
yes


[07/30/2020 3:58 PM] kushti#0978
looking further


[07/30/2020 3:58 PM] kushti#0978
@greenhat maybe you can help with debugging or debugging hints ? )


[07/30/2020 4:07 PM] greenhat#6562
@kushti @Robert K I concur, seems like get is failing. It might be the wrong type or missing register value altogether. Where can I see the contract source?


[07/30/2020 4:08 PM] Robert K#0722
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala @greenhat

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 4:08 PM] Robert K#0722
Line 151 for the pool deposit contract


[07/30/2020 4:08 PM] Robert K#0722
Which is a bunch of UTXOs which are being spent under said contract.


[07/30/2020 4:08 PM] greenhat#6562
Unfortunately there is no easy way of debugging such crashes.


[07/30/2020 4:09 PM] Robert K#0722
As well as a utxo under the epoch prep script with the collect funds spending path, line 115-120


[07/30/2020 4:10 PM] Robert K#0722
Hmm, I'll check the register values that get encoded and make sure they match as expected


[07/30/2020 4:12 PM] scalahub#2618
I'll do a mock test for fund collection


[07/30/2020 4:13 PM] scalahub#2618
that is the only thing pending. will report back shortly


[07/30/2020 4:15 PM] scalahub#2618
@greenhat can you please check if any obvious bugs in the 2 scripts involved


[07/30/2020 4:16 PM] scalahub#2618
pasting the line numbers


[07/30/2020 4:16 PM] greenhat#6562
pool deposit contract does not have `.get` calls, thus I believe it's not what causes crash.  This code (from 115-120) much more likely to hold the cause:
```
OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
       |    OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
```
Also, this might be AOTC fail (not-so-lazy evaluation) bug. Check if all `.get` calls have values (I see R6 above).


[07/30/2020 4:16 PM] greenhat#6562
@scalahub will do


[07/30/2020 4:16 PM] scalahub#2618
Possibly here https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L97

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 4:17 PM] scalahub#2618
script 1: https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L83:L123

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 4:17 PM] scalahub#2618
script 2: https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L152:L167

{Embed}
https://github.com/scalahub/Kiosk/blob/8ca33f3aed61666e39c0fa8dae2bfc2114c56e62/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 4:18 PM] Robert K#0722
Ah, yeah the epoch prep box doesn't have a R6


[07/30/2020 4:18 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/df40e063665bd9def928f5f15571439c5f1f8d2c4e59922e117e2e76c4860e79 output #1


[07/30/2020 4:20 PM] Robert K#0722
As per the spec the epoch prep box doesn't have a R6.


[07/30/2020 4:21 PM] scalahub#2618
yes and R6 is needed for output (live epoch), not for epoch prep, so that should be ok


[07/30/2020 4:21 PM] Robert K#0722
So that check needs to be embedded in start/create new epoch spending paths


[07/30/2020 4:21 PM] scalahub#2618
but the AOTC costing may need R6 to be always present


[07/30/2020 4:22 PM] scalahub#2618
let me also do some tests first before making changes to spec


[07/30/2020 4:23 PM] Robert K#0722
If you put the collect funds path first, does that change the execution?


[07/30/2020 4:24 PM] Robert K#0722
My naive assumption would be that if you hard-code those conditions (from isLiveEpochOutput)  in both of the start/create spending paths and put the collect funds path first, then it should work?


[07/30/2020 4:26 PM] greenhat#6562
@scalahub script 1 looks fine, besides possible missing register values.


[07/30/2020 4:27 PM] greenhat#6562
script 2 looks fine to me.


[07/30/2020 4:34 PM] kushti#0978
Need for R6 can be avoided via  if(R6.get.isDefined) pattern I guess

{Reactions}
üëç 

[07/30/2020 4:36 PM] Robert K#0722
Would be better to address implementation details in contracts rather than altering the spec if possible.


[07/30/2020 4:39 PM] kushti#0978
Let's check if it is about R6 first


[07/30/2020 4:40 PM] kushti#0978
@scalahub your test will show it right?


[07/30/2020 4:40 PM] kushti#0978
@Robert K so what's the progress to the moment ?


[07/30/2020 4:41 PM] Robert K#0722
Same as I reported last night, 3/5 actions required in the oracle core are tested working/are automated.


[07/30/2020 4:43 PM] Robert K#0722
All the logic is in place so that once we fix them, we can leave the oracle running and it'll perform the protocol with hard-wired datapoint posting and go through all of the stages.


[07/30/2020 4:43 PM] Robert K#0722
If we submit funds to the oracle pool, it'll automatically collect them when it gets to the epoch prep period.


[07/30/2020 4:44 PM] Robert K#0722
I can get back to working on the HTTP API in the mean time for submitting datapoints to the oracle core.


[07/30/2020 4:54 PM] scalahub#2618
yes my test will catch it


[07/30/2020 5:00 PM] scalahub#2618
yes it is indeed due to the AOTC issue that @greenhat mentioned


[07/30/2020 5:01 PM] scalahub#2618
will upload my finding shortly .. cleaning up the test


[07/30/2020 5:20 PM] scalahub#2618
ok here is the test. https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolFundingSpec.scala#L83:L99

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolFundingSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 5:33 PM] scalahub#2618
just did a collection with dummy value in R6 https://explorer.ergoplatform.com/en/transactions/8ed1f024a817ae47f1495ffd4c313e2ef886c91c43b11e34c02130a2020bb7fe


[07/30/2020 5:40 PM] kushti#0978
@scalahub so a fix would be something like 
| | (
if(!OUTPUTS(0).R6[Coll[Byte]].isDefined) {
sigmaProp( // collect funds
       |    OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
       |    OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
       |    OUTPUTS(0).propositionBytes == SELF.propositionBytes &&
       |    OUTPUTS(0).tokens == SELF.tokens &&
       |    OUTPUTS(0).value > SELF.value
       |  )
)} else {
 false
}
instead of 
| | sigmaProp( // collect funds
       |    OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
       |    OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
       |    OUTPUTS(0).propositionBytes == SELF.propositionBytes &&
       |    OUTPUTS(0).tokens == SELF.tokens &&
       |    OUTPUTS(0).value > SELF.value
       |  )


[07/30/2020 5:40 PM] kushti#0978
?


[07/30/2020 5:44 PM] scalahub#2618
checking


[07/30/2020 5:55 PM] scalahub#2618
That didn't work but following did
```{
  // This box:
  // R4: The finalized data point from collection
  // R5: Height the epoch will end

  val canStartEpoch = HEIGHT > SELF.R5[Int].get - $livePeriod + $prepPeriod
  val epochNotOver = HEIGHT < SELF.R5[Int].get
  val epochOver = HEIGHT >= SELF.R5[Int].get
  val enoughFunds = SELF.value >= $minPoolBoxValue

  val maxNewEpochHeight = HEIGHT + $epochPeriod + $buffer
  val minNewEpochHeight = HEIGHT + $epochPeriod

  if (OUTPUTS(0).R6[Coll[Byte]].isDefined) {
    val isliveEpochOutput =  OUTPUTS(0).R6[Coll[Byte]].get == SELF.propositionBytes &&
                             OUTPUTS(0).propositionBytes == liveEpochScriptBytes
    sigmaProp( // start next epoch
      epochNotOver && canStartEpoch && enoughFunds &&
      OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
      OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
      OUTPUTS(0).tokens == SELF.tokens &&
      OUTPUTS(0).value >= SELF.value &&
      isliveEpochOutput
    ) || sigmaProp( // create new epoch
      epochOver &&
      enoughFunds &&
      OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
      OUTPUTS(0).R5[Int].get >= minNewEpochHeight &&
      OUTPUTS(0).R5[Int].get <= maxNewEpochHeight &&
      OUTPUTS(0).tokens == SELF.tokens &&
      OUTPUTS(0).value >= SELF.value &&
      isliveEpochOutput
    )
  } else {
    sigmaProp( // collect funds
      OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
      OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
      OUTPUTS(0).propositionBytes == SELF.propositionBytes &&
      OUTPUTS(0).tokens == SELF.tokens &&
      OUTPUTS(0).value > SELF.value
    )
  }
}
```

{Reactions}
üëç 

[07/30/2020 6:00 PM] Robert K#0722
So are we going to bootstrap a new pool then @scalahub ?


[07/30/2020 6:05 PM] scalahub#2618
idk what do you prefer?


[07/30/2020 6:06 PM] Robert K#0722
I think it would be good to be able to test that everything works as intended.


[07/30/2020 6:06 PM] Robert K#0722
So if it's not too much of a hassle that'd be great.


[07/30/2020 6:07 PM] scalahub#2618
sure I'll upload new version shortly and bootstrap the boxes


[07/30/2020 6:08 PM] scalahub#2618
should be done within an hr


[07/30/2020 6:09 PM] scalahub#2618
I'll first create the addresses


[07/30/2020 6:09 PM] scalahub#2618
tokens remain the same.. then you can do your scan


[07/30/2020 6:09 PM] scalahub#2618
and do you want to try the hashed version?


[07/30/2020 6:10 PM] Robert K#0722
So for the hashed version, we're hashing the exact same values we currently have with blake256b?


[07/30/2020 6:10 PM] scalahub#2618
yes for the live and the prep scripts


[07/30/2020 6:10 PM] Robert K#0722
Right, but does that means hash the value itself before it's encoded with the register type bytes I presume?


[07/30/2020 6:11 PM] Robert K#0722
And the hash is stored as a byte string?


[07/30/2020 6:11 PM] scalahub#2618
so we first serialize the ergotree to bytes


[07/30/2020 6:11 PM] scalahub#2618
and then compute blake2b256 of that and then store that result


[07/30/2020 6:11 PM] Robert K#0722
But what does "store that result" mean in terms of encoding in the register?


[07/30/2020 6:11 PM] scalahub#2618
1 min.. let me share some sample code


[07/30/2020 6:12 PM] Robert K#0722
Hmm, I have a meeting shortly and some other internal matters so maybe can we do without hash for right now and do hashing in the next iteration?


[07/30/2020 6:13 PM] scalahub#2618
ok sure I'm ok with that too


[07/30/2020 6:13 PM] Robert K#0722
I would really like to get to the pool running and just leave it for a few hours to make sure everything goes smoothly.


[07/30/2020 6:13 PM] Robert K#0722
Thanks.


[07/30/2020 6:13 PM] scalahub#2618
`val r6liveEpoch = KioskCollByte(pool.epochPrepErgoTree.bytes)` 
becomes
`val r6liveEpoch = KioskCollByte(Blake2b256(pool.epochPrepErgoTree.bytes))`

{Reactions}
üëç 

[07/30/2020 6:14 PM] scalahub#2618
but no worries.. will do without it first


[07/30/2020 6:17 PM] kushti#0978
btw it seems AOTC not-so-lazy evaluation can be bypassed in all the cases (we had, at least)


[07/30/2020 6:18 PM] kushti#0978
so no stoppers we have for now ?


[07/30/2020 6:22 PM] Robert K#0722
Yeah, everything seems good for now.


[07/30/2020 6:22 PM] Robert K#0722
Also just submit the first "Commit Datapoint" action txs via the oracle core API: https://explorer.ergoplatform.com/en/transactions/ca2d7aaf2671d4cb1427f5623c31171540b37e3bad3671663e578857d440b4c7


[07/30/2020 6:27 PM] scalahub#2618
also AOTC aggressive behavior does not break anything in this case because we can always put a dummy R6


[07/30/2020 6:29 PM] scalahub#2618
@Robert K here are the updated addresses https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala#L43:L47

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 6:40 PM] Robert K#0722
Hmm, if we reuse the same tokens/same addresses the scans might get mixed up.


[07/30/2020 6:41 PM] Robert K#0722
Actually, I guess we can "deprecate" the old pool by moving it into the epoch prep state, and then the new scans won't catch it. nevermind.


[07/30/2020 6:42 PM] Robert K#0722
Alright, the scans have been registered


[07/30/2020 6:46 PM] scalahub#2618
I can use new tokens too .. not a big deal


[07/30/2020 6:48 PM] scalahub#2618
but since you are ok with same tokens, lets continue with the above addresses (addresses depend on token)


[07/30/2020 7:00 PM] Robert K#0722
Yep, sounds good.


[07/30/2020 7:32 PM] scalahub#2618
@Robert K bootstrapped epoch-prep and data-point boxes


[07/30/2020 7:32 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/e28c90edbc201090fd112892347a66b022524f451dd023743fae35ae2bbebb68


[07/30/2020 8:00 PM] Robert K#0722
Okay the pool is running


[07/30/2020 8:00 PM] Robert K#0722
Missed testing funding the pool by mistake haha


[07/30/2020 8:00 PM] Robert K#0722
The oracle core created a new epoch: https://explorer.ergoplatform.com/en/transactions/e69cf5ba4f5f3a564c7c78c0c96c80ac15dac1bf63a1719590f9c0a26d81f3c8

{Reactions}
üíØ (2) 

[07/30/2020 8:13 PM] Robert K#0722
Hah, I've been waiting 17 minutes for a block to be produced to get to more testing of the pool üòÖ


[07/30/2020 8:16 PM] scalahub#2618
nice! wonder why it took so long.. blocks have been getting mined


[07/30/2020 8:17 PM] scalahub#2618
oh wait last one was indeed quite long


[07/30/2020 8:18 PM] scalahub#2618
I'll try to get oracle core running tomorrow


[07/30/2020 8:19 PM] scalahub#2618
are there instructions to set it up?


[07/30/2020 8:19 PM] Robert K#0722
No, not currently.


[07/30/2020 8:19 PM] scalahub#2618
are there any one liners?


[07/30/2020 8:20 PM] Robert K#0722
Essentially you fill out the oracle-config.yaml, then run `cargo run` to build/run the oracle


[07/30/2020 8:20 PM] scalahub#2618
ok will ask if I need help


[07/30/2020 8:20 PM] Robert K#0722
You need a node with an unlocked wallet and that owns your oracle's address.


[07/30/2020 8:21 PM] scalahub#2618
yes thats why.. I'll need a bit of time.. to setup node


[07/30/2020 8:21 PM] scalahub#2618
should I sync later?


[07/30/2020 8:22 PM] Robert K#0722
It'd be good to get the oracle core running before syncing fully


[07/30/2020 8:22 PM] Robert K#0722
Because it registers scans based on your config with the node


[07/30/2020 8:22 PM] scalahub#2618
ok


[07/30/2020 8:23 PM] Robert K#0722
The current `oracle-config.yaml` is pretty much good to go for our current pool


[07/30/2020 8:23 PM] Robert K#0722
Just edit your local oracle address, and node info.


[07/30/2020 8:24 PM] Robert K#0722
You'll know the oracle core succeeded in registering scans by checking the `scanIds.json` and seeing the ids there or checking your node directly via api calls.


[07/30/2020 8:24 PM] scalahub#2618
what about commit operation?


[07/30/2020 8:25 PM] scalahub#2618
how is that triggered?


[07/30/2020 8:25 PM] Robert K#0722
Currently it's automatic


[07/30/2020 8:25 PM] Robert K#0722
Though I just finished implementing the api endpoint for it too.


[07/30/2020 8:25 PM] scalahub#2618
automatic with random rate?


[07/30/2020 8:25 PM] Robert K#0722
You have a rest API at localhost port `9090`


[07/30/2020 8:25 PM] Robert K#0722
Currently it's just hardcoded üòÖ


[07/30/2020 8:26 PM] scalahub#2618
cool maybe make a little variation.. so we can test the averaging


[07/30/2020 8:26 PM] scalahub#2618
and only one oracle is active right now?


[07/30/2020 8:26 PM] Robert K#0722
The automated posting checks if you've posted, if not then posts for you.


[07/30/2020 8:26 PM] Robert K#0722
Yes


[07/30/2020 8:27 PM] kushti#0978
https://explorer.ergoplatform.com/en/addresses/9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r


[07/30/2020 8:27 PM] kushti#0978
189 pools-related transactions already )


[07/30/2020 8:27 PM] scalahub#2618
so end point to set the rate to be used next.


[07/30/2020 8:28 PM] Robert K#0722
You can read the readme for the endpoints, or check `api.rs`


[07/30/2020 8:28 PM] scalahub#2618
I mean its better to set the rate rather than create tx


[07/30/2020 8:32 PM] scalahub#2618
ok so based on api.rs, its trying to post realtime.. but for automation its better to save the rate for the next automated posting. otherwise, the operator has to manually track


[07/30/2020 8:33 PM] scalahub#2618
so I can keep `POST`ing the rate every now and then without worrying about pool state


[07/30/2020 8:37 PM] scalahub#2618
code looks pretty neat.. will revert back after running it


[07/30/2020 8:48 PM] Robert K#0722
The problem with waiting for the next automated posting is that the tx id won't be generated/returned, right?


[07/30/2020 8:49 PM] Robert K#0722
And please do let me know if you run into any issues/bugs/catch some oddities in the code.


[07/30/2020 8:50 PM] scalahub#2618
cool.. If possible I'll try to make a PR with my suggestion.. easier to explain using code üôÇ

{Reactions}
üíØ 

[07/30/2020 8:51 PM] Robert K#0722
Even better


[07/30/2020 8:52 PM] scalahub#2618
the next tasks for me would be to get core to run. meantime you can keep running for a day


[07/30/2020 8:53 PM] Robert K#0722
Hmm, apparently not everything is solved yet:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738484557799489687/message.txt


[07/30/2020 8:54 PM] Robert K#0722
Both the Collect funds action & the Start Next Epoch action failed.


[07/30/2020 8:54 PM] Robert K#0722
(And lol, idk how start next epoch fails but create new epoch works)


[07/30/2020 8:54 PM] scalahub#2618
its the issue with buffer?


[07/30/2020 8:54 PM] Robert K#0722
I'm thinking maybe


[07/30/2020 8:55 PM] scalahub#2618
keep the height max.. i.e. current height + epoch + buffer = currentHeight + 14


[07/30/2020 8:55 PM] scalahub#2618
but collect is different


[07/30/2020 8:55 PM] scalahub#2618
collect is a bit tricky


[07/30/2020 8:55 PM] Robert K#0722
Yeah, I'll take a look at the buffer


[07/30/2020 8:57 PM] scalahub#2618
This line: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L167

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 8:57 PM] scalahub#2618
so you cannot pay fee using collection boxes.. A new box must be used for fee


[07/30/2020 8:59 PM] scalahub#2618
so collect will fail if the `new epoch prep box funds` is less than `old epoch box funds + total funding box funds`


[07/30/2020 8:59 PM] Robert K#0722
Ah I see


[07/30/2020 8:59 PM] scalahub#2618
for the new and create epoch failure should be related to using less buffer


[07/30/2020 9:00 PM] Robert K#0722
For collection though I already add in a box from the local wallet so that should cover it. I will double check my calc of the final value


[07/30/2020 9:02 PM] Robert K#0722
I think I found the problem for collect funds, I added the extra box but calculated the total wrong.


[07/30/2020 9:06 PM] scalahub#2618
ok hope that was it


[07/30/2020 9:07 PM] Robert K#0722
We'll see in 10 blocks


[07/30/2020 9:18 PM] Robert K#0722
Hmm, isn't this logic off @scalahub  in the epoch prep script?


[07/30/2020 9:18 PM] Robert K#0722
`       |  val canStartEpoch = HEIGHT > SELF.R5[Int].get - $livePeriod + $prepPeriod`


[07/30/2020 9:18 PM] Robert K#0722
Shouldn't it just be `R5 - $livePeriod`


[07/30/2020 9:18 PM] Robert K#0722
Because right now what you're doing is `R5 - 5 + 5`


[07/30/2020 9:19 PM] Robert K#0722
Which would explain why an epoch can't start, because the math here means that it can start when the epoch ends. Thus the oracle core can only create a new epoch.


[07/30/2020 9:25 PM] scalahub#2618
ufff you seem to be right


[07/30/2020 9:26 PM] scalahub#2618
but the spec also has that üò¶


[07/30/2020 9:26 PM] scalahub#2618
`[Finish Block Height Of Upcoming Epoch (R5)] - [Live Epoch Duration] + [Epoch Preparation Duration]`


[07/30/2020 9:26 PM] scalahub#2618
https://github.com/ergoplatform/oracle-core/blob/master/docs/Basic-Oracle-Pool-Spec.md#Action-Start-Next-Epoch


[07/30/2020 9:27 PM] Robert K#0722
Ah, haha


[07/30/2020 9:27 PM] Robert K#0722
Woops üòÖ


[07/30/2020 9:27 PM] scalahub#2618
lol


[07/30/2020 9:27 PM] scalahub#2618
this time I was blindly following the spec üòâ


[07/30/2020 9:28 PM] scalahub#2618
what was the intention actually?


[07/30/2020 9:28 PM] Robert K#0722
On the bright side the collect funds tx went through üôÇ https://explorer.ergoplatform.com/en/transactions/e66b0d7ee9a4030557f95a4d57e4c6cf5d0c05007095ac3a303923c0def96062


[07/30/2020 9:28 PM] scalahub#2618
should it be - instead of + ?


[07/30/2020 9:28 PM] Robert K#0722
Originally I was defining `epoch` as both the live + prep periods.


[07/30/2020 9:29 PM] Robert K#0722
This was confusing, so I switched to `live` and `prep`


[07/30/2020 9:29 PM] Robert K#0722
So originally the protocol was set up so that (with our current parameters) epoch would equal `10`.


[07/30/2020 9:29 PM] Robert K#0722
So it would have been `R5 - 10 + 5`


[07/30/2020 9:30 PM] Robert K#0722
And while renaming everything and trying to fix it all, I missed this piece of logic


[07/30/2020 9:30 PM] scalahub#2618
ok cool so do we need to bootstrap once more?


[07/30/2020 9:31 PM] Robert K#0722
Yeah unfortunately


[07/30/2020 9:31 PM] Robert K#0722
I'll get to editing all the specs now


[07/30/2020 9:31 PM] scalahub#2618
no worries.. will do..


[07/30/2020 9:32 PM] scalahub#2618
Instead of `R5 - 10 + 5`, isn't it same as `R5 - 5` ? (i.e., `R5 - liveEpoch`)


[07/30/2020 9:33 PM] Robert K#0722
Yep, so the logic now is just like what you said.


[07/30/2020 9:33 PM] Robert K#0722
Before live epoch wasn't defined explicitly, so we needed to calculate it implicitly.


[07/30/2020 9:33 PM] scalahub#2618
ok so I can do the change

{Reactions}
üëå 

[07/30/2020 9:38 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala#L44:L48

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 9:38 PM] scalahub#2618
here are the addresses


[07/30/2020 9:40 PM] scalahub#2618
can you also check that the script is correct? https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala#L89

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/30/2020 9:40 PM] Robert K#0722
Alright the scans are registered


[07/30/2020 9:40 PM] Robert K#0722
And will do, will take a look now


[07/30/2020 9:46 PM] scalahub#2618
shall I bootstrap?


[07/30/2020 9:47 PM] Robert K#0722
Yeah, everything should be good to go.


[07/30/2020 9:50 PM] scalahub#2618
bootstrap tx https://explorer.ergoplatform.com/en/transactions/de96d6cb377184df49d93ee280db2fcc7fc3ef38444f3f2c2e00c8985bfd776a


[07/30/2020 9:59 PM] Robert K#0722
Did you bootstrap epoch prep?


[07/30/2020 9:59 PM] Robert K#0722
It's only picking up the datapoint box.


[07/30/2020 9:59 PM] Robert K#0722
Hmm, it does seem like you did bootstrap it.


[07/30/2020 10:06 PM] Robert K#0722
The prep address in the file is different than what you bootstrapped @scalahub


[07/30/2020 10:07 PM] scalahub#2618
oh yes my bad.. I didnt change the prep code.. 1 min let me create new prep box


[07/30/2020 10:12 PM] scalahub#2618
here is the correct bootstrap tx


[07/30/2020 10:12 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/12224227459c65733c8632ad4731f9738188e6791c5f879305af65a212f066bb


[07/30/2020 10:13 PM] scalahub#2618
is that picked up now @Robert K


[07/30/2020 10:15 PM] Robert K#0722
Yeah it is


[07/30/2020 10:16 PM] Robert K#0722
Hmm, but now something is broken again.


[07/30/2020 10:17 PM] Robert K#0722
The oracle core is suddenly not reading any boxes after creating the new epoch?


[07/30/2020 10:18 PM] Robert K#0722
But the boxes are showing up in the node


[07/30/2020 10:24 PM] kushti#0978
why?


[07/30/2020 10:26 PM] Robert K#0722
That is indeed a good question


[07/30/2020 10:27 PM] Robert K#0722
Looking into it now.


[07/30/2020 10:27 PM] kushti#0978
but for one epoch everything is tested at least ?


[07/30/2020 10:29 PM] Robert K#0722
Mostly


[07/30/2020 10:29 PM] Robert K#0722
The spec/contracts were wrong for "Start Next Epoch" action


[07/30/2020 10:29 PM] Robert K#0722
Everything else was working


[07/30/2020 10:33 PM] Robert K#0722
Ah, the issue is the datapoint boxes are not being found


[07/30/2020 10:34 PM] Robert K#0722
Ah you only bootstrapped the epoch box @scalahub ?


[07/30/2020 10:34 PM] scalahub#2618
ok I think datapoint box script is same


[07/30/2020 10:35 PM] scalahub#2618
lemme double check.. I didn't bootstrap it because of that


[07/30/2020 10:35 PM] Robert K#0722
Okay, reused the old scans and it worked


[07/30/2020 10:35 PM] Robert K#0722
The oracle core reregisters all the scans so it didn't track the old ones until I manually added their id in the file.


[07/30/2020 10:36 PM] scalahub#2618
ok cool


[07/30/2020 10:37 PM] scalahub#2618
yes just checked.. the datapoint and liveEpoch are the same as earlier bootstrap


[07/30/2020 10:37 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/08b453efecebef2c9a25796e28000b14a2f7865ebdb8f5176b4f583f2e1575fa


[07/30/2020 10:37 PM] Robert K#0722
Datapoint post


[07/30/2020 10:38 PM] Robert K#0722
Epoch ends in 2 blocks, so this shouldn't be too long to see if start next epoch works


[07/30/2020 10:41 PM] Robert K#0722
Collect datapoints https://explorer.ergoplatform.com/en/transactions/f2b7ca36677f69a2ef1f5a7e55d8570299603654bb439335315788beef3c3008


[07/30/2020 10:48 PM] Robert K#0722
Collect funds:
https://explorer.ergoplatform.com/en/transactions/bbc56784e8bc7bd93686a2c92419d53ad0c20e6a034bc3b6060278b7443a4bcc


[07/30/2020 10:51 PM] Robert K#0722
Huzzah, start next epoch:
https://explorer.ergoplatform.com/en/transactions/5194e32b647e8850bd6f91777fc3d6d1fd48273a4b5385fe51917ece19afbea0


[07/30/2020 10:53 PM] Robert K#0722
Nice! So it seems the oracle pool works!


[07/30/2020 10:54 PM] scalahub#2618
awesome!!! so I'll be off now.. will report back with my setup


[07/30/2020 10:57 PM] Robert K#0722
Sounds good. Great work today.


[07/30/2020 11:53 PM] kushti#0978
Awesome news!


[07/31/2020 2:57 PM] Robert K#0722
Morning


[07/31/2020 2:57 PM] Robert K#0722
It seems the oracle pool survived the night and has been running without problems üíØ


[07/31/2020 2:58 PM] kushti#0978
yeah, watching over it as well


[07/31/2020 2:58 PM] kushti#0978
sent some erg to pay the fees


[07/31/2020 2:58 PM] kushti#0978
congrats


[07/31/2020 3:00 PM] Robert K#0722
Ah nice, thanks for sending extra fee payment.


[07/31/2020 3:01 PM] Robert K#0722
Hmm, though I guess that means we should use this pool for a little while longer to do testing of the "connector" which sources real data.


[07/31/2020 3:01 PM] Robert K#0722
Since we can't withdraw the funds without going through 48 more epochs


[07/31/2020 3:04 PM] kushti#0978
can send ergs to another pool, to run them in parallel ?


[07/31/2020 3:04 PM] Robert K#0722
Hmm, I guess we could do that too once we add the hashes to the addresses.


[07/31/2020 3:09 PM] kushti#0978
alright, so what are we doing next?


[07/31/2020 3:12 PM] Robert K#0722
Current to-dos:
1. Optimize contracts
2. Cleanup API endpoints slightly.
3. Write a USD-Erg `Connector` which pulls data/submits it to core via API.
4. Cleanup all readme/documentation for how to setup a core and so on forth.
5. Add a --bootstrap flag to the oracle core which allows people to bootstrap a pool. (Need to think about UX for this, and maybe we can leave it out in the initial public release and just give instructions)


[07/31/2020 3:50 PM] kushti#0978
Good!


[07/31/2020 3:50 PM] kushti#0978
Will take another look over the weekend


[07/31/2020 4:50 PM] scalahub#2618
From my side: Created bootstrap CLI and right now in the middle of setting up core. 
Will update tomorrow/over weeked about my experiments


[07/31/2020 4:51 PM] Robert K#0722
Oh nice @scalahub, great to hear the bootstrapping CLI is already in the works


[07/31/2020 4:52 PM] kushti#0978
@scalahub in rust ? )


[07/31/2020 4:53 PM] scalahub#2618
sadly no üò¶ in Scala


[07/31/2020 4:54 PM] scalahub#2618
but then should be easy to port hopefully


[07/31/2020 6:11 PM] Robert K#0722
@scalahub Would you like to test blake2b hash addresses today?


[07/31/2020 6:22 PM] scalahub#2618
@Robert K hi sure, shall I bootstrap the boxes?


[07/31/2020 6:22 PM] scalahub#2618
let me post addresses first


[07/31/2020 6:25 PM] Robert K#0722
For off-chain code I only need to edit the register holding the epoch prep address, right?


[07/31/2020 6:26 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Demo.scala#L44:L48

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Demo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/31/2020 6:27 PM] scalahub#2618
hmm I think all addresses are different


[07/31/2020 6:28 PM] Robert K#0722
Right, but the only address we held in any registers was in that one spot?


[07/31/2020 6:28 PM] Robert K#0722
I'm thinking if there's anywhere else in the code I need to do the hashing for off-chain code


[07/31/2020 6:34 PM] scalahub#2618
so lets see.. epoch prep box has hash of live epoch script, which changes epoch prep


[07/31/2020 6:35 PM] scalahub#2618
and live epoch has code that computes blake2b256 of epoch prep and compares with stored value in r6.. so that changes live too


[07/31/2020 6:36 PM] scalahub#2618
and the other two boxes refer each of the two scripts so they are changed too


[07/31/2020 6:36 PM] scalahub#2618
let me know when you have added the scan, so I can bootstrap


[07/31/2020 6:40 PM] Robert K#0722
Okay the scans should be added


[07/31/2020 6:44 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/3774fa65d0235f84da2e5c3d0f91beaf273609d1d8955b83e797ba4e3f03031a


[07/31/2020 6:44 PM] scalahub#2618
hope this picked up


[07/31/2020 6:48 PM] Robert K#0722
Is that tx going to confirm with such a smalll fee?


[07/31/2020 6:50 PM] Robert K#0722
The scans picked it up


[07/31/2020 6:51 PM] Robert K#0722
But I think the hashing didnt work our in the code I implemented:

`). Failed to sign boxes due to Script reduced to false: Vector(ErgoBox(803e75853638d0cbc847eb5c30bc47ef15b5`


[07/31/2020 6:52 PM] Robert K#0722
Ah actually I forgot to add it to both epoch actions, woops üòÖ


[07/31/2020 6:56 PM] scalahub#2618
so with bootstrap tx, low fee is not an issue as it will eventually confirm.. it's more of an issue with create new epoch and start next epoch only


[07/31/2020 7:00 PM] Robert K#0722
Hmm, so it seems start/create new epoch aren't working.


[07/31/2020 7:01 PM] scalahub#2618
any error?


[07/31/2020 7:01 PM] Robert K#0722
Currently I'm hashing the address and storing it as a collection of bytes and getting the following value for the register:
`0e80016637393539346265326538393738376263613930373461633762333064383232646663366666643137643762633834313463363732633932306161323630383937333636353132373734383665393762333830343161663037303532613537666662663639366266663539643465366663323132353864366364376265333733`


[07/31/2020 7:01 PM] Robert K#0722
Yeah, reduced to false.


[07/31/2020 7:02 PM] scalahub#2618
is this for R6?


[07/31/2020 7:02 PM] Robert K#0722
Yes


[07/31/2020 7:03 PM] Robert K#0722
Full request:
```json
"{\"requests\":[{\"address\":\"F7f7vfC28mjet2UuH3cKyL7CHbtnc1AgxnEBQ6UhMvRtxhX7BrG7MLhMj7JEcmMyQqRzHg7hfoLNSzoDWg4PWfqSxoZXkTBPUWharJCtoRjaoHGYgjF9BJCjDNR13EwMVoXBhY2gmgfWyCjKjncFpjzbSBQYRAsj7W5vg3A2NtXudGMn2YjfHSqjFk1xzV4sfYGtfM9fLfd3ZEBMFfQpPRapG4DXaGL8emVrRsqfjGDqVRkxw1kJyffbFTsDStRgrKeGbA1gZKsKAYJiWLYVbmndRxhUuM7fQhtX8qzRMpDfqti43eotgxVXU5pr9Q7a4Pv2VbvS8gBDceRPZeLdsxBiDoWVbGEkF8vB7QrDNr9YxXEob4KircTpECARmcGgeLCHwr2i7AMGbs2tFFLX7PoHyYRv3ertFGS1CEth6wnjmo3SEjK8HXU\",\"value\":20000000,\"assets\":[{\"tokenId\":\"b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc\",\"amount\":1}],\"registers\":{\"R4\":\"0502\",\"R5\":\"04ece422\",\"R6\":\"0e80016637393539346265326538393738376263613930373461633762333064383232646663366666643137643762633834313463363732633932306161323630383937333636353132373734383665393762333830343161663037303532613537666662663639366266663539643465366663323132353864366364376265333733\"}}],\"fee\":2000000,\"inputsRaw\":[\"80dac409100604000580dac40904140e20814e3669af07fde7757fbf063131b2ffea3b9534273e6dac0b1830373e81f079040a0408d806d601b2a5730000d602c67201060ed603e4c6a70504d604c1a7d6059272047301d6069aa3730295e67202d801d607ed93e47202cbc2a793cbc272017303eb02d1ededededededed8fa3720391a39972037304720593e4c672010405e4c6a7040593e4c672010504720393db63087201db6308a792c1720172047207d1ededededededed92a37203720593e4c672010405e4c6a7040592e4c672010504720690e4c6720105049a7206730593db63087201db6308a792c1720172047207d1edededed93e4c672010405e4c6a7040593e4c672010504720393c27201c2a793db63087201db6308a791c172017204a1b21101b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0102050204c0b8023774fa65d0235f84da2e5c3d0f91beaf273609d1d8955b83e797ba4e3f03031a00\",\"a0efdb80ba010008cd03f1102eb87a4166bf9fbd6247d087e92e1412b0e819dbb5fbc4e716091ec4e4eca5b2110000813a5391798ff6c83f5920dc2a8e25294d9980adffc9f75298bdc66851d8ce8e02\"],\"dataInputsRaw\":[]}"
-----
```


[07/31/2020 7:03 PM] scalahub#2618
ok then it is not correct..  the hash is 32 bytes


[07/31/2020 7:04 PM] scalahub#2618
exact final value of R6 should be (with encoding etc) `0e20b413a0bd1a41798d5ce92e044e4a064e887639fad61e3ee83ba12117465c3659`


[07/31/2020 7:04 PM] scalahub#2618
probably the same issue (you didn't do hex?)


[07/31/2020 7:07 PM] Robert K#0722
Hmmm


[07/31/2020 7:08 PM] Robert K#0722
After hashing the value should be `"f79594be2e89787bca9074ac7b30d822dfc6ffd17d7bc8414c672c920aa26089736651277486e97b38041af07052a57ffbf696bff59d4e6fc21258d6cd7be373"`
Right?


[07/31/2020 7:09 PM] scalahub#2618
I'm getting the hash as `b413a0bd1a41798d5ce92e044e4a064e887639fad61e3ee83ba12117465c3659`


[07/31/2020 7:09 PM] scalahub#2618
and then we prepend `0e20` to it to get the register value


[07/31/2020 7:10 PM] scalahub#2618
blake2b256 outputs 256 bits (which comes to 32 bytes), or 64 chars


[07/31/2020 7:11 PM] scalahub#2618
yours is double.. so some encoding thing I guess


[07/31/2020 7:24 PM] Robert K#0722
Hmm, now I set it explicitly to be 256 manually via a hash builder struct and the output I get is:
`"92295cb7d4144cfb4219457435986c715207782526a574687d95820370330549"`


[07/31/2020 7:31 PM] Robert K#0722
I've tried 2 different libraries and I get `"92295cb7d4144cfb4219457435986c715207782526a574687d95820370330549"` with blake2b256


[07/31/2020 7:37 PM] Robert K#0722
Is the blake2b256 function you are using have some custom salt or something unique about it @scalahub ?


[07/31/2020 7:43 PM] scalahub#2618
Are you taking hash of the address or of the underlying ergotree?


[07/31/2020 7:51 PM] scalahub#2618
please refer to the `FixedEpochPoolV2.scala` for how the hash is computed https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[07/31/2020 7:51 PM] scalahub#2618
no salt


[07/31/2020 7:58 PM] Robert K#0722
I am using the endpoint `/script/addressToBytes/`


[07/31/2020 7:58 PM] Robert K#0722
And hashing that


[07/31/2020 7:59 PM] Robert K#0722
But have also tried 
`/script/addressToTree/`


[07/31/2020 7:59 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/738833238134358066/unknown.png


[07/31/2020 8:01 PM] scalahub#2618
script/addressToTree is correct


[07/31/2020 8:01 PM] scalahub#2618
it gives me `100604000580dac40904140e20814e3669af07fde7757fbf063131b2ffea3b9534273e6dac0b1830373e81f079040a0408d806d601b2a5730000d602c67201060ed603e4c6a70504d604c1a7d6059272047301d6069aa3730295e67202d801d607ed93e47202cbc2a793cbc272017303eb02d1ededededededed8fa3720391a39972037304720593e4c672010405e4c6a7040593e4c672010504720393db63087201db6308a792c1720172047207d1ededededededed92a37203720593e4c672010405e4c6a7040592e4c672010504720690e4c6720105049a7206730593db63087201db6308a792c1720172047207d1edededed93e4c672010405e4c6a7040593e4c672010504720393c27201c2a793db63087201db6308a791c172017204`


[07/31/2020 8:02 PM] scalahub#2618
and then decoding from hex and computing blake256 of the reuslting bytes, and encoding back to hex gives me the value I pasted


[07/31/2020 8:03 PM] scalahub#2618
cannot see `addressToBytes` anywhere


[07/31/2020 8:03 PM] scalahub#2618
is this in new version?


[07/31/2020 8:04 PM] scalahub#2618
http://88.198.13.202:9053/swagger#/


[07/31/2020 8:04 PM] scalahub#2618
not here


[07/31/2020 8:07 PM] Robert K#0722
Probably just added in 3.3.0


[07/31/2020 8:09 PM] scalahub#2618
anyway can you try with the value I posted in R6 and we can debug later why the hashes are different


[07/31/2020 8:10 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/bd9ae9959e905f596d23f066aa2f6ab715ab21f5432a32ed95b0f09caa7978ec


[07/31/2020 8:11 PM] Robert K#0722
The problem was related to reading the hex.


[07/31/2020 8:12 PM] scalahub#2618
cool .. so it worked it seems


[07/31/2020 8:28 PM] Robert K#0722
Indeed, it seems to be running properly


[07/31/2020 8:28 PM] Robert K#0722
üëç


[07/31/2020 8:30 PM] Robert K#0722
Any other optimizations that you thought of @scalahub ?


[07/31/2020 8:31 PM] scalahub#2618
lets wait for a full cycle though


[07/31/2020 8:32 PM] Robert K#0722
Yeah for sure.


[07/31/2020 8:32 PM] scalahub#2618
not any optimizations currently.. let me read the scripts again. Few minor ones involve storing token id in registers


[07/31/2020 8:38 PM] Robert K#0722
Collect funds also looks good: https://explorer.ergoplatform.com/en/transactions/165265d6abac9f45af0e4504a1c466d3edf55d8ca846e1e4c3b06b5eed51c27d


[07/31/2020 8:40 PM] Robert K#0722
What would be the benefit of storing token id in registers?


[07/31/2020 8:51 PM] scalahub#2618
not much benefit .. just shorter addresses .. and reusable addresses


[07/31/2020 8:55 PM] Robert K#0722
Ah right right.


[07/31/2020 8:56 PM] Robert K#0722
The problem is that I use a lot of the registers for stake slashing/governance, and it would take at least a few hours to go back and fix all the specs to adjust everything üòÖ


[07/31/2020 8:58 PM] scalahub#2618
yes that will be too complex change for very little benefit. so not recommended


[07/31/2020 9:08 PM] Robert K#0722
Have you had any problems setting up an oracle core by the way?


[07/31/2020 10:08 PM] Robert K#0722
So I think I'm going to just deposit some Ergs for the weekend and leave the pool running so we can get further testing to see if anything ends up breaking on some edgecase.


[08/01/2020 6:01 AM] scalahub#2618
Will get back on core over the weekend


[08/01/2020 7:00 PM] kushti#0978
works perfectly !


[08/02/2020 6:11 AM] scalahub#2618
oracle-core seems to be working perfectly but I could not figure out a way to import my private key into ergo node.. I had created the key in appkit


[08/02/2020 8:21 PM] kushti#0978
please make an issue, a method can be added soon


[08/03/2020 5:52 AM] scalahub#2618
I'll make an issue today @kushti 
For the pool, do we need 3.3.0? I am not able to see any boxes picked up in 3.2.7 (was running all weekend) @Robert K


[08/03/2020 10:02 AM] kushti#0978
@scalahub yes, 3.3.0 has support for external scans


[08/03/2020 10:02 AM] kushti#0978
needed for the pools


[08/03/2020 12:21 PM] scalahub#2618
ok I'm going to compile 3.3.0 now.. is there a precompiled jar?


[08/03/2020 12:32 PM] kushti#0978
@scalahub I can publish "beta"


[08/03/2020 12:33 PM] kushti#0978
@scalahub please use "scan-past" branch


[08/03/2020 2:16 PM] Robert K#0722
Ah so you tested the oracle core @kushti ?


[08/03/2020 2:50 PM] Robert K#0722
Hmm, interesting idea that may be worth doing for the oracle pool release:

What if we use the api endpoints which relate the oracle pool state to make a webpage that publicly displays the state of the oracle pool?


[08/03/2020 2:51 PM] Robert K#0722
As such people can actually understand what the heck is going on in the oracle pool without looking at lists of txs across 4 addresses with data they can't understand.


[08/03/2020 2:52 PM] Robert K#0722
I'll ask if we have some designer resources in the company so we can whip something like this up for release.


[08/03/2020 2:57 PM] Robert K#0722
Hmm, I guess allowing external calls to the node opens up a slight security threat for submitting datapoints.


[08/03/2020 3:04 PM] kushti#0978
@Robert K had no chance to fully run it, just checked the code and the spec a bit over the weekend and watched it over the explorer, can join on Wed or Thu


[08/03/2020 3:07 PM] kushti#0978
@Robert K maybe oracles can push data to some monitoring tool, like https://ethstats.net/https://ethstats.net/ ?


[08/03/2020 3:09 PM] kushti#0978
https://ct.com/8tnh

{Embed}
https://ct.com/8tnh
Community-Verified Oracle Platform Aims to Better Chainlink‚Äôs Accur...
DeFi-focused oracle platform DIA is using crowd-sourcing to improve the accuracy of price oracles
https://images-ext-2.discordapp.net/external/VQ66CFPgJXX9hv_nt_8eAUAf2q8RtTvZLW8g5ZC3oXA/https/s3.cointelegraph.com/storage/uploads/view/20e4a51361e0120fe7c16f3c7b8eb8a7.jpg


[08/03/2020 3:30 PM] Robert K#0722
> @Robert K maybe oracles can push data to some monitoring tool, like https://ethstats.net/https://ethstats.net/ ?
@kushti Hmm, that's a good idea as well.


[08/03/2020 3:42 PM] kushti#0978
Seems better oracles are hot now )


[08/03/2020 3:42 PM] kushti#0978
Our oracle pools do not use tokens )


[08/03/2020 3:52 PM] Robert K#0722
Yeah it's interesting oracle are coming up more again.


[08/03/2020 3:53 PM] Robert K#0722
I think the no-token approach is better, though it doesn't provide an easy income stream where we can just sell for hundreds of Ks/millions of dollars.


[08/03/2020 4:43 PM] scalahub#2618
@Robert K No I could not run it. I did `cargo run` set the parameters in the `yaml` file and synced the node from scratch.. `scan-past` branch that @kushti mentioned. 
The node didn't register any scans.. is there any additional step?


[08/03/2020 4:44 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/739871362239299624/oracle-config.yaml


[08/03/2020 4:45 PM] scalahub#2618
my config file is attached and the address has the oracle bootstrap box has been created


[08/03/2020 4:51 PM] scalahub#2618
```Server running at http://0.0.0.0:9090 on 1 threads.
Blockheight: 287149
================================
Deposits State: Ok(PoolDepositsState { number_of_boxes: 0, total_nanoergs: 0 })

Epoch Prep State: Err(No Boxes Found.)

Live Epoch State: Err(No Boxes Found.)

Oracle Datapoint State: Err(No Boxes Found.)```


[08/03/2020 4:51 PM] scalahub#2618
here is the output


[08/03/2020 5:09 PM] kushti#0978
> I think the no-token approach is better, though it doesn't provide an easy income stream where we can just sell for hundreds of Ks/millions of dollars.
@Robert K ahaha exactly


[08/03/2020 5:41 PM] Robert K#0722
@scalahub Taking a look now


[08/03/2020 5:41 PM] Robert K#0722
When you did `cargo run` did it generate a `scanIds.json` in the directory?


[08/03/2020 5:44 PM] Robert K#0722
I'll look into improving the error checking for scan registration


[08/03/2020 5:44 PM] Robert K#0722
And kill the init process if it fails


[08/03/2020 5:46 PM] Robert K#0722
Hmm, it should be throwing an exception if it failed to register the scans


[08/03/2020 5:54 PM] scalahub#2618
@Robert K yes the file was created it.. the following is the content
```{
    "Epoch Preparation Scan": "null",
    "Live Epoch Scan": "null",
    "Local Oracle Datapoint Scan": "null",
    "All Datapoints Scan": "null",
    "Pool Deposits Scan": "null"
}```


[08/03/2020 6:05 PM] Robert K#0722
Hmm, so it did indeed fail


[08/03/2020 6:05 PM] Robert K#0722
You weren't using 3.3.0 though, right?


[08/03/2020 6:06 PM] Robert K#0722
If you initially ran it in not 3.3.0, it's possible that file was generated then and now stops the core from working


[08/03/2020 6:06 PM] Robert K#0722
Delete the file to get it to reregister scans with 3.3.0


[08/03/2020 6:24 PM] Robert K#0722
Alright, so I've written a small wrapper library for writing "Connectors" for the oracle core: https://github.com/ergoplatform/oracle-core/tree/master/connectors/Connector-Lib


[08/03/2020 6:25 PM] Robert K#0722
The idea is essentially that all the api endpoints are wrapped with rust structs which can be consumed easily for writing arbitrary Connectors.


[08/03/2020 6:25 PM] Robert K#0722
Every oracle pool can use an existing connector, or use the Connector-Lib to create their own.


[08/03/2020 6:26 PM] Robert K#0722
Then all oracles part of a pool simply must use the same connector, and no matter how complicated the logic is/how many sources of data are sourced, they all peform the same computations/requests without the operator knowing how anything works.


[08/03/2020 6:29 PM] Robert K#0722
I think this is the best way to make it generic, and it should theoretically even be possible to create "read-only" connectors if people would want which don't submit datapoints but merely consume data from the oracle-core about the protocol state.


[08/03/2020 6:30 PM] Robert K#0722
So theoretically we could create a read-only "push" based connector which sends data to a monitoring tool, and thereby abstracts out the logic from the oracle core itself. (While also keeping things more secure too)


[08/03/2020 6:43 PM] Robert K#0722
@scalahub Feel free to add a `smart-contracts` folder and put the oracle pool contracts in the repo when you get a chance.

{Reactions}
üëç 

[08/03/2020 6:44 PM] Robert K#0722
@kushti I recall you and Jason Davies were deciding on the best way to encode the price of ERG/USD on-chain.


[08/03/2020 6:45 PM] Robert K#0722
What did you end up deciding?


[08/03/2020 8:35 PM] kushti#0978
@Robert K to put nanoErg/USD price as long integer

{Reactions}
üëå 

[08/03/2020 8:35 PM] kushti#0978
I can provide a Python script


[08/03/2020 8:35 PM] kushti#0978
which is posting CMC price


[08/03/2020 8:49 PM] Robert K#0722
Alright cool, so it seems we'll be getting a paid marketing push behind the Oracle Pools public release.


[08/03/2020 8:50 PM] Robert K#0722
So hopefully we can get some good traction/eyes on Oracle Pools/Ergo.


[08/03/2020 8:51 PM] Robert K#0722
No specific date yet (we're being flexible for now), but it does seem like a good idea to pursue creating the website/public frontend for this release as well.


[08/03/2020 8:51 PM] kushti#0978
nice!


[08/03/2020 8:51 PM] kushti#0978
Can reach my peer in CoinTelegraph


[08/03/2020 8:52 PM] kushti#0978
to get coverage there as well around the release


[08/03/2020 8:53 PM] Robert K#0722
That would be awesome üëç


[08/03/2020 9:39 PM] Robert K#0722
@scalahub Would it be possible for you to add a README.md and explain how one goes about compiling the contracts into addresses?


[08/04/2020 8:04 AM] kushti#0978
Is testing oracle pool stopped ?


[08/04/2020 9:23 AM] scalahub#2618
@Robert K will do.. lets discuss in today's call what approaches to use for compilation.. I used Appkit, but its not easy to do this using node currently


[08/04/2020 9:23 AM] scalahub#2618
also I am not able to get the oracle core to work üò¶


[08/04/2020 9:24 AM] scalahub#2618
Did full rescan, deleted `scanIDs.json`. This is the output
```Epoch Prep State: Err(No Boxes Found.)

Live Epoch State: Err(No Boxes Found.)

Oracle Datapoint State: Err(No Boxes Found.)
```


[08/04/2020 9:25 AM] scalahub#2618
scanIDs.json has following
```{
    "Epoch Preparation Scan": "16",
    "Live Epoch Scan": "17",
    "Local Oracle Datapoint Scan": "18",
    "All Datapoints Scan": "19",
    "Pool Deposits Scan": "20"
}```


[08/04/2020 2:34 PM] Robert K#0722
Right, so the scans finally registered @scalahub.


[08/04/2020 2:34 PM] Robert K#0722
However your node was already synced right?


[08/04/2020 2:34 PM] Robert K#0722
You need to register the scans, and then sync your node.


[08/04/2020 2:35 PM] Robert K#0722
> Is testing oracle pool stopped ?
@kushti Ah yeah woops, I shutdown my computer. I'll leave it off for now as I'm probably going to finish the v0 of the ERG/USD connector today and will get real data posted from CoinGecko


[08/04/2020 2:37 PM] Robert K#0722
> @Robert K will do.. lets discuss in today's call what approaches to use for compilation.. I used Appkit, but its not easy to do this using node currently
@scalahub Alright, maybe we can whip up some sort of script which reads values from a config file and puts them into the scripts & then compiles via node?


[08/04/2020 2:45 PM] scalahub#2618
@kushti how to hardcode byte array in ErgoScript?


[08/04/2020 2:48 PM] scalahub#2618
> You need to register the scans, and then sync your node.
@Robert K I did that only.. basically deleted dir, started node and started core


[08/04/2020 2:49 PM] scalahub#2618
Could you please write the steps in case I missed anything


[08/04/2020 2:51 PM] Robert K#0722
1. Start Oracle Core to register scans. (Check scanIDS.json to see that there are number ids, which means the scans were registered)


[08/04/2020 2:51 PM] Robert K#0722
2. Rescan UTXO-set


[08/04/2020 2:51 PM] Robert K#0722
3. Ensure you have a running node with an unlocked wallet.


[08/04/2020 2:51 PM] scalahub#2618
But to register scans don't we need node running first?


[08/04/2020 2:52 PM] Robert K#0722
Ah yes.


[08/04/2020 2:52 PM] Robert K#0722
But when you kill the history the scans persist


[08/04/2020 2:53 PM] scalahub#2618
But history killing should not be needed it node is fresh?:


[08/04/2020 2:53 PM] scalahub#2618
How to kill history/rescan UTXO set?


[08/04/2020 2:53 PM] Robert K#0722
Delete the `history` folder in .ergo


[08/04/2020 2:54 PM] Robert K#0722
Though @kushti is working on a rescan feature for the full node I believe, so that should be better soon.


[08/04/2020 2:54 PM] Robert K#0722
One thing you can do @scalahub is also checking the scans manually in the node


[08/04/2020 2:55 PM] Robert K#0722
Use the scan_id for the given scan, and check if the node is finding any boxes. It seems that it isn't, but the core could theoretically be broken.


[08/04/2020 2:57 PM] scalahub#2618
Ok will retry now and revert


[08/04/2020 3:06 PM] scalahub#2618
I guess scans are stored in wallet folder? because I deleted history and state and the swagger still shows scans registered


[08/04/2020 3:06 PM] Robert K#0722
Yep


[08/04/2020 3:08 PM] scalahub#2618
so should I reset the wallet as well ?


[08/04/2020 3:09 PM] scalahub#2618
anyway I just now follows the steps. 
1. deleted `history` and `state` folder and started node
2. started core
3. checked that scansIDs.json has no nulls
4. stopped node, deleted `history` (kept oracle core running)
5. restarted node


[08/04/2020 3:10 PM] scalahub#2618
is this right?


[08/04/2020 3:12 PM] scalahub#2618
I'll check if the boxes are picked up after the node syncs


[08/04/2020 3:17 PM] Robert K#0722
Yeah that is right.


[08/04/2020 3:17 PM] Robert K#0722
You can register scans after the syncing started, just the scans need to be registered before recent block where the boxes you want to pick up are in.


[08/04/2020 3:18 PM] Robert K#0722
After the scans are registered you can also close the oracle core if you want, it makes no difference since all state is tracked by the scans in the node.


[08/04/2020 5:55 PM] Robert K#0722
In regards to the http endpoints for the oracle pool frontend, you can find a general description in the readme: https://github.com/ergoplatform/oracle-core


[08/04/2020 5:56 PM] Robert K#0722
And type definitions for each of the endpoints can be found in the structs in the connector lib (if need more specificity): https://github.com/ergoplatform/oracle-core/blob/master/connectors/connector-lib/src/lib.rs


[08/04/2020 8:52 PM] Robert K#0722
The oracle core and the adapter have got a slight CLI face-lift:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/740296172203147329/unknown.png

{Reactions}
üëç 

[08/04/2020 9:03 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/740298808285593690/unknown.png

{Reactions}
üëç 

[08/04/2020 9:06 PM] kushti#0978
ASCII art! Love it!


[08/04/2020 9:15 PM] kushti#0978
@scalahub  try scan/past branch, there you can do wallet rescan by removing just wallet/registry folder


[08/04/2020 9:20 PM] Robert K#0722
Okay so the ERG-USD connector appears to be in a functional state and I've added basic instructions for getting it running:
https://github.com/ergoplatform/oracle-core/tree/master/connectors/erg-usd-connector


[08/04/2020 9:21 PM] Robert K#0722
@kushti If you could add DeadIT to this channel btw so we could talk about the front-end development, that'd be great.


[08/04/2020 9:25 PM] kushti#0978
looking into that


[08/04/2020 9:28 PM] kushti#0978
@Dmitry Usov you there?


[08/04/2020 9:29 PM] kushti#0978
Should be in the channel now


[08/04/2020 9:37 PM] Robert K#0722
Hey @Dmitry Usov, not sure if you've been told much about the project, but for the short term for Oracle Pools we are looking to build an attractive frontend that that integrates in the explorer which simply pings an oracle core (via http api) and shows data about the state of the protocol in a visually pleasing way.


[08/04/2020 9:38 PM] Robert K#0722
Things like:
- Current Block Height
- Epoch ID
- Block Height Epoch Ends
- Latest Datapoint
- Current Protocol Stage
- Amount Of Uncollected Deposits To Oracle Pool
- Value Of Uncollected Deposits
- ...


[08/04/2020 9:39 PM] Robert K#0722
These are all available through the api of the oracle core, and you simply need to read the json and convert the values into nice visualizations.
https://github.com/ergoplatform/oracle-core
And type definitions for each of the endpoints can be found in the structs in the connector lib (if need more specificity): https://github.com/ergoplatform/oracle-core/blob/master/connectors/connector-lib/src/lib.rs


[08/04/2020 9:42 PM] Robert K#0722
We're thinking a 2-3 week timespan for when we want this finished for releasing publicly, and if we can have it be as visual/dynamic as possible that would be great. Maybe for example using some sort of a timeline which shows the current block height, and further to the right the blockheight that the epoch finishes?


[08/05/2020 8:14 AM] Dmitry Usov#0134
@Robert K okay. I will try to start as soon as possible. 
Am I right, for ping api, me need to start oracle core locally? Or you have IP address which I can ping?


[08/05/2020 2:06 PM] Robert K#0722
@Dmitry Usov I will set up a oracle core with a public api in the next day or two and send you the ip/port to use for testing.

{Reactions}
üëç 

[08/05/2020 2:12 PM] kushti#0978
@Robert K devs chat is going on! )

{Reactions}
üëå 

[08/05/2020 3:36 PM] Robert K#0722
@scalahub @kushti  I've written a short shell script `prepare-erg-usd-oracle.sh` which compiles the oracle core, the erg-usd adapter, and copies the binaries/config file into a new folder called oracle-core-deployed


[08/05/2020 3:37 PM] Robert K#0722
It also copies a shell script, so after you edit the config file, you just need to run `run-erg-usd-oracle.sh` and it opens up the core + adapter in screen


[08/05/2020 3:37 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/tree/master/scripts/erg-usd-oracle


[08/05/2020 3:38 PM] Robert K#0722
Simplifies setup process for an oracle for an already bootstrapped pool.


[08/05/2020 3:42 PM] kushti#0978
alright, so to join I need to run the script, and what else ?


[08/05/2020 3:50 PM] Robert K#0722
Technically we need to create a new pool since the oracle addresses are hardcoded to a given pool.


[08/05/2020 3:51 PM] Robert K#0722
@scalahub How is the bootstrap material going?


[08/05/2020 3:51 PM] Robert K#0722
Could we bootstrap a new pool which also has @kushti as a part of it for testing?


[08/05/2020 4:42 PM] Robert K#0722
@Dmitry Usov This is some example data for the Live Epoch stage (that is being printed to the local oracle in their cli) which most of will be exposed in the API and accesible by you in the frontend. The `Oracle Datapoint State` or `Commit Datapoint In Live Epoch` can be ignored as that is just about the local oracle, but the frontend should focus on the state of the pool overall.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/740595503397470268/unknown.png


[08/05/2020 4:59 PM] scalahub#2618
We can add @kushti right now because the check is only done using tokens


[08/05/2020 4:59 PM] scalahub#2618
and there are many spare oracle tokens


[08/05/2020 4:59 PM] scalahub#2618
bootstrap, still in the middle of it


[08/05/2020 5:01 PM] scalahub#2618
I just need an address and I'll bootstrap a box for him


[08/05/2020 5:18 PM] kushti#0978
my 3.3.0 node's address right?


[08/05/2020 5:20 PM] Robert K#0722
Yeah @kushti


[08/05/2020 5:20 PM] Robert K#0722
@scalahub But I thought only hardcoded addresses can collect?


[08/05/2020 5:20 PM] Robert K#0722
I mean he can still join the protocol, but I guess he won't be a "full" participant.


[08/05/2020 5:24 PM] Robert K#0722
Ah right nevermind, it's just based on the oracle box R5 as we mentioned in the call. Sorry got mixed up.


[08/05/2020 5:35 PM] kushti#0978
so I need just 3.3.0 running, get a token and run .sh ?


[08/05/2020 5:36 PM] Robert K#0722
Yes + edit the oracle-config.yaml with your address/node info


[08/05/2020 5:36 PM] Robert K#0722
But you need to finish syncing after starting the oracle core, so it can register the scans on first boot


[08/05/2020 5:38 PM] Robert K#0722
So:
1. Get token
2. Run node
3. launch core to register scans
4. Resync to find boxes
5. Core/adapter should work


[08/05/2020 6:09 PM] kushti#0978
btw i942 already supports rescan if wallet/registry is removed

{Reactions}
üëå 

[08/05/2020 6:09 PM] kushti#0978
hopefully 3.3.0 will be released this week


[08/05/2020 6:16 PM] Robert K#0722
Thanks Alex, will update my node


[08/05/2020 6:17 PM] Robert K#0722
The Oracle Core has now been upgraded to separate the GET and POST requests to be different servers/on different ports.


[08/05/2020 6:17 PM] Robert K#0722
The port specified in your `oracle-config.yaml` will be the GET server, and the POST server (to submit datapoints) will be on the very next port. (ie. 9090 GET -> 9091 POST)


[08/05/2020 6:18 PM] Robert K#0722
So now we can have a secure public GET API available for linking to the frontend or for any other usecase.


[08/05/2020 6:47 PM] kushti#0978
@scalahub will provide you my node wallet's address in the morning, currently my machine is busy with tests, can not add a node running likely


[08/06/2020 9:29 AM] kushti#0978
@scalahub 9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE


[08/06/2020 9:31 AM] scalahub#2618
Ok give me a bit


[08/06/2020 10:15 AM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/178fe9d434166d7fffec9f661eb4ee24423293fb2018587b6fe9c4f848e8e041


[08/06/2020 10:15 AM] scalahub#2618
@kushti the oracle box with above address


[08/06/2020 5:09 PM] kushti#0978
good thanks will take a look


[08/06/2020 5:09 PM] kushti#0978
will release 3.3.0 tomorrow


[08/06/2020 5:09 PM] kushti#0978
last tests


[08/06/2020 5:42 PM] Robert K#0722
Do you need any more help with setting up an oracle core @kushti ?


[08/06/2020 6:05 PM] Robert K#0722
@scalahub Have you got an oracle core working btw? It'd be good to have testing over the weekend with multiple oracles running.


[08/06/2020 6:17 PM] scalahub#2618
@Robert K Last I tried was Monday and the boxes were not picked up in the node..probably I may have missed some steps. Will try again tonight and if it fails then some issue with the node version. Did you have any luck @kushti ?


[08/06/2020 6:18 PM] scalahub#2618
Also will update about bootstrap code tomorrow.. For compilation, I think we don't need too much automation.. so I'll just explain the steps in a text file.

{Reactions}
üëç 

[08/06/2020 6:40 PM] Robert K#0722
I've improved the setup instructions considerably for the oracle core: 
https://github.com/ergoplatform/oracle-core#building--running-an-oracle

{Reactions}
üëç 

[08/06/2020 6:58 PM] scalahub#2618
which branch should I clone?


[08/06/2020 6:58 PM] scalahub#2618
any new updates?


[08/06/2020 6:58 PM] scalahub#2618
(for ergo node)


[08/06/2020 7:01 PM] Robert K#0722
i942 is what I have been using


[08/06/2020 7:02 PM] Robert K#0722
But I'm unsure if it supports the rescanning or if you have to fully resync


[08/06/2020 7:02 PM] scalahub#2618
I was planning to fully resync just to be sure


[08/06/2020 8:12 PM] Robert K#0722
Okay, just had a meeting with Nico and the idea came up that we should also launch an Ada/USD oracle pool for better marketability on launch.


[08/06/2020 8:13 PM] Robert K#0722
That way we can get more eyes from the Cardano crowd and potentially get new users.


[08/06/2020 8:13 PM] Robert K#0722
So we launch with:
- Erg/USD pool
- ADA/USD pool


[08/06/2020 8:19 PM] Robert K#0722
@kushti Will 3.3.0 have an endpoint for rescanning?


[08/06/2020 8:34 PM] Robert K#0722
Also, are you guys okay with making the oracle-core repo public already? We're thinking about having people inside of the company read through the repo/have access/potentially test running an oracle core.


[08/06/2020 8:34 PM] Robert K#0722
I would have preferred to wait until the official release, but this works as well I guess.


[08/06/2020 9:21 PM] Robert K#0722
The idea would be to make it public but not talk about it officially/consider it released until we deploy the pools on mainnet & have the graphical frontend in the explorer.

{Reactions}
üëç 

[08/07/2020 1:31 PM] kushti#0978
> @kushti Will 3.3.0 have an endpoint for rescanning?
@Robert K no, it will be done later


[08/07/2020 1:31 PM] kushti#0978
going to release 3.3.0 today

{Reactions}
üëç 

[08/07/2020 1:31 PM] kushti#0978
> The idea would be to make it public but not talk about it officially/consider it released until we deploy the pools on mainnet & have the graphical frontend in the explorer.
@Robert K I think this is okay


[08/07/2020 1:45 PM] kushti#0978
in the middle of following the instructions still


[08/07/2020 1:45 PM] kushti#0978
will report few hours later

{Reactions}
üëç 

[08/07/2020 1:53 PM] scalahub#2618
Pool working for me. Had to rescan


[08/07/2020 1:56 PM] scalahub#2618
Also a bit more time for bootstrap documentation. I'll push a branch to oracle core repo over the weekend. The plan is to have instructions using a running node and rest api.  Not rust as yet

{Reactions}
üëç (2) 

[08/07/2020 2:29 PM] Robert K#0722
@scalahub We need to get at least 2 oralces running together at some point to make sure the averaging logic works


[08/07/2020 2:29 PM] Robert K#0722
We've only tested 1 oracle running, so we don't actually know if the protocol is working technically yet.


[08/07/2020 2:31 PM] scalahub#2618
My oracle is running now. Can you please run yours?


[08/07/2020 2:33 PM] Robert K#0722
I started mine as well now but I thought the protocol wasn't moving forward?


[08/07/2020 2:34 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741288150818619442/unknown.png


[08/07/2020 2:34 PM] Robert K#0722
The epoch ended 40 blocks ago and your oracle didn't post a datapoint or collect it seems.


[08/07/2020 2:36 PM] Robert K#0722
If you're using a new compiled version automatic datapoint posting has been removed and you need to use the Erg-USD adapter.


[08/07/2020 2:46 PM] scalahub#2618
I'm using older version .. let me check if there is any error messages


[08/07/2020 3:48 PM] scalahub#2618
its not posting.. üò¶ so should I try newest version


[08/07/2020 3:53 PM] Robert K#0722
Is it printing state properly?


[08/07/2020 4:08 PM] Robert K#0722
@scalahub


[08/07/2020 4:09 PM] scalahub#2618
```Blockheight: 290124
================================
Deposits State: Ok(PoolDepositsState { number_of_boxes: 0, total_nanoergs: 0 })

Epoch Prep State: Err(No Boxes Found.)

Live Epoch State: Err(No Boxes Found.)

Oracle Datapoint State: Err(No Boxes Found.)
================================
```


[08/07/2020 4:10 PM] Robert K#0722
Ah, so it didn't register the scans properly


[08/07/2020 4:11 PM] scalahub#2618
but it posted one transaction earlier


[08/07/2020 4:11 PM] scalahub#2618
so scan should be registered


[08/07/2020 4:11 PM] Robert K#0722
Do you know which it posted?


[08/07/2020 4:12 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/31294b47af74898f65b5fe0dff6948a7a61e7a5482ccd99578b2535b5920d5e6


[08/07/2020 4:13 PM] Robert K#0722
So it started the next epoch


[08/07/2020 4:14 PM] Robert K#0722
It looks like the live epoch scan may have failed then


[08/07/2020 4:14 PM] Robert K#0722
Because that means the epoch prep scan worked


[08/07/2020 4:22 PM] scalahub#2618
ok how can I check that


[08/07/2020 4:23 PM] Robert K#0722
check the scan id in the file and use swagger to ask for that given scan from your node


[08/07/2020 4:23 PM] Robert K#0722
If it shows boxes, then it's a problem in the core


[08/07/2020 4:23 PM] Robert K#0722
Else, your scans registered improperly/your config file was messed up somehow


[08/07/2020 4:25 PM] scalahub#2618
```{
    "Epoch Preparation Scan": "21",
    "Live Epoch Scan": "22",
    "Local Oracle Datapoint Scan": "23",
    "All Datapoints Scan": "24",
    "Pool Deposits Scan": "25"
}```


[08/07/2020 4:26 PM] scalahub#2618
`curl -X GET "http://localhost:9053/scan/unspentBoxes/22" -H  "accept: application/json" -H  "api_key: hello"` returns


[08/07/2020 4:26 PM] scalahub#2618
response

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741316277855059978/message.txt


[08/07/2020 4:33 PM] Robert K#0722
How about the local oracle datapoint scan?


[08/07/2020 4:33 PM] Robert K#0722
This is the most likely candidate actually. (Live epoch state uses datapoint scan too)


[08/07/2020 4:33 PM] Robert K#0722
Did you add your oracle address in the config before setting the scans?


[08/07/2020 5:11 PM] scalahub#2618
yes my address has been in the config much before node start


[08/07/2020 5:11 PM] scalahub#2618
and also I deleted the scanids.json file too


[08/07/2020 5:11 PM] scalahub#2618
let me check local point


[08/07/2020 5:12 PM] scalahub#2618
yes thats right scan id 23 is empty


[08/07/2020 5:12 PM] scalahub#2618
how cna I fix?


[08/07/2020 5:14 PM] scalahub#2618
is your own datapoint box being picked up?


[08/07/2020 5:15 PM] Robert K#0722
Yeah


[08/07/2020 5:15 PM] Robert K#0722
I'm not sure what the problem is exactly then.


[08/07/2020 5:15 PM] Robert K#0722
Check the scan via swagger


[08/07/2020 5:15 PM] Robert K#0722
You can list all of your scans, and find the exact one and post the json here please.


[08/07/2020 5:15 PM] Robert K#0722
So we can see what is wrong with the registered scan.


[08/07/2020 6:05 PM] scalahub#2618
```{
    "scanId": 23,
    "scanName": "Local Oracle Datapoint Scan",
    "trackingRule": {
      "predicate": "and",
      "args": [
        {
          "predicate": "containsAsset",
          "assetId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed"
        },
        {
          "predicate": "equals",
          "register": "R1",
          "value": "0eb501100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20814e3669af07fde7757fbf063131b2ffea3b9534273e6dac0b1830373e81f079d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202"
        },
        {
          "predicate": "equals",
          "register": "R4",
          "value": "0702e26adcb8a50ba07b351b84c464fd09f946e07565ace88e93973fff21834f522c"
        }
      ]
    }
  }```


[08/07/2020 6:05 PM] scalahub#2618
do you want to see the others too?


[08/07/2020 6:07 PM] scalahub#2618
my address is `9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo`


[08/07/2020 6:08 PM] kushti#0978
going to join in 1 hour

{Reactions}
üëç 

[08/07/2020 6:10 PM] scalahub#2618
no way to manually add box right now?


[08/07/2020 6:10 PM] kushti#0978
to the scan?


[08/07/2020 6:11 PM] scalahub#2618
yes


[08/07/2020 6:11 PM] kushti#0978
no, will be in 3.3.1


[08/07/2020 6:11 PM] kushti#0978
hopefully next week


[08/07/2020 6:12 PM] scalahub#2618
@Robert K  whats the most failsafe way to recover? I dont mind rescanning but probably would be good to get the exact steps. I have rescanned 3 or 4 times without changing the yaml file.. so mostly some steps are wrong


[08/07/2020 6:33 PM] Robert K#0722
Rescanning is.


[08/07/2020 6:34 PM] Robert K#0722
However it seems you didn't bootstrap properly? None of the boxes has the same R4.


[08/07/2020 6:34 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/3774fa65d0235f84da2e5c3d0f91beaf273609d1d8955b83e797ba4e3f03031a


[08/07/2020 6:34 PM] Robert K#0722
And the scan searches for `0702e26adcb8a50ba07b351b84c464fd09f946e07565ace88e93973fff21834f522c`


[08/07/2020 6:34 PM] Robert K#0722
Which is why it doesn't get picked up.


[08/07/2020 6:35 PM] Robert K#0722
Are you sure you bootstrapped your current address?


[08/07/2020 6:36 PM] scalahub#2618
0702e26adcb8a50ba07b351b84c464fd09f946e07565ace88e93973fff21834f522c is correct for the address 9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo


[08/07/2020 6:36 PM] scalahub#2618
can you also double check


[08/07/2020 6:36 PM] Robert K#0722
Yeah, it seems correct.


[08/07/2020 6:36 PM] scalahub#2618
R4 is dummy value in bootstrap right?


[08/07/2020 6:36 PM] scalahub#2618
so it can be anything


[08/07/2020 6:37 PM] Robert K#0722
No


[08/07/2020 6:37 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741349376189792326/unknown.png


[08/07/2020 6:38 PM] Robert K#0722
And I mean, UTXO-set scanning isn't magic üòÖ


[08/07/2020 6:38 PM] Robert K#0722
It needs to have the correct R4 value to find the Datapoint box which your oracle has the right to spend.


[08/07/2020 6:38 PM] scalahub#2618
ah yes so isn


[08/07/2020 6:39 PM] scalahub#2618
isn't it correct?


[08/07/2020 6:39 PM] scalahub#2618
but like we discussed, its based on token id


[08/07/2020 6:39 PM] scalahub#2618
not the hardwired keys


[08/07/2020 6:40 PM] Robert K#0722
The scan looks to be correct, but in the explorer I don't see that you bootstrapped such a box.


[08/07/2020 6:40 PM] Robert K#0722
It's based on token id + the address in R4 of the datapoint box.


[08/07/2020 6:40 PM] Robert K#0722
Did you bootstrap that box in another tx?


[08/07/2020 6:40 PM] scalahub#2618
let me check.. I was sure I had done it


[08/07/2020 6:41 PM] scalahub#2618
yes https://explorer.ergoplatform.com/en/transactions/178fe9d434166d7fffec9f661eb4ee24423293fb2018587b6fe9c4f848e8e041


[08/07/2020 6:41 PM] scalahub#2618
here is the tx


[08/07/2020 6:42 PM] scalahub#2618
wait .. this is @kushti's


[08/07/2020 6:44 PM] scalahub#2618
checking for mine


[08/07/2020 6:54 PM] scalahub#2618
yes you are right.. I messed up the r4 value of my box.. üò¶ I've created one just now


[08/07/2020 6:55 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/0c7ad2fee6291a36f6aa12ddaed34892f975b60ea03e8bfae4a324c18f104501


[08/07/2020 6:55 PM] scalahub#2618
hope this is correct


[08/07/2020 7:00 PM] Robert K#0722
It should be


[08/07/2020 7:02 PM] scalahub#2618
scan id shows this 
```[
  {
    "confirmationsNum": 0,
    "address": "jL2aaqw6XU61SZznxeykLpREPzSmZv8bwbjEsJD6DMfXQLgBc12wMmPpVD81JnLvRbMphA3SehsyWc4kQ88uKa9SVA3EikNeTUGGQquabVkR4rvvbHgczZPtLhkrmsfE1yLuLFtwBUwuvuEAS4fHHt5ygRC5g3VbsNBhd5oqZGZgmhjgk1zUWLQy6V8zs4K3RxEuEdFWQ58JSBQu8EaR4TnUeAnGyG8Atapku6woNAAUKmT8Vtg6ikEauDY5m",
    "creationTransaction": "0c7ad2fee6291a36f6aa12ddaed34892f975b60ea03e8bfae4a324c18f104501",
    "scans": [
      24,
      14,
      13,
      18,
      23,
      19
    ],
    "onchain": true,
    "creationOutIndex": 0,
    "spendingTransaction": null,
    "box": {
      "boxId": "078f062efe8d8ebdff5c23555b32f815809af3eb7cff71220926ba20d780b72b",
      "value": 2000000,
      "ergoTree": "100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20814e3669af07fde7757fbf063131b2ffea3b9534273e6dac0b1830373e81f079d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202",
      "assets": [
        {
          "tokenId": "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed",
          "amount": 1
        }
      ],
      "creationHeight": 290213,
      "additionalRegisters": {
        "R4": "0702e26adcb8a50ba07b351b84c464fd09f946e07565ace88e93973fff21834f522c",
        "R5": "0e0101",
        "R6": "0502"
      },
      "transactionId": "0c7ad2fee6291a36f6aa12ddaed34892f975b60ea03e8bfae4a324c18f104501",
      "index": 0
    },
    "spendingHeight": null,
    "inclusionHeight": 290215,
    "spent": false
  }
]```


[08/07/2020 7:03 PM] scalahub#2618
getting an error

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741355979945410640/message.txt


[08/07/2020 7:04 PM] scalahub#2618
```Failed To Issue `Collect Datapoints` Transaction.
Error: The node rejected the request you provided.```


[08/07/2020 7:07 PM] scalahub#2618
so some issue in collect transaction when signing.. (node should be real but was unprovenschnorr).. digging


[08/07/2020 7:09 PM] scalahub#2618
my oracle-config.yaml

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741357405467705415/message.txt


[08/07/2020 7:10 PM] scalahub#2618
node screenshot

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741357681570349128/wallet_screenshot.png


[08/07/2020 7:11 PM] scalahub#2618
any reason signing should fail? The wallet is unlocked and its the same address in yaml and data-point box


[08/07/2020 7:13 PM] scalahub#2618
@kushti any clues about the above error?


[08/07/2020 7:17 PM] scalahub#2618
Im using the older version, so it should use hardcoded datapoint.. right?


[08/07/2020 7:33 PM] Robert K#0722
Are you synced fully @scalahub ?


[08/07/2020 7:33 PM] Robert K#0722
The oracle core will attempt to post if it sees a valid state at any moment in time, so if you aren't fully synced it may be issuing txs with old utxo state data I believe.


[08/07/2020 7:34 PM] Robert K#0722
I haven't had time/thought of how to best check if syncing is in process.


[08/07/2020 7:41 PM] scalahub#2618
no worries.. yes fully synced


[08/07/2020 8:12 PM] Robert K#0722
Hmmm, did it post a datapoint already?


[08/07/2020 8:13 PM] Robert K#0722
Maybe the contract logic isn't right for collecting multiple datapoints?


[08/07/2020 8:13 PM] Robert K#0722
Or oracle-core logic


[08/07/2020 8:16 PM] Robert K#0722
Hmm, my oracle-core is running into the same issue actually.


[08/07/2020 8:17 PM] Robert K#0722
I think the logic for collecting multiple datapoints is broken, and I'm not sure why the signing is failing.


[08/07/2020 8:17 PM] Robert K#0722
The core isn't matching the contracts it seems (or vice versa)


[08/07/2020 8:17 PM] Robert K#0722
This was one of the reasons why I was hoping we could test faster to see if everything was working.


[08/07/2020 8:19 PM] scalahub#2618
In the mocks, muiltiple data points have been tested https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala#L160

{Embed}
https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/07/2020 8:19 PM] kushti#0978
I'm around


[08/07/2020 8:19 PM] kushti#0978
sorry for the delay


[08/07/2020 8:19 PM] scalahub#2618
so two things could be wrong.. the commit datapoint logic may be wrong or collect datapoint


[08/07/2020 8:19 PM] kushti#0978
# ID of the oracle pool NFT
oracle_pool_nft: "b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc"
# ID of the oracle pool participant token
oracle_pool_participant_token: "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed"


[08/07/2020 8:20 PM] kushti#0978
right ?


[08/07/2020 8:20 PM] scalahub#2618
(if wrong box committed, it may not work during collection)


[08/07/2020 8:20 PM] scalahub#2618
yes can you check my config `yaml` file above


[08/07/2020 8:23 PM] Robert K#0722
> In the mocks, muiltiple data points have been tested https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala#L160
@scalahub Ah okay, good to know the contracts are working.

{Embed}
https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/07/2020 8:23 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala#L70-L77

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/07/2020 8:23 PM] Robert K#0722
I have a lot going on today with meetings and having to do project estimates so unfortunately I'll have to take a look in an hour or two.


[08/07/2020 8:24 PM] scalahub#2618
can you double check the core logic


[08/07/2020 8:24 PM] scalahub#2618
its very strict in terms of amount etc


[08/07/2020 8:24 PM] Robert K#0722
Yeah it's most likely in the core. Will do.


[08/07/2020 8:25 PM] scalahub#2618
no worries, do when you get a chance. meantime I'll help @kushti set up his core


[08/07/2020 8:27 PM] scalahub#2618
it maybe faster if we can decode the error message to know where exactly is signing failing.... @kushti any help here? 
https://discordapp.com/channels/668903786361651200/702853765660934194/741355980079759450


[08/07/2020 8:29 PM] kushti#0978
@scalahub is your wallet unlocked ?


[08/07/2020 8:29 PM] scalahub#2618
yes


[08/07/2020 8:31 PM] kushti#0978
well, the secret for dlog is not known


[08/07/2020 8:31 PM] kushti#0978
can you check please


[08/07/2020 8:31 PM] kushti#0978
if that could be the case


[08/07/2020 8:32 PM] scalahub#2618
this is my wallet screenshot
https://cdn.discordapp.com/attachments/702853765660934194/741357681570349128/wallet_screenshot.png

{Embed}
https://cdn.discordapp.com/attachments/702853765660934194/741357681570349128/wallet_screenshot.png
https://media.discordapp.net/attachments/702853765660934194/741357681570349128/wallet_screenshot.png


[08/07/2020 8:32 PM] scalahub#2618
and this is my collection tx https://explorer.ergoplatform.com/en/transactions/1765a55e9060f389682207739f63dbea4ae4bb9508683f7ae8feb7f273d9624f


[08/07/2020 8:37 PM] scalahub#2618
Could the error be here? https://github.com/ergoplatform/oracle-core/blob/4b7d389af4462e3a900860c7a1d79c06fc72f1a7/src/actions.rs#L190

{Embed}
https://github.com/ergoplatform/oracle-core/blob/4b7d389af4462e3a900860c7a1d79c06fc72f1a7/src/actions.rs
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/07/2020 8:37 PM] scalahub#2618
The contract requires the signer's data-point box to be the first data input


[08/07/2020 8:43 PM] scalahub#2618
```        // Filter out Datapoint boxes not from the latest epoch.
        let current_epoch_datapoint_boxes =
            current_epoch_boxes_filter(&self.datapoint_stage.get_boxes()?, &live_epoch_state);

        // Acquire the finalized oracle pool datapoint and the list of successful datapoint boxes which were within margin of error
        let (finalized_datapoint, successful_boxes) =
            finalize_datapoint(&current_epoch_datapoint_boxes)?;```


[08/07/2020 8:43 PM] scalahub#2618
I think we would need to sort the successful_boxes to include the collectors box as the first


[08/07/2020 8:48 PM] kushti#0978
"Current Blockheight: 290269

The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet.

Please make sure that you have resynced your Ergo node so that the scans can find all of the boxes."


[08/07/2020 8:49 PM] kushti#0978
is it ok after rescan ?


[08/07/2020 9:13 PM] Robert K#0722
> I think we would need to sort the successful_boxes to include the collectors box as the first
@scalahub Ah makes sense. Will add that today.


[08/07/2020 9:13 PM] Robert K#0722
> is it ok after rescan ?
@kushti Yes you should be fine after a rescan (theoretically).


[08/07/2020 9:49 PM] Dmitry Usov#0134
Guys, hello. We found some design. Tell me do you like any pieces? https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=0%3A1

{Embed}
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=0%3A1
Ergo
Created with Figma
https://images-ext-2.discordapp.net/external/WLwM-0CGGHlKramCVwBSrVDSCALTdt2Z9z82zDnctoU/%3Fver%3Dthumbnails%2F8cde54ad-38b2-4cef-b001-b41bbf1331d2/https/www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/thumbnail


[08/07/2020 9:49 PM] Dmitry Usov#0134
I like this concept for timeline

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741397700682973234/image0.png


[08/07/2020 9:53 PM] Dmitry Usov#0134
And this cards

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741398659169779742/image0.png
https://cdn.discordapp.com/attachments/702853765660934194/741398659706388600/image1.png


[08/07/2020 10:01 PM] Robert K#0722
Yeah these looks good @Dmitry Usov


[08/07/2020 10:01 PM] Dmitry Usov#0134
üôÇ


[08/07/2020 10:01 PM] Dmitry Usov#0134
I am like it too


[08/07/2020 10:01 PM] Robert K#0722
For everyone else, this was the conversation for reference:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741400753276452974/unknown.png


[08/07/2020 10:22 PM] Robert K#0722
@scalahub @kushti https://explorer.ergoplatform.com/en/transactions/777911bbdc12083f673af88fa7db9089dfa1c0ef7c69164cf8082f27a14f6595


[08/07/2020 10:22 PM] Robert K#0722
You were write Amitabh, it was the ordering of the data-inputs. Good catch!


[08/07/2020 10:32 PM] Robert K#0722
Okay the latest commit should work now: https://github.com/ergoplatform/oracle-core

{Embed}
https://github.com/ergoplatform/oracle-core
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/07/2020 10:46 PM] Robert K#0722
The averaging worked btw:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741411878244188281/unknown.png


[08/07/2020 10:46 PM] Robert K#0722
Since the hardcoded value was super low, it essentially divided the value by 2


[08/07/2020 10:46 PM] kushti#0978
@Robert K on "Current Blockheight: 288654", now /wallet/status has "height" field also, which is last height scanned for the wallet and the external scans


[08/07/2020 10:47 PM] kushti#0978
Maybe worth to print both


[08/07/2020 10:48 PM] Robert K#0722
Ah actually, so the height included in `/wallet/status` is different than in the `/info` endpoint


[08/07/2020 10:49 PM] Robert K#0722
Alright cool, I will add the endpoints/print it out next week, thanks for leeting me know.


[08/07/2020 10:51 PM] Robert K#0722
@kushti So is your core working?


[08/07/2020 11:29 PM] kushti#0978
hm still


[08/07/2020 11:29 PM] kushti#0978
Current Blockheight: 290351

The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet.


[08/07/2020 11:29 PM] kushti#0978
after another rescan


[08/07/2020 11:41 PM] Robert K#0722
Could you please check the scans manually?


[08/07/2020 11:42 PM] Robert K#0722
So cat the scanIDs.json file, and use the ids with the node directly


[08/07/2020 11:49 PM] Robert K#0722
And we have a public oracle core API now open: http://oracle1.ergo.dev.infra.emurgo.io:9090/poolInfo


[08/07/2020 11:50 PM] Robert K#0722
Need to add some more info to the api endpoints for the oracle core (for the frontend) which I'll get to on Monday.


[08/08/2020 12:38 AM] kushti#0978
ok will check in my morning


[08/08/2020 12:39 AM] kushti#0978
will have a call with Amitabh tomorrow also


[08/08/2020 12:39 AM] kushti#0978
so hopefully I'll jump into over the weekend )


[08/09/2020 9:19 AM] scalahub#2618
@Robert K core seems to be running. Are you running yours?


[08/09/2020 9:19 AM] scalahub#2618
One improvement I can think of is to make the collection reward and the oracle reward in the same box, as done here in my tests
https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala#L201

{Embed}
https://github.com/scalahub/Kiosk/blob/596f68eaa219e533d560a59557436558b98c0f87/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Spec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/09/2020 9:20 AM] scalahub#2618
@kushti hope you managed to run.. rescan should solve.


[08/09/2020 12:51 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/741986941964386414/2020-08-09_14.49.54.png


[08/09/2020 12:51 PM] Dmitry Usov#0134
first design concept, continue to work


[08/09/2020 1:15 PM] Dmitry Usov#0134
@kushti @scalahub @Robert K how to you? üôÇ

{Reactions}
üëç 

[08/09/2020 3:20 PM] Dmitry Usov#0134
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=8%3A0 updated. Take a look, please, guys.

{Embed}
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=8%3A0
Ergo
Created with Figma
https://images-ext-2.discordapp.net/external/2dCyvA7bSDfUtrw2tqjp-mMpSAyWd8DT2cEg3enoHG4/%3Fver%3Dthumbnails%2F5a86545f-131b-4d4d-95b2-ba275f99aa73/https/www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/thumbnail

{Reactions}
üëç 

[08/09/2020 3:45 PM] scalahub#2618
@Dmitry Usov very nice from a first look ! üëç


[08/09/2020 5:02 PM] Dmitry Usov#0134
Updated. We stopped at two prototypes. Which you like more?


[08/09/2020 9:13 PM] scalahub#2618
I personally prefer iphone-SE-1 and Desktop-1

{Reactions}
üôè 

[08/09/2020 11:07 PM] kushti#0978
still getting


[08/09/2020 11:07 PM] kushti#0978
The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet.

Please make sure that you have resynced your Ergo node so that the scans can find all of the boxes.


[08/09/2020 11:08 PM] kushti#0978
the node has boxes for scans 12, 13, 14


[08/09/2020 11:08 PM] kushti#0978
not 11 & 15


[08/09/2020 11:10 PM] kushti#0978
but this is okay I guess ?


[08/09/2020 11:21 PM] kushti#0978
then 
--------------------------------------------------
`Start Next Epoch` Transaction Has Been Posted.
Transaction Id: "51c77df83c2a0f7d8bfaee41b85187fc729f3389e2bc4c9ebb0d2f3351b42e65"
--------------------------------------------------


[08/09/2020 11:22 PM] kushti#0978
but  the message "The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet." still there


[08/10/2020 9:19 AM] scalahub#2618
> Full request:
> ```json
> "{\"requests\":[{\"address\":\"F7f7v...K8HXU\",\"value\":20000000,\"assets\":[{\"tokenId\":\"b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc\",\"amount\":1}],\"registers\":{\"R4\":\"0502\",\"R5\":\"04ece422\",\"R6\":\"0e800...733\"}}],\"fee\":2000000,\"inputsRaw\":[\"80da...1a00\",\"a0ef...8e02\"],\"dataInputsRaw\":[]}"
> ```
@Robert K how did you get the data for `inputsRaw` ?


[08/10/2020 11:30 AM] scalahub#2618
I made a PR with bootstraping documentation. Now working on token generation and then a tool to automate the same (using pure appkit + scala).. no rust yet... but soon

{Reactions}
üëç 

[08/10/2020 2:11 PM] kushti#0978
so how can I join ?


[08/10/2020 2:23 PM] Robert K#0722
> but  the message "The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet." still there
@kushti This is likely because your `Datapoint` box may not be found (as it's not needed to start next epoch). I don't know which of your ids correspond to which scan, is your local oracle datapoint box found by it's scan?


[08/10/2020 2:30 PM] Robert K#0722
@scalahub I did have the oracle core running over the weekend, but for some reason the Ergo node on the instance we're running keeps dying and so the core couldn't work.


[08/10/2020 2:31 PM] Robert K#0722
I need to try the new v3.3.0 I guess and I'll post the logs if it keeps happening


[08/10/2020 2:41 PM] kushti#0978
you can send logs anyway )


[08/10/2020 3:19 PM] Robert K#0722
> @Robert K how did you get the data for `inputsRaw` ?
@scalahub What do you mean "how"? The boxes are acquired from the UTXO-set scans, and then I use the node to serialize them.


[08/10/2020 3:19 PM] Robert K#0722
And there appears to be a new error with the contracts and/or the core:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742386652625764372/unknown.png


[08/10/2020 3:20 PM] Robert K#0722
> you can send logs anyway )
@kushti Will do when it happens again, by mistake deleted the logs already, sorry about that üòÖ


[08/10/2020 3:30 PM] Robert K#0722
Any ideas @scalahub? Not sure what changed to make this break after I got it working on Friday.


[08/10/2020 3:59 PM] Robert K#0722
Also as an aside, for building out the oracle pools registry idea as simply as possible, we could just create a github repo where anyone in the community can submit PRs to. In this repo we have a json file which has some kind of basic standard where people can define:
- the name of their oracle pool
- a description for what data the pool is sourcing/how is it formatted
- ip/port of an oracle core that is running and has a public API available to fetch data about the pool


[08/10/2020 4:02 PM] Robert K#0722
Then the explorer/registry just downloads that file and creates a list of available pools dynamically. If they click through on a given entry, then the explorer frontend just moves to the "Oracle Pool Display Page" and uses the ip/port to fetch all of the info from the core.

{Reactions}
üëç (2) 

[08/10/2020 4:35 PM] Robert K#0722
> And there appears to be a new error with the contracts and/or the core:
@Robert K  Here's the tx request:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742405895987789855/message.txt


[08/10/2020 4:44 PM] Dmitry Usov#0134
> Then the explorer/registry just downloads that file and creates a list of available pools dynamically. If they click through on a given entry, then the explorer frontend just moves to the "Oracle Pool Display Page" and uses the ip/port to fetch all of the info from the core.
@Robert K fetch by get params (at get params explorer will take ip/port)?


[08/10/2020 5:26 PM] scalahub#2618
> @scalahub What do you mean "how"? The boxes are acquired from the UTXO-set scans, and then I use the node to serialize them.
@Robert K ok cool, I needed to check how to get them. I guess that parameter is optional in case of bootstrap


[08/10/2020 5:27 PM] scalahub#2618
I'm adding token generation logic as well.. will add to same PR. So don't merge it yet

{Reactions}
üëç 

[08/10/2020 5:28 PM] scalahub#2618
Also going to check the error you are getting.


[08/10/2020 5:36 PM] Robert K#0722
> @Robert K fetch by get params (at get params explorer will take ip/port)?
@Dmitry Usov Yeah


[08/10/2020 5:39 PM] Robert K#0722
> @Robert K ok cool, I needed to check how to get them. I guess that parameter is optional in case of bootstrap
@scalahub Yeah, bootstrap txs should typically be able to manage without using `inputsRaw` I believe.


[08/10/2020 5:39 PM] Robert K#0722
The wallet should be able to freely do the utxo selection without issues in the majority of cases.


[08/10/2020 5:40 PM] Robert K#0722
> Also going to check the error you are getting.
@scalahub Thanks


[08/10/2020 6:19 PM] Robert K#0722
@scalahub So it seems to be something in relation to collecting multiple boxes


[08/10/2020 6:19 PM] Robert K#0722
I only collected my own datapoint box and the tx worked: https://explorer.ergoplatform.com/en/transactions/a158618ec7d2d1e7806b756674fd18d6c5ddc5837b7dda9202f4379c95bde24b


[08/10/2020 6:21 PM] Robert K#0722
I'm unsure why it resulted in False with your datapoint as well. (Maybe averaging was off with divison?)


[08/10/2020 6:42 PM] Robert K#0722
Ah, hmmm, I think the pool may have been underfunded, and yet somehow managed to get into the live epoch state?


[08/10/2020 6:51 PM] Robert K#0722
I think we may have hit an edgecase in the logic related to paying out oracles when the funds are low.


[08/10/2020 7:25 PM] scalahub#2618
@Robert K Is it stuck in live epoch now?


[08/10/2020 7:27 PM] Robert K#0722
It was until I made it only collect my own datapoint.


[08/10/2020 7:28 PM] Robert K#0722
Now it's in epoch prep and not moving forward because its underfunded (at least based on oracle core logic)


[08/10/2020 7:28 PM] Robert K#0722
I'll test to see if contracts allow it to proceed into live epoch


[08/10/2020 7:30 PM] Robert K#0722
Hmm, the "Create New Epoch" tx went through: https://explorer.ergoplatform.com/en/transactions/c1126b0b9efaa51f86968bbdff3c532ff0a5f417de823ca26273b26157ec3be1


[08/10/2020 7:30 PM] Robert K#0722
I think the underfunded logic may be off in the contracts


[08/10/2020 7:31 PM] scalahub#2618
yes I see one bug actually. https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala#L75

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/10/2020 7:31 PM] scalahub#2618
this line should not be there


[08/10/2020 7:31 PM] Robert K#0722
Ah yeah.


[08/10/2020 7:32 PM] scalahub#2618
I think we need to bootstrap again üò¶


[08/10/2020 7:32 PM] Robert K#0722
The check is on the Prep -> Live transition, but doing that check in Live -> Prep does cause an edgecase


[08/10/2020 7:32 PM] Robert K#0722
Yeah


[08/10/2020 7:33 PM] scalahub#2618
so going from prep to live should not be an issue..


[08/10/2020 7:33 PM] scalahub#2618
why did you have issue in Prep -> live?


[08/10/2020 7:34 PM] scalahub#2618
or was it in collect?


[08/10/2020 7:34 PM] Robert K#0722
I didn't, the oracle core was making the right decision and doing nothing.


[08/10/2020 7:34 PM] Robert K#0722
It was in collection.


[08/10/2020 7:34 PM] scalahub#2618
ah so it was indeed the bug in live


[08/10/2020 7:34 PM] Robert K#0722
Yep


[08/10/2020 7:34 PM] scalahub#2618
I'll bootstrap the new one soon.. keeping same token ids


[08/10/2020 7:35 PM] scalahub#2618
and also update the documentation

{Reactions}
üëç 

[08/10/2020 7:35 PM] scalahub#2618
(bootstrap examples)


[08/10/2020 7:35 PM] scalahub#2618
good catch btw


[08/10/2020 7:44 PM] Robert K#0722
Thanks, it was lucky we caught it because I didn't put enough funds for it to last over the weekend


[08/10/2020 7:45 PM] Robert K#0722
And chances are it would have been hard to find later on as we'd tend to keep the pools properly funded.


[08/10/2020 8:27 PM] scalahub#2618
New scripts https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Demo.scala#L44:L48
@Robert K

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2Demo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/10/2020 8:28 PM] scalahub#2618
bootstrapping in a bit


[08/10/2020 8:33 PM] kushti#0978
rescan is needed?


[08/10/2020 8:34 PM] Robert K#0722
It's a whole new pool with new addresses


[08/10/2020 8:34 PM] Robert K#0722
So need to update config + set scans


[08/10/2020 8:34 PM] Robert K#0722
No rescan needed if you register the scans before he bootstraps


[08/10/2020 8:35 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742466066231328880/oracle-config.yaml


[08/10/2020 8:35 PM] Robert K#0722
Here's a new config with the new addresses already added.


[08/10/2020 8:35 PM] Robert K#0722
(Just make your own oracle/node info edits)


[08/10/2020 8:37 PM] Robert K#0722
I have finished registering the scans.


[08/10/2020 9:08 PM] scalahub#2618
ok shall I bootstrap now?


[08/10/2020 9:08 PM] Robert K#0722
I'm ready, @kushti ?


[08/10/2020 9:18 PM] kushti#0978
I'm ready


[08/10/2020 9:20 PM] scalahub#2618
@Robert K @kushti can you please post your oracle addresses again?


[08/10/2020 9:20 PM] Robert K#0722
`9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF` @scalahub


[08/10/2020 9:25 PM] kushti#0978
@scalahub 9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE


[08/10/2020 9:30 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d


[08/10/2020 9:30 PM] scalahub#2618
bootstrapped pool + 3 oracle boxes, one for each of us


[08/10/2020 9:34 PM] Robert K#0722
Hmmm, my node didn't pick up a single box for all of the scans


[08/10/2020 9:34 PM] scalahub#2618
my node picked up I guess because it posted a tx


[08/10/2020 9:35 PM] scalahub#2618
I deleted my scanids file btw before restarting


[08/10/2020 9:35 PM] Robert K#0722
I did as well, hmmm.


[08/10/2020 9:37 PM] kushti#0978
I'm doing a rescan )


[08/10/2020 9:37 PM] kushti#0978
because of the "The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet."


[08/10/2020 9:37 PM] scalahub#2618
please check if I created the boxes correctly


[08/10/2020 9:37 PM] scalahub#2618
maybe I messed up in setting something


[08/10/2020 9:38 PM] kushti#0978
but I think scans were registered before the bootstrapping


[08/10/2020 9:38 PM] Robert K#0722
Actually weird, the scans did get picked up by 1 of my 2 nodes.


[08/10/2020 9:38 PM] Robert K#0722
I'm running 1 locally, and 1 on a server.


[08/10/2020 9:42 PM] kushti#0978
is locked wallet okay ?


[08/10/2020 9:43 PM] scalahub#2618
@kushti no


[08/10/2020 9:43 PM] Robert K#0722
To post txs you need the wallet unlocked


[08/10/2020 9:43 PM] scalahub#2618
you need to keep it unlocked


[08/10/2020 9:45 PM] scalahub#2618
@Robert K how do I submit data point manually in latest version?


[08/10/2020 9:46 PM] Robert K#0722
Do a post request to the `/submitDatapoint` endpoint


[08/10/2020 9:46 PM] scalahub#2618
can you give me a one liner using curl


[08/10/2020 9:46 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/blob/master/docs/API-Endpoints.md

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/docs/API-Endpoints.md
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/10/2020 9:46 PM] Robert K#0722
I'm not very familiar with sending json post requests with curl unfortunately.


[08/10/2020 9:47 PM] scalahub#2618
cool I guess its simple.. let me try


[08/10/2020 9:47 PM] scalahub#2618
what port is it listening to?


[08/10/2020 9:47 PM] Robert K#0722
Whatever you set in the config


[08/10/2020 9:47 PM] Robert K#0722
9090 default I believe


[08/10/2020 9:47 PM] scalahub#2618
default?


[08/10/2020 9:47 PM] scalahub#2618
cool


[08/10/2020 9:54 PM] Robert K#0722
Rescanning is very nice. So much faster than resyncing fully


[08/10/2020 9:57 PM] Robert K#0722
Okay cool, my server node found the boxes on rescan


[08/10/2020 9:58 PM] Robert K#0722
So for now let's not submit any funds to the pool and lets try to drain it to be underfunded. See if any more edgecases can be found.


[08/10/2020 9:58 PM] Robert K#0722
@kushti Any luck on getting the scans to work?


[08/10/2020 10:01 PM] scalahub#2618
I'm getting an error submitting data point using curl

```curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"datapoint":123456}' \
  http://localhost:9090/submitDatapoint```


[08/10/2020 10:01 PM] scalahub#2618
do I need to start the post server?


[08/10/2020 10:01 PM] scalahub#2618
Error is `Not Found`


[08/10/2020 10:01 PM] Robert K#0722
Ah sorry, POST port is the GET port + 1


[08/10/2020 10:01 PM] Robert K#0722
so `9091`


[08/10/2020 10:01 PM] scalahub#2618
ahh! it worked

{Reactions}
üëç 

[08/10/2020 10:02 PM] Robert K#0722
My bad, forgot I split them for security


[08/10/2020 10:02 PM] scalahub#2618
``` curl --header "Content-Type: application/json"   --request POST   --data '{"datapoint":123456}'   http://localhost:9091/submitDatapoint


following is response

"{\"tx_id\":\"79ce3fbcf0e1b9656f0ef398a6d55d099b7c83e3002b811e3680134a49625439\"}"```

{Reactions}
üëå (2) 

[08/10/2020 10:02 PM] scalahub#2618
Here is the command for reference


[08/10/2020 10:11 PM] scalahub#2618
@kushti can you check scanIDs.json and see if the datapoint box picked up (get scan id and then use api to find unspent boxes)


[08/10/2020 10:15 PM] kushti#0978
got my (pretty old) machine hanging


[08/10/2020 10:15 PM] kushti#0978
heh


[08/10/2020 10:15 PM] kushti#0978
lemme catch up now


[08/10/2020 10:19 PM] Robert K#0722
So the oracle core has stopped progressing as the pool is considered underfunded now.


[08/10/2020 10:19 PM] Robert K#0722
(The latest version of the core prints a message about being underfunded btw)


[08/10/2020 10:20 PM] Robert K#0722
But I have manually triggered the "Start Next Epoch" tx now: https://explorer.ergoplatform.com/en/transactions/156f86af14bc0ed8708abb53095c5c8bcebff2c055ce4125d1a7cef64f8d3f6a


[08/10/2020 10:21 PM] Robert K#0722
So the core logic & then contract logic don't match in regards to being underfunded


[08/10/2020 10:23 PM] Robert K#0722
Actually it might just be that in the contracts you use `>=` and I only used `>`


[08/10/2020 10:23 PM] scalahub#2618
yes thats probably it


[08/10/2020 10:23 PM] Robert K#0722
Will update that.


[08/10/2020 10:25 PM] scalahub#2618
which line? I'll update locally too


[08/10/2020 10:27 PM] Robert K#0722
There's actually 2 lines, I changed the underfunded calculation too (use to add an extra fee price)


[08/10/2020 10:27 PM] scalahub#2618
ok I'll just pull


[08/10/2020 10:45 PM] kushti#0978
The Oracle Pool is underfunded.
Please submit funds to the pool to continue operation.


[08/10/2020 10:45 PM] kushti#0978
so everything is good ? )


[08/10/2020 10:50 PM] Robert K#0722
Hmm, it's telling you that now?


[08/10/2020 10:51 PM] Robert K#0722
That is good news, as it's detecting the state, but you probably aren't fully synced?


[08/10/2020 10:51 PM] Robert K#0722
As we're in the "Live Epoch" stage now, and so it shouldn't be doing that check


[08/10/2020 10:51 PM] kushti#0978
Current Blockheight: 292450

The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet.

Please make sure that you have resynced your Ergo node so that the scans can find all of the boxes.


[08/10/2020 10:52 PM] kushti#0978
so still not full sync ?


[08/10/2020 10:52 PM] kushti#0978
and no message about the pool being underfunded


[08/10/2020 10:52 PM] Robert K#0722
If that's the case, then something is wrong with your datapoint scan most likely.


[08/10/2020 10:53 PM] Robert K#0722
Like scalahub mentioned earlier, can you manually check via swagger if your local datapoint scan is finding a box?


[08/10/2020 10:53 PM] Robert K#0722
(Check `scanIDs.json` to find the id)


[08/10/2020 10:56 PM] scalahub#2618
@Robert K I've pushed another commit to the PR

{Reactions}
üëç 

[08/10/2020 11:27 PM] kushti#0978
ok doing another rescan


[08/10/2020 11:27 PM] kushti#0978
going off to read eip-12, will check the oracles in the morning


[08/10/2020 11:37 PM] Robert K#0722
Sounds good, but I do think your config might be not set to your oracle address if you aren't getting the datapoint scan.


[08/10/2020 11:37 PM] Robert K#0722
@scalahub I tested and the contract prevents spending if the pool is underfunded, so all looks good


[08/11/2020 9:11 AM] Dmitry Usov#0134
> But I have manually triggered the "Start Next Epoch" tx now: https://explorer.ergoplatform.com/en/transactions/156f86af14bc0ed8708abb53095c5c8bcebff2c055ce4125d1a7cef64f8d3f6a
@Robert K is it good tx id?

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742656459522965554/unknown.png


[08/11/2020 12:07 PM] kushti#0978
Scan ID: null
Scan ID: null
Scan ID: null
Scan ID: null
Pool Dep Bytes: 0ead01100804000e205ea046c8753cbf8bb0acdbd67dd8a5d905df89d67060624282ad757fa3cb670c040004000500040004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebcd802d601b2a4730000d602c27201d1ededed93cb7202730193c2b2a5730200720292c1b2a57303009ac17201b0b5a4d901036393c27203c2a77304d9010341639a8c720301c18c720302938cb2db6308b2a5730500730600017307
"{\"predicate\":\"equals\",\"value\":\"0ead01100804000e205ea046c8753cbf8bb0acdbd67dd8a5d905df89d67060624282ad757fa3cb670c040004000500040004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebcd802d601b2a4730000d602c27201d1ededed93cb7202730193c2b2a5730200720292c1b2a57303009ac17201b0b5a4d901036393c27203c2a77304d9010341639a8c720301c18c720302938cb2db6308b2a5730500730600017307\"}"
Scan ID: null
thread 'main' panicked at 'Failed to register Epoch Preparation Scan', src/oracle_state.rs:146:17


[08/11/2020 12:07 PM] kushti#0978
on a new attempt


[08/11/2020 2:08 PM] Robert K#0722
> @Robert K is it good tx id?
@Dmitry Usov Ah, a different tx got processed (I think collect pool funds).


[08/11/2020 2:09 PM] Robert K#0722
@kushti So your scans did fail after all.


[08/11/2020 2:09 PM] Robert K#0722
What's your oracle-config.yaml?


[08/11/2020 2:09 PM] Robert K#0722
Looks like its not configured properly


[08/11/2020 2:24 PM] kushti#0978
config is from the last master


[08/11/2020 2:24 PM] kushti#0978
oh wait


[08/11/2020 2:24 PM] kushti#0978
my bad


[08/11/2020 2:24 PM] kushti#0978
wrong api key


[08/11/2020 2:37 PM] Robert K#0722
You also need to edit your local oracle address


[08/11/2020 2:37 PM] Robert K#0722
Which may be why your datapoint box was never picked up.


[08/11/2020 2:40 PM] Robert K#0722
@scalahub Is your oracle down?


[08/11/2020 2:41 PM] Robert K#0722
I would like to test 2+ oracles live for a while to make sure datapoint averaging works properly, the connector doesn't have any edge cases, and everything runs smoothly.


[08/11/2020 2:42 PM] kushti#0978
so still can't catch up


[08/11/2020 2:42 PM] kushti#0978
local datapoint scan has this box c7e95ee322cc05b408a0ab432318aea2232af745b69a6c1383a12513172568be


[08/11/2020 2:42 PM] kushti#0978
looks good


[08/11/2020 2:43 PM] Robert K#0722
Nice, but the oracle core is not working?


[08/11/2020 2:45 PM] kushti#0978
oh my bad I've pulled config today and did not put my oracle address there


[08/11/2020 2:45 PM] kushti#0978
doing another rescan


[08/11/2020 2:45 PM] kushti#0978
btw rescan API endpoint is reportedly done )

{Reactions}
üíØ (2) 

[08/11/2020 2:45 PM] kushti#0978
will be in 3.3.1 then


[08/11/2020 2:50 PM] Robert K#0722
I just pushed a new version where I fixed a small mistake with `>=` and the core trying to post "Start Next Epoch" tx 1 block too early and failing/reportin gan error.


[08/11/2020 2:50 PM] Robert K#0722
It makes no difference as everything will still work, just the error message doesn't come up now essentially.


[08/11/2020 2:51 PM] Robert K#0722
> will be in 3.3.1 then
@kushti Great, this is kind of important for oracles joining a pool, as it's kind of hard to co-ordinate everyone to register before bootstrapping or ask them all to delete a folder manually.


[08/11/2020 3:20 PM] kushti#0978
oracle_pool_participant_token: "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed" ?


[08/11/2020 3:23 PM] kushti#0978
I do not have such a token


[08/11/2020 3:30 PM] Robert K#0722
Amitabh bootstrapped you into the protocol by creating a `Datapoint` box which has your address in R4 and has that token.


[08/11/2020 3:30 PM] Robert K#0722
That's how bootstrapping works.


[08/11/2020 3:30 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d
@kushti the 4th output here is your box


[08/11/2020 6:17 PM] scalahub#2618
@Robert K any idea why the pool is not getting updated?


[08/11/2020 6:17 PM] scalahub#2618
```curl http://localhost:9090/poolStatus

"{\"funded_percentage\":6000,\"current_pool_stage\":\"Live Epoch\",\"latest_datapoint\":358769000,\"current_epoch_id\":\"9bfe712cddc6091627620076189f74697aaaab1d614cd6b7a74a540c5ab40e55\",\"epoch_ends\":292927}"
```


[08/11/2020 6:17 PM] scalahub#2618
Node shows: Current height 293007


[08/11/2020 6:36 PM] Robert K#0722
Ah, I think the server I was running the core on went down.


[08/11/2020 6:36 PM] Robert K#0722
I'll get it back online soon, sorry about that.


[08/11/2020 6:37 PM] Robert K#0722
Or are you saying your core isn't working either with the Erg-USD connector?


[08/11/2020 7:05 PM] kushti#0978
@scalahub the point is proper, scanning with unlocked wallet done, what else can I do ?


[08/11/2020 7:05 PM] kushti#0978
the box still not spent


[08/11/2020 7:06 PM] scalahub#2618
> Or are you saying your core isn't working either with the Erg-USD connector?
@Robert K no I have not yet tried.. I was trying manual post and it gave a tx id but tx never appeared.. I guess because of the wrong height


[08/11/2020 7:07 PM] scalahub#2618
@kushti even in my side its not working. let me debug


[08/11/2020 7:09 PM] Robert K#0722
The pool is still working, got the core back running: https://explorer.ergoplatform.com/en/transactions/5b7a4406ad67116aaad5fb41ade2a85f2749ae3ff7058bf263fb6e16b0ccd1fc


[08/11/2020 7:10 PM] Robert K#0722
> @Robert K no I have not yet tried.. I was trying manual post and it gave a tx id but tx never appeared.. I guess because of the wrong height
@scalahub Could you try again? Or use the erg-usd connector as it also prints error messages.


[08/11/2020 7:11 PM] Robert K#0722
> @scalahub the point is proper, scanning with unlocked wallet done, what else can I do ?
@kushti What do you mean by "the point is proper"? And what is going on currently? It's hard to help debug without seeing anything.


[08/11/2020 7:11 PM] Robert K#0722
Can you send me the config you use, and the scans that are registered in your node?


[08/11/2020 7:12 PM] scalahub#2618
ok it just posted a datapoint (using manual POST) https://explorer.ergoplatform.com/en/transactions/88ded362ec8171ed346e4ecf90587423e54dc0e31461f167e605c3583178bfee


[08/11/2020 7:14 PM] Robert K#0722
Right, your last tx probably was posted right as the live epoch box got spent/collected datapoints.


[08/11/2020 7:25 PM] Robert K#0722
Hmm, actually you are right @scalahub all the txs are being ignored/dissapear


[08/11/2020 7:26 PM] Robert K#0722
That use to happen if the tx fee was too low, but I checked and the fee/byte seemed fine at `0.000001491 ERG`


[08/11/2020 7:27 PM] Robert K#0722
Recent blocks are pretty empty too:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742811464452145273/unknown.png


[08/11/2020 7:30 PM] scalahub#2618
hmm weird.. tx seems to disappear from mempool.


[08/11/2020 7:30 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/c86f1a716a6a643a0e225e6e03391f768a12195f4c297403c09e8095df939926


[08/11/2020 7:30 PM] scalahub#2618
@kushti what could be the reason


[08/11/2020 7:31 PM] Robert K#0722
So I greped my `ergo.log` for my latest `Collect Datapoints` tx and got:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742812354512945272/message.txt


[08/11/2020 7:31 PM] Robert K#0722
`x":2}] ... (5), size: 805) declined, reason: Transaction validation not supported
`


[08/11/2020 7:31 PM] Robert K#0722
A very generic error, hard to tell what is going on.


[08/11/2020 7:32 PM] Robert K#0722
Here's the relevent tx: https://explorer.ergoplatform.com/en/transactions/8bf3ee4f07f32258d7e253c496cb6f563faca8c02e5995ecdf19afcde9b728b6


[08/11/2020 7:32 PM] kushti#0978
@Robert K I meant EC point is correct means corresponding to my address


[08/11/2020 7:32 PM] kushti#0978
lemme check what's going with the pool


[08/11/2020 7:33 PM] kushti#0978
> So I greped my `ergo.log` for my latest `Collect Datapoints` tx and got:
@Robert K are you running a light node ?


[08/11/2020 7:33 PM] Robert K#0722
No


[08/11/2020 7:44 PM] kushti#0978
state = "utxo" in the config ?


[08/11/2020 7:45 PM] scalahub#2618
@kushti also the transaction appears on block explorer and then disappears


[08/11/2020 7:46 PM] scalahub#2618
as an example this https://explorer.ergoplatform.com/en/transactions/4e723f2594d3302bb84a2f1c13128b6aeeb38b3cebc0e5b3694561c2210326cf/


[08/11/2020 7:46 PM] Robert K#0722
My node config is very barebones so I haven't specified the state. I assume default is utxo?


[08/11/2020 7:49 PM] kushti#0978
yes


[08/11/2020 7:50 PM] kushti#0978
got the issue


[08/11/2020 7:50 PM] kushti#0978
checking


[08/11/2020 7:52 PM] scalahub#2618
also nothing in the script depends on height
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala#L130-L151

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v2/FixedEpochPoolV2.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/11/2020 7:54 PM] scalahub#2618
does the oracle depend on explorer? Could be something wrong with explorer


[08/11/2020 7:54 PM] Robert K#0722
The weird thing is that it happened to both your txs (for datapoint posting) and my txs (for spending the Live Epoch box)


[08/11/2020 7:54 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/071b06084e0e1956c16e4e47b550627a97006f43730aa1467799dd1315bd2c37/


[08/11/2020 7:55 PM] Robert K#0722
No, explorer isn't used at all, it's something node related.


[08/11/2020 7:55 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/4e723f2594d3302bb84a2f1c13128b6aeeb38b3cebc0e5b3694561c2210326cf/


[08/11/2020 7:55 PM] scalahub#2618
these two tx spending the same box and exist on explorer at same time


[08/11/2020 7:56 PM] scalahub#2618
ok now one disappeared


[08/11/2020 7:56 PM] scalahub#2618
yes something node related but your node was working fine earlier.. so what changed?


[08/11/2020 7:56 PM] scalahub#2618
did you upgrade node @Robert K


[08/11/2020 7:56 PM] scalahub#2618
?


[08/11/2020 7:57 PM] Robert K#0722
This node is `i942-9638f5b5-SNAPSHOT`


[08/11/2020 7:57 PM] Robert K#0722
So unchanged in that regard


[08/11/2020 7:57 PM] scalahub#2618
same here. node is not changed


[08/11/2020 7:58 PM] Robert K#0722
Maybe miners upgraded, and that caused some issues?


[08/11/2020 7:58 PM] kushti#0978
on transactions disappeared from the explorer, related to node restart I made recently i guess


[08/11/2020 7:58 PM] scalahub#2618
so it seems newer nodes have issue with this tx?


[08/11/2020 7:58 PM] kushti#0978
some mempools are pretty full in the network


[08/11/2020 7:58 PM] scalahub#2618
but blocks are empty

{Reactions}
üëÜ 

[08/11/2020 7:59 PM] kushti#0978
found that rebroadcasting is not aggressive enough


[08/11/2020 7:59 PM] kushti#0978
trying new settings on couple of machines

{Reactions}
üëç (2) 

[08/11/2020 8:00 PM] Robert K#0722
(By the way could one of you potentially change the color of your avatar or add one? It's a bit hard to keep track of who is saying what with lots of back and forth lol)


[08/11/2020 8:00 PM] scalahub#2618
BTW I tried a normal tx and that worked


[08/11/2020 8:00 PM] scalahub#2618
@Robert K can you try with higher fee?


[08/11/2020 8:01 PM] Robert K#0722
Sure, I'll double the fee right now


[08/11/2020 8:02 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/988863370098d0a558db088f0e3188c67e18c757bca26854b6ef29da0ccbc523


[08/11/2020 8:06 PM] Robert K#0722
This one now has `0.000002484 ERG` per byte


[08/11/2020 8:06 PM] kushti#0978
> (By the way could one of you potentially change the color of your avatar or add one? It's a bit hard to keep track of who is saying what with lots of back and forth lol)
@Robert K ahaha will do


[08/11/2020 8:06 PM] kushti#0978
waiting while machine will get enough connections


[08/11/2020 8:06 PM] scalahub#2618
I did


[08/11/2020 8:06 PM] Robert K#0722
Thanks @scalahub


[08/11/2020 8:16 PM] Robert K#0722
Empty block again:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/742823890920931348/unknown.png


[08/11/2020 8:17 PM] Robert K#0722
And my tx is gone from the explorer again too.


[08/11/2020 8:41 PM] kushti#0978
pool's ?


[08/11/2020 8:41 PM] kushti#0978
https://explorer.ergoplatform.com/en/transactions/0c59d6f463ccfde9de63f42f9c1af46efe7024dab18b5e08b9b4825e88787751


[08/11/2020 8:41 PM] kushti#0978
got into block


[08/11/2020 8:49 PM] Robert K#0722
Ah I see.


[08/11/2020 8:49 PM] Robert K#0722
But this next tx to create a new epoch hasn't been accepted https://explorer.ergoplatform.com/en/transactions/22b85a329c4902b1bb00691a9a0d291329698519d15c79c98c7f3d5016a89f11


[08/11/2020 8:49 PM] Robert K#0722
Tx inclusion/mem pool seems to be somewhat broken


[08/11/2020 9:13 PM] kushti#0978
most of txs in the mempool were  spending already spent outputs


[08/11/2020 9:13 PM] kushti#0978
too lazy recheck


[08/11/2020 9:14 PM] kushti#0978
restarted the explorer node


[08/11/2020 9:16 PM] Robert K#0722
Hmm, are miners relying on explorer for finding txs?


[08/11/2020 9:23 PM] Robert K#0722
Okay the txs are processing: https://explorer.ergoplatform.com/en/transactions/9c02bc173118e5846d54e18452a7a3f1afcb04dfff0cb10dec6b7797b20e539c


[08/11/2020 9:28 PM] Dmitry Usov#0134
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=21%3A240

{Embed}
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=21%3A240
Ergo
Created with Figma
https://images-ext-2.discordapp.net/external/__5T6ESReqF9geI7wEve2_16gwYfgXe2v2e8DVmJV8M/%3Fver%3Dthumbnails%2Fc540f8d2-0b36-40ef-866d-854535bd7dc4/https/www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/thumbnail

{Reactions}
üëç 

[08/11/2020 9:28 PM] Dmitry Usov#0134
design updated


[08/11/2020 9:30 PM] kushti#0978
> Hmm, are miners relying on explorer for finding txs?
@Robert K supposedly no ) they have own mempools


[08/11/2020 9:33 PM] Robert K#0722
> https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=21%3A240
@Dmitry Usov Looks great. 

For "Currently Ending Epoch", I imagine that orange dot would be at the very left of the timeline right? Because as `Current Height` approaches `Epoch End Height`, then `Epoch End Height` will move closer to the left side of the timeline, and when they become equal, from then on it should shown the orange `Currently Ending Epoch` on the very left of the timeline until the new epoch begins.

{Embed}
https://www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/Ergo?node-id=21%3A240
Ergo
Created with Figma
https://images-ext-2.discordapp.net/external/__5T6ESReqF9geI7wEve2_16gwYfgXe2v2e8DVmJV8M/%3Fver%3Dthumbnails%2Fc540f8d2-0b36-40ef-866d-854535bd7dc4/https/www.figma.com/file/D19V7ajJvGomKBn9TG3t5z/thumbnail


[08/11/2020 9:33 PM] Dmitry Usov#0134
Yes, you are right


[08/11/2020 9:33 PM] Dmitry Usov#0134
Just orange dot prototype


[08/11/2020 9:34 PM] Robert K#0722
Yep, just making sure we're on the same page.

{Reactions}
üôÇ 

[08/11/2020 9:34 PM] Robert K#0722
For the table, I think it'd be good to add a "Copy" button to all of the fields (and to the "More" page)


[08/11/2020 9:35 PM] Dmitry Usov#0134
thanks, I will add this


[08/11/2020 9:37 PM] kushti#0978
everything good now ?


[08/11/2020 9:37 PM] kushti#0978
doing some explorer improvements


[08/11/2020 9:37 PM] kushti#0978
for 3.3.1


[08/11/2020 9:37 PM] Robert K#0722
@kushti I think so, have to wait 5 blocks to find out if the datapoints can be collected


[08/11/2020 9:38 PM] Robert K#0722
@scalahub Can you try to submit a datapoint right now?


[08/11/2020 9:54 PM] Robert K#0722
Yeah everything seems to be working now.


[08/11/2020 9:54 PM] Robert K#0722
Very weird, miners may be using the explorer then for mempool?


[08/11/2020 10:11 PM] kushti#0978
More likely mempool and maybe connectivity issues around the network


[08/11/2020 10:11 PM] kushti#0978
Still investigating


[08/11/2020 10:11 PM] kushti#0978
P2P layer is lazy


[08/11/2020 10:11 PM] kushti#0978
Time for improvements


[08/11/2020 10:11 PM] kushti#0978
Well, what can I do with the bootstrap of mine now ?


[08/11/2020 10:13 PM] Robert K#0722
Ah I see.


[08/11/2020 10:13 PM] Robert K#0722
So you should be able to run an oracle core + adapter and act as a full-fledged oracle


[08/11/2020 10:13 PM] Robert K#0722
I'm still unclear what issue you are having that is stopping this if your scans have found all of the boxes


[08/11/2020 10:16 PM] kushti#0978
I need to spend the box with my token ?


[08/11/2020 10:17 PM] kushti#0978
https://explorer.ergoplatform.com/en/transactions/7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d


[08/11/2020 10:17 PM] kushti#0978
oracle core is not doing that


[08/11/2020 10:17 PM] kushti#0978
but why


[08/11/2020 10:17 PM] Robert K#0722
Well depending on the state of the protocol, it needs to submit a datapoint (via the connector fetching data and posting it to the oracle core)


[08/11/2020 10:18 PM] Robert K#0722
But your oracle core by itself should be submitting a bunch of other txs even without the connector


[08/11/2020 10:18 PM] Robert K#0722
Can you post an image of what your node is printing? (or text)


[08/11/2020 10:18 PM] Robert K#0722
Does it even show the current block height?


[08/11/2020 10:22 PM] Robert K#0722
What I need to help figure this out:
1. Json of the scans you have registered in your node.
2. Your oracle-config.yaml
3. What the oracle core is printing out.


[08/11/2020 11:25 PM] kushti#0978
thanks, lemme check things again in my morning


[08/12/2020 7:43 AM] scalahub#2618
@Robert K @kushti would any of you have minutes of the meeting we had.. I wanted to know what I should be working on üôÇ


[08/12/2020 7:45 AM] scalahub#2618
(mostly regarding the immediate tasks for the week)


[08/12/2020 10:10 AM] kushti#0978
@scalahub let's have a call or a chat? )


[08/12/2020 10:21 AM] scalahub#2618
Yes I'm around


[08/12/2020 10:40 AM] kushti#0978
ok DMing you


[08/12/2020 2:00 PM] Robert K#0722
@scalahub Essentially adding the outlier checking to the contracts + automating bootstrap I think are next steps.


[08/12/2020 2:00 PM] kushti#0978
on yesterday's mempool issue, going to filter-out double spending transactions in the mempool

{Reactions}
üíØ 

[08/12/2020 2:00 PM] kushti#0978
+ some p2p improvements


[08/12/2020 2:00 PM] kushti#0978
for 3.3.1


[08/12/2020 2:01 PM] Robert K#0722
@scalahub For outlier checking, I think the best approach is checking during "Collect Datapoints" action, and specifically checking that every `Datapoint` box used as a data-input has a datapoint in a register that is less than 10% away from the latest pool finalized datapoint (held in the input `Live Epoch` box)

{Reactions}
üëç 

[08/12/2020 2:01 PM] Robert K#0722
> on yesterday's mempool issue, going to filter-out double spending transactions in the mempool
@kushti Great üëç


[08/12/2020 2:03 PM] kushti#0978
btw general devs chat is going on )


[08/12/2020 2:17 PM] Robert K#0722
@scalahub And also getting an oracle running  with the connector full-time would be very helpful as well. I do not want us to leave testing to the last minute and then finding some new edge case 2 days before release.


[08/12/2020 2:22 PM] Robert K#0722
@kushti Do you have time to try to troubleshoot/get your oracle core running?


[08/12/2020 2:23 PM] kushti#0978
had another try


[08/12/2020 2:25 PM] Robert K#0722
But what is going on right now with your core that is not working? I'm still unclear where the issue is


[08/12/2020 2:26 PM] Robert K#0722
Is the core not reading the state of the boxes in your scans? Are your scans not working? Is it failing to post txs?


[08/12/2020 2:36 PM] kushti#0978
still the same


[08/12/2020 2:36 PM] kushti#0978
sec


[08/12/2020 2:36 PM] kushti#0978
Current Blockheight: 293595

The UTXO-Set Scans Have Not Found All Of The Oracle Pool Boxes Yet.

Please make sure that you have resynced your Ergo node so that the scans can find all of the boxes.


[08/12/2020 2:36 PM] kushti#0978
that's all


[08/12/2020 2:36 PM] kushti#0978
wallet unlocked from the start


[08/12/2020 2:36 PM] kushti#0978
and bootstrapping box is not spent


[08/12/2020 2:37 PM] kushti#0978
this box to be spent automatically ?


[08/12/2020 2:37 PM] kushti#0978
Does oracle-core writing logs?


[08/12/2020 2:38 PM] Robert K#0722
No logs yet.


[08/12/2020 2:38 PM] scalahub#2618
I think you need to call commit data point


[08/12/2020 2:38 PM] Robert K#0722
The datapoint box that scalahub bootstrapped does not get spent automatically without the connector running


[08/12/2020 2:38 PM] Robert K#0722
However your problem is related to just seeing the state of the protocol, which is required for anything to work.


[08/12/2020 2:39 PM] scalahub#2618
> ``` curl --header "Content-Type: application/json"   --request POST   --data '{"datapoint":123456}'   http://localhost:9091/submitDatapoint
> 
> 
> following is response
> 
> "{\"tx_id\":\"79ce3fbcf0e1b9656f0ef398a6d55d099b7c83e3002b811e3680134a49625439\"}"```
See above


[08/12/2020 2:39 PM] Robert K#0722
That won't matter @scalahub, if it's not printing the current state of the protocol he won't be able to submit anything.


[08/12/2020 2:39 PM] scalahub#2618
I see.


[08/12/2020 2:40 PM] Robert K#0722
@kushti Have you checked that 4/5 of the registered scans all have valid boxes?


[08/12/2020 2:41 PM] Robert K#0722
> What I need to help figure this out:
> 1. Json of the scans you have registered in your node + the json response for every scan that is registered (the boxes returned)
> 2. Your oracle-config.yaml
> 3. What the oracle core is printing out.


[08/12/2020 2:41 PM] Robert K#0722
It's hard for me to just guess what is going on right now, but I should indeed add more clear errors to what boxes are not found.


[08/12/2020 2:41 PM] Robert K#0722
Will work on that today too.


[08/12/2020 2:43 PM] kushti#0978
connector:


[08/12/2020 2:43 PM] kushti#0978
Current Blockheight: 293601
Current Oracle Pool Stage: Epoch Preparation
Submit Datapoint In Latest Epoch: true
Latest Datapoint: 0
===========================================


[08/12/2020 2:43 PM] kushti#0978
sec


[08/12/2020 2:47 PM] kushti#0978
Scan jsons:


[08/12/2020 2:47 PM] kushti#0978
https://dumpz.org/a8W3qQEQMkez

{Embed}
https://dumpz.org/a8W3qQEQMkez
source code in JSON
source code in JSON from Anonymous.


[08/12/2020 2:48 PM] kushti#0978
11,13,14 have boxes


[08/12/2020 2:48 PM] kushti#0978
12 and 15 nt


[08/12/2020 2:50 PM] kushti#0978


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743104075121557625/oracle-config.yaml


[08/12/2020 2:50 PM] kushti#0978
oracle config


[08/12/2020 2:55 PM] Robert K#0722
Thanks @kushti. I've also pushed improved error reporting in the latest commit, so if you could update and run the new core + post what error you get that would be very helpful as well.


[08/12/2020 2:56 PM] kushti#0978
ok going to do


[08/12/2020 2:57 PM] scalahub#2618
@kushti if you have box scan id 13 (    "scanName": "Local Oracle Datapoint Scan")


[08/12/2020 2:57 PM] scalahub#2618
then you should be able to spend


[08/12/2020 2:58 PM] scalahub#2618
cab you try the above curl just to see what error you get


[08/12/2020 2:58 PM] scalahub#2618
12 and 15 dont have boxes is normal.. 15 is funding so ok and 12 is live (will not have box when in prep state)


[08/12/2020 3:14 PM] Robert K#0722
Yeah, the scans seem fine, which is why it's weird it's not printing state.


[08/12/2020 3:15 PM] Robert K#0722
Which seems to suppose its not reading the boxes properly?


[08/12/2020 3:39 PM] Robert K#0722
@scalahub I've implemented margin of error filtering to the oracle core now.


[08/12/2020 3:40 PM] Robert K#0722
Essentially we'll hard code a margin of error (percentage ranging from `0.01`-`1.00`) in the "Live Epoch" contract (and have it in the oracle-config.yaml) and any data-inputs provided must be +/- the margin of error compared to the latest finalized datapoint in R6.


[08/12/2020 3:41 PM] scalahub#2618
yes (and for simplity, lets encode that as percent so 0 to 100)


[08/12/2020 3:42 PM] Robert K#0722
Isn't it easier to encode it as a decimal so you can just multiply to acquire the delta value?


[08/12/2020 3:43 PM] scalahub#2618
maybe.. im not sure if ergoscript supports decimals.. have never used it


[08/12/2020 3:43 PM] scalahub#2618
if it does then yes 0 to 1 will be better


[08/12/2020 3:44 PM] scalahub#2618
@kushti is there a float or double type?


[08/12/2020 3:44 PM] Robert K#0722
Right, it seems that there isn't one: https://github.com/ScorexFoundation/sigmastate-interpreter/blob/develop/docs/LangSpec.md

{Embed}
https://github.com/ScorexFoundation/sigmastate-interpreter/blob/develop/docs/LangSpec.md
ScorexFoundation/sigmastate-interpreter
Interpreter of a Sigma-State language. Contribute to ScorexFoundation/sigmastate-interpreter development by creating an account on GitHub.
https://images-ext-2.discordapp.net/external/YpBER9jxoC4piVA-OFwYuv0LT48G70XEXqXD46lUmgg/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/20186710


[08/12/2020 3:45 PM] scalahub#2618
issue with float is leads to non-deterministic behavior in jvm (implementation specific)


[08/12/2020 3:48 PM] Robert K#0722
So since we don't have floats, the equation to calculate the delta will be:
`[Latest Finalized Datapoint] / 100 * [Margin Of Error]`


[08/12/2020 3:49 PM] scalahub#2618
yup


[08/12/2020 3:49 PM] Robert K#0722
And then `[Latest Finalized Datapoint] +/- [Delta]`


[08/12/2020 3:49 PM] scalahub#2618
could this be better? `[Latest Finalized Datapoint] * [Margin Of Error] / 100`


[08/12/2020 3:49 PM] scalahub#2618
or could it lead to overflow


[08/12/2020 3:50 PM] Robert K#0722
Theoretically it could lead to overflow if the datapoint is crazy large


[08/12/2020 3:50 PM] scalahub#2618
yes lets stick to division first..


[08/12/2020 4:41 PM] kushti#0978
no float / double, the problem is not about jvm just, rather cross-platform issues

{Reactions}
üëå 

[08/12/2020 4:42 PM] kushti#0978
so I'm getting


[08/12/2020 4:42 PM] kushti#0978
Error: No Boxes Found For Local Oracle Datapoint Scan


[08/12/2020 4:42 PM] kushti#0978
now


[08/12/2020 4:48 PM] Robert K#0722
Okay, that is what I thought. Your core is having issues reading your local oracle datapoint scan.


[08/12/2020 4:49 PM] Robert K#0722
Can you post the json repsonse from scanId `13` from your node? Since you said it finds the boxes I want to see if it's a problem with parsing the box


[08/12/2020 4:53 PM] Robert K#0722
Your oracle-config.yaml looks fine, so I do think it has to be with parsing the box then?


[08/12/2020 5:05 PM] kushti#0978
got more output


[08/12/2020 5:05 PM] kushti#0978
Error: Failed reading response from node: [{"confirmationsNum":1262,"address":"jL2aaqw6XU61SZznxeykLpREPzSmZv8bwbjEsJD6DMfXQLgBc12wMmPpVD81JnLxfxkT6s5nvYgbB62vkH8ChHeuVKtCPDMLTZ3gFMTa11YXXGBKvkezBENzpDBh8HsLHhnTTbMzv2sViDQpSWVNEF6G3Z9Fn2Ce6TNc5iHFZr7jGCBLtfRLKMb9RRUc9voWz9yEWpgADEkoQnDyMn5wc6xLoJsSYLfXHo2t8pyvwXfn2NotR3xFRDHU7wHXe","creationTransaction":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","scans":[13,14],"onchain":true,"creationOutIndex":3,"spendingTransaction":null,"box":{"boxId":"06e48ca1db4a11911a4450ea7e80d031c17f913fc691b00ea0322d11e64a1372","value":2000000,"ergoTree":"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20955fd2c22393aa0f5db841dd8a3ad44ebb7de970419f5a0a58441ebe6b809fb2d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202","assets":[{"tokenId":"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed","amount":1}],"creationHeight":292407,"additionalRegisters":{"R4":"070327e65711a59378c59359c3e1d0f7abe906479eccb76094e50fe79d743ccc15e6","R5":"0e0101","R6":"0502"},"transactionId":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","index":3},"spendingHeight":null,"inclusionHeight":292410,"spent":false}]


[08/12/2020 5:07 PM] kushti#0978
@Robert K so yes, like box parsing error?


[08/12/2020 6:26 PM] scalahub#2618
are registers created correctly?


[08/12/2020 6:27 PM] scalahub#2618
actually it was created in same tx, so unless the group element is wrong, the other registers should be fine


[08/12/2020 6:37 PM] Robert K#0722
Hmm intriguing, I'll dig more into it.


[08/12/2020 6:37 PM] Robert K#0722
I think it might be the group element then?


[08/12/2020 6:44 PM] Robert K#0722
By the way I've added logging to a local file (which currently just saves what the core was printing) in the latest commit


[08/12/2020 6:49 PM] kushti#0978
group element is fine


[08/12/2020 6:50 PM] kushti#0978
and corresponding to my address


[08/12/2020 6:50 PM] Robert K#0722
Yeah it seems that the json is just failing to be parsed by sigma-rust


[08/12/2020 6:53 PM] Robert K#0722
@greenhat It appears that the following box is failing to be parsed by sigma-rust

```json
[{"confirmationsNum":1262,"address":"jL2aaqw6XU61SZznxeykLpREPzSmZv8bwbjEsJD6DMfXQLgBc12wMmPpVD81JnLxfxkT6s5nvYgbB62vkH8ChHeuVKtCPDMLTZ3gFMTa11YXXGBKvkezBENzpDBh8HsLHhnTTbMzv2sViDQpSWVNEF6G3Z9Fn2Ce6TNc5iHFZr7jGCBLtfRLKMb9RRUc9voWz9yEWpgADEkoQnDyMn5wc6xLoJsSYLfXHo2t8pyvwXfn2NotR3xFRDHU7wHXe","creationTransaction":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","scans":[13,14],"onchain":true,"creationOutIndex":3,"spendingTransaction":null,"box":{"boxId":"06e48ca1db4a11911a4450ea7e80d031c17f913fc691b00ea0322d11e64a1372","value":2000000,"ergoTree":"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20955fd2c22393aa0f5db841dd8a3ad44ebb7de970419f5a0a58441ebe6b809fb2d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202","assets":[{"tokenId":"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed","amount":1}],"creationHeight":292407,"additionalRegisters":{"R4":"070327e65711a59378c59359c3e1d0f7abe906479eccb76094e50fe79d743ccc15e6","R5":"0e0101","R6":"0502"},"transactionId":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","index":3},"spendingHeight":null,"inclusionHeight":292410,"spent":false}]
```


[08/12/2020 6:55 PM] Robert K#0722
Upon testing with a basic `from_str(json_string).unwrap()` it panics but doesn't produce a panic message from what I can see? Any ideas?


[08/12/2020 7:10 PM] greenhat#6562
@Robert K It's more than a box, but I can parse the `"box": ...` part from it. I just tested it.


[08/12/2020 7:11 PM] Robert K#0722
Hmm? I am just parsing the "box" part and it's failing.


[08/12/2020 7:11 PM] Robert K#0722
Very weird.


[08/12/2020 7:13 PM] greenhat#6562
@Robert K is sigma-tree up to date? This is working in `develop':
```
        let json = r#"
            {"boxId":"06e48ca1db4a11911a4450ea7e80d031c17f913fc691b00ea0322d11e64a1372","value":2000000,"ergoTree":"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20955fd2c22393aa0f5db841dd8a3ad44ebb7de970419f5a0a58441ebe6b809fb2d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202","assets":[{"tokenId":"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed","amount":1}],"creationHeight":292407,"additionalRegisters":{"R4":"070327e65711a59378c59359c3e1d0f7abe906479eccb76094e50fe79d743ccc15e6","R5":"0e0101","R6":"0502"},"transactionId":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","index":3}
        "#;
        let b: ErgoBox = serde_json::from_str(json).unwrap();
        assert!(b.value.value() == 2000000);
```


[08/12/2020 7:19 PM] Robert K#0722
Ah you are right, I messed up deleting a section of the json, sorry about that.


[08/12/2020 7:19 PM] Robert K#0722
But that only makes it more confusing why Alex is running into an issue with parsing the json for his oracle core, hmmm.


[08/12/2020 7:29 PM] Robert K#0722
@kushti The latest commit should now expose the underlying error from the parsing functions.


[08/12/2020 7:30 PM] Robert K#0722
So if you run it, we should theoretically see what's causing an issue.


[08/12/2020 8:03 PM] kushti#0978
@Robert K thanks, going to test!


[08/12/2020 8:32 PM] kushti#0978
@Robert K latest commit failing with "[00:00:00.000] (7f4d80bd6b00) ERROR  thread 'main' panicked at 'No margin_of_error specified in config file.': src/oracle_config.rs:34"


[08/12/2020 8:32 PM] kushti#0978
oracle core aborts immediately after start


[08/12/2020 8:56 PM] Robert K#0722
Ah the margin of error has been updated from a float to an int now


[08/12/2020 8:56 PM] Robert K#0722
Sorry about that, can you edit your oralce-config.yaml and change `margin_of_error`  to `10`


[08/12/2020 8:56 PM] Robert K#0722
@kushti


[08/12/2020 9:50 PM] Robert K#0722
@scalahub Any issues on your end by the way for running an oracle?


[08/13/2020 12:50 AM] kushti#0978
@Robert K @greenhat 
"Error: Failed parsing JSON box from node: Box Json: {"boxId":"06e48ca1db4a11911a4450ea7e80d031c17f913fc691b00ea0322d11e64a1372","value":2000000,"ergoTree":"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20955fd2c22393aa0f5db841dd8a3ad44ebb7de970419f5a0a58441ebe6b809fb2d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202","assets":[{"tokenId":"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed","amount":1}],"creationHeight":292407,"additionalRegisters":{"R4":"070327e65711a59378c59359c3e1d0f7abe906479eccb76094e50fe79d743ccc15e6","R5":"0e0101","R6":"0502"},"transactionId":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","index":3}
Error: Error("feature not yet implemented: parsing of constant value of type SGroupElement is not yet supported", line: 1, column: 691)
"


[08/13/2020 8:49 AM] scalahub#2618
> @scalahub Any issues on your end by the way for running an oracle?
@Robert K seems to be running fine.. I'm currently using cron job to post rates every 5 mins


[08/13/2020 8:49 AM] scalahub#2618
will test the connector today

{Reactions}
üëç 

[08/13/2020 9:26 AM] kushti#0978
oh my oracle is running fine!

{Reactions}
üëç 

[08/13/2020 9:26 AM] kushti#0978
https://explorer.ergoplatform.com/en/transactions/320a9dc92345904ce81dbfa94eee28885dca1b8b08ea44e2dba0e9877f132364


[08/13/2020 9:42 AM] greenhat#6562
@kushti @Robert K I'm puzzled by this error. I can parse the ErgoBox just fine from this json. And `SGroupElement`is supported for quite a while. Any chance it's and old sigma version?


[08/13/2020 10:06 AM] kushti#0978
some local cache for dependencies ?


[08/13/2020 10:20 AM] greenhat#6562
@kushti never seen stale deps before. Can you try `cargo clean` and then build it again?


[08/13/2020 10:32 AM] kushti#0978
ok will try


[08/13/2020 10:32 AM] kushti#0978
well, the oracle is running it seems


[08/13/2020 10:32 AM] kushti#0978
anyway


[08/13/2020 10:52 AM] kushti#0978
oh by my transactions not getting into the blocks


[08/13/2020 10:52 AM] kushti#0978
going to check why


[08/13/2020 11:55 AM] scalahub#2618
Why is it not getting into blocks? We had same issue a couple of days ago.


[08/13/2020 12:00 PM] kushti#0978
@scalahub interesting, what was the issue about ?


[08/13/2020 12:00 PM] kushti#0978
ah, mempool?


[08/13/2020 12:00 PM] kushti#0978
it is different this time


[08/13/2020 12:05 PM] kushti#0978
oh because another oracle is spending the same box


[08/13/2020 12:05 PM] kushti#0978
249d1e9264a7bd071fc42d4a711bb54aed2b4feea0d3c90b39e3f530aa38d9d3


[08/13/2020 12:06 PM] kushti#0978
so only one transaction is getting into the blocks


[08/13/2020 12:06 PM] kushti#0978
another is double-spend


[08/13/2020 1:40 PM] kushti#0978
why double-spending transactions being generated ?


[08/13/2020 2:18 PM] Robert K#0722
Ah, good to hear it works. Super weird to see that there was some sort of stale dependency problem, odd.


[08/13/2020 2:19 PM] Robert K#0722
So the reason why double-spending transactions are generated is because the protocol requires to be moved from stage-to-stage, and so every oracle posts those transactions. There's no way to synchronize/choose a leader, and furthermore it'd be bad to only have 1 person submitting these txs because they can fail at doing their job.


[08/13/2020 2:20 PM] Robert K#0722
And also for `Collect Datapoints` action, the person who's tx gets selected earns double payout, which incentivizes using higher fees/being included first and making sure you get included in a block even during congestion.


[08/13/2020 2:22 PM] kushti#0978
ah so its about collection ?


[08/13/2020 2:22 PM] kushti#0978
then good


[08/13/2020 2:22 PM] kushti#0978
but why my oracle is not posting


[08/13/2020 2:22 PM] kushti#0978
I'm running the connector


[08/13/2020 2:22 PM] kushti#0978
oh its not posting because of that parsing error ?


[08/13/2020 2:24 PM] Robert K#0722
It needs to read the state to understand what to post.


[08/13/2020 2:24 PM] Robert K#0722
If it can't read the state properly, then nothing happens.


[08/13/2020 2:25 PM] Robert K#0722
Everyone sends the same txs for: "Collect Datapoints" (which goes from Live Epoch -> Epoch Prep), "Start/Create New Epoch" (Epoch Prep -> Live Epoch), and "Collect Funds".


[08/13/2020 2:26 PM] Robert K#0722
Essentially the pool management actions so to speak.


[08/13/2020 2:26 PM] Robert K#0722
You alone spend your `Datapoint` box and there can be no double spends there.


[08/13/2020 2:26 PM] Robert K#0722
So is your oracle core working now, or is it still having an issue with parsing @kushti ?


[08/13/2020 2:29 PM] kushti#0978
still had an issue, rebuilding now


[08/13/2020 2:30 PM] kushti#0978
Would addBox in 3.3.1 be useful ?


[08/13/2020 2:30 PM] kushti#0978
I hope it can be released before or on Monday


[08/13/2020 2:34 PM] kushti#0978
@Robert K @greenhat still parsing error after "cargo clean" / rebuild


[08/13/2020 2:34 PM] kushti#0978
Error: Failed parsing JSON box from node: Box Json: {"boxId":"06e48ca1db4a11911a4450ea7e80d031c17f913fc691b00ea0322d11e64a1372","value":2000000,"ergoTree":"100604000400050004000e20b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc0e20955fd2c22393aa0f5db841dd8a3ad44ebb7de970419f5a0a58441ebe6b809fb2d803d601b2a5730000d602e4c6a70407d603b2db6501fe730100ea02d1ededededed93e4c672010407720293e4c67201050ec5720391e4c672010605730293c27201c2a793db63087201db6308a7ed938cb2db6308720373030001730493cbc272037305cd7202","assets":[{"tokenId":"12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed","amount":1}],"creationHeight":292407,"additionalRegisters":{"R4":"070327e65711a59378c59359c3e1d0f7abe906479eccb76094e50fe79d743ccc15e6","R5":"0e0101","R6":"0502"},"transactionId":"7a553718bfe7bb40915639fa95d608cd1d11ded67f4ef9beb98875cfce3f7d0d","index":3}
Error: Error("feature not yet implemented: parsing of constant value of type SGroupElement is not yet supported", line: 1, column: 691)


[08/13/2020 2:43 PM] Robert K#0722
Can you post the contents of your `Cargo.toml`?


[08/13/2020 2:43 PM] Robert K#0722
This is super weird caching.


[08/13/2020 2:43 PM] Robert K#0722
> Would addBox in 3.3.1 be useful ?
@kushti For testing primarily, yeah.


[08/13/2020 2:51 PM] Robert K#0722
@kushti So my Ergo Node running on a server died last night randomly, and I just restarted it and it's not syncing.


[08/13/2020 2:51 PM] Robert K#0722
It's stuck on height `293849`


[08/13/2020 2:53 PM] Robert K#0722
This makes me think it's not an external kill signal but potentially something in the node? Or maybe just the database got corrupted from the kill?


[08/13/2020 2:55 PM] Robert K#0722
I think I have to resync the whole node


[08/13/2020 3:59 PM] kushti#0978
@Robert K maybe db crashed, but can you send me the logs please ?


[08/13/2020 4:00 PM] kushti#0978
@Robert K @greenhat maybe Cargo.lock is the reason ?


[08/13/2020 4:00 PM] kushti#0978
I'm not very familiar with building process in Rust


[08/13/2020 4:01 PM] kushti#0978
in Cargo.toml


[08/13/2020 4:01 PM] kushti#0978
sigma-tree      = { git = "https://github.com/ergoplatform/sigma-rust", branch = "develop",  features = ["with-serde"]  }


[08/13/2020 4:03 PM] greenhat#6562
@kushti any other deps? @Robert K Maybe some transitive dep on old sigma-tree?


[08/13/2020 4:04 PM] kushti#0978


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743485154840018944/Cargo.toml


[08/13/2020 4:05 PM] kushti#0978
in Cargo.lock "sigma-tree 0.1.0 (git+https://github.com/ergoplatform/sigma-rust?branch=develop)",

{Embed}
https://github.com/ergoplatform/sigma-rust?branch=develop)%22,
ergoplatform/sigma-rust
Alternative and simple implementation of ErgoTree interpreter - ergoplatform/sigma-rust
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/13/2020 4:07 PM] kushti#0978
and sigma-tree


[08/13/2020 4:07 PM] kushti#0978
depends on "sigma-ser 0.1.0 (git+https://github.com/ergoplatform/sigma-rust?branch=develop)",

{Embed}
https://github.com/ergoplatform/sigma-rust?branch=develop)%22,
ergoplatform/sigma-rust
Alternative and simple implementation of ErgoTree interpreter - ergoplatform/sigma-rust
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/13/2020 4:07 PM] kushti#0978
I guess parsing is in sigma-ser


[08/13/2020 4:08 PM] kushti#0978
oh maybe I published these libs locally when checked sigma-rust


[08/13/2020 4:08 PM] kushti#0978
any way to reset the local cache ?


[08/13/2020 4:08 PM] kushti#0978
If any


[08/13/2020 4:09 PM] greenhat#6562
@kushti  no, parsing is in sigma-tree, sigma-ser holds low-level stuff, like VLQ, etc.


[08/13/2020 4:10 PM] kushti#0978
I see


[08/13/2020 4:10 PM] kushti#0978
so what to do ? remove Cargo.lock ?


[08/13/2020 4:10 PM] kushti#0978
It is from yesterday though


[08/13/2020 4:10 PM] greenhat#6562
@kushti `cargo clean` should take care of the local cache. Try to delete Cargo.lock.


[08/13/2020 4:12 PM] kushti#0978
I can try to remove ~/.cargo/registry as well


[08/13/2020 4:13 PM] greenhat#6562
@kushti next, I'd try `rev` option and specify the latest commit explicitly. I'm not sure of the format, try `rev="51adbd5f9a72978c23b9af286b3a73e213e67fe3"` instead of `branch`.


[08/13/2020 4:13 PM] kushti#0978
removed ~/.cargo/registry and ~/.cargo/git


[08/13/2020 4:13 PM] kushti#0978
seems cache was there indeed


[08/13/2020 4:13 PM] kushti#0978
rebuilding


[08/13/2020 4:31 PM] kushti#0978
whew


[08/13/2020 4:31 PM] kushti#0978
now running

{Reactions}
üíØ 

[08/13/2020 4:31 PM] kushti#0978


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743492015781838908/oracle-pool.png


[08/13/2020 4:32 PM] kushti#0978
thanks @Robert K and @greenhat !


[08/13/2020 4:32 PM] kushti#0978
@greenhat you can run an oracle also


[08/13/2020 4:33 PM] greenhat#6562
I will.


[08/13/2020 4:34 PM] Robert K#0722
Awesome, glad to hear it @kushti.


[08/13/2020 4:35 PM] Robert K#0722
Never seen caching issues like that before.


[08/13/2020 4:36 PM] Robert K#0722
@greenhat If you have any questions, let me know. The instructions should be pretty simple to follow. Post your oracle wallet address here and ping @scalahub to bootstrap your address into the protocol.


[08/13/2020 4:36 PM] greenhat#6562
@Robert K thanks


[08/13/2020 4:37 PM] kushti#0978
Your Latest Datapoint: 1


[08/13/2020 4:37 PM] kushti#0978
is it okay ?


[08/13/2020 4:37 PM] scalahub#2618
just paste your address @greenhat and I'll bootstrap the datapoint box\


[08/13/2020 4:37 PM] Robert K#0722
> Your Latest Datapoint: 1
@kushti Yeah, Amitabh bootstraps datapoints with `1`


[08/13/2020 4:38 PM] Robert K#0722
Since you haven't posted a datapoint, it's still at 1 from bootstrapping.


[08/13/2020 4:38 PM] Robert K#0722
(You need to run the Erg-USD connector by the way to post datapoints)


[08/13/2020 4:38 PM] kushti#0978
but I'm running it


[08/13/2020 4:39 PM] Robert K#0722
We're still in the Epoch Prep stage


[08/13/2020 4:39 PM] kushti#0978
ah right


[08/13/2020 4:39 PM] Robert K#0722
Ah, I just noticed I screwed up the printing a little bit once I added logging.


[08/13/2020 4:39 PM] Robert K#0722
Will fix that.


[08/13/2020 4:43 PM] Robert K#0722
Okay the printing is now fixed.


[08/13/2020 4:44 PM] Robert K#0722
But it seems that since v3.3.0 was released there's generally some kind of problem with getting txs accepted into blocks.


[08/13/2020 4:44 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/5b1e58222672b8d3ee17269be200da4e9639fad73fd00739378a726a7a4d0bd3
Has been waiting for 3 blocks already.


[08/13/2020 4:45 PM] Robert K#0722
And I believe for 4 blocks before that a different tx didn't get accepted (`Start Next Epoch` tx)


[08/13/2020 4:46 PM] scalahub#2618
it could be an issue with explorer only? @Robert K


[08/13/2020 4:47 PM] Robert K#0722
But the protocol isn't moving forward as expected.


[08/13/2020 4:47 PM] Robert K#0722
And the core does not use the explorer.


[08/13/2020 4:48 PM] Robert K#0722
So it's something on the protocol level.


[08/13/2020 4:48 PM] Robert K#0722
(Actually it seems to have arrived in the "Live Epoch" stage finally now, but still delayed)


[08/13/2020 4:48 PM] kushti#0978
Hard to say how may miners updated the nodes even


[08/13/2020 4:48 PM] scalahub#2618
I see .. so when you say protocol is not moving forward, you are not depending on explore to conclude that?


[08/13/2020 4:48 PM] kushti#0978
checking


[08/13/2020 4:48 PM] Robert K#0722
The state of the oracle pool protocol is printed by your oracle core @scalahub


[08/13/2020 4:49 PM] Robert K#0722
It uses UTXO-set scanning to observe.


[08/13/2020 4:49 PM] Robert K#0722
I'm just using the explorer to see whats going on with the txs that are meant to be included and so forth.


[08/13/2020 4:49 PM] scalahub#2618
ok.. in my case core seems to be printing ok


[08/13/2020 4:49 PM] scalahub#2618
once in a while it gives tx error


[08/13/2020 4:50 PM] scalahub#2618
but explorer showing sometimes different state


[08/13/2020 4:50 PM] kushti#0978
Transaction 5b1e58222672b8d3ee17269be200da4e9639fad73fd00739378a726a7a4d0bd3 invalidated: Every input of the transaction should be in UTXO.


[08/13/2020 4:50 PM] Robert K#0722
Yeah, I messed up a `>=` check I believe a number of commits prior. That should all be fixed now with the tx errors @scalahub .


[08/13/2020 4:50 PM] kushti#0978
so the tx is double-spending


[08/13/2020 4:50 PM] kushti#0978
and another got into blocks


[08/13/2020 4:51 PM] Robert K#0722
But why did it take several blocks for any of them to be accepted?


[08/13/2020 4:51 PM] scalahub#2618
double spending logic may need to be enhanced in node


[08/13/2020 4:51 PM] scalahub#2618
like only allow if higher fee


[08/13/2020 4:52 PM] scalahub#2618
explorer should also indicate its a double spend


[08/13/2020 4:52 PM] kushti#0978
Your Latest Datapoint: 366336000
Datapoint Origin Epoch ID: ffa710c4fcd62188419f10935b2de81c791fd204d501ac534595e90470ccbd7e
Submitted At: 294278


[08/13/2020 4:52 PM] kushti#0978
whew my oracle is making progress

{Reactions}
üíØ 

[08/13/2020 4:53 PM] scalahub#2618
@kushti and tx is confirmed?


[08/13/2020 4:53 PM] kushti#0978
> But why did it take several blocks for any of them to be accepted?
@Robert K P2P layer is pretty lazy, as well as block assembly. Already working on some improvements


[08/13/2020 4:54 PM] kushti#0978
After enough 3.3.1+ nodes in the network, can enforce more aggressive broadcasting


[08/13/2020 4:54 PM] kushti#0978
> @kushti and tx is confirmed?
@scalahub yeah


[08/13/2020 4:55 PM] kushti#0978
For block assembly, improvements would be pretty tricky as for some GPUs block candidate regeneration is not an option


[08/13/2020 4:56 PM] scalahub#2618
@kushti btw I had no problem with confirmation when sending ordinary tx using urlwallet


[08/13/2020 4:57 PM] kushti#0978
@scalahub it really depends on how many hops from your node to miner's (and there are several distinguishable mining nodes at least), fee you pay etc


[08/13/2020 4:57 PM] scalahub#2618
btw urlwallet uses explorer to broadcast so maybe thats why


[08/13/2020 4:57 PM] kushti#0978
in urlwallet you're paying 0.0015 ergs for few hundred bytes


[08/13/2020 4:58 PM] kushti#0978
explorer is sending to one the seed nodes


[08/13/2020 4:58 PM] kushti#0978
which is connected with many peers but not all


[08/13/2020 4:58 PM] scalahub#2618
to be specific, using this node http://88.198.13.202:9053/


[08/13/2020 4:59 PM] kushti#0978
Currently miners are sorting transactions by fee / byte


[08/13/2020 4:59 PM] kushti#0978
and always including top ones only


[08/13/2020 4:59 PM] scalahub#2618
could be an issue with propagation


[08/13/2020 4:59 PM] kushti#0978
88.198 is one of the best yes


[08/13/2020 5:00 PM] scalahub#2618
maybe oracle core can also send to 88.198?


[08/13/2020 5:00 PM] kushti#0978
88.198 also doing aggressive rebroadcasting for many transactions now )


[08/13/2020 5:01 PM] kushti#0978
usual behavior is to resend few transactions when block arrives and mempool cleaned


[08/13/2020 5:01 PM] kushti#0978
88.198 is different


[08/13/2020 5:03 PM] kushti#0978
btw can I change fee for oracle transactions locally? @Robert K


[08/13/2020 5:04 PM] kushti#0978
159.65.11.55 is slightly better in terms of connectivity


[08/13/2020 5:04 PM] kushti#0978
than 88.198


[08/13/2020 5:04 PM] kushti#0978
but 88.198 is doing broadcasting more aggresively


[08/13/2020 5:12 PM] kushti#0978
So when a node is generating a transaction, it sends out to its peers the transaction id. The the peers is asking for the transaction usually.


[08/13/2020 5:13 PM] kushti#0978
However, the peers then do not send the transaction identifier out immediately, rather, after mempool cleanup which happens when a new block arrived. Currently, most of the nodes are rebroadcasting only few ids (that's configurable though).


[08/13/2020 5:21 PM] scalahub#2618
ok so this seems to be different from bitcoin


[08/13/2020 5:35 PM] kushti#0978
Yeah, in Bitcoin rebroadcasting is more aggressive


[08/13/2020 5:36 PM] kushti#0978
With an exception for Dandelion BIP


[08/13/2020 5:36 PM] kushti#0978
not sure if it is implemented


[08/13/2020 5:36 PM] kushti#0978
probably not in Bitcoin


[08/13/2020 5:36 PM] kushti#0978
but some privacy coins


[08/13/2020 5:38 PM] Robert K#0722
> btw can I change fee for oracle transactions locally? @Robert K
@kushti Just started implementing this feature this morning


[08/13/2020 5:38 PM] Robert K#0722
Going to add a `base_fee` field to the oracle-config.yaml


[08/13/2020 5:40 PM] kushti#0978
@Robert K awesome!


[08/13/2020 5:41 PM] kushti#0978
@Robert K is any API method to get current aggregated datapoint box ?


[08/13/2020 5:42 PM] Robert K#0722
On the core? The core only provides state data, not boxes/lower level protocol data


[08/13/2020 5:42 PM] Robert K#0722
Data that is exposed: https://github.com/ergoplatform/oracle-core/blob/master/docs/API-Endpoints.md

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/docs/API-Endpoints.md
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/13/2020 5:43 PM] Robert K#0722
I can add such endpoints if you'd like


[08/13/2020 5:43 PM] Robert K#0722
And by aggregated datapoint box, you mean the pool box? The aggregated datapoint is always in the pool box (which is either in `Live Epoch` stage or `Epoch Prep` stage)


[08/13/2020 6:00 PM] kushti#0978
yeah, the pool's box


[08/13/2020 6:00 PM] kushti#0978
to use it further in DeFi contracts )


[08/13/2020 6:03 PM] Robert K#0722
Typically other DeFi dApps would just use UTXO-set scanning and scan the oracle pool NFT


[08/13/2020 6:04 PM] Robert K#0722
But I can expose the boxes as well in the API.


[08/13/2020 6:05 PM] kushti#0978
ah right node is needed anyway


[08/13/2020 6:05 PM] kushti#0978
so scan in the node would be enough


[08/13/2020 6:06 PM] kushti#0978
@scalahub I actually think we can implement Bitcoin-like (more or less) tx propagation around the network


[08/13/2020 6:14 PM] Robert K#0722
@scalahub Could you use the Erg-usd connector today by the way?


[08/13/2020 6:15 PM] Robert K#0722
I added the margin of error checking and want to test to make sure it works fully for everyone.


[08/13/2020 6:15 PM] Robert K#0722
Obviously we still need to adjust the contracts to have it actually implemented, but the off-chain code should support it already now.


[08/13/2020 6:27 PM] kushti#0978
--------------------------------------------------
Failed To Issue `Collect Datapoints` Transaction.
Error: No datapoints posted in current epoch.
--------------------------------------------------


[08/13/2020 6:27 PM] kushti#0978
is it okay?


[08/13/2020 6:27 PM] kushti#0978
getting it right now


[08/13/2020 6:27 PM] Robert K#0722
Yeah, this is due to the latest commits having the 10% margin of error checking


[08/13/2020 6:27 PM] Robert K#0722
And scalahub is posting fake data that is out of range via cron


[08/13/2020 6:28 PM] Robert K#0722
If you go into your config and change `margin_of_error` to 50 then it should work @kushti


[08/13/2020 6:34 PM] scalahub#2618
getting this @Robert K 
```The UTXO-Set scans have not found all of the oracle pool boxes yet.

Error: No Boxes Found For Local Oracle Datapoint Scan
```


[08/13/2020 6:35 PM] scalahub#2618
I stopped my cron..


[08/13/2020 6:37 PM] scalahub#2618
Node kept running while I updated and recompiled core.. should I have stopped the node?


[08/13/2020 6:52 PM] Robert K#0722
It shouldn't have mattered, the node is doing all the scans


[08/13/2020 6:53 PM] Robert K#0722
The core has no state saved locally pretty much (besides scan ids)


[08/13/2020 6:53 PM] Robert K#0722
Do you still have the same scanIDs.json @scalahub


[08/13/2020 6:54 PM] Robert K#0722
If you recompiled you may have deleted the old scanIds potentially?


[08/13/2020 6:58 PM] scalahub#2618
checking


[08/13/2020 6:59 PM] scalahub#2618
yes it was indeed that.. I just replaced the new scanIDs.json with my older and it worked


[08/13/2020 7:02 PM] Robert K#0722
Great, so both of you guys have a fully running oracle core @scalahub @kushti ?


[08/13/2020 7:03 PM] Robert K#0722
The base_fee has been implemented by the way in the latest commits.


[08/13/2020 7:03 PM] Robert K#0722
So you can even change the `base_fee` while the core is running, and it'll use the latest value that's saved in the `oracle-config.yaml`.


[08/13/2020 7:04 PM] Robert K#0722
And the base_fee is printed/logged now too.


[08/13/2020 7:50 PM] kushti#0978
yeah I'm running the core


[08/13/2020 7:51 PM] kushti#0978
everything is fine to the moment


[08/13/2020 7:52 PM] kushti#0978
@Robert K  351235000  nanoErgs / USD, should be x10 I guess ?


[08/13/2020 7:53 PM] kushti#0978
3512350000 nanoErgs / USD


[08/13/2020 7:53 PM] kushti#0978
so about 3 Ergs per USD


[08/13/2020 7:54 PM] kushti#0978
though even that seems to be different from CoinGecko / CMC


[08/13/2020 8:03 PM] Robert K#0722
It looks good to me?


[08/13/2020 8:03 PM] Robert K#0722
`351235000 / 1000000000.0 = 0.3512`


[08/13/2020 8:04 PM] Robert K#0722
Wait, I may not be calculating this properly.


[08/13/2020 8:09 PM] kushti#0978
yeah


[08/13/2020 8:09 PM] kushti#0978
sec


[08/13/2020 8:10 PM] kushti#0978
cmc_api = CmcApi(opts.cmc_key)
    price = cmc_api.get_ergo_price('USD')
    price_reverse = int((1 / price)*1e9)


[08/13/2020 8:10 PM] kushti#0978
from old Python oracle script


[08/13/2020 8:15 PM] Robert K#0722
Right, that makes sense. Sorry, brain is not working straight right now üòÖ


[08/13/2020 8:20 PM] Robert K#0722
Fixed the connector with the correct equation and pushed the commit


[08/13/2020 8:22 PM] Robert K#0722
By the way, Nico would like to set up an oracle next week around Wednesday/Thursday.


[08/13/2020 8:23 PM] Robert K#0722
@scalahub Can you add the margin of error checking to the contracts by tomorrow, so we can test over the weekend?

{Reactions}
üëç 

[08/13/2020 8:23 PM] Robert K#0722
It'd be good to have the "final" contracts ready and working by the time he sets his oracle up.


[08/13/2020 8:49 PM] scalahub#2618
can you point me to the line in oracle core that is doing the margin or error checks? @Robert K


[08/13/2020 8:54 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/blob/master/src/actions.rs#L313-L335 @scalahub

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/src/actions.rs
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/13/2020 9:30 PM] scalahub#2618
@Robert K with the margin of error approach, we need to bootstrap using the correct rate


[08/13/2020 9:33 PM] scalahub#2618
additionally, maybe we should have a recovery path when the rate has gone beyond the margin


[08/13/2020 9:33 PM] kushti#0978
Well, everything looks good so far


[08/13/2020 9:34 PM] scalahub#2618
the hardwiring actual rate during bootstrap .. is that an issue? and is there a way to avoid it?


[08/13/2020 9:39 PM] Robert K#0722
With this approach you don't need to bootstrap with the correct rate.


[08/13/2020 9:39 PM] Robert K#0722
Like I mentioned I think yesterday, this is only on the `Collect Datapoints` action


[08/13/2020 9:39 PM] scalahub#2618
In epoch prep we have this


[08/13/2020 9:39 PM] scalahub#2618
```    sigmaProp( // start next epoch
      epochNotOver && canStartEpoch && enoughFunds &&
      OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
      OUTPUTS(0).R5[Int].get == SELF.R5[Int].get &&
      OUTPUTS(0).tokens == SELF.tokens &&
      OUTPUTS(0).value >= SELF.value &&
      isliveEpochOutput
    ) || sigmaProp( // create new epoch
      epochOver &&
      enoughFunds &&
      OUTPUTS(0).R4[Long].get == SELF.R4[Long].get &&
```


[08/13/2020 9:39 PM] scalahub#2618
so output R4 must be preserved


[08/13/2020 9:40 PM] scalahub#2618
If I bootstrap with 1 for example


[08/13/2020 9:40 PM] Robert K#0722
Right, the only thing that changes is that when using `Collect Datapoints` every single data-input referenced must be within `[margin of error]` if it is collected.


[08/13/2020 9:41 PM] Robert K#0722
Ah, you mean the pool itself, yes, sorry.


[08/13/2020 9:41 PM] Robert K#0722
I thought you meant the oracles.


[08/13/2020 9:41 PM] scalahub#2618
yes the pool


[08/13/2020 9:41 PM] Robert K#0722
We could theoretically add a new stage to the protocol


[08/13/2020 9:42 PM] scalahub#2618
yes just for bootstrap


[08/13/2020 9:42 PM] Robert K#0722
a "Bootstrap Stage" which doesn't have that logic


[08/13/2020 9:42 PM] scalahub#2618
but how to differentiate between bootstrap and normal


[08/13/2020 9:43 PM] Robert K#0722
I think it's better not to do this.


[08/13/2020 9:43 PM] Robert K#0722
It makes things a lot more messy.


[08/13/2020 9:43 PM] scalahub#2618
hmm so better to bootstrap with correct rate?


[08/13/2020 9:43 PM] scalahub#2618
that may be ok too


[08/13/2020 9:43 PM] Robert K#0722
I can just provide a flag in the connectors which gives you a datapoint from the current moment.


[08/13/2020 9:43 PM] Robert K#0722
so you run `./erg-usd-connector --bootstrap-value`


[08/13/2020 9:44 PM] scalahub#2618
ok


[08/13/2020 9:45 PM] Robert K#0722
Because otherwise we'd have 5 contracts users need to compile/configure, and it's higher likelyhood something goes wrong/we miss one condition or something.


[08/13/2020 9:45 PM] scalahub#2618
yes I don't want to add another patrh


[08/13/2020 9:45 PM] scalahub#2618
but if we could somehow differentiate between bootstrap and normal then we can do it in the existing path


[08/13/2020 9:46 PM] Robert K#0722
But it adds more complex logic to the oracle core


[08/13/2020 9:46 PM] scalahub#2618
no the core should be same


[08/13/2020 9:46 PM] Robert K#0722
Or I guess to the bootstrapper?


[08/13/2020 9:46 PM] Robert K#0722
Someone has to put the value in R4 that is proper at some point.


[08/13/2020 9:46 PM] Robert K#0722
We just have to decide who and how.


[08/13/2020 9:46 PM] scalahub#2618
the contract will be `output R4 is preserver || bootstrap`


[08/13/2020 9:47 PM] Robert K#0722
But that would change in both contracts


[08/13/2020 9:47 PM] scalahub#2618
but not sure if its doable easily..


[08/13/2020 9:47 PM] scalahub#2618
no only prep


[08/13/2020 9:47 PM] Robert K#0722
`Epoch Prep` and `Live Epoch`


[08/13/2020 9:47 PM] Robert K#0722
Ah you are right


[08/13/2020 9:48 PM] Robert K#0722
For now lets just bootstrap with the correct value as it's a lot easier to debug than on-chain contracts.


[08/13/2020 9:49 PM] scalahub#2618
yup.. I agree


[08/13/2020 9:49 PM] scalahub#2618
this could be something worth investigating because its a common pattern


[08/13/2020 9:49 PM] scalahub#2618
(differentiate bootstrap from normal operation)


[08/13/2020 9:50 PM] Robert K#0722
Yeah


[08/13/2020 9:50 PM] scalahub#2618
we could have some generic solution like the singleton perpetual token


[08/13/2020 9:52 PM] Robert K#0722
You could do it in a stupid manner and mint another singleton token which gets destroyed after the 1st cycle of the protocol. If the token exists in the box, then ignore standard procedures and perform bootstrap logic instead.


[08/13/2020 9:52 PM] Robert K#0722
You could even have an iteration of bootstrap sequences with this, where you have a token of X quantity, and every bootstrap iteration it subtracts 1 from the count and destroys it.


[08/13/2020 9:53 PM] Robert K#0722
Then when it hits 0, the box has no more of said token, and bootstrap is finished/the protocol begins proper.


[08/13/2020 9:59 PM] scalahub#2618
yes but maybe if we can have another box that we just spend


[08/13/2020 9:59 PM] scalahub#2618
so it can be independent of application


[08/13/2020 9:59 PM] scalahub#2618
btw in the margin check, shouldn't we have >= and <= instead of > and < ?


[08/13/2020 10:08 PM] Robert K#0722
> yes but maybe if we can have another box that we just spend
@scalahub Yeah, I guess you could have an alternate spend path that just requires a 1-time spending of a box with a specific id.


[08/13/2020 10:09 PM] Robert K#0722
But that means more logic in the off-chain & on-chain code.


[08/13/2020 10:09 PM] Robert K#0722
> btw in the margin check, shouldn't we have >= and <= instead of > and < ?
@scalahub Good point, will fix.


[08/13/2020 10:24 PM] Robert K#0722
@scalahub Okay the Erg-usd connector now has a `--bootstrap-value` flag.


[08/13/2020 10:24 PM] Robert K#0722
It fetches the price, prints it, and closes the app


[08/13/2020 10:25 PM] Robert K#0722
And no config file or anything is needed for it to run, so that functionality is pretty portable.


[08/13/2020 10:29 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala#L46:L50

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/13/2020 10:29 PM] scalahub#2618
these are addresses of new contracts with margin check..


[08/13/2020 10:29 PM] scalahub#2618
also please check the code too https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPool.scala#L44:L89

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/13/2020 10:35 PM] Robert K#0722
Logic looks good.


[08/13/2020 10:41 PM] Robert K#0722
Okay I've personally registered the new addresses in my node


[08/13/2020 10:42 PM] Robert K#0722
I've also commit them to the `oracle-config.yaml` repo to make it easier for you guys if you want to use that config form there


[08/13/2020 10:53 PM] kushti#0978
@Robert K i1161 branch has /wallet/rescan endpoint

{Reactions}
üíØ (2) 

[08/14/2020 1:35 AM] Robert K#0722
Hmm, no idea what went wrong but I think we hit an edge case?

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743628770027765830/unknown.png


[08/14/2020 1:35 AM] Robert K#0722
Will see if the pool continues or if it's just stuck, will look into it tomorrow.


[08/14/2020 5:12 AM] scalahub#2618
Hmmm what is the edge case? Error not very informative :)


[08/14/2020 6:56 AM] scalahub#2618
can I bootstrap the new address?


[08/14/2020 12:39 PM] kushti#0978
The error says that there's no secret to sign basically


[08/14/2020 12:39 PM] kushti#0978
Now we're testing the pool being underfunded


[08/14/2020 12:39 PM] kushti#0978
nice )


[08/14/2020 2:03 PM] Robert K#0722
Right, but it doesn't make sense that there's no secret to sign as it's the oracle core that was running and working until randomly that popped up.


[08/14/2020 2:04 PM] Robert K#0722
I'll test to see if the underfunded pool can progress forward manually to check the contract.


[08/14/2020 2:04 PM] Robert K#0722
@kushti Have you registered the new scans for the new pool with the margin of error contract?


[08/14/2020 2:08 PM] Robert K#0722
Okay cool, the underfunded check now works:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743818351939289151/unknown.png


[08/14/2020 2:14 PM] kushti#0978
> Right, but it doesn't make sense that there's no secret to sign as it's the oracle core that was running and working until randomly that popped up.
@Robert K then script is reduced to what is not expected


[08/14/2020 2:15 PM] kushti#0978
likely


[08/14/2020 2:18 PM] scalahub#2618
so did we manage to debug the source of the error?


[08/14/2020 2:32 PM] kushti#0978
> @kushti Have you registered the new scans for the new pool with the margin of error contract?
@Robert K oh missed that, are they in the master ?


[08/14/2020 3:01 PM] Robert K#0722
> @Robert K oh missed that, are they in the master ?
@kushti Yeah, I added them to the config file


[08/14/2020 3:01 PM] Robert K#0722
But maybe I screwed something up in the latest commits actually


[08/14/2020 3:02 PM] Robert K#0722
My txs seem to all be rejected now (either due to the signing error or script returning false)


[08/14/2020 3:03 PM] Robert K#0722
Okay, so I just reverted to a commit from Wednesday, and it works.


[08/14/2020 3:11 PM] Robert K#0722
Sorry, this was a really stupid mistake. I'm multi-tasking and not realizing the effects of what I was doing üòÖ . I edited the oracle-config to use the new addresses, so obviously that broke the oracle which is using the config and using these new addresses which are wrong for the current pool.


[08/14/2020 3:12 PM] kushti#0978
multi-tasking is error-prone  indeed


[08/14/2020 3:12 PM] kushti#0978
ok so what should I do now ?


[08/14/2020 3:12 PM] kushti#0978
run against latest master commit ?


[08/14/2020 3:12 PM] kushti#0978
and take config from there?


[08/14/2020 3:13 PM] Robert K#0722
Yes, and that will have the new addresses for the pool with margin of error included.


[08/14/2020 3:13 PM] Robert K#0722
Just edit the config with your address/node data, then use the setup script, and launch the oracle core to register the scans with your node.


[08/14/2020 3:19 PM] kushti#0978
nice, going to relaunch my thing


[08/14/2020 4:31 PM] kushti#0978
again


[08/14/2020 4:31 PM] kushti#0978
Error: No Boxes Found For Local Oracle Datapoint Scan


[08/14/2020 4:31 PM] kushti#0978
after rescan


[08/14/2020 4:34 PM] Robert K#0722
Yeah, we wanted to register the scans before the bootstrap


[08/14/2020 4:34 PM] Robert K#0722
@scalahub I think everyone is ready


[08/14/2020 5:22 PM] Robert K#0722
I'm currently upgrading the `connector-lib` into a mini-framework of sorts so that we can deploy connectors in 15-20 lines of code pretty trivially in the future: https://github.com/ergoplatform/oracle-core/tree/connectors-upgrade/connectors/connector-lib

{Embed}
https://github.com/ergoplatform/oracle-core/tree/connectors-upgrade/connectors/connector-lib
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
‚ù§Ô∏è 

[08/14/2020 5:40 PM] kushti#0978
@Robert K get_datapoint can return result of any type ?


[08/14/2020 5:49 PM] scalahub#2618
I'll bootstrap within the hour

{Reactions}
üëå 

[08/14/2020 5:49 PM] Robert K#0722
> @Robert K get_datapoint can return result of any type ?
@kushti It has to be an Integer, specifically `u64`.


[08/14/2020 5:49 PM] scalahub#2618
can you paste your addresses again


[08/14/2020 5:50 PM] Robert K#0722
The whole protocol relies on using integers from the contracts to the oracle core (and there's no float anyways in ErgoScript) so there's not really any other type to support tbh.


[08/14/2020 5:50 PM] Robert K#0722
We could adjust the contracts/protocol to do vote agreement on arbitrary strings for example in the future, but that's a bit of a different protocol.


[08/14/2020 5:50 PM] Robert K#0722
@scalahub `9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF`


[08/14/2020 6:00 PM] Robert K#0722
@scalahub Now with the new connector-lib framework, all connectors will natively have a `--bootstrap-value` flag that can be used while bootstrapping an oracle pool.


[08/14/2020 6:41 PM] kushti#0978
@kushti mine is 9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE


[08/14/2020 7:40 PM] scalahub#2618
Im not able to get core running


[08/14/2020 7:41 PM] scalahub#2618
how do I check its running?


[08/14/2020 7:42 PM] scalahub#2618
also I'm running locally so don't need screen


[08/14/2020 7:46 PM] Robert K#0722
you can enter the screen via `screen -r`


[08/14/2020 7:47 PM] Robert K#0722
Or go into `htop` and search for `oracle`


[08/14/2020 7:47 PM] Robert K#0722
But yeah you can just do `./oracle-core` and run it directly


[08/14/2020 7:47 PM] scalahub#2618
nvm killing screen helped `killall screen`


[08/14/2020 7:47 PM] Robert K#0722
Yeah that works too


[08/14/2020 7:53 PM] scalahub#2618
can I try funding? It says pool is underfunded


[08/14/2020 7:56 PM] scalahub#2618
bootstrap tx: https://explorer.ergoplatform.com/en/transactions/80208b74faef0462fafd4be0fe421520c38c322f7e9e74cad7ef4b2bc4e740b2
funding tx: https://explorer.ergoplatform.com/en/transactions/83a3f20ac7618cff49d2769c085c74d114e08995b6ca8145114d94e75efb376c


[08/14/2020 7:57 PM] Robert K#0722
Oh yeah it is underfunded


[08/14/2020 8:00 PM] Robert K#0722
Cool, Live Epoch started


[08/14/2020 8:55 PM] Robert K#0722
I think the pool is working without problems


[08/14/2020 8:56 PM] Robert K#0722
üëç


[08/14/2020 9:32 PM] kushti#0978
oh yeah!


[08/14/2020 9:32 PM] kushti#0978
running fine!


[08/14/2020 9:40 PM] kushti#0978
oh it seems I posted wrong datapoins because of the old connector running


[08/14/2020 9:40 PM] Robert K#0722
It seems like the price of Erg may have spiked?


[08/14/2020 9:40 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/743932151803936788/unknown.png


[08/14/2020 9:41 PM] Robert K#0722
`Your Latest Datapoint: 2713932515`

`Latest Pool Datapoint: 2373267514`


[08/14/2020 9:41 PM] Robert K#0722
It's 14% off üòÖ


[08/14/2020 9:43 PM] Robert K#0722
I guess there's 2 lessons here:

1. Maybe we need a larger outlier check range
2. Maybe the oracle core should post the higher/lowest value datapoint if the real datapoint is out of range?


[08/14/2020 9:48 PM] Robert K#0722
Also I'm going to rename `margin of error` -> `outlier range` in the code/specs to make things more clear.


[08/14/2020 10:02 PM] kushti#0978
hm within an epoch even Bitcoin can do +-10%


[08/14/2020 10:02 PM] kushti#0978
happens sometimes


[08/14/2020 10:07 PM] Robert K#0722
Right, so I guess like 50% outlier range then?


[08/14/2020 10:53 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/d558c46b1e952db48a8ae8dc610fd87e2bfcbf5def2bfaf8b177585f32593e72


[08/14/2020 10:54 PM] Robert K#0722
I manually posted a datapoint to brring the pool back to life.


[08/17/2020 10:08 AM] scalahub#2618
How can we recover from such a situation?


[08/17/2020 11:09 AM] kushti#0978
https://github.com/ergoplatform/oracle-core/pull/3

{Embed}
https://github.com/ergoplatform/oracle-core/pull/3
correct filepath in errors by mmahut ¬∑ Pull Request #3 ¬∑ ergoplatfo...
We are actually looking for oracle-config.yaml not oracle_config.yaml. Just a cosmetic change, but took few minutes of my life. :)
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/17/2020 11:10 AM] kushti#0978
@Robert Koracle core already has external contributions, so nice!


[08/17/2020 2:25 PM] Robert K#0722
Haha, well he's working for Emurgo/helping set up the infrastructure/docker containers for running the oracle core, so not quite external üòâ


[08/17/2020 2:26 PM] Robert K#0722
> How can we recover from such a situation?
@scalahub In general, we need to increase the outlier range by a lot.


[08/17/2020 2:26 PM] Robert K#0722
If you can launch a pool with 50% outlier checking, I think that's probably a good idea.


[08/17/2020 2:30 PM] Robert K#0722
If you could also bootstrap the address `9h6uNVGaPSWL2PDYX8Ss8KGXkkvuyrtmLNcxAUSopoyR61cwEbj` @scalahub and increase the number of oracle in the contracts by 1, then that would be great. Marek, @mmahut on github is going to be testing setting up an oracle core on NixOS/docker and making it an easy experience.


[08/17/2020 2:37 PM] kushti#0978
@Robert K oh I thought he's a community guy


[08/17/2020 2:38 PM] kushti#0978
my bad heh


[08/17/2020 2:38 PM] kushti#0978
so what we're doing next


[08/17/2020 3:00 PM] Robert K#0722
So essentially what needs to get done from here:
1. Launch a new ERG-USD oracle pool with 50% outlier checking, 1 hour epoch, 6 oracle count harcoded in the contract (for Me, kushti, scalahub, greenhat, Marek, & Nico).
2. I need to create ADA-USD connector, which should be pretty easy with the new connector-lib updates I made.
3. Finish off the API server on the connectors which provides all sufficient data for the frontend to consume in one easy-to-use endpoint that will plug into the UI. I may even make a library called `FrontEndConnector` that people can create which automatically provides a GET API server for their connector that generates all the required data for plugging into the frontend we're making for the explorer.
4. Launch ADA-USD pool with 50% outlier checking, 1 hour epoch, 6 oracles encoded.
5. Make sure both pools work & plug into the frontend (which should hopefully be completed early next week after DeadIT gets back from vacation)

{Reactions}
‚ù§Ô∏è (2) 

[08/17/2020 3:02 PM] Robert K#0722
@kushti When will v3.3.1 get released with the rescan endpoint? This will help a lot for getting Marek/Nico setup.


[08/17/2020 3:38 PM] kushti#0978
@Robert K functionality is done, need to address reviewers' concerns


[08/17/2020 3:39 PM] kushti#0978
but we can provide Marek & Nico with a private jar?


[08/17/2020 3:47 PM] Robert K#0722
Ah good point, I can send them a jar I have.


[08/17/2020 3:47 PM] Robert K#0722
The other thing was also integrating it into docker, but we can do that when the release is out.


[08/17/2020 3:48 PM] kushti#0978
So today I will assemble a release candidate


[08/17/2020 3:49 PM] kushti#0978
then it is up to reviewers )


[08/17/2020 3:49 PM] kushti#0978
when it can be released


[08/17/2020 3:49 PM] Robert K#0722
Ah great, that sounds good.


[08/17/2020 5:04 PM] kushti#0978
@Robert K @scalahub when we're going to launch the new pool ?


[08/17/2020 5:26 PM] Robert K#0722
Currently scalahub has the process mostly automated in scala, so whenever he gets back online we can probably get to it


[08/17/2020 7:59 PM] scalahub#2618
I'll be pushing the automated bootstrap code by tomorrow ..


[08/17/2020 8:00 PM] scalahub#2618
the max number of oracles is currently not hardcoded in scripts (it is to be decided on token generation)


[08/17/2020 8:00 PM] scalahub#2618
maybe we can encode the cap inside contract?


[08/17/2020 8:01 PM] scalahub#2618
I'll release the updated contracts with 6 max oracles


[08/17/2020 8:06 PM] kushti#0978
Unbounded option is also good ?


[08/17/2020 8:06 PM] kushti#0978
@Robert K addBox endpoint is done https://github.com/ergoplatform/ergo/pull/1170

{Embed}
https://github.com/ergoplatform/ergo/pull/1170
AddBox endpoint added to add box to scans by kushti ¬∑ Pull Request ...
Close #1112 : this PR is introducing /scan/addBox API endpoint to add a box to specific scans, or change scans of boxes already stored in the wallet database.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/17/2020 8:07 PM] scalahub#2618
we need some cap for going from epoch prep to live epoch @kushti (to ensure there is enough funds to pay oracles)


[08/17/2020 8:08 PM] scalahub#2618
currently its not checked but we are assuming that the number or tokens generated are limited to 6 (or some number)


[08/17/2020 8:09 PM] scalahub#2618
actually my bad.. its indirectly checked in contracts that minBox value is > some amount


[08/17/2020 8:11 PM] Robert K#0722
Right, you pre-process it I believe with `minBox value/oraclePayout` = `num of oracles` essentially


[08/17/2020 8:11 PM] scalahub#2618
right


[08/17/2020 8:11 PM] Robert K#0722
But yeah, we need a maximum number of oracles essentially


[08/17/2020 8:11 PM] Robert K#0722
So we can set it to 20, but only use 4 for example.


[08/17/2020 8:11 PM] Robert K#0722
It just sets the buffer of what "underfunded" is higher.


[08/17/2020 8:12 PM] scalahub#2618
yes 20 sounds good


[08/17/2020 8:12 PM] Robert K#0722
But, theres a slight problem


[08/17/2020 8:12 PM] Robert K#0722
In the frontend we show number of oracles


[08/17/2020 8:12 PM] Robert K#0722
which uses this number


[08/17/2020 8:12 PM] Robert K#0722
And we don't want to say 20, when we actually have 5 or 6


[08/17/2020 8:13 PM] scalahub#2618
hmm can we show two (max and actual)?


[08/17/2020 8:13 PM] scalahub#2618
or maybe only actual?


[08/17/2020 8:14 PM] Robert K#0722
The thing is this makes setting up the config confusing for people, they need to keep updating it as people get added


[08/17/2020 8:15 PM] Robert K#0722
I guess we could rename it to `max_pool_size`


[08/17/2020 8:15 PM] scalahub#2618
in the config, where all is this used?


[08/17/2020 8:15 PM] Robert K#0722
For the oracle core to calculate whether the pool is underfunded


[08/17/2020 8:16 PM] scalahub#2618
hmm but there is a pre-processed value that is in the contract


[08/17/2020 8:16 PM] Robert K#0722
It does `[num of oracles] * [oracle payout]`


[08/17/2020 8:16 PM] scalahub#2618
so we have to use that


[08/17/2020 8:16 PM] Robert K#0722
Right, I encoded the logic before the contracts were written so it was like that originally


[08/17/2020 8:17 PM] scalahub#2618
I'll add outputting that value to the bootstrap logic as well .. can you please use from config rather than calculating this


[08/17/2020 8:17 PM] Robert K#0722
Outputting that value?


[08/17/2020 8:18 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala#L52

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/17/2020 8:18 PM] scalahub#2618
its there already


[08/17/2020 8:19 PM] scalahub#2618
is anything else needed apart from minPoolBox value to calculate underfunded?


[08/17/2020 8:19 PM] Robert K#0722
That's the only check in place to my knowledge.


[08/17/2020 8:20 PM] scalahub#2618
BTW since this is hardcoded in epoch prep, so the address also depends on it..


[08/17/2020 8:21 PM] scalahub#2618
(which means that better to not recalculate it and just use from bootstrap)


[08/17/2020 8:21 PM] Robert K#0722
Your bootstrap doc isn't very clear on what minPoolBoxValue is

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/744999419505672253/unknown.png


[08/17/2020 8:21 PM] Robert K#0722
You mention number of oracles in the beginning, but it's never referenced within.


[08/17/2020 8:22 PM] scalahub#2618
yes I need to add details on how to calculate it


[08/17/2020 8:22 PM] Robert K#0722
Sounds good.


[08/17/2020 8:22 PM] scalahub#2618
missed that bit


[08/17/2020 8:22 PM] Robert K#0722
I just want this to be clear for the oracle pool bootstrapper


[08/17/2020 8:23 PM] scalahub#2618
Will update the document with following:
1. how to compute min box value
2. new addresses with margin check
3. how to update config yaml with bootstrap params

{Reactions}
üëç (2) 

[08/17/2020 8:23 PM] Robert K#0722
Alright, I'll add minimum_pool_box_value to the yaml config


[08/17/2020 8:23 PM] scalahub#2618
and also add automated bootstrap instructions with script


[08/17/2020 8:24 PM] Robert K#0722
And change all of the uses in the code


[08/17/2020 8:27 PM] scalahub#2618
I'll push the updates in a bit (with the bootstrap scripts) for now keep it 0.1 erg or 100000000


[08/17/2020 8:35 PM] Robert K#0722
Alright, will do


[08/17/2020 8:41 PM] scalahub#2618
shall I keep max 20 ?


[08/17/2020 8:45 PM] Robert K#0722
Sure, it doesn't really effect us, we just need to make sure the pool is well funded.


[08/17/2020 8:45 PM] Robert K#0722
And it keeps things more open so that we can expand to more oracle operators over time if we want to do so.


[08/17/2020 8:46 PM] Robert K#0722
And will you make the outlier range 50% & the posting schedule 60 minutes @scalahub ?


[08/17/2020 8:47 PM] Robert K#0722
So I guess maybe 10 prep/20 live?


[08/17/2020 8:47 PM] scalahub#2618
outlier 50 done


[08/17/2020 8:50 PM] scalahub#2618
10 prep/20 live/5 buffer?


[08/17/2020 8:52 PM] scalahub#2618
or shall I keep buffer to 4?


[08/17/2020 8:53 PM] scalahub#2618
in the tests 4 seems to have been working fine.. so maybe we could continue with it


[08/17/2020 8:53 PM] scalahub#2618
@Robert K


[08/17/2020 8:56 PM] Robert K#0722
Sounds good


[08/17/2020 8:56 PM] Robert K#0722
Without blockchain congestion buffer to 4 seems fine


[08/17/2020 9:07 PM] scalahub#2618
@Robert K https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala#L41-L47

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/17/2020 9:07 PM] scalahub#2618
updated addresses


[08/17/2020 9:07 PM] scalahub#2618
Pool parameters: 
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala#L9-L18

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v3/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/17/2020 9:14 PM] Robert K#0722
Okay, I've updated the config file


[08/17/2020 9:15 PM] Robert K#0722
@kushti You'll need to pull the new commit and use the new `oracle-config.yaml`


[08/17/2020 9:15 PM] Robert K#0722
There's some new config changes so you have to use the new one or else you'll get errors


[08/17/2020 9:17 PM] scalahub#2618
going to bootstrap with old oracle addresses + that of @mmahut

{Reactions}
üëç 

[08/17/2020 9:22 PM] scalahub#2618
@Robert K you missed these params
```live_epoch_length: 20
# Length of the oracle pool's epoch preparation stage in blocks
epoch_preparation_length: 10```


[08/17/2020 9:22 PM] scalahub#2618
also outlier range 50


[08/17/2020 9:22 PM] Robert K#0722
Ah yes, thanks.


[08/17/2020 9:49 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/26d96e6509c6999df7df6f3f827691d75086e616b486da9b80c4ff462774a117


[08/17/2020 9:49 PM] scalahub#2618
hope this is done right


[08/17/2020 9:51 PM] Robert K#0722
Did you bootstrap it with your automated script?


[08/17/2020 9:52 PM] scalahub#2618
no because the tokens are stored in address that cannot be currently imported into node


[08/17/2020 9:52 PM] Robert K#0722
Ah I see.


[08/17/2020 9:53 PM] scalahub#2618
https://github.com/ergoplatform/ergo/issues/1153

{Embed}
https://github.com/ergoplatform/ergo/issues/1153
Allow adding custom BigInt secrets to node ¬∑ Issue #1153 ¬∑ ergoplat...
It will be good to have a feature where we could add custom BigInt secrets to node. It could be sme endpoint like /wallet/secret
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/17/2020 9:53 PM] scalahub#2618
@kushti not urgent but any eta for this feature?


[08/17/2020 9:54 PM] scalahub#2618
(3.3.2)


[08/17/2020 9:54 PM] kushti#0978
@scalahub can make it for 3.3.2 I guess


[08/17/2020 9:54 PM] kushti#0978
along with EIP-3 likely


[08/17/2020 9:55 PM] kushti#0978
then along with distributed signatures will be enough for 3.3.2


[08/17/2020 9:55 PM] kushti#0978
I'm trying to have now frequent releases with 3-4 features or fixes

{Reactions}
üëç (2) 

[08/17/2020 9:58 PM] kushti#0978
@Robert K 3.3.1 is finalized btw https://github.com/ergoplatform/ergo/pull/1171

{Embed}
https://github.com/ergoplatform/ergo/pull/1171
Candidate for 3.3.1 by kushti ¬∑ Pull Request #1171 ¬∑ ergoplatform/e...
Candidate for 3.3.1. It includes the following PRs:

#1170:  /scan/addBox endpoint to add a box to scans, or change scans of a box (including transferring it to the wallet by setting scanIds to con...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
üíØ (2) 

[08/17/2020 10:02 PM] Robert K#0722
Awesome, very quick work


[08/17/2020 10:03 PM] scalahub#2618
trying to double spend https://explorer.ergoplatform.com/en/transactions/dadfccd0a1a192bcb98495aeb98dabdd064bb1b0354a482e9bc7b3f78ffac5eb (higher fee)
lets see which confirms


[08/17/2020 10:16 PM] Robert K#0722
Cool, it got picked up

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/745028402955943941/unknown.png


[08/17/2020 10:59 PM] kushti#0978
joining


[08/18/2020 12:03 AM] kushti#0978
"Failed to sign boxes due to Error in Evaluation.compile.evaluate" what was a fix for that ?


[08/18/2020 12:08 AM] scalahub#2618
not sure.. maybe the update didn't happen properly. I had some issue and followed these steps:
1.  ensure all screens detached
2. killall screen
3. rename scanId.json and oracle-config.yaml
4. git pull
5. update oracle-config.yaml with correct address and then follow steps to build and run


[08/18/2020 12:17 AM] kushti#0978
Well, with payment requests json being written into the log I can do some debugging @Robert K


[08/18/2020 1:28 AM] kushti#0978
> not sure.. maybe the update didn't happen properly. I had some issue and followed these steps:
> 1.  ensure all screens detached
> 2. killall screen
> 3. rename scanId.json and oracle-config.yaml
> 4. git pull
> 5. update oracle-config.yaml with correct address and then follow steps to build and run
@scalahub works! what could be that hmm


[08/18/2020 1:13 PM] kushti#0978
@Robert K fixed broken swagger in the wallet-rescan branch


[08/18/2020 1:59 PM] kushti#0978
Last PR to get merged before 3.3.1 release


[08/18/2020 2:03 PM] kushti#0978
so pool testing looks good


[08/18/2020 2:03 PM] kushti#0978
got "The Oracle Pool is underfunded.
Please submit funds to the pool to continue operation."
just recently


[08/18/2020 2:22 PM] Robert K#0722
> Well, with payment requests json being written into the log I can do some debugging @Robert K
@kushti Good idea, will add.


[08/18/2020 2:23 PM] Robert K#0722
> got "The Oracle Pool is underfunded.
> Please submit funds to the pool to continue operation."
> just recently
@kushti Yeah, the pool became underfunded overnight, just added some more Ergs.


[08/18/2020 2:44 PM] Robert K#0722
The pool seems to be working pretty smoothly which is great.


[08/18/2020 2:44 PM] Robert K#0722
I think we've ironed out the majority of the key issues


[08/18/2020 2:47 PM] Robert K#0722
@kushti Tx request json is now added to the log.

{Reactions}
‚ù§Ô∏è 

[08/18/2020 2:57 PM] kushti#0978
@Robert K great, thanks!


[08/18/2020 2:58 PM] kushti#0978
Thought and read a bit about collateralized interop and stablecoins  and so on, it seems oracles are the core component of the DeFi stack


[08/18/2020 2:58 PM] kushti#0978
And often the only trusted component


[08/18/2020 3:05 PM] Robert K#0722
Yep, which is why I wanted to add a lot more incentives/disincentives + ability to easily fund them so they can become much more like core infrastructure.


[08/18/2020 3:09 PM] Robert K#0722
Cool, I've been helping Marek setup his oracle core, and it seems to be working.


[08/18/2020 3:10 PM] Robert K#0722
And we just had the largest `Collect Datapoints` tx I believe: https://explorer.ergoplatform.com/en/transactions/66398a9a63b7a887ddd00610cdc7ee677036defca164ad74976c6f194819275f


[08/18/2020 3:10 PM] Robert K#0722
4 oracle datapoints collected.


[08/18/2020 3:14 PM] scalahub#2618
https://github.com/scalahub/oracle-pool-bootstrap
Here is bootstrap CLI. Documentation in progress.. once done we could move it to oracle-core in ergo or create another repo

{Embed}
https://github.com/scalahub/oracle-pool-bootstrap
scalahub/oracle-pool-bootstrap
Contribute to scalahub/oracle-pool-bootstrap development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[08/18/2020 3:14 PM] scalahub#2618
@kushti need a way to serialize a long using node.. is there a method?


[08/18/2020 3:18 PM] Robert K#0722
Noticed a small spelling mistake:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/745285409147453620/unknown.png

{Reactions}
üëç 

[08/18/2020 3:19 PM] Robert K#0722
This looks good @scalahub , nice work


[08/18/2020 3:20 PM] Robert K#0722
Could you move the hardcoding of the values from `.scala` files and into some sort of config file so that we could precompile this and people just edit the config file to run?


[08/18/2020 3:21 PM] Robert K#0722
So just a `boostrap-config.yaml` for example.


[08/18/2020 3:21 PM] scalahub#2618
ok sure


[08/18/2020 3:22 PM] Robert K#0722
I think we can make a `bootstrap` folder in the repo and provide this automated appraoch as the go-to method, and the manual method also clearly laid out as well.


[08/18/2020 3:24 PM] Robert K#0722
The manual instructions were really helpful to have written down so people can understand how the process works, and so it can be used for other projects as well.


[08/18/2020 3:43 PM] kushti#0978
> @kushti need a way to serialize a long using node.. is there a method?
@scalahub long to LongConstant from sigma?


[08/18/2020 5:16 PM] Robert K#0722
@scalahub What are you going to call the field in the config file? I presume this printing is clear enough for an end-user?

```Bootstrap Erg-USD Value: 05e2a7e0f70d
```


[08/18/2020 5:23 PM] scalahub#2618
Yes but maybe print both ?


[08/18/2020 5:23 PM] scalahub#2618
I'll not add to config but instead pass as CLI parameter

{Reactions}
üëç 

[08/18/2020 5:25 PM] Robert K#0722
I'm worried if we print both someone will get confused at some point and file an issue when they use the non-serialized value

{Reactions}
üëç 

[08/18/2020 5:41 PM] Robert K#0722
Okay the latest commits have the serialized value now with `--bootstrap-value` @scalahub


[08/18/2020 5:55 PM] scalahub#2618
> I'm worried if we print both someone will get confused at some point and file an issue when they use the non-serialized value
@Robert K maybe something like "serialzed data-point 0503e24 (12345)"


[08/18/2020 5:55 PM] scalahub#2618
But just the serialzed data point is sufficient


[08/19/2020 7:41 AM] scalahub#2618
I'll add the bootstrap folder in oracle-core repo with a jar and completed readme by eod today


[08/19/2020 1:34 PM] kushti#0978
@Robert K should I assemble 3.3.1 pre-release jar today ?


[08/19/2020 3:13 PM] scalahub#2618
pushed the bootstrap-cli branch for oracle-core @Robert K ... working on moving the hardcoded constants to a config file .. so don't merge yet

{Reactions}
üëç 

[08/19/2020 3:35 PM] Robert K#0722
> @Robert K should I assemble 3.3.1 pre-release jar today ?
@kushti Sure, but it's not vital.


[08/19/2020 3:47 PM] Robert K#0722
@scalahub Left a comment for some wording in the readme.

{Reactions}
üëç (2) 

[08/19/2020 4:44 PM] kushti#0978
@Robert K last  PR and 3.3.1 approved, so doing final proofreading and then release

{Reactions}
üíØ 

[08/19/2020 7:17 PM] Robert K#0722
@scalahub It seems like Nico is busy with 1000 different things currently, but I will nonetheless receive 2 new addresses tomorrow morning from Marek for bootstrapping oracles (so we won't use the one he currently has given us most likely)

{Reactions}
ü¶æ (2) 

[08/19/2020 7:18 PM] Robert K#0722
One of those addresses will be the official Emurgo oracle, and that's what we'll use for the frontend as it'll be watched more carefully/closely for uptime.


[08/19/2020 7:18 PM] Robert K#0722
The other will be Mareks.


[08/20/2020 2:10 PM] Robert K#0722
@scalahub 
Emurgo address `9hi3xmKtKf3FVwt9jTiXQsrjMjjtzKzTNCsBUrVMKA2xcYMsvyc`
Marek's Address (He is a stake pool owner of a pool called stakenuts for Cardano, and this is his stakenuts "community" address which he wants to run the oracle on): `9hD4D5rAcTyMuw7eVSENfRBmdCZiz3cwmW8xSnoEvZ1H64rFGMn`

{Reactions}
‚ù§Ô∏è (2) 

[08/20/2020 2:12 PM] Robert K#0722
I'm guessing Marek may post about being an oracle too on his stakenuts twitter, so we may get a bit more attention that way as well from the Cardano community.

{Reactions}
‚ù§Ô∏è (2) 

[08/20/2020 3:43 PM] scalahub#2618
I'll bootstrap the new addresses and new tokens to test the end to end flow

{Reactions}
üíØ 

[08/20/2020 6:34 PM] scalahub#2618
pool token id 08b59b14e4fdd60e5952314adbaa8b4e00bc0f0b676872a5224d3bf8591074cd


[08/20/2020 6:34 PM] scalahub#2618
this is generation tx id https://explorer.ergoplatform.com/en/transactions/5e794a889bda5a2f8ed773c35400eb16579217a833e76cf2c35ed79e4a7356c3


[08/20/2020 6:40 PM] scalahub#2618
oracle token 0f8c7c7f4a203c69fddf147a16599d78341609bd9f129dc540bd225f90f86d60
this is generation tx id https://explorer.ergoplatform.com/en/transactions/33fd768e538a1deb953d4638a72db13cf56dbbc873f5067172e86fea284d3bad

{Reactions}
üëç 

[08/20/2020 6:42 PM] Robert K#0722
So token generation works well upon testing?


[08/20/2020 6:42 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/746061670555844618/addresses_for_pool


[08/20/2020 6:42 PM] scalahub#2618
yes generated them via CLI


[08/20/2020 6:43 PM] scalahub#2618
shall I bootstrap pool ?


[08/20/2020 6:49 PM] Robert K#0722
Let me register the addresses/add them to the repo and let everyone know


[08/20/2020 6:49 PM] Robert K#0722
Just makes it easier if most of us can pre-register.


[08/20/2020 6:53 PM] scalahub#2618
also please update the settings 
```  lazy val oracleReward = 2500000L // NanoErgs
  lazy val minBoxValue = 1500000L // NanoErgs
  lazy val errorMargin = 50 // percent
  lazy val numOracles = 14
  lazy val epochPeriod = 30 // blocks
  lazy val livePeriod = 20 // blocks
  lazy val buffer = 5 // blocks
```


[08/20/2020 6:53 PM] scalahub#2618
I had changed to avoid clashing with current demo


[08/20/2020 6:54 PM] scalahub#2618
Or else I can generate new address with parameter you prefer


[08/20/2020 6:54 PM] scalahub#2618
bootstrap happened with 20 tokens so I can make num oracles up to 20


[08/20/2020 6:55 PM] Robert K#0722
I thought we were aiming for 1 hour posting schedule


[08/20/2020 6:55 PM] Robert K#0722
20 live/10 prep


[08/20/2020 6:55 PM] Robert K#0722
And what do you mean clashing with the current demo?


[08/20/2020 6:56 PM] Robert K#0722
The tokens are new right, so utxo set scans wont catch any of the old boxes.


[08/20/2020 6:56 PM] scalahub#2618
yes 10 prep => epoch 30


[08/20/2020 6:56 PM] scalahub#2618
epoch = live + prep (in my code)


[08/20/2020 6:56 PM] Robert K#0722
Oh right


[08/20/2020 6:57 PM] scalahub#2618
but can change those terms to suit offchain


[08/20/2020 6:57 PM] Robert K#0722
If possible, it'd be good to have things be consistent


[08/20/2020 6:57 PM] Robert K#0722
Primarily to also have it be understandable, since you're using "epochPeriod" which sounds a lot like live epoch


[08/20/2020 6:57 PM] scalahub#2618
whats the correct terms


[08/20/2020 6:58 PM] Robert K#0722
"Posting Schedule" = Live Epoch period + Epoch Prep period

{Reactions}
üëç 

[08/20/2020 6:59 PM] scalahub#2618
are the parameters ok?


[08/20/2020 6:59 PM] Robert K#0722
Also your oracle reward looks bigger than your minBoxValue


[08/20/2020 6:59 PM] Robert K#0722
If I didn't count wrong


[08/20/2020 6:59 PM] scalahub#2618
yes but does it need to be min?


[08/20/2020 7:00 PM] Robert K#0722
Hmm? I don't understand what you mean


[08/20/2020 7:00 PM] scalahub#2618
ok minBox is after rewards have been given


[08/20/2020 7:00 PM] scalahub#2618
my mistake.. let me give the correct minPoolBoxValue


[08/20/2020 7:01 PM] scalahub#2618
Min pool box value: 39000000


[08/20/2020 7:01 PM] scalahub#2618
so min box will be what should be min left over after collection


[08/20/2020 7:01 PM] Robert K#0722
Yeah


[08/20/2020 7:01 PM] scalahub#2618
and min pool box is what is min needed before collection


[08/20/2020 7:01 PM] Robert K#0722
This is why I recommended just using # of oracles and have it automatically be calculated to make this easier to reason about.


[08/20/2020 7:02 PM] scalahub#2618
yes still we need to use some constants


[08/20/2020 7:02 PM] scalahub#2618
so the formula is


[08/20/2020 7:02 PM] scalahub#2618
`val minPoolBoxValue = minBoxValue + (numOracles + 1) * oracleReward`


[08/20/2020 7:03 PM] scalahub#2618
Im talking about fixing these values `minBoxValue`, `numOracles` and `oracleReward`


[08/20/2020 7:03 PM] scalahub#2618
as we had a demo and maybe if you want to tweak them in the live, this is the time to do it


[08/20/2020 7:04 PM] scalahub#2618
only restriction is `numOracles` should be <= 20


[08/20/2020 7:04 PM] Robert K#0722
(in a call right now, afk)


[08/20/2020 7:05 PM] scalahub#2618
I could use the same constants we had in demo.. but I am thinking reward was a bit low


[08/20/2020 7:12 PM] scalahub#2618
The reason I kept the tokens less (14) instead of 20 is we could keep certain tokens as backup and not issue them.


[08/20/2020 7:44 PM] Robert K#0722
> `val minPoolBoxValue = minBoxValue + (numOracles + 1) * oracleReward`
@scalahub What is minBoxValue?


[08/20/2020 7:44 PM] Robert K#0722
Ah you mean a generic minimum required for the pool box to exist on the chain.


[08/20/2020 7:45 PM] scalahub#2618
min value of epoch prep box


[08/20/2020 7:45 PM] Robert K#0722
That's just 1,000,000 nanoErgs or something like that right?


[08/20/2020 7:47 PM] scalahub#2618
yes so its the balance left after rewards have been paid


[08/20/2020 7:47 PM] scalahub#2618
and can be thought of as the min value for a box to exist


[08/20/2020 7:47 PM] Robert K#0722
Right.


[08/20/2020 7:47 PM] Robert K#0722
If you can change errorMargin -> outlierRange too btw.


[08/20/2020 7:48 PM] Robert K#0722
So we have consistent naming


[08/20/2020 7:48 PM] scalahub#2618
sure


[08/20/2020 7:48 PM] Robert K#0722
So what is the minPoolBoxValue set to? 39000000? (just want to make sure)


[08/20/2020 7:49 PM] scalahub#2618
yes as per the params


[08/20/2020 7:49 PM] scalahub#2618
but if you want changes in params can do that and generate new addresses


[08/20/2020 7:49 PM] scalahub#2618
such as reward amount etc


[08/20/2020 7:50 PM] Robert K#0722
No I think this looks good


[08/20/2020 7:50 PM] Robert K#0722
It's just some of these parameters don't exist/are named different so I'm making sure everything is in place.


[08/20/2020 7:50 PM] scalahub#2618
ok then once you push to github I'll bootstrap


[08/20/2020 7:50 PM] scalahub#2618
yes I'll make those name changes separately but addresses will be same so lets bootstrap now


[08/20/2020 7:52 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/blob/master/oracle-config.yaml

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/oracle-config.yaml
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/20/2020 7:52 PM] Robert K#0722
It's been updated


[08/20/2020 7:53 PM] Robert K#0722
@kushti We're launching a new pool, so please pull the latest config & likely trigger a rescan if you don't manage to register new scans before bootstrap.


[08/20/2020 7:55 PM] kushti#0978
ok will join 2 hours later


[08/20/2020 8:05 PM] scalahub#2618
@Robert K what is your address? I have bootstrapped the two you pasted. 
@kushti please can you paste yours again


[08/20/2020 8:17 PM] scalahub#2618
all 5 CLIs tested and working

{Reactions}
üíØ 

[08/20/2020 8:17 PM] Robert K#0722
`9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF`


[08/20/2020 8:17 PM] Robert K#0722
Awesome, great to hear.


[08/20/2020 8:18 PM] scalahub#2618
sent


[08/20/2020 8:36 PM] Robert K#0722
Cool, my oracle is working üëå


[08/20/2020 8:37 PM] Robert K#0722
Btw one of my previous teammates (who runs a small ISP/is very networking-savy) from the Cardano sphere (also runs stake pools) is also interested in running an oracle. Will see if he has enough time to get set up before we launch.

{Reactions}
üíØ (2) 

[08/20/2020 10:20 PM] Robert K#0722
@scalahub Markus (the one I am mentioning above) has provided me with an address you can bootstrap for: `9fWLaZJbnDA4d7wFopjJasj8SdBkKpzGFAxg92mudVp2uZsRMra`


[08/20/2020 10:21 PM] Robert K#0722
He won't be setting up an oracle yet (no time), but when you get a chance if you can bootstrap him that'd be great.


[08/20/2020 10:26 PM] scalahub#2618
done


[08/20/2020 10:27 PM] Robert K#0722
Thanks


[08/20/2020 10:45 PM] kushti#0978
@scalahub 9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE

{Reactions}
üëç 

[08/20/2020 11:50 PM] Robert K#0722
@scalahub If you could deploy the ada-usd pool tomorrow that'd be great.


[08/20/2020 11:50 PM] Robert K#0722
I finished the connector today.


[08/20/2020 11:55 PM] kushti#0978
I will be out tomorrow after 11 AM UTC


[08/21/2020 12:40 AM] kushti#0978
I'm participating!

{Reactions}
üëç 

[08/21/2020 9:08 AM] scalahub#2618
> @scalahub If you could deploy the ada-usd pool tomorrow that'd be great.
@Robert K sure.. can you tell me the difference? is it just the connector? 
in that case, maybe you can send me the serialized value when I'm about to deploy


[08/21/2020 9:08 AM] scalahub#2618
I'll create the tokens in the meantime.


[08/21/2020 9:09 AM] scalahub#2618
keeping other parameters same as the erg-usd pool?


[08/21/2020 2:01 PM] Robert K#0722
Yeah it's just unique token ids (and add what the pool is in the description when generating the token) + connector.


[08/21/2020 2:02 PM] Robert K#0722
I guess in the further future we could add a more complex setup/failsafe where the oracle core reads the description of the token from the node, and has the description hardcoded in the core, to make sure that the core is feeding data to the right pool (based on token description which will be hardcoded in each connector)


[08/21/2020 2:05 PM] Robert K#0722
@scalahub Here is Nico's address: `9eenjRewCUkchiTgXnjVf1GNTiWpMEDFyuwWFNGGHxVLEMLnu8x9eenjRewCUkchiTgXnjVf1GNTiWpMEDFyuwWFNGGHxVLEMLnu8x`


[08/21/2020 2:06 PM] Robert K#0722
If you could bootstrap him in that'd be great.


[08/21/2020 2:07 PM] scalahub#2618
you mean `9eenjRewCUkchiTgXnjVf1GNTiWpMEDFyuwWFNGGHxVLEMLnu8x` ?


[08/21/2020 2:26 PM] Robert K#0722
Yes, sorry about the double paste üòÖ


[08/21/2020 3:17 PM] Robert K#0722
@scalahub `Bootstrap ADA-USD Value: 059c8fb407
`


[08/21/2020 4:30 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/746390803689111592/ada_oracle


[08/21/2020 4:30 PM] scalahub#2618
@Robert K


[08/21/2020 4:47 PM] Robert K#0722
I've added a new prefilled `oracle-config-ada.yaml` file to the repo with the above presets


[08/21/2020 4:48 PM] Robert K#0722
When you use the prepare script for the ada connector, you'll need to manually copy that into the deployed folder and rename it to `oracle-config.yaml`


[08/21/2020 4:48 PM] Robert K#0722
and then edit it of course.


[08/21/2020 4:48 PM] Robert K#0722
I've registered the scans on my end, and I'm good to go @scalahub


[08/21/2020 4:49 PM] scalahub#2618
I already bootstrapped the pool box.. can you manually add that @Robert K


[08/21/2020 4:49 PM] scalahub#2618
bootstrap pool tx https://explorer.ergoplatform.com/en/transactions/26d37eca5c39a68d17d8d28717008ebb4abc2f14d462f4b9511b6d2873f1dc38


[08/21/2020 5:03 PM] Robert K#0722
Hmm, I'm trying to do so but for some reason this command:
```curl -X POST "http://0.0.0.0:9053/scan/addBox" -H  "accept:application/json" -H  "api_key: hello" -H  "Content-Type: application/json" -d "{\"scanIds\":[46],\"box\":{\"boxId\":\"f3cd045b8af58aec4742869134d79ee0eda95be14310e6754d9fa1b1b16ab0f4\",\"value\":1500000,\"ergoTree\":\"100604000580df9825043c0e207de8215a9a2fdaa5630244787b25e31eeadf292e3d171a80b3b13529572b5ec30428040ad806d601b2a5730000d602c67201060ed603e4c6a70504d604c1a7d6059272047301d6069aa3730295e67202d801d607ed93e47202cbc2a793cbc272017303eb02d1ededededededed8fa3720391a39972037304720593e4c672010405e4c6a7040593e4c672010504720393db63087201db6308a792c1720172047207d1ededededededed92a37203720593e4c672010405e4c6a7040592e4c672010504720690e4c6720105049a7206730593db63087201db6308a792c1720172047207d1edededed93e4c672010405e4c6a7040593e4c672010504720393c27201c2a793db63087201db6308a791c172017204\",\"assets\":[{\"tokenId\":\"19475d9a78377ff0f36e9826cec439727bea522f6ffa3bda32e20d2f8b3103ac\",\"amount\":1}],\"creationHeight\":300243,\"additionalRegisters\":{\"R4\":\"059c8fb407\",\"R5\":\"0480b518\"},\"transactionId\":\"26d37eca5c39a68d17d8d28717008ebb4abc2f14d462f4b9511b6d2873f1dc38\",\"index\":0}}"```


[08/21/2020 5:04 PM] Robert K#0722
is returning `{
  "error" : 500,
  "reason" : "internal.error",
  "detail" : "Unhandled rejection: MethodRejection(HttpMethod(OPTIONS))"
}` on my vm


[08/21/2020 5:05 PM] Robert K#0722
Ah, the prerelease v3.3.1 I was using I guess didn't have that that endpoint


[08/21/2020 5:06 PM] Robert K#0722
Okay I should be ready for the datapoint box bootstrap.


[08/21/2020 5:39 PM] Robert K#0722
@scalahub Did you bootstrap the Datapoint boxes for the ada pool?


[08/21/2020 5:40 PM] Robert K#0722
(And did you bootstrap Nico's address for the erg-usd pool?)


[08/21/2020 6:04 PM] scalahub#2618
yes did Nico's address


[08/21/2020 6:05 PM] scalahub#2618
doing ada in a bit


[08/21/2020 7:33 PM] Robert K#0722
The pool looks like it's running well


[08/21/2020 7:33 PM] Robert K#0722
üëç


[08/21/2020 7:38 PM] Robert K#0722
Have you bootstrapped everyone's addresses for the ada pool @scalahub ?


[08/21/2020 8:13 PM] scalahub#2618
yes


[08/21/2020 8:14 PM] scalahub#2618
can I run both pools?


[08/21/2020 8:17 PM] Robert K#0722
Yep


[08/21/2020 8:17 PM] Robert K#0722
1 node + 2 cores + 2 connectors


[08/21/2020 8:17 PM] Robert K#0722
Running that setup right now


[08/21/2020 8:18 PM] scalahub#2618
ok but somehow it didnt work for me


[08/21/2020 8:18 PM] Robert K#0722
If you pull the latest commit I improved the deploy scripts


[08/21/2020 8:18 PM] scalahub#2618
had to kill usd oracle to run ada


[08/21/2020 8:18 PM] Robert K#0722
Because you are using the same port for both probably


[08/21/2020 8:18 PM] Robert K#0722
Need to change the config file


[08/21/2020 8:18 PM] scalahub#2618
ok let me check


[08/21/2020 8:18 PM] scalahub#2618
so its currently running ada oracle.. and I'll keep it running


[08/21/2020 8:19 PM] Robert K#0722
Whatever port you set in the config file that +2 are used


[08/21/2020 8:19 PM] Robert K#0722
So 9090, 9091, 9092


[08/21/2020 8:19 PM] scalahub#2618
core_api_port: "19090"


[08/21/2020 8:19 PM] scalahub#2618
is that fine?


[08/21/2020 8:19 PM] Robert K#0722
As long as it's different than your other config, yeah


[08/21/2020 8:21 PM] scalahub#2618
how do I know its running? not printing anything


[08/21/2020 8:21 PM] Robert K#0722
It should always print something


[08/21/2020 8:21 PM] Robert K#0722
Do you mean the core or the connector?


[08/21/2020 8:22 PM] scalahub#2618
I did `sh runoracle.sh` does it run both?


[08/21/2020 8:22 PM] scalahub#2618
```screen -list
There are screens on:
        4465.OracleCore (22/08/20 12:49:56 AM IST)      (Attached)
        3408.OracleCore (22/08/20 12:41:55 AM IST)      (Attached)
2 Sockets in /run/screen/S-amitabh.


[08/21/2020 8:22 PM] scalahub#2618
does it mean I've got both?


[08/21/2020 8:22 PM] Robert K#0722
Yeah


[08/21/2020 8:23 PM] Robert K#0722
In the latest commits I renamed the screens so it's easier to know hich one is erg-usd and ada-usd


[08/21/2020 8:23 PM] Robert K#0722
So to check you can go into one screen and the other


[08/21/2020 8:23 PM] Robert K#0722
`screen -r 4465.OracleCore`


[08/21/2020 8:24 PM] scalahub#2618
ok its not printing


[08/21/2020 8:25 PM] scalahub#2618
is `sh run-oracle.sh` the riight command to run within the `oracle-core-deployed` to run the erg oracle?


[08/21/2020 8:25 PM] Robert K#0722
Yeah, but do you have both setup in the same folder?


[08/21/2020 8:26 PM] Robert K#0722
Here, save your scanIDs for each, do a git pull, and run the two new prepare scripts for each pool/connector.


[08/21/2020 8:26 PM] scalahub#2618
no the ada is in `ada-usd-oracle-deployed`


[08/21/2020 8:26 PM] Robert K#0722
Ah okay good.


[08/21/2020 8:26 PM] scalahub#2618
and that is running fine


[08/21/2020 8:27 PM] Robert K#0722
if you are in one of the screens and the oracle core isn't running, you can also just do `./oracle-core`


[08/21/2020 8:27 PM] Robert K#0722
to start it


[08/21/2020 8:27 PM] Robert K#0722
and same thing for the connector


[08/21/2020 8:27 PM] Robert K#0722
just make sure you are in the right deployed folder


[08/21/2020 8:27 PM] scalahub#2618
ok let me try


[08/21/2020 8:27 PM] Robert K#0722
the shell script just sets up screen really


[08/21/2020 8:28 PM] scalahub#2618
ok that seemd to work


[08/21/2020 8:28 PM] scalahub#2618
how can I know which pool is in which screeen?


[08/21/2020 8:28 PM] scalahub#2618
maybe printing token ids will be helpful


[08/21/2020 8:29 PM] Robert K#0722
Yep, already added that too in the latest commit


[08/21/2020 8:29 PM] Robert K#0722
Had the same thought haha


[08/21/2020 8:30 PM] scalahub#2618
Your Latest Datapoint: 1642300403 looks like erg


[08/21/2020 8:30 PM] scalahub#2618
Your Latest Datapoint: 7916465 this seems to be ada


[08/21/2020 9:03 PM] Robert K#0722
Yeah


[08/21/2020 9:03 PM] Robert K#0722
I believe ada is 3 decimal points less for their lowest value (also called lovelaces)


[08/21/2020 9:43 PM] Robert K#0722
@scalahub is the bootstrap PR good to merge?


[08/22/2020 5:30 AM] scalahub#2618
> @scalahub is the bootstrap PR good to merge?
@Robert K  yes please merge. Some  small changes I'll make directly to master (or make another PR)


[08/24/2020 11:03 AM] scalahub#2618
@Robert K I'll be pushing some terminology fixes today so please merge after next commit (in a few hours, so by your morning)

{Reactions}
üëå 

[08/24/2020 2:20 PM] Robert K#0722
Alright thanks, I'll merge it in an hour or so.


[08/24/2020 3:34 PM] kushti#0978
Seems everything is running smoothly!


[08/24/2020 3:37 PM] Robert K#0722
Yeah it generally seems good.


[08/24/2020 3:39 PM] Robert K#0722
A few things on my end have popped up:
1. I allowed a stray panic to be possible if the connector ever can't reach the oracle core. It should just try again obviously, so fixing that.
2. I need to fix the ADA-USD price calculation in the frontend API.


[08/24/2020 3:39 PM] Robert K#0722
Ah, and here's the urls of our Emurgo oracles which we'll be using for the frontend if you guys are curious: 
http://erg-usd.oracles.ergo.infra.emurgo.io:9092/frontendData
http://ada-usd.oracles.ergo.infra.emurgo.io:9092/frontendData


[08/24/2020 3:46 PM] Robert K#0722
The erg-usd pool has just become underfunded. For the public release, we should likely fill these pools up with at least a month of funds.


[08/24/2020 3:46 PM] Robert K#0722
(So would be good to figure out average daily cost)


[08/24/2020 3:55 PM] Robert K#0722
Kind of cool you can see how many oracles are active/alive based on the number of similar txs in the mempool:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/747469124917133492/unknown.png


[08/24/2020 3:55 PM] Robert K#0722
They're all trying to spend a new box I made with 2 ergs in the `Pool Deposit` stage.


[08/24/2020 4:38 PM] Robert K#0722
@scalahub For the bootstrap CLI is there a reason why you aren't using the typical CLI flag schemes? Currently it's really long to write out 
`java -cp oracle-pool-bootstrap.jar ergo.oraclepool.GeneratePoolToken <address_to_store_tokens_in>`
versus
`java -cp oracle-pool-bootstrap.jar --generatePoolToken <address_to_store_tokens_in>`


[08/24/2020 4:40 PM] Robert K#0722
Also, are you going to move over to a config file before launch? Wasn't that almost finished? (I merged the PR and now I'm looking at the readme after I restructured it with some new folders together with the manual instructions, and I see that it's still hardcoded with no config)


[08/24/2020 4:44 PM] Robert K#0722
Having a config file is pretty important because it simplifies the process & doesn't require anyone to have sbt installed.


[08/24/2020 4:47 PM] Robert K#0722
Could you also please change `ergo.oraclepool.GetAddresses` to `GetContactAddresses`? It could potentially be confusing for people what kind of addresses these are otherwise (or at least on the frontend to `--getContractAddresses` flag).


[08/24/2020 4:57 PM] scalahub#2618
missed out the config file.. will add that in next PR (mostly tonight/tomorrow)

{Reactions}
üëç (2) 

[08/24/2020 4:58 PM] scalahub#2618
for the syntax.. there are 5 main classes, and this is the actual way to call them.. I could make a wrapper that takes the parameter and calls the classes individually


[08/24/2020 5:01 PM] scalahub#2618
also for the rename class name, will do same time..some changes in terminology needed as well (such as `"Posting Schedule" = Live Epoch period + Epoch Prep period(edited)`

{Reactions}
üëç 

[08/24/2020 5:02 PM] scalahub#2618
let me know any other issues


[08/24/2020 5:03 PM] scalahub#2618
> @scalahub For the bootstrap CLI is there a reason why you aren't using the typical CLI flag schemes? Currently it's really long to write out 
> `java -cp oracle-pool-bootstrap.jar ergo.oraclepool.GeneratePoolToken <address_to_store_tokens_in>`
> versus
> `java -cp oracle-pool-bootstrap.jar --generatePoolToken <address_to_store_tokens_in>`
@Robert K Also it'll be much simpler for me to make it so:

`java -cp oracle-pool-bootstrap.jar generatePoolToken <address_to_store_tokens_in>`  (without the `--`.. will that be ok?)


[08/24/2020 5:07 PM] Robert K#0722
> @Robert K Also it'll be much simpler for me to make it so:
> 
> `java -cp oracle-pool-bootstrap.jar generatePoolToken <address_to_store_tokens_in>`  (without the `--`.. will that be ok?)
@scalahub Ah yeah that works too


[08/24/2020 5:08 PM] Robert K#0722
Great, thanks. I've rearranged the folder structure a bit compared to what you had in the PR and moved both the manual instructions & the cli into the same folder.


[08/24/2020 9:58 PM] scalahub#2618
> Great, thanks. I've rearranged the folder structure a bit compared to what you had in the PR and moved both the manual instructions & the cli into the same folder.
@Robert K oh you might need to redo that again because I was getting a conflict and used my older structure for the PR


[08/24/2020 9:59 PM] scalahub#2618
I just pushed a PR with config in text file and new names for classes. Please have a look


[08/25/2020 12:41 AM] Robert K#0722
Looks good from my quick look, but it has merge conflicts and I have a busy schedule tomorrow so I may not get to it imeediately


[08/25/2020 12:57 AM] scalahub#2618
not an issue.. I'll try to push more fixes (if any) before that


[08/25/2020 4:00 PM] Robert K#0722
https://meet.google.com/ezj-ceqx-ypc

{Embed}
https://meet.google.com/ezj-ceqx-ypc
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-2.discordapp.net/external/esmkNqRvv_uM84r7jKXLg4PJYn6vHhrSoJ2Qs7oO2Z8/https/www.gstatic.com/images/branding/product/2x/meet_96dp.png


[08/26/2020 2:07 PM] Robert K#0722
Before I fell asleep last night I think I came up with the least computationally expensive method of implementing margin of error checking for the next version of oracle pools.


[08/26/2020 2:08 PM] Robert K#0722
Essentially the data-inputs all need to be submit in ascending order by the oracle core.


[08/26/2020 2:10 PM] Robert K#0722
In the contracts we check:
1. The data-inputs are ordered by ascending datapoint values ( datapoint(i+1) >= datapoint(i))
2. The delta between each datapoint is within the margin of error ( datapoint(i+1) - datapoint(i) < margin_of_error)


[08/26/2020 2:11 PM] Robert K#0722
And so datapoints which are collected each must be within the margin of error of the nearest two other datapoint values.


[08/26/2020 2:12 PM] Robert K#0722
And so the oracle core does all the sorting/filtering out datapoints outside of the margin of error, and we just check that the filtering/sorting was valid.

{Reactions}
‚ù§Ô∏è (2) 

[08/26/2020 2:58 PM] kushti#0978
@Robert K the same pattern appeared in DEX contracts, so instead of sorting in the contract (likely very expensive) we can just check that inputs are sorted (cheap)


[08/26/2020 2:59 PM] Robert K#0722
Ah haha, probably would have been good to read the logic in the DEX contracts more deeply so I didn't have to reinvent the wheel üòÖ


[08/26/2020 3:06 PM] kushti#0978
It seems this design pattern is extracted already from the contracts: https://www.ergoforum.org/t/ergoscript-design-patterns/222/3?u=kushti

{Embed}
https://www.ergoforum.org/t/ergoscript-design-patterns/222/3?u=kushti
ErgoScript Design patterns
Very generic meta-pattern, I guess, is ‚Äúcheck the work done externally, instead of doing it in the script‚Äù.  As a particular pattern example, let‚Äôs consider the sorting pattern. Assume that inputs contain e.g. DEX orders (or oracle data), and they are needed to be sorted in th...


[08/26/2020 3:06 PM] greenhat#6562
@Robert K here is the check in buy order contract -  https://github.com/ergoplatform/ergo-contracts/blob/c9a6de1860bac2f91118805bd03aa8fdda1d862b/contracts/src/main/scala/org/ergoplatform/contracts/DexLimitOrder.scala#L85-L103

{Embed}
https://github.com/ergoplatform/ergo-contracts/blob/c9a6de1860bac2f91118805bd03aa8fdda1d862b/contracts/src/main/scala/org/ergoplatform/contracts/DexLimitOrder.scala
ergoplatform/ergo-contracts
Contracts for Ergo with verified properties. Contribute to ergoplatform/ergo-contracts development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/26/2020 3:09 PM] Robert K#0722
Ah nice, thanks @greenhat


[08/26/2020 3:15 PM] Robert K#0722
@scalahub essentially I think we should be able to copy a good chunk of that logic and rework it for our correct registers, have the default initial accumulator value be the first data-input, and check that every difference is within margin of error.


[08/26/2020 3:37 PM] scalahub#2618
Checking the Dex contracts


[08/26/2020 3:44 PM] scalahub#2618
@Robert K  I've just stepped out.. will update about current status of my oracle core in a couple of hours


[08/26/2020 4:16 PM] Robert K#0722
https://github.com/ergoplatform/oracle-core/pull/6 @scalahub PR is now merged

{Embed}
https://github.com/ergoplatform/oracle-core/pull/6
Move config to separate text file by scalahub ¬∑ Pull Request #6 ¬∑ e...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[08/26/2020 5:12 PM] Robert K#0722
Hmm, I guess we could also incorporate/fork the distributed sigs/ZK treasury frontends when we want to other distributed sig protocols like voting on dApp updates for example.


[08/26/2020 5:38 PM] kushti#0978
by doing distributely signing a message, for example ?


[08/26/2020 6:08 PM] Robert K#0722
Voting for dAp updates via some sort of proxy box/update process where you change the address in the registers for example.


[08/26/2020 6:32 PM] kushti#0978
@Robert K latest master, erg-usd pool, default config with address changed just:
ERROR  thread 'main' panicked at 'Failed to register Epoch Preparation Scan': src/oracle_state.rs:146


[08/26/2020 6:35 PM] Robert K#0722
Is your node configured correctly in the config?


[08/26/2020 6:35 PM] Robert K#0722
I will try and fix that error to be more specific though, thanks.


[08/26/2020 6:53 PM] kushti#0978
yes, node's  address:port and API key are correct


[08/26/2020 6:58 PM] Robert K#0722
Is your wallet unlocked?


[08/26/2020 6:59 PM] Robert K#0722
It's really odd that it's breaking.


[08/26/2020 7:20 PM] Robert K#0722
@kushti The latest commit now has logging incorporated for the scan registration


[08/26/2020 7:21 PM] Robert K#0722
So we should have more information on what json it's forming to try to register the scan, and see what's going on.


[08/26/2020 7:45 PM] Robert K#0722
Hmm you are right @kushti, I just retried registering scans and it is broken, will investigate


[08/26/2020 8:17 PM] Robert K#0722
@kushti It has been fixed in the latest commit


[08/26/2020 8:18 PM] Robert K#0722
I think my rust plugins in vs code may have automatically changed `trackingRule` to `tracking_rule`?


[08/26/2020 8:19 PM] Robert K#0722
Or potentially I was just really tired last week and was fixing a bunch of errors & wanted to fix the warnings as well and mindlessly changed it from camel casing in the json creation macro code üòÖ


[08/26/2020 8:20 PM] Robert K#0722
On the plus side because of this I made the error handling better, and we have more information logged as well if scan registration fails in the future


[08/26/2020 8:54 PM] scalahub#2618
@Robert K can you help in debugging my issue..


[08/26/2020 8:54 PM] scalahub#2618
ERG/USD connector is not posting


[08/26/2020 8:54 PM] scalahub#2618
screenshot (top is ADA/USD, bottom is ERG/USD)

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748269232403382352/Screenshot_from_2020-08-27_01-21-56.png


[08/26/2020 8:54 PM] scalahub#2618
ERG/USD yaml https://textuploader.com/1fnqn
ADA/USD yaml https://textuploader.com/1fnqw

ERG/USD log https://easyupload.io/ivoody

{Embed}
https://textuploader.com/1fnqn
oracle-config.yaml
#### Node Parameters ####
# IP Address of the node (default is local)
node_ip: "127.0.0.1"
# Port that th...

{Embed}
https://textuploader.com/1fnqw
oracle-config.yaml
#### Node Parameters ####
# IP Address of the node (default is local)
node_ip: "0.0.0.0"
# Port that the ...

{Embed}
https://easyupload.io/ivoody
easyupload.io
easyupload.io


[08/26/2020 9:00 PM] Dmitry Usov#0134
https://explorer.ergoplatform.com/oracle-pool-state/erg


[08/26/2020 9:00 PM] Dmitry Usov#0134
interface without data


[08/26/2020 9:00 PM] Dmitry Usov#0134
how to you?


[08/26/2020 9:00 PM] Dmitry Usov#0134
@scalahub @kushti @greenhat @Robert K

{Reactions}
üëç (2) 

[08/26/2020 9:06 PM] scalahub#2618
Would it be possible to add units to the data? like "NanoErg/USD" (or whatever the actual one is)


[08/26/2020 9:07 PM] Dmitry Usov#0134
for first two pools yes of course


[08/26/2020 9:08 PM] Dmitry Usov#0134
for the next need to think about it


[08/26/2020 9:25 PM] Robert K#0722
I will look into your problem in 1 sec @scalahub


[08/26/2020 9:25 PM] Robert K#0722
Anyone have any ideas for how to get around this? https://media.discordapp.net/attachments/740851142417973290/748271994084262019/unknown.png?width=1388&height=77

{Embed}
https://media.discordapp.net/attachments/740851142417973290/748271994084262019/unknown.png?width=1388&height=77
https://media.discordapp.net/attachments/740851142417973290/748271994084262019/unknown.png


[08/26/2020 9:27 PM] scalahub#2618
possible to use https in the emurgo link?


[08/26/2020 9:27 PM] Robert K#0722
Potentially, but it gets a bit messy


[08/26/2020 9:28 PM] Robert K#0722
So wondering if there's a workaround we can use instead


[08/26/2020 9:28 PM] scalahub#2618
ok maybe @Dmitry Usov can comment


[08/26/2020 9:28 PM] Robert K#0722
This is a problem @Dmitry Usov is running into actually, and why I am asking üôÇ


[08/26/2020 9:29 PM] Robert K#0722
Because this is also an issue for the future if we want others to host their own oracles and provide a frontend for them as well


[08/26/2020 9:31 PM] scalahub#2618
guess you saw this? https://stackoverflow.com/questions/37043719/how-can-i-allow-mixed-contents-http-with-https-using-content-security-policy-m

{Embed}
https://stackoverflow.com/questions/37043719/how-can-i-allow-mixed-contents-http-with-https-using-content-security-policy-m
How can I allow Mixed contents (http with https) using content-secu...
I'm forcing https to access my website, but some of the contents must be loaded over http (for example video contents can not be over https), but the browsers block the request because of mixed-con...
https://images-ext-1.discordapp.net/external/VbfwnzN2MM794XNccNxDzrB1YeuPrxR53y11bwRfflY/%3Fv%3D73d79a89bded/https/cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon%402.png


[08/26/2020 9:31 PM] scalahub#2618
(2nd answer)


[08/26/2020 9:34 PM] Robert K#0722
Okay, Marek is deploying a proxy via nginx which will have the endpoints be https


[08/26/2020 9:37 PM] Robert K#0722
I'll take a look at your issue now @scalahub


[08/26/2020 9:38 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748280244091355146/unknown.png


[08/26/2020 9:38 PM] Dmitry Usov#0134
2nd answer for upgrading requests (http => https)


[08/26/2020 9:39 PM] Dmitry Usov#0134
need to up ssl endpoint üò¶


[08/26/2020 9:41 PM] Robert K#0722
I don't think it's ready yet, and the url may be slightly different after Marek does the proxy @Dmitry Usov


[08/26/2020 9:41 PM] Robert K#0722
Will let you know.


[08/26/2020 9:41 PM] Dmitry Usov#0134
ye no problem


[08/26/2020 9:41 PM] Dmitry Usov#0134
local is works


[08/26/2020 9:41 PM] Dmitry Usov#0134
i can develop


[08/26/2020 9:42 PM] Robert K#0722
Alright, good to hear.


[08/26/2020 9:44 PM] Robert K#0722
@scalahub Are you running the erg/usd connector?


[08/26/2020 9:44 PM] Robert K#0722
Because your log doesn't even show that it's failing to submit datapoints


[08/26/2020 9:44 PM] Robert K#0722
Did you restart your erg-usd connector after changing the ports in the oracle-config.yaml?


[08/26/2020 9:47 PM] scalahub#2618
ah so I have to run connector separately.. I just ran oracle-core


[08/26/2020 9:47 PM] scalahub#2618
now seems to be working


[08/26/2020 9:48 PM] Robert K#0722
Yeah, they're both required because the core does all the tx creation logic and the connector gets the datapoint


[08/26/2020 9:48 PM] Robert K#0722
the shell script just opens both for you in screen (or at least it should)


[08/26/2020 9:50 PM] scalahub#2618
ok so seems to be some issue with the script when two oracles are running.. because the screen opens up but the scripts do not start


[08/26/2020 9:50 PM] scalahub#2618
Had to manually start both oracle-core and erg-usd-connecor. can you check the script?


[08/26/2020 9:52 PM] Robert K#0722
You're on old commits which try to run both screens under the same name


[08/26/2020 9:52 PM] Robert K#0722
I believe I addressed that last week, so if you pull and rerun the prepare scripts you should have an updated run script


[08/26/2020 9:52 PM] scalahub#2618
yes I last pulled from github on Friday


[08/26/2020 9:53 PM] Robert K#0722
Just doublechecked, and it does appear to be fixed

{Reactions}
üëç 

[08/26/2020 9:53 PM] scalahub#2618
will check with latest now

{Reactions}
üëç 

[08/26/2020 9:53 PM] Robert K#0722
(unless it's a different issue which is possible as well


[08/26/2020 9:54 PM] scalahub#2618
any suggestions for learning rust?


[08/26/2020 9:55 PM] kushti#0978
@Robert K hmm, my datapoints are the same for Ergo and ADA


[08/26/2020 9:55 PM] kushti#0978
ADA-USD Connector
===========================================
Current Blockheight: 303907
Current Oracle Pool Stage: Epoch Preparation
Submit Datapoint In Latest Epoch: true
Latest Datapoint: 1861372427
===========================================


[08/26/2020 9:55 PM] kushti#0978
Erg-USD Connector
===========================================
Current Blockheight: 303908
Current Oracle Pool Stage: Epoch Preparation
Submit Datapoint In Latest Epoch: true
Latest Datapoint: 1861372427
===========================================


[08/26/2020 9:56 PM] kushti#0978
> any suggestions for learning rust?
@scalahub but why ? You're known as ScalaHub )


[08/26/2020 9:58 PM] scalahub#2618
so I can debug the issues in oracle-core myself üôÇ


[08/26/2020 9:59 PM] Robert K#0722
Haha, @rusthub sounds like an alter ego üòâ

{Reactions}
üòÜ 

[08/26/2020 9:59 PM] scalahub#2618
and its time to learn new language


[08/26/2020 9:59 PM] kushti#0978
@scalahub or teach ) ErgoScript

{Reactions}
üëç 

[08/26/2020 9:59 PM] Robert K#0722
The rust book is a pretty good resource: https://doc.rust-lang.org/book/

{Embed}
https://doc.rust-lang.org/book/
The Rust Programming Language - The Rust Programming Language

{Reactions}
üëç 

[08/26/2020 10:00 PM] Robert K#0722
But yeah, if you can take time to write more ErgoScript content that would be awesome @scalahub. Your recent wiki page was really good, and we really need more stuff like it/taking steps further.


[08/26/2020 10:01 PM] Robert K#0722
> @Robert K hmm, my datapoints are the same for Ergo and ADA
@kushti Hmm, do you have the same connector running for both oracle cores?


[08/26/2020 10:01 PM] Robert K#0722
Are you sure they are different pools and you're not running the same pool twice actually?


[08/26/2020 10:03 PM] kushti#0978
different ports


[08/26/2020 10:03 PM] kushti#0978
I guess different config is needed ?


[08/26/2020 10:04 PM] Robert K#0722
Yep, I mentioned you need to copy the ada config from the project root


[08/26/2020 10:05 PM] Robert K#0722
I should probably remove the pre-configured config files from the repo soon too and just have an empty default


[08/26/2020 10:06 PM] kushti#0978
oh my bad sorry


[08/26/2020 10:12 PM] scalahub#2618
yes I'll try to make more intro material for newcomers


[08/26/2020 10:12 PM] scalahub#2618
can you also change the preconfugured ports in each config file


[08/26/2020 10:23 PM] Robert K#0722
Hmm, sure. I'll move the config files into the script folders to keep things tidy and have preconfigured ports as well.


[08/26/2020 10:27 PM] Robert K#0722
Okay the config files have been moved and now they automatically get deployed with each prepare script (you just need to add your address/node info)


[08/26/2020 10:27 PM] Robert K#0722
And they have separate ports


[08/26/2020 11:03 PM] kushti#0978
alright it seems I'm doing well in both pools )


[08/27/2020 9:13 AM] scalahub#2618
> alright it seems I'm doing well in both pools )
@kushti yes after some tweaks in setting


[08/27/2020 9:14 AM] scalahub#2618
somehow the ada yaml had the erg token ids in my case.. maybe I messed up


[08/27/2020 5:16 PM] Dmitry Usov#0134
really like it üôÇ


[08/27/2020 5:16 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748576750329528451/2020-08-27_19.16.25.mov


[08/27/2020 5:30 PM] Robert K#0722
The loading looks good


[08/27/2020 5:30 PM] Robert K#0722
üëç


[08/27/2020 6:12 PM] Robert K#0722
@scalahub @kushti Is everything working well?


[08/27/2020 6:13 PM] Robert K#0722
With the release tomorrow, just checking up that everything is working smoothly


[08/27/2020 6:13 PM] Robert K#0722
I guess we should also deposit some more ergs into the pools to keep them running for at least the next month


[08/27/2020 6:13 PM] Robert K#0722
I think we're averaging around 1 Erg per day in payouts per pool?


[08/27/2020 6:48 PM] kushti#0978
@Robert K I can send some ergs


[08/27/2020 6:48 PM] kushti#0978
@Robert K my oracles are running fine it seems


[08/27/2020 6:49 PM] kushti#0978
@Dmitry Usov looks really nice!


[08/27/2020 6:58 PM] Dmitry Usov#0134
Thanks)


[08/27/2020 8:55 PM] Dmitry Usov#0134
updated https://explorer.ergoplatform.com/en/oracle-pool-state/ergusd

{Reactions}
üëç (3) 

[08/27/2020 8:56 PM] Dmitry Usov#0134
https://explorer.ergoplatform.com/en/oracle-pool-state/adausd


[08/27/2020 9:37 PM] kushti#0978
@Dmitry Usov "Oracle Pool NFT ID = 10" ?


[08/27/2020 9:37 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748642386128666644/unknown.png


[08/27/2020 9:37 PM] Dmitry Usov#0134
thanks!


[08/27/2020 9:37 PM] Dmitry Usov#0134
will change


[08/27/2020 9:39 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748642778224787528/unknown.png


[08/27/2020 9:39 PM] Dmitry Usov#0134
other is good, changed, thanks


[08/27/2020 9:41 PM] Robert K#0722
Ah, good catch @kushti


[08/27/2020 10:55 PM] Robert K#0722
@scalahub Would you be interested in coming on to the Ergo Cast (podcast) for an episode about oracle pools?


[08/27/2020 10:56 PM] Robert K#0722
I think we can get a good conversation going for a good chunk of the episode about the process that we went through in building everything


[08/27/2020 10:56 PM] Robert K#0722
(Episode would be recorded sometime in 2-3 weeks)


[08/28/2020 3:53 AM] scalahub#2618
Sure, let me know when you know the dates.. and what setup do I need?


[08/28/2020 1:19 PM] Robert K#0722
Great, let's co-ordinate a date after I come back from my break on the 7th. A webcam + microphone is all you need


[08/28/2020 3:15 PM] Dmitry Usov#0134
https://explorer.ergoplatform.com/en/oracle-pools-list/


[08/28/2020 3:16 PM] Dmitry Usov#0134
@Robert K

{Reactions}
üëç (2) 

[08/28/2020 5:58 PM] kushti#0978
is everything fine to the moment it seems ?


[08/28/2020 6:01 PM] kushti#0978
@Dmitry Usov redirecting to https://explorer.ergoplatform.com/en/ for me


[08/28/2020 6:01 PM] morphic#4133
the same for me


[08/28/2020 6:08 PM] kushti#0978
https://explorer.ergoplatform.com/en/oracle-pools-list works @morphic


[08/28/2020 6:13 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/748953533604298822/Screenshot_20200828-212310__01.jpg


[08/28/2020 6:14 PM] scalahub#2618
Last link "ergo" goes to 404


[08/28/2020 6:14 PM] scalahub#2618
@Robert K


[08/28/2020 6:15 PM] Robert K#0722
Ah, thanks @scalahub


[08/28/2020 6:15 PM] kushti#0978
@Robert K @Dmitry Usov @morphic can I get off for 1.5-2 hours ?


[08/28/2020 6:16 PM] Robert K#0722
Yeah, everything is good on my end now.


[08/28/2020 6:16 PM] kushti#0978
solving some family issues in parallel


[08/28/2020 6:16 PM] kushti#0978
sorry


[08/28/2020 6:17 PM] scalahub#2618
@kushti hope everything fine


[08/28/2020 6:17 PM] Robert K#0722
^ +1


[08/28/2020 6:17 PM] kushti#0978
good, thanks!


[08/28/2020 7:08 PM] Dmitry Usov#0134
Yeah, no problem now!


[08/28/2020 7:56 PM] kushti#0978
I'm around


[08/28/2020 9:27 PM] scalahub#2618
me too


[08/29/2020 3:28 PM] Robert K#0722
@scalahub Did you bootstrap this address? `9hD4D5rAcTyMuw7eVSENfRBmdCZiz3cwmW8xSnoEvZ1H64rFGMn`


[08/29/2020 3:30 PM] Robert K#0722
The Emurgo oracle is up and running, but that is Marek's address that he wants to run a separate one himself under his `Stake Nuts` cardano pool branding


[08/29/2020 3:33 PM] Robert K#0722
He just realized he was using the Emurgo address on his local one, and he can't find his `Datapoint` box with UTXO set scanning with the address I posted above.


[08/30/2020 8:29 AM] scalahub#2618
@Robert K have to double check if I bootstrapped that address.. Will do in a few hours as not at home.. Should I bootstrap both ADA and ERG if it does not exist?


[08/30/2020 2:39 PM] scalahub#2618
> @scalahub Did you bootstrap this address? `9hD4D5rAcTyMuw7eVSENfRBmdCZiz3cwmW8xSnoEvZ1H64rFGMn`
@Robert K For ADA, this is the tx that bootstrapped the oracle https://explorer.ergoplatform.com/en/transactions/027810369ed8bf5deb90aaaf83f9e7044c08e18d5292504220f1cad570d2c23a
The box has also been spent


[08/30/2020 2:39 PM] scalahub#2618
(it corresponds to the group element `036234820eb840b9246442f022ed1ef15ac80f2c5ac28314bcd8ff682c2703128f`


[08/30/2020 2:43 PM] scalahub#2618
For the ERG oracle, this is the tx https://explorer.ergoplatform.com/en/transactions/5e941dc8956292957664f20d3532777e0147c981675106e9e9b433286c55df96
(the data point box has been spent here also)


[08/30/2020 2:45 PM] scalahub#2618
maybe he needs to rescan


[08/30/2020 3:42 PM] Robert K#0722
Alright thanks for looking into it.


[08/31/2020 3:30 PM] Robert K#0722
Everything is working now for Marek, he had an old node vesion due to docker cachine issues.


[08/31/2020 3:31 PM] Robert K#0722
While I am away for the next week, @scalahub I think if you could focus on researching/potentially writing contracts for the dApp updating/proxy protocol that'd be a great next step.


[08/31/2020 3:32 PM] Robert K#0722
When I'm back I think we can start to dive into Bruno's scala code for the stablecoin protocol, start figuring out the required design patterns we need, and writing an informal spec.

{Reactions}
üëç 

[08/31/2020 10:08 PM] Robert K#0722
Alright, I'm about to head off for my break. I'll see you guys in 1 week (next Monday) and looking forward to jumping into our next project then üëã

{Reactions}
üî• (6) 

[08/31/2020 11:32 PM] kushti#0978
@Robert K have a good vacation!


[09/03/2020 10:32 PM] kushti#0978
Marek is not here?


[09/04/2020 8:49 AM] Dmitry Usov#0134
no


[09/04/2020 8:49 AM] Dmitry Usov#0134
only at chat


[09/07/2020 9:37 AM] Robert K#0722
And I am back online, hey everyone üëã

{Reactions}
üëã (4) 

[09/07/2020 9:38 AM] Robert K#0722
@scalahub Any progress on coming up with the contract update protocols?


[09/07/2020 9:39 AM] Robert K#0722
While I was away I think I figured out the next best step for upgrading oracle pools btw. We can add a margin of error on the datapoints (which I think I touched on before) + adding a minimum number of datapoints that must be used to finalize the pool datapoint for the epoch.

{Reactions}
üëçüèª 

[09/07/2020 9:41 AM] Robert K#0722
This means that we essentially create a small consensus mechanism, where a `Collect Datapoints` action can only be issued if an oracle can find a sufficient number of datapoints within the magin of error of their own datapoint.


[09/07/2020 9:43 AM] Robert K#0722
So if we create a pool with 10 oracles, we can set the minConsensus to say 5, and so a datapoint is only finalized if at least 5 datapoints can be found which are within the margin of error of each other in a given epoch.


[09/07/2020 9:44 AM] Robert K#0722
@scalahub Initially when you asked me about having a minimum number of datapoints required for finalizing I think I mentioned it wasn't worth it at the time, but I think as we start to pursue higher assurance and enter into DeFi/having serious protocols on top of oracle pools, we will need to start to get more serious and expect more from the operators to have a high up time.

{Reactions}
üëçüèª 

[09/07/2020 3:41 PM] scalahub#2618
> @scalahub Any progress on coming up with the contract update protocols?
@Robert K hi Robert good. to hear you're back..
I've been exploring the idea of a global box which contains the updatable contracts...experimenting with ErgoScript to see if it's feasible

unfortunately I'm not feeling well so taking the day off . will update tomorrow


[09/07/2020 3:51 PM] Robert K#0722
Ah alright, hope you feel better. Do you have any links to some of the work you've done so I can check it out in the mean time?


[09/07/2020 9:16 PM] scalahub#2618
Cool so the idea is to avoid executing arbirtary scripts directly as it has some issues and node probably does not yet support it but to emulate same thing by requiring an input box to have a script with hash equal to some value


[09/07/2020 9:17 PM] scalahub#2618
And a controller box that enforces this plus another box that stores the hashes


[09/07/2020 9:17 PM] scalahub#2618
The update will happen in the storage box


[09/07/2020 9:18 PM] scalahub#2618
No links yet as I've not completed the code


[09/07/2020 9:23 PM] scalahub#2618
Will share some figures tomorrow


[09/07/2020 9:36 PM] scalahub#2618
The two boxes will link via tokens and storage box is data input to controller box


[09/08/2020 7:57 AM] Robert K#0722
Hmm, I'm a bit unclear on what the exact reasoning is for needing the two boxes to be separate?


[09/08/2020 8:02 AM] Robert K#0722
Why do you need the logic of which hash is the correct hash in a separate box as the data itself?


[09/08/2020 8:04 AM] Robert K#0722
By the way @scalahub we're likely going to be starting to move forward with the stablecoin soon and talking about it in the Emurgo Slack, so if you're not already I'd recommend checking daily so we can start to co-ordinate.


[09/08/2020 8:17 AM] Robert K#0722
@kushti @scalahub If I recall correctly, when a block is processed by a miner, the txs are processed linearly. This means that you can't have 2 txs which each reference the other, while spending themselves, right?


[09/08/2020 8:17 AM] Robert K#0722
So tx1 spends UTXO A while referencing UTXO B as a data-input.


[09/08/2020 8:17 AM] Robert K#0722
And tx2 spends UTXO B while referencing UTXO A as a data-input.


[09/08/2020 8:18 AM] scalahub#2618
> By the way @scalahub we're likely going to be starting to move forward with the stablecoin soon and talking about it in the Emurgo Slack, so if you're not already I'd recommend checking daily so we can start to co-ordinate.
@Robert K cool I'll check it out.. any particular reason we are not using Discord? I'd prefer not to have slack as it is very memory hungry


[09/08/2020 8:19 AM] Robert K#0722
Because this project spans past Ergo and we have numerous IOHK people as well.


[09/08/2020 8:19 AM] scalahub#2618
ok so we should have access to messages older than 30 days hopefully


[09/08/2020 8:19 AM] Robert K#0722
+ Nico who doesn't use Discord


[09/08/2020 8:20 AM] Robert K#0722
Yeah, we have a paid slack server (so history included)


[09/08/2020 8:20 AM] scalahub#2618
cool no issues .. so I'll be going thru the messages today


[09/08/2020 8:21 AM] scalahub#2618
for the updatable contracts, I have both variations but finally narrowed down to this one..


[09/08/2020 8:21 AM] scalahub#2618
two boxes seem cleaner because two separate concerns and two separate owners mostly


[09/08/2020 8:22 AM] scalahub#2618
kind of same reason we have two contracts for epoch prep and live epoch, when we could have a single one


[09/08/2020 8:23 AM] Robert K#0722
Probably slightly different, as it's required due to epochs relying on box id, and so it's impossible to have only live epoch + collecting funds otherwise, but otherwise yes.


[09/08/2020 8:23 AM] scalahub#2618
and the storage box is more like a "config file", so neater if kept separate


[09/08/2020 8:23 AM] Robert K#0722
But it increases tx fee, no?


[09/08/2020 8:23 AM] Robert K#0722
Due to size increase.


[09/08/2020 8:24 AM] scalahub#2618
tx fee will be saved with two different box design in many cases


[09/08/2020 8:25 AM] scalahub#2618
I guess data input is considered as normal tx bytes?


[09/08/2020 8:25 AM] scalahub#2618
@kushti ^ ?


[09/08/2020 8:27 AM] Robert K#0722
How would it lower fees? I imagine it would indeed count as normal tx bytes (and I think it does based on my experience with `Collect Datapoints`)


[09/08/2020 8:28 AM] scalahub#2618
when we are updating contracts


[09/08/2020 8:28 AM] scalahub#2618
we only spend the storage box


[09/08/2020 8:28 AM] Robert K#0722
Right, but every single time someone uses the actual dApp, which is orders of magnitude more often, they will have to reference 2 boxes to proceed forward to the next stage, right?


[09/08/2020 8:29 AM] Robert K#0722
Or am I understanding wrong?


[09/08/2020 8:31 AM] scalahub#2618
yes two boxes will be spent and 3rd will be referenced in data inputs
spent box1: controller box
spent box2: actual contract box
data input: storage box


[09/08/2020 8:31 AM] scalahub#2618
(plus other boxes for fee etc)


[09/08/2020 8:32 AM] Robert K#0722
That seems excessively heavy


[09/08/2020 8:32 AM] Robert K#0722
It makes the off-chain logic more complicated (plus extra scans to find everything) and then increases tx size.


[09/08/2020 8:33 AM] Robert K#0722
We need to consider the on-chain + off-chain + end user effects of the designs, and not just on making the contracts design clean.


[09/08/2020 8:34 AM] Robert K#0722
So in real terms, what would the actual benefits be in separating the two? The current negatives are:
- Tx size increases and therefore all actions for endusers of the dApp are heavier/cost more
- Off-chain logic is more complicated


[09/08/2020 8:35 AM] scalahub#2618
why does it increase tx size?


[09/08/2020 8:35 AM] scalahub#2618
I think it decreases tx size


[09/08/2020 8:36 AM] scalahub#2618
about off chain, again I think it does not make it complex


[09/08/2020 8:36 AM] Robert K#0722
I must be understanding your protocol wrong, do you have a summary or something I can read?


[09/08/2020 8:36 AM] scalahub#2618
yes most likely üôÇ


[09/08/2020 8:36 AM] Robert K#0722
Because from what I understood, anytime someone performs an action, they must spend an extra box + use an extra box as a data-input.


[09/08/2020 8:37 AM] Robert K#0722
Versus just using a single extra box as a data-input if we were to join them into one, I'd imagine.


[09/08/2020 8:37 AM] scalahub#2618
how would that single extra box as data input help?


[09/08/2020 8:38 AM] Robert K#0722
Less inputs/data-inputs = smaller tx size


[09/08/2020 8:38 AM] scalahub#2618
> Cool so the idea is to avoid executing arbirtary scripts directly as it has some issues and node probably does not yet support it but to emulate same thing by requiring an input box to have a script with hash equal to some value
@scalahub this was the goal


[09/08/2020 8:38 AM] Robert K#0722
And less off-chain logic


[09/08/2020 8:38 AM] scalahub#2618
so unless you are saying we should not follow this design, there does not seem to be any other way out


[09/08/2020 8:38 AM] scalahub#2618
data input is optional just to make it cleaner


[09/08/2020 8:39 AM] scalahub#2618
the actual box is needed as another input


[09/08/2020 8:39 AM] Robert K#0722
It's hard for me to grasp what "some issues" are, and what you're saying without some clearer explanation of what you are talking about.


[09/08/2020 8:39 AM] scalahub#2618
the main issue is that the node currently support this


[09/08/2020 8:39 AM] Robert K#0722
I don't understand the problem space as I haven't had time to think about it.


[09/08/2020 8:39 AM] scalahub#2618
and the other issues with costing


[09/08/2020 8:40 AM] scalahub#2618
but forget the costing for a moment. Currently its not possible for execute arbitrary scripts from data inputs


[09/08/2020 8:40 AM] scalahub#2618
the only alternative is to use it as an input to the tx


[09/08/2020 8:41 AM] scalahub#2618
so we should first decide which approach we want


[09/08/2020 8:42 AM] scalahub#2618
probably need @kushti to comment if we can execute code from data inputs


[09/08/2020 8:42 AM] Robert K#0722
But why do we need to execute arbitrary scripts? Why can't we just check that the output is going to contract Y for example?


[09/08/2020 8:43 AM] scalahub#2618
For the example usecase, I am considering the oracle pool contract as the one we need to update


[09/08/2020 8:43 AM] scalahub#2618
(but not this instance, the next ones)


[09/08/2020 8:43 AM] Robert K#0722
Can you please write a short detailed summary or a rough informal spec of exactly what you are thinking?


[09/08/2020 8:45 AM] scalahub#2618
> For the example usecase, I am considering the oracle pool contract as the one we need to update
@scalahub I didn't fully understand this


[09/08/2020 8:45 AM] scalahub#2618
> Can you please write a short detailed summary or a rough informal spec of exactly what you are thinking?
@Robert K yes I am working on that now.. will share today


[09/08/2020 8:48 AM] scalahub#2618
do you want it to be private for now?


[09/08/2020 8:48 AM] scalahub#2618
I was thinking of a forum post


[09/08/2020 8:50 AM] Robert K#0722
As I mentioned a week or so ago, I was hoping we could release it on the Emurgo Research github and we could then do a small marketing announcement about it


[09/08/2020 8:50 AM] Robert K#0722
Rather than a forum post

{Reactions}
üëç (2) 

[09/08/2020 8:51 AM] Robert K#0722
We can link it in a forum thread too, to get best of both worlds


[09/08/2020 8:51 AM] scalahub#2618
right now are are in a situation where we need to update the pool contracts so thats a good use case


[09/08/2020 8:52 AM] scalahub#2618
I'll try to base my article on that but if you have a problem definition, let me know


[09/08/2020 8:53 AM] Robert K#0722
I was hoping we could do an overview of all the options for updating dApps


[09/08/2020 8:53 AM] scalahub#2618
its a bit vague statement because dApps are not clearly defined


[09/08/2020 8:53 AM] Robert K#0722
So we can explore the problem space, and put out something that is genuinely like a small primer to how dApp updates work on the UTXO-model


[09/08/2020 8:53 AM] scalahub#2618
maybe its better with some conrete usecase or some formal definition


[09/08/2020 8:54 AM] Robert K#0722
The ability to update a given smart contract in a protocol from A to B


[09/08/2020 8:54 AM] scalahub#2618
main issue Im facing is formulating the problem statement..


[09/08/2020 8:54 AM] Robert K#0722
The idea is if we make it general about the UTXO model, we'll also be able to push it a lot more in the Cardano crowd and get more attention.


[09/08/2020 8:55 AM] scalahub#2618
yes I want to include cardano in the model


[09/08/2020 8:55 AM] scalahub#2618
so yes utxo specific only


[09/08/2020 8:56 AM] scalahub#2618
we can implement oracle pool in cardano?


[09/08/2020 8:56 AM] Robert K#0722
So for now, can you explain what you are thinking in technical terms, so I can understand, and we can discuss whether there are other options available as well? And from there we can decided if we want to expand the focus of the writeup to multiple approaches, or just stick with what you have decided?


[09/08/2020 8:57 AM] scalahub#2618
no worries.. fow now I'll write my idea and we can work on that.


[09/08/2020 8:57 AM] Robert K#0722
> we can implement oracle pool in cardano?
@scalahub Yes/no. Cardano has no data-inputs nor reading datum (registers equivalent) from inputs, so it's a lot more messy and each oracle pool will have to be custom for a specific dApp.


[09/08/2020 8:58 AM] Robert K#0722
We (Emurgo) have been mentioning the need for data-inputs for months now to make their model usable, but we'll see ü§∑‚Äç‚ôÇÔ∏è


[09/08/2020 8:58 AM] scalahub#2618
well data inputs can be emulated inefficiently by ordinary inputs


[09/08/2020 8:59 AM] scalahub#2618
so its not completely impossible


[09/08/2020 8:59 AM] scalahub#2618
using the emission box pattern, we can have a box that ensures its output has same script and same registers so its essentially a read only box


[09/08/2020 9:01 AM] scalahub#2618
btw please wait for a few hours.. I'll try to share my writeup before our call


[09/08/2020 9:05 AM] Robert K#0722
Sounds good


[09/08/2020 9:06 AM] Robert K#0722
> well data inputs can be emulated inefficiently by ordinary inputs
@scalahub Only partially. Only 1 user per block can spend a UTXO, so you limit the usability of a given piece of data by not having data-inputs.

{Reactions}
üëç (2) 

[09/08/2020 9:06 AM] Robert K#0722
This is why I've thought about having some sort of extra parameter for Cardano oracle pools which dictates how many copie sof the finalized datapoint need to be pasted in their own boxes.


[09/08/2020 9:07 AM] Robert K#0722
So at the end of each epoch you create X finalized datapoint boxes (ex. 5) and so 5 people can use the oracle data.


[09/08/2020 9:07 AM] Robert K#0722
But this runs into a co-ordination problem of who uses which utxo, and with 0 communication this probably won't ever be clean/work well.


[09/08/2020 9:12 AM] scalahub#2618
about fee for data inputs, if multiple tx share the same data, then actual data stored is less, so possibly it may be better to have lower fee for data inputs to encourage people to use them


[09/08/2020 9:14 AM] scalahub#2618
I should remember to mention data inputs next time I try to market Ergo üôÇ


[09/08/2020 9:14 AM] Robert K#0722
> about fee for data inputs, if multiple tx share the same data, then actual data stored is less, so possibly it may be better to have lower fee for data inputs to encourage people to use them
@scalahub Interesting point, so then would we just weight data-inputs data as less?


[09/08/2020 9:14 AM] Robert K#0722
Tbh I think data-inputs are one of the coolest features in Ergo that no one really cares about lol


[09/08/2020 9:15 AM] Robert K#0722
They open up so much potential it's rather crazy.


[09/08/2020 9:15 AM] scalahub#2618
yes sort of like Ethereum global state


[09/08/2020 9:18 AM] Robert K#0722
-----------
Current state of stablecoin:

Bruno took the Staticoin protocol and added a few extra moving parts to ensure that the underlying reserves have a high minimum, and a defined maximum in order to not inflate the future profit of individuals who provided liquidity early on. His imperative-style example code for how the protocol is supposed to work is here: https://github.com/Emurgo/stablecoin-project-design/blob/master/scala-spec/src/main/scala/Main.scala (should be available to kushti & scalahub who are invited) We've decided on calling the token minted by liquidity providers as "ReserveCoin".

Roman's research team from IOHK is going to take the model from the above code, and do simulations based off of historical data and other scenarios for how the stablecoin will hold up given conditions X, Y, and Z.

Nico is going to be talking with a cryptocurrency-versed lawyer about the legality of the stablecoin.

I've written up a piece on tokenomics of how we can incentivize people to earn governance tokens while providing extra benefits to the protocol: https://github.com/Emurgo/stablecoin-project-design/blob/master/ideas/coin-staking.md

Our next step will be starting to translate Bruno's high level imperative into the utxo-model/write an informal spec for the simplest possible protocol without any governance or updating or anything else.

{Reactions}
üëçüèª (2) 

[09/08/2020 9:20 AM] kushti#0978
reading through...


[09/08/2020 9:23 AM] kushti#0978
2 data inputs sounds too heavy too me as well


[09/08/2020 9:24 AM] kushti#0978
Why not just 1 data input with spending condition encoding update rules ?


[09/08/2020 9:24 AM] kushti#0978
Like it is done in the dev fund contract


[09/08/2020 9:30 AM] scalahub#2618
Thanks @Robert K thats really helpful


[09/08/2020 9:31 AM] scalahub#2618
> Like it is done in the dev fund contract
@kushti can you send me the link to that contract


[09/08/2020 9:37 AM] scalahub#2618
> 2 data inputs sounds too heavy too me as well
@kushti there is only one data input but lets continue this discussion after my writeup


[09/08/2020 9:38 AM] scalahub#2618
```spent box1: controller box
spent box2: actual contract box
data input: storage box```


[09/08/2020 9:39 AM] scalahub#2618
maybe I should have used `input` instead of `spent` but I thought thats implied


[09/08/2020 10:28 AM] Robert K#0722
Ah, and I forgot to mention that these are the expected tokenomics for the governance token for the stablecoin for Ergo:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/752822683175223326/unknown.png


[09/08/2020 10:29 AM] Robert K#0722
These are still maleable, so if anyone has any suggestions, feel free to pitch in.


[09/08/2020 1:25 PM] kushti#0978
@scalahub please take a look to the "foundationScript" function in ErgoScriptPredef.scala (sigma repo) :


[09/08/2020 1:26 PM] kushti#0978
"In addition, it is protected by custom proposition in R4 which is assumed to be a simple 2-of-3 multisignature with
  public keys of foundation members in the beginning. When foundation members spend
  this box, they are free to put any new proposition to the R4 register, thus they
   may add or remove members, or change it to something more complicated like `tokenThresholdScript`."


[09/08/2020 2:10 PM] scalahub#2618
@kushti hmm how will we encode and create the contracts. I am not able to use `executeFromRegister` and `executeFromVar` in my tests. How will we execute code in R4 or `CONTEXT.dataInputs(0).R4`?


[09/08/2020 2:11 PM] scalahub#2618
https://github.com/ScorexFoundation/sigmastate-interpreter/blob/develop/docs/LangSpec.md

{Embed}
https://github.com/ScorexFoundation/sigmastate-interpreter/blob/develop/docs/LangSpec.md
ScorexFoundation/sigmastate-interpreter
Interpreter of a Sigma-State language. Contribute to ScorexFoundation/sigmastate-interpreter development by creating an account on GitHub.
https://images-ext-2.discordapp.net/external/YpBER9jxoC4piVA-OFwYuv0LT48G70XEXqXD46lUmgg/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/20186710


[09/08/2020 2:13 PM] scalahub#2618
or should we be writing this in ErgoTree now üòÑ


[09/08/2020 2:14 PM] kushti#0978
foundationScripr made in ErgoTree


[09/08/2020 2:14 PM] kushti#0978
but we can add functions to ErgoScript as well I guess


[09/08/2020 2:15 PM] scalahub#2618
yes I am ok with either actually


[09/08/2020 2:15 PM] kushti#0978
val customProposition = DeserializeRegister(ErgoBox.R4, SSigmaProp)
    // combine 3 conditions above with AND conjunction
    SigmaAnd(amountCorrect.toSigmaProp, sameScriptRule.toSigmaProp, customProposition)


[09/08/2020 2:59 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/752890782649679872/Updatable_contracts.md


[09/08/2020 2:59 PM] scalahub#2618
here is a brief writeup


[09/08/2020 3:19 PM] Robert K#0722
Hmm, interesting.


[09/08/2020 3:19 PM] Robert K#0722
Now I see what you mean by separating the condition and the data, with spending the condition to run it and reading the data-input.


[09/08/2020 3:27 PM] Robert K#0722
And so I guess at it's simplest for updating contracts, you would have a "proxy box" for every contract part of a given protocol.


[09/08/2020 3:28 PM] Robert K#0722
Is there a use case for "updating input script" rather than "updating output script"? (Hmm, I guess more immediate updates to the utxos currently locked at the given stage and without having to spend the box itself which could also matter if we're updating the condition for say 10000 utxos)


[09/08/2020 3:40 PM] Robert K#0722
I imagine for "update input script" there wouldn't really ever be a scenario where you rely on box C (the condition logic box) to have a static box id. You'd instead rely on box id of box B. As box B is where you would store the tokens/data.


[09/08/2020 3:41 PM] Robert K#0722
That being the case, I don't think there's a good reason to separate the condition (box C) and the data (box D).


[09/08/2020 5:15 PM] Robert K#0722
Outlier check -> deviation check


[09/08/2020 8:03 PM] kushti#0978
@Robert K https://erg-usd-ergo-oracle.emurgo.io/frontendData - wrong epoch_end_height


[09/08/2020 8:04 PM] kushti#0978
(~300 blocks behind)


[09/08/2020 8:54 PM] Robert K#0722
Ah, it may be because of the outlier 50% check + citex destroying the coingecko price


[09/08/2020 9:18 PM] Robert K#0722
I've reboot the pool with a manual datapoint submit

{Reactions}
üëçüèª 

[09/08/2020 9:19 PM] Robert K#0722
We defintely should replace the outlier check with the deviation check/consensus mechanism.

{Reactions}
üëçüèª 

[09/08/2020 9:22 PM] Robert K#0722
Hmm random thought, I guess also if we eventually implement stake slashing + deviation check conensus, we can naively model the cost of corruption of a given oracle pool by required collateral * number of oracles required to arrive at consensus.

{Reactions}
üëçüèª 

[09/09/2020 10:36 AM] Robert K#0722
For reference for you guys, here's the expected Stablecoin timeline we're now aiming for:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/753187067189657650/unknown.png

{Reactions}
üòé (3) 

[09/09/2020 10:37 AM] Robert K#0722
(We'll see if Plutus is ready in time to make the Cardano portion a reality üòÖ  But that's not relevant for you guys anyways)


[09/09/2020 11:25 AM] Robert K#0722
@scalahub @kushti and anyone else who's interested, I've written up a high level overview document of the project (for legal/sending to the lawyer to inspect), and it's turned out to be a decent overview in general for understanding the dynamics of the project are supposed to work.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/753199360912916480/StableCoin_Project_Overview.pdf

{Reactions}
üëå (4) üëç 

[09/09/2020 11:26 AM] Robert K#0722
If anyone has better ideas for tokenomics, mechanisms for users to generate governance tokens, governance token use cases, or anything else in between, then it'd be great to hear them so we can consider before sending to the lawyer.


[09/09/2020 11:26 AM] Robert K#0722
@scalahub I think the above document + the scala code should be sufficient in getting caught up on the current direction of the project.

{Reactions}
üëç 

[09/09/2020 1:56 PM] kushti#0978
@Robert K nice, will take a look after the devs chat


[09/09/2020 4:16 PM] kushti#0978
@Robert K very clear overview

{Reactions}
üëç 

[09/09/2020 4:27 PM] Robert K#0722
Great, glad to hear.


[09/09/2020 6:22 PM] scalahub#2618
I'll update v4 of the contracts (with deviation check) sometime tomorrow


[09/09/2020 6:39 PM] Robert K#0722
Oh nice, that would be great @scalahub.


[09/09/2020 6:40 PM] Robert K#0722
I'll probably delay in upgrading the oracle core for a bit until we're a bit farther into the stablecoin.


[09/09/2020 6:40 PM] Robert K#0722
This could actually work well. If you develop the contracts for deviation checking for oracle pools, I can continue work on the informal spec for the stablecoin


[09/09/2020 6:41 PM] Robert K#0722
And then you can check the informal spec/help finish it, and then work on the contracts for the stablecoin, while I work on implementing the deviation + consensus checking in the core.


[09/09/2020 6:47 PM] scalahub#2618
no issues .. we don't have to upgrade the core immediately.


[09/09/2020 9:06 PM] scalahub#2618
> @scalahub I think the above document + the scala code should be sufficient in getting caught up on the current direction of the project.
@Robert K and by Scala code, you mean the Main.scala link that you shared?


[09/10/2020 9:34 AM] Robert K#0722
@scalahub Yes. But without the Dividended payout at the bottom.


[09/11/2020 9:44 AM] Robert K#0722
@scalahub How is progess going?


[09/11/2020 9:45 AM] Robert K#0722
You mentioned you'd have deviation check added yesterday


[09/11/2020 10:10 AM] scalahub#2618
Will be pushing v4 shortly


[09/11/2020 10:27 AM] Robert K#0722
Great to hear


[09/11/2020 10:57 AM] scalahub#2618
well some tests are failing so need to figure out the issue.. but I've pushed


[09/11/2020 10:57 AM] scalahub#2618
feel free to debug üôÇ


[09/11/2020 10:58 AM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/11/2020 10:58 AM] scalahub#2618
this is the code


[09/11/2020 10:58 AM] scalahub#2618
this test failing https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/11/2020 11:00 AM] scalahub#2618
contracts seem to be ok so need to dig more on why collection is failing


[09/11/2020 11:10 AM] scalahub#2618
seems issue was in computation of delta.. (should have multiplied before divide)


[09/11/2020 11:10 AM] scalahub#2618
have pushed new one.. please review the code @Robert K @kushti

{Reactions}
üëçüèª 

[09/11/2020 11:11 AM] scalahub#2618
what is a reasonable value for min number of data points?


[09/11/2020 11:59 AM] Robert K#0722
> what is a reasonable value for min number of data points?
@scalahub I think that depends on the size of the pool and how much minimum consensus we'd want/assurance.


[09/11/2020 12:00 PM] Robert K#0722
When we launch the stablecoin, we may want to do 50% to have a much stronger assurance. (But this requires all oracles to be on top of keeping their oracles online)


[09/11/2020 12:25 PM] Robert K#0722
Alright, I think it looks generally good from what I can tell.


[09/11/2020 12:28 PM] Robert K#0722
I would rename `oracleRewardsOutputs` to `deviationCheckResult` or something like that, as from what I can tell the fold effectively only tracks index + whether the deviation is within range(bool), and doesn't return outputs.

{Reactions}
üëç (2) 

[09/11/2020 12:55 PM] scalahub#2618
Well min 2 oracles seems fine for now


[09/11/2020 12:57 PM] Robert K#0722
Yeah 2 should be fine for testing, and prevents any issues where a single oracle somehow horribly malfunctions


[09/11/2020 3:40 PM] Robert K#0722
@scalahub I'm talking in slack with Bruno about the stablecoins these days btw


[09/11/2020 3:40 PM] Robert K#0722
Would be good to have you join in for discussions


[09/11/2020 3:58 PM] scalahub#2618
yes I've just finished reading the documents.. will be joining the discussion


[09/11/2020 4:07 PM] scalahub#2618
> I would rename `oracleRewardsOutputs` to `deviationCheckResult` or something like that, as from what I can tell the fold effectively only tracks index + whether the deviation is within range(bool), and doesn't return outputs.
@Robert K not only deviation check but also reward check (i.e., reward boxes are correctly formed), so maybe better name is `rewardAndDeviationCheckResult` and maybe even skip `Result`


[09/11/2020 4:26 PM] scalahub#2618
Done and pushed


[09/11/2020 4:49 PM] Robert K#0722
Sounds good.


[09/11/2020 8:48 PM] kushti#0978
@scalahub from quick look, contracts are okay. Lemme have a detailed check tomorrow.


[09/14/2020 8:14 AM] Robert K#0722
@scalahub One option we can also do, which seems to be common in other oracle solutions is to use the median rather than the average.


[09/14/2020 8:16 AM] Robert K#0722
The logic for this would be simpler as we could do deviation check via sorted list and then just find the median element.


[09/14/2020 8:17 AM] Robert K#0722
Though I think average might be better with deviation checking? It will likely arrive at a better value because it's essentially weighting the deviations between datapoints.


[09/14/2020 8:17 AM] Robert K#0722
Any thoughts on this from anyone?


[09/14/2020 11:30 AM] kushti#0978
Why other solutions are using median ?


[09/14/2020 11:30 AM] kushti#0978
It considered to be safer option ?


[09/14/2020 11:31 AM] Robert K#0722
I believe so. They don't have anything like deviation checking, so the values can be very widely spread apart.


[09/14/2020 11:35 AM] kushti#0978
@Robert K on parallelization, we can do reserve datapoint aggregated e.g. every hour and then user can't mint more than 10% of free reserve. Also, reserve datapoint can be cleared in certain cituations for awhile, to halt operations when markets are in storm.


[09/14/2020 11:54 AM] kushti#0978
@Robert K I meant bank UTXOs parallelization in the stablecoin protocol


[09/14/2020 12:06 PM] Robert K#0722
Hmm, what do you mean by reserve datapoint aggregated? You mean total reserve funds/minted coins?


[09/14/2020 12:07 PM] Robert K#0722
Yeah, essentially all parallelization would require a checkpointing system that updates current protocol state every X blocks.


[09/14/2020 12:08 PM] Robert K#0722
Effectively it would rely on one of the epoch protocols that I & Amitabh came up with, where instead of a preset number of oracles have the ability to post data in parallel, you'd have anyone able to bootstrap into that epoch with their minting/redeeming request.


[09/14/2020 12:09 PM] Robert K#0722
And at the end of the epoch you would incentivize a collector to spend them all at once into the core protocol UTXO.


[09/14/2020 12:10 PM] Robert K#0722
OR, alternatively you could design the protocol a bit different to allow the funds to be more distributed across multiple UTXOs and the checkpoints are just accumulating current totals via data-inputs.


[09/14/2020 12:12 PM] kushti#0978
I'm thinking about the latter approach, currently it is possible to have few hundred data inputs .


[09/14/2020 12:14 PM] Robert K#0722
Hmm, so when would the minting/redeeming take place?


[09/14/2020 12:14 PM] Robert K#0722
Because someone at some point needs to create new outputs for giving people their Ergs or minted coins.


[09/14/2020 12:15 PM] Robert K#0722
So would the collector/aggregator who finds all the UTXOs create a few hundred data input tx, and create outputs for all of those data-inputs?


[09/14/2020 12:15 PM] kushti#0978
So assume bank is limited with 100-200 bank utxos


[09/14/2020 12:15 PM] Robert K#0722
Or would we split these actions up, and so we have a aggregation phase, and a payout phase where people can fulfill their "accepted" mints/redeems.


[09/14/2020 12:16 PM] kushti#0978
then reserve data provide is using the as data-inputs to produce a result of fold , a single reserve value


[09/14/2020 12:16 PM] kushti#0978
Then when miniting or redeeming a user is working with 1 utxo but using the aggregate data as a data-input


[09/14/2020 12:24 PM] Robert K#0722
Hmm, so are you saying that someone aggregates into 1 utxo, and everyone uses that as the "checkpointed" value for the total reserves.


[09/14/2020 12:24 PM] Robert K#0722
Or are you saying everyone needs to aggregate everyone elses boxes as data-inputs?


[09/14/2020 12:25 PM] kushti#0978
> Hmm, so are you saying that someone aggregates into 1 utxo, and everyone uses that as the "checkpointed" value for the total reserves.
@Robert K Yes, exactly


[09/14/2020 12:25 PM] Robert K#0722
I need to go afk to record Ergo Cast episode, but we can continue talking afterwards on this


[09/14/2020 12:25 PM] Robert K#0722
My main question for this would be calculating rates/when the minting/redeeming happens.


[09/14/2020 12:26 PM] Robert K#0722
Ie. after aggregation, if person #5 gets an updated rate after people #1-4 do actions, or do they all wait until next aggregation/checkpoint before they receive theirs?


[09/14/2020 12:27 PM] kushti#0978
Let me think a bit on it also.


[09/14/2020 12:28 PM] kushti#0978
Good luck with the cast!


[09/14/2020 2:16 PM] kushti#0978
> Ie. after aggregation, if person #5 gets an updated rate after people #1-4 do actions, or do they all wait until next aggregation/checkpoint before they receive theirs?
@Robert K Oracle rate ?


[09/14/2020 2:16 PM] Robert K#0722
Exchange rate based on total reserves


[09/14/2020 2:36 PM] Robert K#0722
@scalahub For deviation checking we theoretically could change the logic to have a hard cap on the total deviation possible.


[09/14/2020 2:37 PM] Robert K#0722
Rather than checking for deviation between datapoints, we could check for sorted list + total deviation between the 1st datapoint and the last datapoint.


[09/14/2020 2:37 PM] Robert K#0722
So all deviation between min/max for a given collection is say 5%


[09/14/2020 2:40 PM] scalahub#2618
But will we not run into same issue?


[09/14/2020 2:41 PM] scalahub#2618
Oh you mean from first data point not the previous data point


[09/14/2020 2:41 PM] scalahub#2618
Then yes it seems to be a good idea


[09/14/2020 2:43 PM] Robert K#0722
I think the computation complexity will be lowered too which is nice.


[09/14/2020 2:43 PM] Robert K#0722
And it stops the runaway deviation problem you mentioned


[09/14/2020 3:17 PM] scalahub#2618
> Though I think average might be better with deviation checking? It will likely arrive at a better value because it's essentially weighting the deviations between datapoints.
@Robert K why do other solutions use median? Is there any benefit apart from reduced computation? I also feel average is a better metric


[09/14/2020 3:56 PM] Robert K#0722
Reduced computation/less likely for outliers to be a problem I believe.


[09/14/2020 4:42 PM] scalahub#2618
Hmm ya we could potentially use same then


[09/14/2020 4:49 PM] Robert K#0722
But with deviation checking averaging seems better tbh


[09/14/2020 4:50 PM] Robert K#0722
We have no outlier problem with deviation check, and the datapoints within the deviation range then are effectively "weighted"


[09/14/2020 10:41 PM] kushti#0978
> But with deviation checking averaging seems better tbh
@Robert K I'm on the same page

{Reactions}
üëç 

[09/15/2020 8:38 AM] Robert K#0722
@scalahub So then I think the plan is to implement capped deviation checking 

`[highest datapoint] - ([height datapoint] * [deviation percentage]) >= [minimum datapoint] `

{Reactions}
üëçüèª (2) 

[09/15/2020 8:39 AM] Robert K#0722
Keep averaging

{Reactions}
üëçüèª (2) 

[09/15/2020 8:39 AM] Robert K#0722
And have consensus


[09/15/2020 10:50 AM] Robert K#0722
@kushti @scalahub Would you guys be comforable with moving our weekly call/meeting back an hour or two going forward? (We can still do this one on the planned time, but it'd be better for me these days if the meeting was earlier)


[09/15/2020 10:52 AM] scalahub#2618
It should be fine with me. Let's move it back an hour


[09/15/2020 11:41 AM] kushti#0978
I' fine with both


[09/15/2020 11:45 AM] Robert K#0722
Great, thanks.


[09/15/2020 1:45 PM] scalahub#2618
yes actually both are good for me


[09/16/2020 9:34 AM] scalahub#2618
btw I just realized that I'll be busy with CBT 20 workshop on Thu/Fri, so might not be able to work too much on stablecoin those two days. @Robert K @kushti


[09/16/2020 9:37 AM] Robert K#0722
Ah alright.


[09/16/2020 9:37 AM] Robert K#0722
We're having discussions last night/today about incentives and Bruno updated his code so we should take some time to discuss in Slack today


[09/16/2020 9:37 AM] scalahub#2618
yes I saw


[09/16/2020 11:07 AM] scalahub#2618
I've pushed the global deviation check smart contracts for oracle pool (v4)

{Reactions}
üëç 

[09/16/2020 11:08 AM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala#L88-L102

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/16/2020 11:08 AM] scalahub#2618
please review the smart contracts @kushti @Robert K


[09/16/2020 11:09 AM] kushti#0978
@scalahub thanks will do after devs chat


[09/16/2020 11:41 AM] Robert K#0722
@scalahub On line 88 aren't you getting the 2nd last datapoint?


[09/16/2020 11:41 AM] Robert K#0722
```scala
       |  val lastDataPoint = getPrevOracleDataPoint(rewardAndDeviationCheck._1 - 1)
```


[09/16/2020 11:43 AM] Robert K#0722
And I see you've chosen to go with deviation from the first datapoint, rather than from the last. That works as well, just need to remember that when writing the off-chain code.


[09/16/2020 11:45 AM] Robert K#0722
Hmm, wait, are you assuming that the datapoints are sorted in reverse order from largest to smallest?


[09/16/2020 11:45 AM] Robert K#0722
102: 
```scala
       |    lastDataPoint >= firstDataPoint - globalDelta
```


[09/16/2020 12:48 PM] scalahub#2618
yes actually the code evolved from checking the output are correct (hence starting with index 1) to using the same index to check the inputs


[09/16/2020 12:48 PM] scalahub#2618
and hence its a bit messy .. probably better to rewrite


[09/16/2020 12:49 PM] scalahub#2618
yes I am assuming that datapoints are sorted in decreasing order


[09/16/2020 12:49 PM] scalahub#2618
(0 is highest, last is lowest)


[09/16/2020 12:51 PM] scalahub#2618
actually this is an issue. I just realized that the spender must be owner of the first datapoint box


[09/16/2020 12:52 PM] scalahub#2618
so it cannot be both sorted and require the owner to be control the first data inputr.. would be good to have context vars here, so I can specify the spender by the context var


[09/16/2020 12:53 PM] scalahub#2618
let me check with @kushti the best solution to this


[09/16/2020 1:32 PM] Robert K#0722
Context vars aren't supported in sigma-rust yet I believe


[09/16/2020 1:33 PM] Robert K#0722
So we'd just have to include the index of which input is the user's in the context var?


[09/16/2020 2:00 PM] scalahub#2618
yes and neither in appkit


[09/16/2020 2:01 PM] scalahub#2618
yes we just need to include the index of the data input belonging to signer


[09/16/2020 2:05 PM] kushti#0978
will check after the devs chat


[09/16/2020 2:20 PM] Robert K#0722
Context vars are supported in sigma-rust for integers, so we should be good


[09/16/2020 2:33 PM] scalahub#2618
cool we should be fine then..only thing is I won't be able to test within Appkit until I add the support to it


[09/16/2020 2:35 PM] Robert K#0722
I guess we'll just deploy a test pool and see how it goes


[09/16/2020 2:39 PM] Robert K#0722
So to be clear, for off-chain code we need to:
1. Sort the inputs from max to minimum.
2. Ensure all inputs are within deviation range/filter out any that aren't.
3. Ensure that number of inputs is greater than minimum consensus size, else oracle core reposts new datapoint.

Is that correct, or am I missing something?


[09/16/2020 2:40 PM] Robert K#0722
------
Also could you please take a little bit of time to clean up the code/check everything is in order for the contracts when you get a chance? Just noticed:
line 30:
```scala
  def minOracleBoxes: Int // percent 0 to 100
```


[09/16/2020 2:40 PM] Robert K#0722
That should be number of boxes, not a percent (or the other logic is wrong from what I could see), and so it seems the comment is wrong/misleading

{Reactions}
üëç (2) 

[09/16/2020 2:48 PM] scalahub#2618
> So to be clear, for off-chain code we need to:
> 1. Sort the inputs from max to minimum.
> 2. Ensure all inputs are within deviation range/filter out any that aren't.
> 3. Ensure that number of inputs is greater than minimum consensus size, else oracle core reposts new datapoint.
> 
> Is that correct, or am I missing something?
@Robert K I guess we need to check also that first and last also fall within the max global deviation and ensure own data point is not discarded


[09/16/2020 2:51 PM] Robert K#0722
Hmm, I'm unclear on what you mean by your first point?


[09/16/2020 2:53 PM] scalahub#2618
basically the lowest and highest datapoint must also be within the specified deviation


[09/16/2020 2:54 PM] scalahub#2618
so I have two parameters, one is max local deviation (this and previous data point) and other is max global deviation (first and last data point)


[09/16/2020 2:55 PM] scalahub#2618
And I'm thinking the values should be local 2% and global 5%


[09/16/2020 2:56 PM] Robert K#0722
Ah, I assumed we agreed to replace local deviation checking for global deviation checking.


[09/16/2020 2:56 PM] scalahub#2618
i thought we wanted to keep both


[09/16/2020 2:56 PM] scalahub#2618
but its good idea to remove local actrually


[09/16/2020 2:57 PM] scalahub#2618
what do you think?


[09/16/2020 2:57 PM] Robert K#0722
Is there any benefit for keeping it?


[09/16/2020 2:57 PM] Robert K#0722
I assumed it's extra complexity and doesn't give us any more assurance


[09/16/2020 2:57 PM] Robert K#0722
Averaging will do most of the weighting anyways within the global deviation


[09/16/2020 2:57 PM] scalahub#2618
it could have some extra benefits but probaly not worth the extra cost


[09/16/2020 2:58 PM] scalahub#2618
so I'll remove that


[09/16/2020 2:58 PM] Robert K#0722
Sounds good.


[09/16/2020 2:58 PM] scalahub#2618
I guess I misunderstood what we decided üôÇ


[09/16/2020 2:59 PM] Robert K#0722
No worries.


[09/16/2020 3:00 PM] scalahub#2618
so the logic should be
1. sort in decreasing order
2. do some heurestic logic to ensure your data point is not filtered out and first and last selected ones fall within the deviation


[09/16/2020 3:00 PM] scalahub#2618
3. ensure at least min data points picked


[09/16/2020 3:01 PM] Robert K#0722
Technically if your datapoint is filtered you can still do the collection post.


[09/16/2020 3:01 PM] Robert K#0722
I guess optimally you'd want the core to repost a new datapoint?


[09/16/2020 3:02 PM] scalahub#2618
well the current logic requires the spender to be one of the data point holders


[09/16/2020 3:02 PM] scalahub#2618
and it will be in own interst to ensure my data point is included


[09/16/2020 3:03 PM] scalahub#2618
so yes if my data point is too off then must post new data point


[09/16/2020 3:03 PM] scalahub#2618
or just skip ?


[09/16/2020 3:03 PM] scalahub#2618
(and let someone else collect)


[09/16/2020 3:10 PM] Robert K#0722
Ah right.


[09/16/2020 3:10 PM] Robert K#0722
Hmm, I guess the logic should be to just post a new datapoint/wait for someone else to collect.


[09/16/2020 3:12 PM] Robert K#0722
By the way, inspired by the versioning idea from the stablecoin project, I think we can start to do versioning for the Oracle Pools too. I know you have a V4 scheme already, but I was thinking that we could start at v0.1 for the contracts/off-chain code that was released with outlier checking, and v0.2 will be deviation checking upgrade.


[09/16/2020 3:12 PM] Robert K#0722
Then v0.3 would be stake slashing probably for example.

{Reactions}
üëç 

[09/16/2020 3:56 PM] kushti#0978
@Robert K @scalahub only one context var is needed right ?


[09/16/2020 3:57 PM] kushti#0978
Then sigma-rust is okay


[09/16/2020 3:58 PM] kushti#0978
@scalahub do you understand AppKit? Would it be hard to add context extension support to it ?


[09/16/2020 3:59 PM] Robert K#0722
Yeah only a single one.


[09/16/2020 3:59 PM] Robert K#0722
So the sorting context var problem shouldn't be an issue (I guess)


[09/16/2020 4:00 PM] kushti#0978
Another solution is about to provide spender box and then sorted boxes. One data-input is being replicated then, but the overhead is about ~40 bytes just in regards with blockchain bloat.


[09/16/2020 4:03 PM] kushti#0978
And I think only global deviation is enough.


[09/16/2020 4:03 PM] kushti#0978
Local deviation could be a bit confusing


[09/16/2020 4:03 PM] Robert K#0722
I thought about that too, duplicating input/data-input, but extra size may end up being annoying.


[09/16/2020 4:04 PM] Robert K#0722
Would it just be 40 bytes with the Datapoint contract box being spent & recreated as a new output?


[09/16/2020 4:05 PM] kushti#0978
Oh no, output will be larger for sure


[09/16/2020 4:05 PM] kushti#0978
150-300 bytes


[09/16/2020 4:06 PM] kushti#0978
usually


[09/16/2020 4:06 PM] kushti#0978
Also, context var is cleaner approach I guess


[09/16/2020 4:11 PM] Robert K#0722
I think we should be able to get context vars to work.


[09/16/2020 4:12 PM] Robert K#0722
Tbh I just want to launch deviation checking before we launch the stablecoin, so even if we do it in 1 month, not that big of a deal for me personally.


[09/16/2020 4:16 PM] scalahub#2618
> Another solution is about to provide spender box and then sorted boxes. One data-input is being replicated then, but the overhead is about ~40 bytes just in regards with blockchain bloat.
@kushti Yes that was the approach I had in mind


[09/16/2020 4:17 PM] scalahub#2618
> @scalahub do you understand AppKit? Would it be hard to add context extension support to it ?
@kushti I believe it should not be too hard but I need to check the wallet code


[09/16/2020 4:18 PM] scalahub#2618
Also using context vars, I can add to contracts and then we can test it from sigma-rust


[09/16/2020 9:57 PM] scalahub#2618
@kushti @Robert K another simpler way would be to put the index in R4 of the first reward box (i.e.. `val proverIndex = OUTPUTS(1).R4[Int].get`)


[09/17/2020 7:49 AM] Robert K#0722
Hmm, interesting. I think using context vars is generally cleaner, as it's a lot more clear what is going on, but maybe you are right that this is the better approach for now.


[09/17/2020 12:37 PM] Robert K#0722
The interface for using context vars with how I'm using the full node to do tx building looks like it's going to be a bit of a nightmare to adapt.


[09/17/2020 12:39 PM] Robert K#0722
> @kushti @Robert K another simpler way would be to put the index in R4 of the first reward box (i.e.. `val proverIndex = OUTPUTS(1).R4[Int].get`)
@scalahub Let's do this. I'll make the collector payout be `OUTPUTS(1)` and it will have the index stored in R4


[09/17/2020 2:05 PM] Robert K#0722
Alright, I've implemented deviation checking  + minimum consensus number in the oracle core + updated the spec https://github.com/ergoplatform/oracle-core/tree/deviation-check

{Embed}
https://github.com/ergoplatform/oracle-core/tree/deviation-check
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[09/17/2020 2:05 PM] Robert K#0722
With the current code I went with putting the index in R4 of Output #1 (collector payout).


[09/17/2020 2:06 PM] Robert K#0722
The deviation checking filtering is a bit naive, as it just pops the last element if not within deviation range, and there is currently no logic/checks for what the core should do if there's no consensus (not enough datapoints within deviation range).


[09/17/2020 2:07 PM] Robert K#0722
When we have the contracts ready, we can do basic testing to make sure the off-chain/on-chain logic match.


[09/17/2020 2:08 PM] Robert K#0722
And once it's up and running, we can later improve the off-chain oracle core logic and choose more optimal filtering & reposting algorithms.


[09/17/2020 2:10 PM] Robert K#0722
Once we have all of that implemented and everything tested for a couple weeks in a private oracle pool, we can probably push the update out more publicly, merge into master, and update the public pools (and maybe try to make it a bit of a bigger announcement and include a couple more parties in the oracle pool to get more marketing value out of it all)


[09/17/2020 2:13 PM] Robert K#0722
So @scalahub when you get a chance when you're back:
1. Update contracts to acquire the index from R4 of Output #2.
2. Please push the new contracts into the `deviation-check` branch in `smart-contracts/v0.2` folder.
3. Launch a new test oracle pool for us to test out deviation checking. (Lets try 5% deviation range, and 2 boxes minimum consensus)


[09/17/2020 2:15 PM] kushti#0978
> @kushti @Robert K another simpler way would be to put the index in R4 of the first reward box (i.e.. `val proverIndex = OUTPUTS(1).R4[Int].get`)
@scalahub A bit counter-intuitive but okay


[09/17/2020 2:18 PM] Robert K#0722
I agree, but context extension variables just aren't as easy to use today as they should be so it's a bit of a quick fix, but still works.


[09/17/2020 2:20 PM] kushti#0978
Yeah, no issues with that approach.


[09/19/2020 6:43 PM] scalahub#2618
> So @scalahub when you get a chance when you're back:
> 1. Update contracts to acquire the index from R4 of Output #2.
> 2. Please push the new contracts into the `deviation-check` branch in `smart-contracts/v0.2` folder.
> 3. Launch a new test oracle pool for us to test out deviation checking. (Lets try 5% deviation range, and 2 boxes minimum consensus)
@Robert K 
1. done. 
2. there is some issue with the project structure hence conflict (see below). So I pushed to `deviation-check-sorted` branch. Please merge if possible
3.  to do (have uploaded bootstrap jar in v0.2, which I'll be using to bootstrap). Please check the `application.conf` for v0.2 before I bootstrap


[09/19/2020 6:45 PM] scalahub#2618
Issue with project structure is `application.conf` needs to be in project root folder. (where the `src` is located).
Also each version has different jar so `jar` must must be in individual folders (`v0.1`, etc).


[09/19/2020 6:47 PM] scalahub#2618
For #3, I'll be using the same tokens as before. Details are here
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala#L42-L48

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/19/2020 6:48 PM] scalahub#2618
token ids here
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala#L15-L16

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/19/2020 6:48 PM] scalahub#2618
So you can set the config in oracle core and I'll bootstrap once the scans are added

{Reactions}
üëç (2) 

[09/21/2020 9:06 AM] Robert K#0722
Alright, I'll checkout the new branch in a little bit and try and get everything merged.


[09/21/2020 9:09 AM] Robert K#0722
I'll update the config file in the repo too for the erg-usd pool/setup script too.

{Reactions}
üëç (2) 

[09/21/2020 11:42 AM] Robert K#0722
@scalahub How did the workshop go by the way?


[09/21/2020 11:43 AM] Robert K#0722
Might be a good idea for the Ergo twitter to tweet out that Amitabh presented the paper at the workshop to get more of an academic feel for people.


[09/21/2020 12:02 PM] kushti#0978
Yes, and then again when video is out )


[09/21/2020 12:28 PM] Robert K#0722
@scalahub Why are all the parameters different for this pool?


[09/21/2020 12:28 PM] Robert K#0722
Your buffer went from 5 to 4.


[09/21/2020 12:31 PM] Robert K#0722
oracleReward decreased


[09/21/2020 12:31 PM] Robert K#0722
And can you tell me what the value is of `minPoolBoxValue` so I don't have to manually open a calculator and do the calculation myself since it's not precalculated now.


[09/21/2020 12:52 PM] scalahub#2618
It's the test parameters I guess. I have not changed them .. we used these for testing older pool


[09/21/2020 12:52 PM] scalahub#2618
If you are referring to kiosk code


[09/21/2020 12:55 PM] scalahub#2618
Also `minPoolBoxValue` is also here
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala#L48

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Reactions}
üëç (2) 

[09/21/2020 12:57 PM] scalahub#2618
Workshop was good. For my talk, I would have liked longer time (20 or more instead of 15)

{Reactions}
üëç (2) 

[09/21/2020 12:57 PM] scalahub#2618
other talks were quite interesting too


[09/21/2020 1:04 PM] scalahub#2618
One of them is about new type 1 non-outsourcable puzzles (using VRF instead of signatures) @kushti I pointed that they can be "broken" using smart contracts.. seems author was not aware of our work

{Reactions}
ü§î (2) 

[09/21/2020 1:05 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/757573275638562916/06.pdf


[09/21/2020 1:08 PM] scalahub#2618
Also got some good feedback on improving the readibility of paper.

{Reactions}
‚ù§Ô∏è 

[09/21/2020 1:09 PM] scalahub#2618
Let me know what parameters to use for test as addresses will change.. @Robert K (if the current params are not ideal)


[09/21/2020 1:19 PM] Robert K#0722
It's fine, we can keep the current parameters.


[09/21/2020 1:19 PM] Robert K#0722
Just they're different than what we launched the public pools with and it would have probably made us confused if I didn't notice


[09/21/2020 1:20 PM] scalahub#2618
no issues.. I'll bootstrap with the same addresses


[09/21/2020 1:21 PM] scalahub#2618
(and same oracle public keys that you gave)


[09/21/2020 1:22 PM] Robert K#0722
Alright, I've used all of the same parameters/addresses as you put in that file


[09/21/2020 1:22 PM] Robert K#0722
It's also in the latest commit in the `deviation-check` branch


[09/21/2020 1:23 PM] Robert K#0722
So you can just run the prepare script in the `erg-usd` script folder


[09/21/2020 1:23 PM] Robert K#0722
And edit your oracle address in


[09/21/2020 1:26 PM] Robert K#0722
That's cool to see others doing research into non-outsourcable puzzles too, but yeah will be interesting if a solution is ever possible for smart-contract enables blockchains.


[09/21/2020 3:41 PM] kushti#0978
> One of them is about new type 1 non-outsourcable puzzles (using VRF instead of signatures) @kushti I pointed that they can be "broken" using smart contracts.. seems author was not aware of our work
@scalahub good to spread the knowledge around )


[09/22/2020 8:37 AM] scalahub#2618
shall I bootstrap the new oracle pool with test params?


[09/22/2020 9:08 AM] Robert K#0722
Yes, sounds good.


[09/22/2020 11:57 AM] kushti#0978
Btw some guys are asking me about launching an oracle pool with some electricity production data (from a solar grid).


[09/22/2020 11:58 AM] kushti#0978
And BTC / USD  (BTC/ERG) oracle would be useful also?


[09/22/2020 12:02 PM] Robert K#0722
Oh wow that's super cool. As in they want to launch an oracle pool, or they want us to launch one for electricity production data?


[09/22/2020 12:02 PM] Robert K#0722
BTC oracles would be great to have as well.


[09/22/2020 12:04 PM] Robert K#0722
For any new pools I'd recommend waiting until we release this new update with deviation checking though, as it'll add a lot better assurance that no one goes rogue.


[09/22/2020 1:15 PM] kushti#0978
Makes sense to wait a bit


[09/22/2020 1:16 PM] kushti#0978
A guy is willing to launch a pool


[09/22/2020 1:19 PM] Robert K#0722
Ah cool. It can still be worth experimenting with the current release in master branch if he wants to get use to the tech.


[09/22/2020 1:20 PM] Robert K#0722
When we launch the update it'll be approx. 5% different (couple new parameters) for the oracle operators but more secure, and so it'll be effectively the same experience, just they'll need to launch a new pool.


[09/22/2020 1:20 PM] Robert K#0722
So I'd recommend experimenting right now, but if he wants to launch a pool/seriously use it, wait at least until the next update.


[09/22/2020 1:28 PM] kushti#0978
Makes sense, thanks!


[09/22/2020 1:29 PM] kushti#0978
Will we have a call @ 3 PM UTC today ?


[09/22/2020 1:47 PM] Robert K#0722
I believe it's at 2PM UTC? But yes.


[09/22/2020 1:47 PM] Robert K#0722
In 1 hour 15 minutes.


[09/22/2020 2:16 PM] kushti#0978
ok


[09/22/2020 2:44 PM] scalahub#2618
I'll do the bootstrap after our call.


[09/22/2020 4:12 PM] scalahub#2618
> So you can just run the prepare script in the `erg-usd` script folder
@Robert K Do you mean this folder? `oracle-core/scripts/erg-usd-oracle`


[09/22/2020 4:14 PM] kushti#0978
https://www.ergoforum.org/t/auctions-on-ergo/122

{Embed}
https://www.ergoforum.org/t/auctions-on-ergo/122
Auctions On Ergo
I was speaking with @kushti and he mentioned the idea that auctions are a potentially valuable unsolved problem in a UTXO system with a contract language like ErgoScript. I think I‚Äôve come up with a pretty basic setup and thought it‚Äôd be good to give it some more form in a pos...


[09/22/2020 4:36 PM] scalahub#2618
@Robert K I'm going to bootstrap oracle with dummy data point


[09/22/2020 4:55 PM] Robert K#0722
Cool, it seems to have been found


[09/22/2020 4:55 PM] Robert K#0722
> @Robert K Do you mean this folder? `oracle-core/scripts/erg-usd-oracle`
@scalahub Yes


[09/22/2020 4:56 PM] Robert K#0722
@kushti @scalahub I expanded on the novel stablecoin idea in the slack channel.

{Reactions}
üëç (2) 

[09/22/2020 5:32 PM] Robert K#0722
I funded the pool and the epoch started

{Reactions}
üëç 

[09/22/2020 7:44 PM] scalahub#2618
@Robert K @kushti I'm getting an error in collect (new deviation check instance). Please see


[09/22/2020 7:44 PM] scalahub#2618
error

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/758036095735955507/message.txt


[09/22/2020 7:47 PM] scalahub#2618
Not sure if its the smart contract or the off chain bit ...I did basic unit tests and it seems to pass. Here is the collect example. Can you match your offchain code with this? 
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala#L191-L233

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 9:02 AM] Robert K#0722
I'm getting a collect error as well


[09/23/2020 9:02 AM] Robert K#0722
Did your oracle post a datapoint in the current epoch?


[09/23/2020 9:03 AM] Robert K#0722
Mine did:

`Oracle Datapoint State
--------------------
Your Latest Datapoint: 1763848859
Datapoint Origin Epoch ID: ac5f41e6c453d7e72646a0ea709813ff0c9996c4af1f6818e13c2cd20d11076e
Submitted At: 323441
`


[09/23/2020 9:03 AM] Robert K#0722
Can you copy/paste your oracle datapoint state from your oracle core like I did above @scalahub ?


[09/23/2020 9:03 AM] Robert K#0722
I want to see if we're within 5% of each other (which I believe is the deviation range) and if that's casuing the issue


[09/23/2020 9:14 AM] scalahub#2618
```Your Latest Datapoint: 1760619174
Datapoint Origin Epoch ID: ac5f41e6c453d7e72646a0ea709813ff0c9996c4af1f6818e13c2cd20d11076e
Submitted At: 323468
```


[09/23/2020 9:17 AM] scalahub#2618
maybe the sort order is reversed?


[09/23/2020 9:33 AM] Robert K#0722
Hmm, that is possible, let me check


[09/23/2020 9:44 AM] Robert K#0722
Will look into it in ~30 min, a few things came up.


[09/23/2020 10:33 AM] Robert K#0722
@scalahub You were right, the sort order was wrong.


[09/23/2020 10:33 AM] Robert K#0722
However it still fails to collect.


[09/23/2020 10:34 AM] Robert K#0722
Will push the fixed sort order shortly


[09/23/2020 10:36 AM] Robert K#0722
This is the json of the failed tx request:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/758260462356791296/message.txt


[09/23/2020 10:49 AM] Robert K#0722
Hmm.


[09/23/2020 11:24 AM] Robert K#0722
@scalahub Does the data-input index start at 0 or 1?


[09/23/2020 11:29 AM] Robert K#0722
Hmm, I tried both and didn't change anything. I have it currently set to be 0 indexed.


[09/23/2020 11:31 AM] Robert K#0722
I presume you compiled all of the contracts properly, and the current addresses in https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala are all correct?

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolDemo.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 12:51 PM] Robert K#0722
@scalahub I think your fold function breaks because the collector reward box is Input #1


[09/23/2020 12:52 PM] Robert K#0722
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala#L69-L80

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 12:53 PM] Robert K#0722
Because what's happening currently is that my oracle core posted a higher datapoint than yours by like 0.01%


[09/23/2020 12:54 PM] Robert K#0722
So the outputs are ordered as such based on what we agreed on for the logic beforehand:

0. Epoch Prep Box
1. Collector payout
2. Oracle Payout (my oracle)
3. Oracle Payout (your oracle)


[09/23/2020 12:56 PM] Robert K#0722
But your fold starts by at output 1,  which is the collector box payout


[09/23/2020 12:57 PM] Robert K#0722
And since you are folding the data-input boxes, when it gets to the second data input (your datapoint box), its going to be checking Output #2


[09/23/2020 12:58 PM] Robert K#0722
And since that is my oracle payout box (because I had a higher datapoint so I'm first), it checks that the address held in your datapoint box R4 is equal the address of my oracle payout (which its not, which causes a script fail).


[09/23/2020 1:04 PM] Robert K#0722
So the fold you wrote initially is broken with the latest update of making output #1 the Collector Payout (with the index in R4), and I think that means the currently deployed test oracle pool is hard locked and unrecoverable.


[09/23/2020 1:07 PM] Robert K#0722
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala#L69-L72

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 1:11 PM] Robert K#0722
The fold is written a bit counter intuitively but if I got this right I think we should be able to fix the contract if:

1. In line 69 we change the accumulator default from `(1, true)` to `(2, true)`
2. Line 62 change ` getPrevOracleDataPoint(t._1 - 1)` to ` getPrevOracleDataPoint(t._1 - 2)`


[09/23/2020 1:12 PM] Robert K#0722
Oh and I guess:

3. Line 82 change
`getPrevOracleDataPoint(rewardAndDeviationCheck._1 - 1)` to 

`getPrevOracleDataPoint(rewardAndDeviationCheck._1 - 2)`


[09/23/2020 1:16 PM] Robert K#0722
Actually, line 82 looks like it was broken in the original code as you're getting the 2nd last datapoint rather than the last datapoint, right? So `- 1` should be right in the new code. This is actually really confusing to use `getPrevOracleDataPoint` in line 82 for defining `lastDataPoint`.


[09/23/2020 1:28 PM] scalahub#2618
no the logic is that the collectort payout is also the oracle payout


[09/23/2020 1:28 PM] scalahub#2618
and its twice that much


[09/23/2020 1:29 PM] Robert K#0722
Here's a file with the edits above made

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/758304150269722625/FixedEpochPool.scala


[09/23/2020 1:30 PM] scalahub#2618
The check is `OUTPUTS(t._1).value >= $oracleReward &&`


[09/23/2020 1:30 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala#L76

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 1:31 PM] Robert K#0722
Yes, but your logic fails because we have the collector + first oracle datapoint being the same person


[09/23/2020 1:31 PM] scalahub#2618
and then in my mock tests, I'm adding twice the value
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala#L217

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 1:31 PM] scalahub#2618
its not the first data point anymore


[09/23/2020 1:31 PM] scalahub#2618
its the one defined by index


[09/23/2020 1:32 PM] scalahub#2618
here is where I set the index https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala#L221

{Embed}
https://github.com/scalahub/Kiosk/blob/393a6d66bafae7904744cc34a08a8243f954b1b4/src/test/scala/kiosk/oraclepool/v4/FixedEpochPoolSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[09/23/2020 1:33 PM] Robert K#0722
So does your zip include the same address in the first 2 reward outputs?


[09/23/2020 1:33 PM] Robert K#0722
Because the problem is not the index in the R4, it's the index you start your fold on and in which Output number we put the colletor box


[09/23/2020 1:34 PM] Robert K#0722
Because your logic seems to work if the first (highest) datapoint is not the same as the collector from what i can tell, but breaks if they are the same.


[09/23/2020 1:39 PM] scalahub#2618
no all addresses are different. The outputs should be:
1. Epoch prep box
2. oracle0 payout with R4 containing 1 (i.e., the 2nd datapoint + the 2nd reward box corresponds to spender)
3.. oracle1 payout + reward
4. oracle2.payout


[09/23/2020 1:39 PM] scalahub#2618
(assuming that 2nd data point box after sorting is spender)


[09/23/2020 1:40 PM] Robert K#0722
What does payout + reward mean?


[09/23/2020 1:41 PM] scalahub#2618
payout is normal per oracle and reward is collection reward (currently equal to payout), so its simply twice the payout


[09/23/2020 1:41 PM] Robert K#0722
Did you combine the reward into a single payout, rather than having it be separate boxes?


[09/23/2020 1:41 PM] scalahub#2618
yes


[09/23/2020 1:41 PM] Robert K#0722
Why?


[09/23/2020 1:41 PM] Robert K#0722
I mean it's good, but you can't just change logic without telling me.


[09/23/2020 1:41 PM] scalahub#2618
its been the same


[09/23/2020 1:42 PM] scalahub#2618
the smart contract didn't explitly test it


[09/23/2020 1:42 PM] scalahub#2618
because we assumed the first oracle is the spender


[09/23/2020 1:42 PM] scalahub#2618
now with sorting it is more explicit


[09/23/2020 1:42 PM] scalahub#2618
we just test this ---> `OUTPUTS(t._1).value >= $oracleReward`


[09/23/2020 1:43 PM] scalahub#2618
but the spender should actually make it twice when its his payout


[09/23/2020 1:43 PM] Robert K#0722
The spec + oracle core state that theres a new output generated for the collector, so if you make changes like this that add new logic could you please tell me?


[09/23/2020 1:43 PM] Robert K#0722
I just spent hours debugging üòÖ


[09/23/2020 1:43 PM] scalahub#2618
ok but like I said, I didn't make the change.. its was just never checked if the spec is matching üôÇ


[09/23/2020 1:44 PM] Robert K#0722
Right, but I would hope since you're writing the contracts you could kind of take some time to do that.


[09/23/2020 1:44 PM] Robert K#0722
Anyways.


[09/23/2020 1:45 PM] Robert K#0722
So I need to double the reward payout for the collector.


[09/23/2020 1:45 PM] Robert K#0722
And add the R4 to the first oracle payout box.


[09/23/2020 1:47 PM] scalahub#2618
so the earlier contract was more flexible.. it accommodated both options (combined payout or separate out). the check simply was (1) that total deducted must be <= (numOracles + 1) * reward and  (2) Each payout was >= reward


[09/23/2020 1:48 PM] scalahub#2618
now the rules are little strictr so you can add the collector payout as the last one not the first


[09/23/2020 1:49 PM] scalahub#2618
so no need to double you can add collection as the last one


[09/23/2020 1:50 PM] Robert K#0722
Alright, but I still need to put R4 in the first reward box?


[09/23/2020 1:50 PM] scalahub#2618
yes


[09/23/2020 1:50 PM] scalahub#2618
and better if you dont add separate payout though, as less dust


[09/23/2020 1:51 PM] scalahub#2618
also I had to change the screen names in the batch file because it was clashing with the running erg usd oracle


[09/23/2020 1:51 PM] Robert K#0722
Shouldn't be too hard to double.


[09/23/2020 1:52 PM] Robert K#0722
Ah yeah, you will need to do that if you run more than 1.


[09/23/2020 1:54 PM] kushti#0978
@Robert K thanks, will visit Slack after the devs chat


[09/23/2020 2:00 PM] scalahub#2618
ok so will wait for the changes to offchain


[09/23/2020 3:55 PM] Robert K#0722
@scalahub https://explorer.ergoplatform.com/en/transactions/29686d05f0251b83e502db9c99407952edc6237f952eccad1bf40a965dc3d375


[09/23/2020 3:55 PM] Robert K#0722
Glad to know it was a simple fix


[09/23/2020 3:57 PM] Robert K#0722
I just pushed the update to the github repo, so you should be able to pull, recompile, and everything *should* work


[09/23/2020 5:04 PM] scalahub#2618
Thanks. Sorry that you had to waste some time :) but I guess this shows why we need better error message of why script reduced to false


[09/23/2020 5:34 PM] Robert K#0722
At least it works which is good üëç


[09/23/2020 5:34 PM] Robert K#0722
Yeah, better error messages is going to be vital as we begin to onboard more developers over time.


[09/24/2020 9:06 AM] Robert K#0722
@scalahub Hey, let me know when you're on so we can try and test some edge cases together for the oracle pool + move forward on the informal spec.


[09/24/2020 10:02 AM] scalahub#2618
Sure. Would be there in 30 mins


[09/24/2020 10:36 AM] scalahub#2618
im around


[09/24/2020 10:36 AM] scalahub#2618
@Robert K


[09/24/2020 10:41 AM] Robert K#0722
Cool, I am as well.


[09/24/2020 10:41 AM] Robert K#0722
@scalahub Do you have the latest oracle core commit running?


[09/24/2020 10:41 AM] Robert K#0722
I did not post a datapoint in this epoch on purpose, and you should be hitting collection error


[09/24/2020 10:48 AM] scalahub#2618
checking


[09/24/2020 10:48 AM] scalahub#2618
using the commit `Fixed collect logic to match smart contracts`


[09/24/2020 10:49 AM] scalahub#2618
getting an error ```--------------------------------------------------
Failed To Issue `Collect Datapoints` Transaction.
Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(Gxd4hMRT5aE7dxAoMpvcP1G5cnu2snDfDoToVhtMzx1vUHmQtsMPMauXZ38p2j3hDmdAuGqu1uA94ULrFPGnhKvfKLuvDjsxHyoXXJJQzxQHGJSMUjvGmhGJNThMd7FoXsZqqN1vN2Vf4tXhekZfrHhYtr8GbFPL8drdgD4QftfSFWqxTsmBskxKBxcytmaLSQjQzcPEs5xUbjR1r4Ym5KoUUQKKYKNLFZMVLzzm2yqcmW6YwXGA7NEjZ41Fz9eG6Q7bJxxhXrZXshXpfXbWf6i1fRssNgJfuBLYa43Px8HXfc3CvvQcXAtixLYqHcKfeSiZVt2exXM97LPcSeNHhzEj242aVbcsp
L4GJUvVmGFGoqfZcYD39YQv8sVVrehGpsAqmSjQnerkG7,155500000,List(([B@24e595e4,1)),Map(R4 -> LongConstant(1689337576), R5 -> IntConstant(324543))), PaymentRequest(9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo,4000000,List(),Map(R4 -> IntConstant(0))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1000000,List(),Map())). Failed to sign boxes due to Script reduced to false: ```


[09/24/2020 10:50 AM] scalahub#2618
ok so I guess you'll fix this to not actually collect


[09/24/2020 10:51 AM] Robert K#0722
Okay good.


[09/24/2020 10:51 AM] Robert K#0722
I'll now post a datapoint that is very far off and see if it fails to collect as well.


[09/24/2020 10:52 AM] Robert K#0722
And yeah, I'll be adding checks for collect fails shortly.


[09/24/2020 10:53 AM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/131a7a0e7944f964450b4a2660858886e362233d68eea1c08d64e50b6e5ebd33


[09/24/2020 10:53 AM] Robert K#0722
I submit a datapoint of `1010001`

{Reactions}
üëç 

[09/24/2020 11:01 AM] scalahub#2618
1 confirmation and not able to submit..(failing with same error)
```Failed To Issue `Collect Datapoints` Transaction.
Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(Gxd4hMRT5aE7dxAoMpvcP1G5cnu2snDfDoToVhtMzx1vUHmQtsMPMauXZ38p2j3hDmdAuGqu1uA94ULrFPGnhKvfKLuvDjsxHyoXXJJQzxQHGJSMUjvGmhGJNThMd7FoXsZqqN1vN2Vf4tXhekZfrHhYtr8GbFPL8drdgD4QftfSFWqxTsmBskxKBxcytmaLSQjQzcPEs5xUbjR1r4Ym5KoUUQKKYKNLFZMVLzzm2yqcmW6YwXGA7NEjZ41Fz9eG6Q7bJxxhXrZXshXpfXbWf6i1fRssNgJfuBLYa43Px8HXfc3CvvQcXAtixLYqHcKfeSiZVt2exXM97LPcSeNHhzEj242aVbcspL4GJUvVmGFGoqfZcYD39YQv8sVVrehGpsAqmSjQnerkG7,155500000,List(([B@7076717d,1)),Map(R4 -> LongConstant(1689337576), R5 -> IntConstant(324543))), PaymentRequest(9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo,4000000,List(),Map(R4 -> IntConstant(0))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1000000,List(),Map())). Failed to sign boxes due to Script reduced to false:```


[09/24/2020 11:02 AM] scalahub#2618
can you post a higher data point? I want to see if the `IntConstant(0)` changes to `IntConstant(1)`


[09/24/2020 11:05 AM] Robert K#0722
Sure, will do


[09/24/2020 11:05 AM] Robert K#0722
I just posted `999753038664`


[09/24/2020 11:06 AM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/25084a2c0b2af13837b91289c6c1a3bc9a3f539124f4ea9c2fc0dc0246f4fef6


[09/24/2020 11:12 AM] Robert K#0722
Okay it confirmed


[09/24/2020 11:14 AM] scalahub#2618
```Failed To Issue `Collect Datapoints` Transaction.
Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(Gxd4hMRT5aE7dxAoMpvcP1G5cnu2snDfDoToVhtMzx1vUHmQtsMPMauXZ38p2j3hDmdAuGqu1uA94ULrFPGnhKvfKLuvDjsxHyoXXJJQzxQHGJSMUjvGmhGJNThMd7FoXsZqqN1vN2Vf4tXhekZfrHhYtr8GbFPL8drdgD4QftfSFWqxTsmBskxKBxcytmaLSQjQzcPEs5xUbjR1r4Ym5KoUUQKKYKNLFZMVLzzm2yqcmW6YwXGA7NEjZ41Fz9eG6Q7bJxxhXrZXshXpfXbWf6i1fRssNgJfuBLYa43Px8HXfc3CvvQcXAtixLYqHcKfeSiZVt2exXM97LPcSeNHhzEj242aVbcspL4GJUvVmGFGoqfZcYD39YQv8sVVrehGpsAqmSjQnerkG7,155500000,List(([B@1eebc821,1)),Map(R4 -> LongConstant(1689337576), R5 -> IntConstant(324543))), PaymentRequest(9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo,4000000,List(),Map(R4 -> IntConstant(0))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1000000,List(),Map())). Failed to sign boxes due to Script reduced to false: ```


[09/24/2020 11:14 AM] scalahub#2618
Is this wrong?


[09/24/2020 11:15 AM] scalahub#2618
I guess its ignoring the other datapoint


[09/24/2020 11:16 AM] scalahub#2618
wait now new error ```Error: Failed to find local oracle Datapoint box for issuing `Collect Datapoints` transactions. The Oracle Core either failed to post a Datapoint in the latest epoch, or the Datapoint is outside of the deviation check.```


[09/24/2020 11:17 AM] scalahub#2618
hmmm so either there is a lot of lag or the deviation check did not work earlier?


[09/24/2020 11:18 AM] Robert K#0722
No, it's just because of the naive logic + error checking


[09/24/2020 11:19 AM] Robert K#0722
If your datapoint is highest, then it pops the other person's datapoint and tries to submit your alone


[09/24/2020 11:19 AM] scalahub#2618
ok makes sense


[09/24/2020 11:19 AM] Robert K#0722
If you're the lowest, it pops you off first, and then sees you've been popped off and can't collect and posts that error.


[09/24/2020 11:21 AM] scalahub#2618
got it


[09/24/2020 11:22 AM] Robert K#0722
I'm writing the reposting logic right now, so we can probably just leave the pool in its current state.


[09/24/2020 11:22 AM] Robert K#0722
Once I update the repo, we can both test the reposting logic and see if they fix themselves from this state.

{Reactions}
üëç 

[09/24/2020 11:24 AM] Robert K#0722
In the mean time you can take a look at the informal spec for the stablecoin if you have time: https://github.com/Emurgo/stablecoin-project-design/blob/utxo-spec/utxo-spec/stablecoin-spec.md

{Reactions}
‚ù§Ô∏è 

[09/24/2020 11:25 AM] scalahub#2618
yes doing


[09/24/2020 11:25 AM] Robert K#0722
It's pretty barebones as it is, and likely if we have only 1 mint/redeem function then we literally cut out half of the spec


[09/24/2020 11:25 AM] Robert K#0722
Effectively we'll just have:
1. Bootstrap
2. Mint/Redeem


[09/24/2020 11:25 AM] scalahub#2618
yes single method for mint/redeem for both coins is the best approach


[09/24/2020 11:26 AM] scalahub#2618
allowing negative values


[09/24/2020 12:38 PM] Robert K#0722
Okay, I have implemented datapoint reposting, but will test it for a little on my end first

{Reactions}
üëçüèª 

[09/24/2020 12:39 PM] Robert K#0722
I also implemented better Errors for when collection fails, so we can do more fine tuned error checking and make the oracle core act more intelligently in the near future


[09/24/2020 12:41 PM] Robert K#0722
Hmm, I guess I can do a simple improvement right now and limit datapoint reposting to be once every 5 blocks for example.


[09/24/2020 1:54 PM] Robert K#0722
@scalahub Alright, I believe that the latest commit should be good to go for datapoint reposting


[09/24/2020 2:53 PM] Robert K#0722
And any progress on the stablecoin today @scalahub ?


[09/24/2020 6:12 PM] kushti#0978
@Robert K checked stablecoin spec draft. Looks like the contract is pretty simple at this point.


[09/24/2020 7:09 PM] Robert K#0722
Yeah, very simple in fact. Shouldn't take much more than a week or two for the first version.

{Reactions}
üëçüèª 

[09/24/2020 8:21 PM] kushti#0978
@Robert K then UI is the main issue ?


[09/24/2020 11:40 PM] scalahub#2618
> And any progress on the stablecoin today @scalahub ?
@Robert K working on the high level design for the spec. Will share my design today (by evening my time)

{Reactions}
üëç 

[09/25/2020 8:20 AM] Robert K#0722
@kushti UI + getting UTXOs to users will likely be the more challenging parts.

{Reactions}
‚ù§Ô∏è 

[09/25/2020 8:21 AM] Robert K#0722
That's why we'll need explorer-backend to support detailed queries so we can easily just provide users the UTXOs from our database when using the dApp in Yoroi.


[09/25/2020 8:21 AM] Robert K#0722
But in regards to complexity, when we add staking/governance then things are going to get considerably more complicated.


[09/25/2020 9:17 AM] Robert K#0722
@scalahub Sounds great. Do you mean a high level design in scala code as you mentioned prior?


[09/25/2020 9:18 AM] scalahub#2618
No Scala code yet.. just the spec :)


[09/25/2020 9:21 AM] Robert K#0722
Ah great üëç


[09/25/2020 9:29 AM] scalahub#2618
The scala code in Slack seems good enough. so we could directly work on contracts and the spec


[09/25/2020 9:58 AM] Robert K#0722
Makes sense.


[09/25/2020 9:58 AM] Robert K#0722
By the way I just implemented better deviation checking in the oracle core in the latest commit.


[09/25/2020 9:59 AM] Robert K#0722
So now it checks whether the local deviation of the highest datapoint or the lowest datapoint is greater in absolute value, and removes the one that deviates further.


[09/25/2020 10:00 AM] Robert K#0722
We'd need at least 3 oracles running to test this properly however.


[09/25/2020 10:00 AM] Robert K#0722
But if it's working properly, then I think the oracle core has all the essential logic at this point for deviation checking to run smoothly.


[09/25/2020 10:56 AM] kushti#0978
> @kushti UI + getting UTXOs to users will likely be the more challenging parts.
@Robert K yes. I have some related thoughts, will express today on the forum

{Reactions}
üëç 

[09/25/2020 1:52 PM] scalahub#2618
Do we need to cap initial supply of stablecoin? Can we allow unlimited minting as long as there is collateral?


[09/25/2020 1:53 PM] scalahub#2618
so instead of initial supply, we will store much more tokens and instead store the current cicrulation in register


[09/25/2020 1:55 PM] Robert K#0722
I was thinking we do the reverse, mint X amount of tokens, then store this amount X hardcoded in the contract, and we can check how many have been minted by:
```
[amount X] - [current # of tokens still in the UTXO]
```


[09/25/2020 1:55 PM] Robert K#0722
And off-chain/anywhere else people can know we set amount X to maximum number of tokens possible to mint.


[09/25/2020 1:56 PM] Robert K#0722
I'm thinking about keeping registers as empty as possible so we can have it stay clean for when we need to add adjustable parameters with governance.


[09/25/2020 1:59 PM] Robert K#0722
Ah, and yeah I presume we allow unlimited minting as long as sufficient collateral exists.


[09/25/2020 2:04 PM] scalahub#2618
hmm so what I was saying is more or less the same thing except that in circulation we look at R4 and keep infinite supply in tokens


[09/25/2020 2:05 PM] scalahub#2618
we can get the same thing by keeping X very large


[09/25/2020 2:06 PM] scalahub#2618
but I'm ok either way


[09/25/2020 2:06 PM] scalahub#2618
Also I was thinking we could store the oracle pool NFT in R4


[09/25/2020 2:06 PM] scalahub#2618
so we can update it later on


[09/25/2020 2:06 PM] Robert K#0722
What do you mean by infinite supply?


[09/25/2020 2:06 PM] Robert K#0722
Aren't we hard capped?


[09/25/2020 2:07 PM] scalahub#2618
yes thats the question though, that does the foruma need hard cap?


[09/25/2020 2:07 PM] Robert K#0722
I believe no. But I meant hardcapped by our ability to first create the tokens on the blockchain which represent the stablecoin


[09/25/2020 2:08 PM] Robert K#0722
There is no way to have an infinite supply of a token on Ergo from my understanding.


[09/25/2020 2:08 PM] scalahub#2618
yes but thats Long.MaxValue, which is quite high


[09/25/2020 2:08 PM] scalahub#2618
true.. I was thinking that as infinite üôÇ


[09/25/2020 2:08 PM] Robert K#0722
So you're saying "infinite".


[09/25/2020 2:08 PM] Robert K#0722
Ah okay.


[09/25/2020 2:08 PM] scalahub#2618
basically max possible


[09/25/2020 2:08 PM] Robert K#0722
Yeah.


[09/25/2020 2:08 PM] Robert K#0722
Would there be a benefit for capping it in the formulas below the max?


[09/25/2020 2:09 PM] scalahub#2618
its just the forumla for calculating the circulation amount


[09/25/2020 2:10 PM] scalahub#2618
and could there be some reason to cap that value? (max circulation)


[09/25/2020 2:11 PM] Robert K#0722
I don't think there is a reason to cap it. As long as there are sufficient reserves then people should be allowed to mint StableCoins


[09/25/2020 2:11 PM] Robert K#0722
Have you updated the repo with what you've been working on btw?


[09/25/2020 2:13 PM] scalahub#2618
not yet.. I'll first share it here for feedback

{Reactions}
üëå 

[09/25/2020 2:16 PM] scalahub#2618
do we even need to keep track of how many in circulation?


[09/25/2020 2:18 PM] Robert K#0722
Yes, the equations rely on number of minted stablecoins/resrevecoins for calculations


[09/25/2020 2:18 PM] scalahub#2618
ah yes I see


[09/25/2020 2:19 PM] Robert K#0722
Ex. for reservecoin holders to redeem their reservecoins, the number of stablecoins are used to calculate the current "outstanding" reserves which need to be dedicated to backing those stablecoins multiplied by the minimum reserve ratio.


[09/25/2020 2:20 PM] Robert K#0722
Ah, and for your idea about keeping oracle pool nft in R4, are you thinking governance should vote on the oracle pool being used?


[09/25/2020 2:21 PM] scalahub#2618
yes and the reason is we may need to update pool contract because of bug etc


[09/25/2020 2:22 PM] Robert K#0722
Hmm, but if we eventually implement updateable contracts it might not matter?


[09/25/2020 2:23 PM] Robert K#0722
I'm imagining we'll have the updatable proxy box consensus rely on voting (initially by a preset number of trusted parties).


[09/25/2020 2:24 PM] Robert K#0722
We could then just update the contract with the new hardcoded nft id.


[09/25/2020 2:24 PM] scalahub#2618
yes but updatable may be a bit tricky for first iteration


[09/25/2020 2:24 PM] Robert K#0722
Nico is adamant about implementing it for our release, so that we can make a 2nd iteration.


[09/25/2020 2:24 PM] Robert K#0722
And update smoothly


[09/25/2020 2:24 PM] scalahub#2618
cool


[09/25/2020 2:25 PM] scalahub#2618
he wants updatable contracts?


[09/25/2020 2:25 PM] Robert K#0722
And later on we can potentialy update the proxy/update box to use the governance token from the protocol to vote for updates too.


[09/25/2020 2:25 PM] Robert K#0722
Yes


[09/25/2020 2:25 PM] scalahub#2618
Im thinking about the edge case when the last token gets minted


[09/25/2020 2:25 PM] Robert K#0722
We'll likely only need to update the main utxo contract I believe, so it shouldn't be super complicated.


[09/25/2020 2:26 PM] scalahub#2618
we would need to store token id too


[09/25/2020 2:26 PM] Robert K#0722
Last token?


[09/25/2020 2:26 PM] scalahub#2618
if you store initial supply tokens and then the last token is minted


[09/25/2020 2:26 PM] scalahub#2618
then where will we get token id from?


[09/25/2020 2:28 PM] Robert K#0722
Ah, so you're saying we just hard code the token ids into the contract rather than referncing them by position?


[09/25/2020 2:28 PM] scalahub#2618
yes


[09/25/2020 2:28 PM] Robert K#0722
Yes I agree.


[09/25/2020 2:28 PM] scalahub#2618
though its going to be mostly redundant


[09/25/2020 2:29 PM] scalahub#2618
except in that edge case


[09/25/2020 2:34 PM] scalahub#2618
a better solution is to just ensure that one token remains for each


[09/25/2020 2:43 PM] Robert K#0722
Is it going to be redundant? Are token positions always preserved?


[09/25/2020 2:44 PM] Robert K#0722
I imagine it could be more of a safety net to ensure that the contracts never allow the reservecoin/stablecoin positioning to somehow get swapped by an edgecase


[09/25/2020 2:44 PM] Robert K#0722
As that would cause some mayhem


[09/25/2020 3:28 PM] scalahub#2618
> Is it going to be redundant? Are token positions always preserved?
@Robert K we can require it in contract to be preserved


[09/25/2020 3:34 PM] Robert K#0722
In regards to computation complexity, would checking that token at index 1 is token ID X (hardcoded in contract) be equivalent to checking preserving between inputs/outputs?


[09/25/2020 3:34 PM] scalahub#2618
computational complexity is same but storage is double


[09/25/2020 3:35 PM] scalahub#2618
anyway let me send the draft and we can discuss on that

{Reactions}
üëç 

[09/25/2020 3:35 PM] Robert K#0722
Ah good point.


[09/25/2020 4:22 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/759072259762552842/Spec.md


[09/25/2020 4:22 PM] scalahub#2618
so here is basic spec. In summary:
1. Only one action to take care of all operations
2. Using result box with R4, R5 to store minted (or redeemed) amount, since we have still some issues with context vars


[09/25/2020 4:24 PM] kushti#0978
@Robert K  https://www.ergoforum.org/t/simple-bonding-curves/397 , a client here need to find boxes associated with given token and script, similar requirements for the stablecoin client ?

{Embed}
https://www.ergoforum.org/t/simple-bonding-curves/397
Simple Bonding Curves
There‚Äôs a cheap way to do bonding curves on Ergo, with most of the load done off-chain.  Assume a project is willing to issue 100 tokens and sell the first one for 100 ergs, second for 200, ‚Ä¶, 100th for 10,000 ergs (to raise 505,000) in total in case of full sale. This is the ...


[09/25/2020 4:32 PM] scalahub#2618
> so here is basic spec. In summary:
> 1. Only one action to take care of all operations
> 2. Using result box with R4, R5 to store minted (or redeemed) amount, since we have still some issues with context vars
@scalahub need to work on the combined formula.. but should not be too different from the Scala code


[09/25/2020 4:35 PM] Robert K#0722
> @Robert K  https://www.ergoforum.org/t/simple-bonding-curves/397 , a client here need to find boxes associated with given token and script, similar requirements for the stablecoin client ?
@kushti Reasonably similar

{Embed}
https://www.ergoforum.org/t/simple-bonding-curves/397
Simple Bonding Curves
There‚Äôs a cheap way to do bonding curves on Ergo, with most of the load done off-chain.  Assume a project is willing to issue 100 tokens and sell the first one for 100 ergs, second for 200, ‚Ä¶, 100th for 10,000 ergs (to raise 505,000) in total in case of full sale. This is the ...


[09/25/2020 4:35 PM] Robert K#0722
For the stablecoin we'll also have a lot to deal with for governance & staking.


[09/25/2020 4:36 PM] Robert K#0722
And finding all of those UTXOs


[09/25/2020 4:36 PM] Robert K#0722
> so here is basic spec. In summary:
> 1. Only one action to take care of all operations
> 2. Using result box with R4, R5 to store minted (or redeemed) amount, since we have still some issues with context vars
@scalahub Looks good from a quick look.


[09/25/2020 4:37 PM] Robert K#0722
I'll dive more deeply into it on Monday and add on, but I'm pretty tired from working long hours these weeks and dealing with a lot of meetings/Plutus stuff too.


[09/25/2020 4:37 PM] Robert K#0722
Could you commit it to the repo?


[09/25/2020 4:38 PM] Robert K#0722
(Also, do we need to put the number of stablecoins/reservecoins in the registers of the `Result` stage? Can't we just look at the contents of the output box and get those same numbers?)


[09/25/2020 4:55 PM] scalahub#2618
Let me try to get the formula sorted in the meantime


[09/25/2020 4:56 PM] scalahub#2618
Not sure if we can check outputs and determine unambiguously.. will look at that too


[09/25/2020 4:58 PM] scalahub#2618
I'll clean up and commit to repo over the weekend.. please take rest..you have been overworking üôÇ


[09/25/2020 4:59 PM] scalahub#2618
@Robert K


[09/25/2020 5:21 PM] Robert K#0722
Thanks @scalahub .


[09/25/2020 5:21 PM] Robert K#0722
Have a great weekend üëã

{Reactions}
üëç 

[09/25/2020 5:21 PM] Robert K#0722
And the Ergo Cast episode will be released on Monday btw if you were wondering. Everything's uploaded/set and scheduled for release.


[09/25/2020 5:27 PM] kushti#0978
Have a great weekend @Robert K @scalahub!

{Reactions}
üëç 

[09/25/2020 5:58 PM] scalahub#2618
> (Also, do we need to put the number of stablecoins/reservecoins in the registers of the `Result` stage? Can't we just look at the contents of the output box and get those same numbers?)
@Robert K hmmm mostly this should be possible .. I'll try to use the box values for getting this info

{Reactions}
üëç 

[09/28/2020 9:38 AM] Robert K#0722
@scalahub Alright, I will be taking a look at the spec you wrote shortly.


[09/28/2020 9:38 AM] Robert K#0722
Did you end up making progress over the weekend as well?


[09/28/2020 9:41 AM] scalahub#2618
yes I made a PR


[09/28/2020 9:42 AM] scalahub#2618
Main updates:
1. Rename "reserves" stage to "bank" as it seems more intuitive and "reserves" can be confused with the "ReserveCoin".
2. Have only single action called "transfer", which is essentially combined redeem and mint into one.
3. Have another stage for now called "receipt" that stores result of transfer and the inputs for transfer in its registers.

Its highly possible that we can just use the input/output bank boxes to get the data for the formula, in which case we can remove the "receipt" stage. However, I've kept it for now.


[09/28/2020 9:42 AM] scalahub#2618
https://github.com/Emurgo/stablecoin-project-design/blob/utxo-spec-single-action/utxo-spec/stablecoin-spec.md


[09/28/2020 9:52 AM] Robert K#0722
Ah cool, "Receipt" makes sense as a name for that stage.


[09/28/2020 9:52 AM] Robert K#0722
Honestly if it makes the logic simpler, the tiny bit of extra data held in the registers is probably fine I'd imagine?


[09/28/2020 9:53 AM] Robert K#0722
I guess it'd also make it easier to analyze the results of any "Transfer" action off-chain.


[09/28/2020 9:54 AM] Robert K#0722
Though, I think maybe changing "Transfer" to the title "Exchange" would make more sense? Since the word transfer has connotations for just sending money to someone.

{Reactions}
üëç (2) 

[09/28/2020 10:05 AM] kushti#0978
@Robert K tomorrow's call will be @ 2PM UTC ?


[09/28/2020 10:09 AM] Robert K#0722
Yes @kushti


[09/28/2020 11:25 AM] Robert K#0722
@scalahub The spec looks great overall.


[09/28/2020 11:25 AM] Robert K#0722
It was a great idea to add a `Terminology` section to the begginning


[09/28/2020 11:26 AM] Robert K#0722
I think we'll extract the roadmap to be outside of all of the specs, so we can have `Spec v0.1`, then `Spec v0.2`, and have the roadmap be outside of each given instance.


[09/28/2020 11:27 AM] Robert K#0722
And if possible, please edit the roadmap in the main repo readme with any changes so we can have it be unified across specs/contracts/off-chain code and so we don't get lost.


[09/28/2020 11:29 AM] Robert K#0722
Also, I quite like the idea of abstracting out governance from the main protocol almost entirely by using a "Governance NFT"


[09/28/2020 11:31 AM] Robert K#0722
Though for now for the simplest v0.1 spec we should remove any governance ideas to keep things cleanly separated.


[09/28/2020 12:04 PM] scalahub#2618
Yes agreed


[09/28/2020 12:15 PM] Robert K#0722
@scalahub `1. Can contain stablecoins, reservecoins, and Ergs in any order (offchain can decide how to store)`


[09/28/2020 12:15 PM] Robert K#0722
For the `Receipt` stage won't this be amigious for the contract?


[09/28/2020 12:16 PM] Robert K#0722
I imagine Ergs in the first token index makes the most sense since they're always required.


[09/28/2020 12:17 PM] Robert K#0722
And then either SC or RC in second index.


[09/28/2020 12:18 PM] Robert K#0722
I guess we'd need to give one priority in the edge case someone mints both stablecoins + reservecoins.


[09/28/2020 12:19 PM] Robert K#0722
So maybe:
0. Ergs
1. StableCoin (or ReserveCoin if no StableCoins)
2. ReserveCoin(If StableCoin in 1)


[09/28/2020 12:27 PM] Robert K#0722
I've updated the spec with a lot of edits, made the above adjustments, and clarified a number of things: https://github.com/Emurgo/stablecoin-project-design/pull/1

{Reactions}
üëç (2) 

[09/28/2020 3:41 PM] Robert K#0722
@scalahub Are you still running your oracle core?


[09/28/2020 3:51 PM] Robert K#0722
And are you going to write the "Exchange Formula" into the spec from Bruno's high level code?


[09/28/2020 3:59 PM] scalahub#2618
Yes I'll do it. Going thru Brunos code.

{Reactions}
üëç 

[09/28/2020 4:00 PM] scalahub#2618
Btw any issues with oracles? All 3 should be running.. need to check the logs. Are you having any issues?


[09/28/2020 4:04 PM] Robert K#0722
Yeah your oracles aren't posting or are getting filtered:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/760154951619444777/unknown.png


[09/28/2020 4:04 PM] Robert K#0722
And if they are not collecting themselves, I'm guessing they're not posting.


[09/28/2020 4:05 PM] scalahub#2618
which oracle? the testing one?


[09/28/2020 4:05 PM] Robert K#0722
Yeah


[09/28/2020 4:05 PM] scalahub#2618
ok


[09/28/2020 4:08 PM] scalahub#2618
seems to be somehing odd
```Your Latest Datapoint: 1452177612
Datapoint Origin Epoch ID: 136df72495c70eb5bdc4df012a622e5791ea2c6f6d268532b685ed118df068af
Submitted At: 325953
========================================================
``` 
this is for live oracle


and for test oracle
```--------------------
Your Latest Datapoint: 1446635776
Datapoint Origin Epoch ID: 52ae1ef30b4582033cecd2f203fe2c43b04d42b6615726cec66fd22932dcc7d0
Submitted At: 326048
========================================================

Failed reading response from node: The server was not able to produce a timely response to your request.
Please try again in a short while!
Triggering a datapoint repost from the Connector.
```


[09/28/2020 4:08 PM] Robert K#0722
Sounds like a problem with the node?


[09/28/2020 4:08 PM] scalahub#2618
the height seems to be to wrong


[09/28/2020 4:08 PM] scalahub#2618
maybe need to restart node


[09/28/2020 4:09 PM] scalahub#2618
just restarted. Lets see. BTW I'm still using `scan-past-0302580d-SNAPSHOT`


[09/28/2020 4:21 PM] scalahub#2618
does it work now?


[09/28/2020 4:46 PM] kushti#0978
@scalahub yes, should work, better update to a stable version though


[09/28/2020 4:57 PM] Robert K#0722
@scalahub Yes it is working now


[09/28/2020 5:04 PM] kushti#0978
@scalahub you can send me logs, but I guess I know a possible reason. will be fixed in 3.3.5


[09/28/2020 5:16 PM] scalahub#2618
thats odd.. no logs.. should it be in same folder as the jar?


[09/28/2020 5:35 PM] kushti#0978
@scalahub only if you launched it from the folder with the jar


[09/28/2020 5:35 PM] kushti#0978
otherwise check for them in the folder you launched the jar from


[09/28/2020 6:25 PM] scalahub#2618
Yes I ran from the same folder as jar but no logs. Quite strange


[09/28/2020 6:37 PM] kushti#0978
yes, how do you run?


[09/28/2020 6:37 PM] kushti#0978
java -jar ergo.jar ?


[09/28/2020 7:08 PM] scalahub#2618
`java -jar ergo-scan-past-0302580d-SNAPSHOT.jar --mainnet -c ergo-min.conf `


[09/28/2020 7:09 PM] scalahub#2618
```ls -a
 .   ..   .ergo  ergo-min.conf   ergo-scan-past-0302580d-SNAPSHOT.jar```


[09/28/2020 7:11 PM] scalahub#2618
```cat ergo-min.conf 
ergo {
    node {
        mining = false
    }
}

scorex {
    restApi {
        apiKeyHash = "...<some_value_here>..."
    }
}```


[09/28/2020 7:12 PM] scalahub#2618
maybe the snapshot had log disabled?


[09/28/2020 7:26 PM] kushti#0978
no, logback settings have been not touched for many months


[09/28/2020 7:27 PM] kushti#0978
idk need to check


[09/28/2020 7:47 PM] scalahub#2618
@Robert K I need to crash for now. Will continue on the PR tomorrow

{Reactions}
üëç 

[09/29/2020 9:16 AM] Robert K#0722
I crashed for the night before you did so no worries üòÅ


[09/29/2020 9:17 AM] Robert K#0722
@scalahub Did your ergo node break again btw?


[09/29/2020 9:17 AM] Robert K#0722
The pool is in a state with only my datapoint again, might need to update your node.


[09/29/2020 9:28 AM] scalahub#2618
hmm yes.. do I need to rescan with 3.3.3  ?


[09/29/2020 9:29 AM] scalahub#2618
@kushti


[09/29/2020 9:30 AM] scalahub#2618
seems to be working without rescan üôÇ


[09/29/2020 9:31 AM] Robert K#0722
Ah nice.


[09/29/2020 9:31 AM] scalahub#2618
but it should work on your side too.. can you check?


[09/29/2020 9:32 AM] Robert K#0722
What do you mean work on my side?


[09/29/2020 9:32 AM] Robert K#0722
Your oracles didn't post a datapoint from what I can see so my core can't collect.


[09/29/2020 9:33 AM] scalahub#2618
oh in that case I will probably need to rescan


[09/29/2020 9:34 AM] Robert K#0722
What state is your oracle posting?


[09/29/2020 9:36 AM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/760419764790099978/Screenshot_from_2020-09-29_14-04-55.png


[09/29/2020 9:36 AM] scalahub#2618
something looks wrong here.. height is too different in the postings and the node panel


[09/29/2020 9:41 AM] Robert K#0722
It looks like your oracle succeeded in posting a new datapoint


[09/29/2020 9:41 AM] Robert K#0722
So things are back on track.


[09/29/2020 9:41 AM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/32f760744809b255728d0a24f29527c1ee6a5c24cc9de1abf98556fcb3ca970c


[09/29/2020 9:42 AM] scalahub#2618
lets see


[09/29/2020 9:42 AM] scalahub#2618
but the other oracles not yet recovered.. I'll wait for 10 mins before restarting them


[09/29/2020 9:42 AM] scalahub#2618
who is running the 3rd oracle? üôÇ


[09/29/2020 9:47 AM] Robert K#0722
I thought you were?


[09/29/2020 9:47 AM] Robert K#0722
You mentioned something about 2 oracles at some point which I was surprised about.


[09/29/2020 9:58 AM] Robert K#0722
Anyways the pool is running which is great.


[09/29/2020 9:58 AM] Robert K#0722
So are you going to add the exchange formula to the spec today?


[09/29/2020 10:00 AM] Robert K#0722
I was thinking I could work on abstracting out some of the off-chain functions from the oracle core which we'll need for the stablecoin cli too.


[09/29/2020 10:00 AM] Robert K#0722
Since the off-chain portion looks like its going to take longer than the on-chain portion once we have the spec complete.


[09/29/2020 10:10 AM] scalahub#2618
I am running two oracles as in ada and erg production


[09/29/2020 10:10 AM] scalahub#2618
And then this one test


[09/29/2020 10:11 AM] scalahub#2618
But there are 3 data points for the test oracle. So maybe kushti is also running?


[09/29/2020 10:12 AM] scalahub#2618
Yes I'll add the formula today and then ill take a little break to prepare for my talk tomorrow on decrypto

{Reactions}
üëç 

[09/29/2020 10:31 AM] kushti#0978
> But there are 3 data points for the test oracle. So maybe kushti is also running?
@scalahub I'm in production pools only


[09/29/2020 1:02 PM] scalahub#2618
oh my bad.. last one was fee. it was also the same amount üòõ


[09/29/2020 1:02 PM] scalahub#2618
sorry for confusion


[09/29/2020 1:44 PM] scalahub#2618
we have a call at 2 UTC right?  @kushti @Robert K


[09/29/2020 1:45 PM] Robert K#0722
Yeah in 1:15h


[09/29/2020 1:46 PM] scalahub#2618
ok..I'll update the PR a bit after the call. BTW, I'll use scala Scala code template and we can later make it consistent


[09/29/2020 1:46 PM] scalahub#2618
(I mean the formula in scala syntax rather than text)


[09/29/2020 1:47 PM] Robert K#0722
That sounds like a good idea. We can change it all to be scala syntax to make it consistent/closer to implementation


[09/29/2020 1:48 PM] scalahub#2618
Btw this seems incorrect
```[Total Minted StableCoins] = [Initial Supply Of StableCoins] - [Number Of Unminted StableCoins In Input #1 (Bank UTXO)]```


[09/29/2020 1:49 PM] scalahub#2618
We should say
```[StableCoins In Circulation] = [Initial Supply Of StableCoins] - [Number Of stored StableCoins In Input #1 (Bank UTXO)]```


[09/29/2020 1:49 PM] scalahub#2618
so redeemed stablecoins will be stored back in registers


[09/29/2020 1:49 PM] scalahub#2618
Unless you call redeeming as some sort of "unminting" üôÇ


[09/29/2020 1:51 PM] Robert K#0722
Isn't redeeming == "unminting"?


[09/29/2020 1:51 PM] Robert K#0722
You put the coins back into the bank box, and you get Ergs


[09/29/2020 1:52 PM] Robert K#0722
reverse of minting


[09/29/2020 1:52 PM] Robert K#0722
Total minted stablecoins == stablecoins in circulation


[09/29/2020 1:53 PM] Robert K#0722
I understand its not a true `mint` on the blockchain level, but it gets confusing for people to think of it otherwise.


[09/29/2020 1:53 PM] Robert K#0722
And so `minting` = withdrawing RC or SC from the bank.


[09/29/2020 1:53 PM] Robert K#0722
`redeeming` = deposting RC or SC into the bank.


[09/29/2020 1:54 PM] Robert K#0722
People are use to minting coins/tokens from smart contracts, and I think using other terminology is just going to make things more complicated for end users, despite the actual implementation details.


[09/29/2020 1:59 PM] scalahub#2618
yes the scala code uses circulation so I'll use that


[09/29/2020 2:01 PM] scalahub#2618
but I guess these terms are interchangable so we can pick one


[09/29/2020 2:02 PM] Robert K#0722
Yeah I think circulation could be good to use as the go-to, but having both be interchangable makes sense.


[09/29/2020 3:32 PM] Robert K#0722
https://github.com/robkorn/ergo-utilities-rust

{Embed}
https://github.com/robkorn/ergo-utilities-rust
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[09/29/2020 4:17 PM] kushti#0978
@Robert K public ? can be promoted ?


[09/29/2020 4:17 PM] kushti#0978
@Robert K what can be done in node which is useful for the stablecoin protocol ?


[09/29/2020 7:30 PM] Robert K#0722
> @Robert K public ? can be promoted ?
@kushti yep it's public and can be promoted.


[09/29/2020 7:31 PM] Robert K#0722
> @Robert K what can be done in node which is useful for the stablecoin protocol ?
@kushti We're going to write a CLI using the node for testing the protocol. Otherwise the node won't be useful for the actual release/end users.


[09/29/2020 9:09 PM] scalahub#2618
I've commited first version of formula to `utxi-spec-single-action`.. however, this is work in progress

{Reactions}
üëç (2) 

[09/29/2020 9:09 PM] scalahub#2618
Hope this is the right branch


[09/30/2020 8:36 AM] Robert K#0722
Nice, will check it out later today.


[09/30/2020 8:37 AM] Robert K#0722
Yeah, that branch is fine. I guess we're just adding onto your PR for now with that branch, and once we get a first draft finished we'll just merge it into `utxo-spec`.


[09/30/2020 10:23 AM] Robert K#0722
I was thinking last night, and we might be able to model `Stage`s as structs in off-chain code according to how they are specified in the informal specs


[09/30/2020 10:24 AM] Robert K#0722
Kind of taking from my original univeral dApp idea and having checks put in place based on a spec effectively.


[09/30/2020 10:26 AM] Robert K#0722
And so we specify the definition of a given `Stage` by specifying allowed values (ex. must hold Ergs between 0.01 - 1.05, must hold token with ID X, must have an i32 Int in R4) and we have a method on a `Stage` which allows for importng a box into the struct, thereby verifying that it maches all of the specified "traits".

{Reactions}
‚ù§Ô∏è 

[09/30/2020 10:29 AM] Robert K#0722
Then we need to figure out some way to allow for developers to easily implement Actions (txs/state transitions) which may use one or more stages as inputs.


[09/30/2020 10:30 AM] Robert K#0722
And if we model off-chain code like this, then how the boxes get "imported" into a stage is effectively abstracted out, and can use UTXO-set scanning, an explorer backend, or whatever other method is available to us.


[09/30/2020 10:34 AM] greenhat#6562
I like the idea of encoding off - chain logic in Rust a lot!

{Reactions}
üíØ (2) 

[09/30/2020 11:05 AM] Robert K#0722
And the cool thing is that if we design it properly to be pure + use sigma-rust for the tx creation we might even be able to get this kind of a framework to be porable and useful in JS/mobile too.


[09/30/2020 11:36 AM] greenhat#6562
My thoughts exactly!


[09/30/2020 1:03 PM] Robert K#0722
Hmm, does this seem like a valid form of attack in UTXO-based protocols?


[09/30/2020 1:04 PM] Robert K#0722
In any protocol where empty registers are not specified to be empty, can't a bad actor fill said registers with a large amount of data to increase the cost to spend the box for the next user?


[09/30/2020 1:04 PM] Robert K#0722
I suppose it's not very economical/doesn't have lasting impact as the next user will likely just empty those registers, but I guess it could have some effects in edge cases.


[09/30/2020 1:14 PM] scalahub#2618
yes we could add a few more instructions to check that registers are empty.. maybe using forall with an if condition


[09/30/2020 1:15 PM] scalahub#2618
good point.. maybe @kushti can comment on the max size of box and max fee, which could be small to neglect this


[09/30/2020 1:17 PM] morphic#4133
serialized size of a box is <= 4 Kbytes


[09/30/2020 2:33 PM] Robert K#0722
Ah, thanks @morphic.


[09/30/2020 5:00 PM] Robert K#0722
Okay, this is actually pretty cool imo. If anyones in a mood to read some Rust I think this idea is starting to take form: https://github.com/robkorn/ergo-utilities-rust/blob/master/src/stage.rs

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/src/stage.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
‚ù§Ô∏è (2) 

[09/30/2020 5:01 PM] Robert K#0722
Effectively the idea is to create validity checkers for your stages so that boxes you use match the specification of what that stage is suppose to be.


[09/30/2020 5:02 PM] Robert K#0722
When you run a box through a validity checker for a given Stage, then that box gets wrapped and on the type level you know that the `ErgoBox` is a valid `StageBox<T>`


[09/30/2020 5:03 PM] Robert K#0722
As such, you can now write functions for all of your protocol "Actions" (txs/state transitions) where both the input types and the output types ca be `StageBox<T>`s


[09/30/2020 5:04 PM] Robert K#0722
Which means that any state transition you write, will be by default validation checked against your `StageChecker` definition (your specification of a given stage in Rust effectively).


[09/30/2020 5:05 PM] Robert K#0722
And as such, even if you have multiple boxes of one stage in your Action, you just write a function that takes a `Vec<StageBox<T>>` as input.


[09/30/2020 5:06 PM] Robert K#0722
Or if you need inputs of different stages, then you write Action functions which take different `StageBox<T>`s as inputs.


[10/01/2020 10:09 AM] kushti#0978
@Robert K sounds like a step towards a long-awaited goal.


[10/01/2020 10:10 AM] kushti#0978
> Okay, this is actually pretty cool imo. If anyones in a mood to read some Rust I think this idea is starting to take form: https://github.com/robkorn/ergo-utilities-rust/blob/master/src/stage.rs
@Robert K getting 404 for the link though


[10/01/2020 10:32 AM] Robert K#0722
Ah yeah sorry, changing up the project structure. Will ping you in a bit when the dust has settled.

{Reactions}
üëçüèª 

[10/01/2020 11:24 AM] greenhat#6562
@Robert K It looks great! I did not find a way to comment on it so I took the liberty and put my suggestion as issue - https://github.com/robkorn/ergo-utilities-rust/issues/1

{Embed}
https://github.com/robkorn/ergo-utilities-rust/issues/1
Extend register and token predicates parameter to receive not one b...
Motivation To be able to check the properties of a particular register/token (e.g. only R6). Avoid the burden of keeping/enforcing the mapping of predicates to registers/tokens. Possible implementa...
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
üëç 

[10/01/2020 11:36 AM] greenhat#6562
@Robert K Also https://github.com/robkorn/ergo-utilities-rust/issues/2 . Although, I'm thinking of the reasons to keep separate predicates for registers, tokens, box value. What do you think of the idea of merging all predicates into one passing the whole box into it.

{Embed}
https://github.com/robkorn/ergo-utilities-rust/issues/2
Introduce a predicate for box.value check ¬∑ Issue #2 ¬∑ robkorn/ergo...
Motivation To allow complex checks that might require registers and/or tokens analysis. Implementation details Ideally, the whole box should be passed to such a predicate.
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/01/2020 11:38 AM] Robert K#0722
Hmm, I guess this is a question of providing structure vs. full customizability/power.


[10/01/2020 11:40 AM] Robert K#0722
Maybe you are right, and we can take the best of both worlds.


[10/01/2020 11:40 AM] Robert K#0722
We can make the struct itself rely on a single predicate which takes a `ErgoBox`.


[10/01/2020 11:41 AM] Robert K#0722
But we implement two methods of creating the `Stage<T>`, one with a fully custom predicate, and one with a more "guided" experience using token/register/value predicates.


[10/01/2020 11:43 AM] Robert K#0722
My main worry for only having a fully custom predicate is that new users will very likely get lost, and so having a more guided experience I think would be helpful.


[10/01/2020 11:53 AM] greenhat#6562
@Robert K I find one predicate approach easier to understand, but I‚Äôve been starting into this stuff way too much time. üôÇ 
Box type has already fairly ‚Äútyped‚Äù structure with regards to how its fields can be accessed. We can improve it further and add examples and show how to check its various properties.


[10/01/2020 11:56 AM] Robert K#0722
Good point. My last inhibition would be how we encode errors with a single predicate which the user defines.


[10/01/2020 11:57 AM] Robert K#0722
It would be good to have the user be forced to specify why the verification failed for debugging/performing logic on.


[10/01/2020 11:58 AM] Robert K#0722
I guess for that we could make the predicate type signature:

```rust
predicate: fn(&ErgoBox) -> Result<(), BoxVerificationError>

```


[10/01/2020 11:58 AM] Robert K#0722
And just add an extra error called `Other` for edge cases or custom errors that the user wants to signify.


[10/01/2020 12:07 PM] Robert K#0722
Thanks for all of this great feedback btw.


[10/01/2020 12:23 PM] greenhat#6562
I‚Äôm happy to help!
Returning Result from predicate looks great!


[10/01/2020 12:49 PM] Robert K#0722
@kushti And anyone else curious, I've made updates based on the above conversion with Dennys and here's the new file: https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/stage.rs

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/stage.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
‚ù§Ô∏è (2) 

[10/01/2020 12:50 PM] Robert K#0722
I've also separated this new stuff into its own project (in same repo) and called it Ergo Protocol Framework (at least for now).

{Reactions}
üëç (3) 

[10/01/2020 12:52 PM] Robert K#0722
Currently I think we have a decent structure for defining `Stage`s, and now I want to think about whether we can add further Traits or Structs to wrap the ideas of `Action`s (state transitions/txs) or a `Protocol` as a whole with actions defined as methods on the `Protocol`.


[10/01/2020 10:55 PM] kushti#0978
@Robert K looks good! need to play with it )


[10/02/2020 7:49 AM] scalahub#2618
@Robert K saw that you pushed some fixed.. Will work on top of that.. 
Currently want to finalize the formulae and test them with some actual values.


[10/02/2020 7:51 AM] scalahub#2618
plan to have the inital version by monday


[10/02/2020 8:13 AM] Robert K#0722
@scalahub It was a super small formatting fix. I didn't get a chance to dive deep into your code/formula.


[10/02/2020 8:13 AM] Robert K#0722
And after taking a look at how large that code was, maybe it would be a good idea to convert all the formulas to a more easily readable format that isn't Scala.


[10/02/2020 8:14 AM] Robert K#0722
And keep things more English-based rather than coding-based.


[10/02/2020 8:30 AM] scalahub#2618
will try to do that but unfortunately if it gets too mathematical, then English will be harder.


[10/02/2020 8:31 AM] scalahub#2618
though I don't expect it to be much more complex than what it currently is.


[10/02/2020 8:39 AM] Robert K#0722
Hmm, fair point. I guess the main problem is just abstracting out as much as possible.


[10/02/2020 8:40 AM] Robert K#0722
We probably can skip being pedantic about how to arrive at certain simple values and just assume they exist for readability sake maybe?


[10/02/2020 8:51 AM] scalahub#2618
yes so the idea is to first get the Scala-like code in the spec + test the formulae in actual Scala code and then rewrite the original to English-like


[10/02/2020 8:52 AM] scalahub#2618
last bit is more or less mechanical so should not take time


[10/02/2020 8:53 AM] scalahub#2618
is Bruno's code finalized?


[10/02/2020 9:04 AM] Robert K#0722
I think it is more-or-less finalized. Feel free to ask him yourself in Slack


[10/05/2020 9:25 AM] Robert K#0722
Hey @scalahub how's progress going/what are plans for this week on your end currently?


[10/05/2020 9:36 AM] scalahub#2618
> Hey @scalahub how's progress going/what are plans for this week on your end currently?
@Robert K unfortunately could not get much done over the weekend.. The plan this week is to get the specs finalized (without governance and fee) by today/tomorrow along with some unit tests for the formulae.. Then planning to pick up the contracts for the bank


[10/05/2020 9:40 AM] Robert K#0722
Sounds good. When you get the spec finalized please ping me and I'll take a look.


[10/05/2020 9:42 AM] Robert K#0722
I'm going to be moving forward on the off chain code and working between implementing the ergo protocol framework and the actual StableCoin offchain logic.

{Reactions}
üëçüèª 

[10/05/2020 10:42 AM] Robert K#0722
@scalahub So it seems in the spec currently we have the majority of equations needed for both the off-chain and on-chain code.


[10/05/2020 10:44 AM] Robert K#0722
Jumping in between Bruno's code (or Dymtro's) and writing rust while also figuring out where each piece of data is suppose to come from seems like more trouble rather than using what you've already done in the Spec.


[10/05/2020 10:45 AM] Robert K#0722
So maybe either in the spec itself, or worst case in a complimentary file on the side we can have a go-to reference like you have right now for all of the equations.


[10/05/2020 10:58 AM] Robert K#0722
@scalahub I think you made an error in your equations.


[10/05/2020 10:58 AM] Robert K#0722
You currently have 
```scala
val baseNeededSC = peggedExchangeRate * 
amountSC ```


[10/05/2020 10:59 AM] Robert K#0722
And you have `val amountSC = OUTPUTS(1).R4[Long].get`


[10/05/2020 10:59 AM] Robert K#0722
Meaning you made the liabilities tied to the `Receipt` box/ the number of stablecoins that the user minted


[10/05/2020 11:00 AM] Robert K#0722
Where liabilities should be based on the current number of stablecoins minted.


[10/05/2020 11:00 AM] Robert K#0722
So using your equations/variables that line should be:

```scala
val baseNeededSC = peggedExchangeRate * stableCoinsInCirculation
```


[10/05/2020 11:11 AM] Robert K#0722
------


[10/05/2020 11:12 AM] Robert K#0722
Your reserveRatio seems to also be defined wrong. You forgot to multiply by the peggedExchangeRate


[10/05/2020 11:12 AM] Robert K#0722
Currently:
```scala
val reserveRatio = reserve / stableCoinsInCirculation
```


[10/05/2020 11:12 AM] Robert K#0722
But that doesn't make sense since reservers are NanoErgs and StableCoins are a different asset.


[10/05/2020 11:13 AM] Robert K#0722
So:
```scala
val reserveRatio = reserve / (stableCoinsInCirculation * peggedExchangeRate)
```


[10/05/2020 11:18 AM] Robert K#0722
------


[10/05/2020 11:20 AM] Robert K#0722
Your liabilities also don't take into account the edge case of `0` stablecoins in circulation

```scala
val liabilitySC = min(reserve, baseNeededSC)
```
which in the current scala specs they have as effectively :

```scala
val liabilitySC = if (sc == 0) peggedExchangeRate else min(reserve, baseNeededSC)
```


[10/05/2020 12:36 PM] scalahub#2618
yes the online spec has an error. Earlier I was using amountSC to refer to user purchased but then I used same for in circulation. I've got some different names now... better to hold reviewing this for another day


[10/05/2020 12:42 PM] Robert K#0722
Ah, well I was intending to use it for reference for writing the equations for the off-chain code


[10/05/2020 12:43 PM] Robert K#0722
I guess I'll just read the scala code myself then.


[10/05/2020 12:59 PM] Robert K#0722
Can you keep me more up to date with your plans in general @scalahub ?

{Reactions}
üëçüèª 

[10/05/2020 1:01 PM] Robert K#0722
The lack of good communication recently made me debug for a couple hours because of how some of the logic changes in the oracle pool scripts that weren't clearly specified, and now a week later I dug through your equations that you already knew were wrong (but you didn't say anything about them).


[10/05/2020 1:01 PM] Robert K#0722
I'd appreciate if you can just say the status of things/say when you do/don't do stuff so I can understand where things are at.


[10/05/2020 1:02 PM] scalahub#2618
yes please refer to scala code as its the source of truth


[10/05/2020 1:03 PM] scalahub#2618
can you also please clarify about lack of communication? I am not clear what you mean


[10/05/2020 1:05 PM] scalahub#2618
I usually don't push half-completed work but have started doing since you also wanted to see what I've been working on


[10/05/2020 1:05 PM] scalahub#2618
> @Robert K unfortunately could not get much done over the weekend.. The plan this week is to get the specs finalized (without governance and fee) by today/tomorrow along with some unit tests for the formulae.. Then planning to pick up the contracts for the bank
@scalahub This implies that the spec was not finalized so where did you get the idea?


[10/05/2020 1:06 PM] kushti#0978
@scalahub @Robert K let's have daily updates maybe ?


[10/05/2020 1:07 PM] scalahub#2618
I usually am giving daily updates (or maybe every alternate day) but should I be expected to work on weekends too?


[10/05/2020 1:08 PM] scalahub#2618
Don't see the idea of expecting updates on a Monday morning


[10/05/2020 1:10 PM] scalahub#2618
and then don't see the logic of getting pissed off if I have not done work over weekend


[10/05/2020 1:11 PM] Robert K#0722
> 
> I usually don't push half-completed work but have started doing since you also wanted to see what I've been working on
Thanks, but can you also provide an update of where things are at with your code?


[10/05/2020 1:12 PM] Robert K#0722
When you say its not "finalized" I figured you need to add a bit more to it, not that a lot of the equations are broken and you knew about it.


[10/05/2020 1:12 PM] Robert K#0722
So what I'm asking is just more clarity when you make changes/progress, so we can be on the same page of where things are at, rather than I have to dive deep into your changes to see what happened.


[10/05/2020 1:14 PM] Robert K#0722
> 
> and then don't see the logic of getting pissed off if I have not done work over weekend
@scalahub The reason I got annoyed is because of this lack of communication and needing to figure out where you are in your expected progress because you are not really saying much other than that you updated something or you made progess, which leads me to make bad assumptions and waste time recently.


[10/05/2020 1:15 PM] Robert K#0722
And I don't expect you to do anything over the weekend but the spec was last updated on Thursday I believe and so I was wondering how things are going/your overall status.


[10/05/2020 1:41 PM] scalahub#2618
And we need to follow more structured approach to know what everyone in is working on.. something like Jira or Monday as that way we don't have to get updates explicitly.


[10/05/2020 1:42 PM] scalahub#2618
I can set it up


[10/05/2020 1:43 PM] scalahub#2618
Because right now sometimes it seems everyone is working on everything :)


[10/05/2020 1:48 PM] scalahub#2618
On Friday I was working on the formula iny local code which is half finished


[10/05/2020 1:50 PM] Robert K#0722
For a cross-organization project I feel it's going to be a bit burdensome for everyone to use yet another project management platform. We have some in Emurgo, IOHK has their own, and adding another is a lot of overhead.


[10/05/2020 1:50 PM] Robert K#0722
> On Friday I was working on the formula iny local code which is half finished
If we can just all post daily updates like this then I think we can keep up to date what everyone is doing.


[10/05/2020 1:50 PM] scalahub#2618
Then you can propose something


[10/05/2020 1:51 PM] Robert K#0722
Though a bit more detailed would be good.


[10/05/2020 1:51 PM] scalahub#2618
But we definitely need something to track tasks and meeting minutes


[10/05/2020 1:52 PM] scalahub#2618
We tried this but there seems to be issue in communication and coordination here


[10/05/2020 1:52 PM] scalahub#2618
The tasks and discussion get mixed up


[10/05/2020 1:53 PM] scalahub#2618
And updates


[10/05/2020 1:59 PM] Robert K#0722
So lets then agree to do a daily update on the Slack channel about what we finished that is relevant to the stablecoin project.


[10/05/2020 1:59 PM] Robert K#0722
Everyone is there, and can see the update.


[10/05/2020 1:59 PM] scalahub#2618
Also if I say I'm working on a task that will be completed by X then maybe doesnt make sense to give daily updates


[10/05/2020 2:00 PM] Robert K#0722
In slack you can also have discussions chains on single posts, which will make it easier for us to ask questions on updates.


[10/05/2020 2:00 PM] scalahub#2618
I mean I can give update that workong on task X


[10/05/2020 2:00 PM] Robert K#0722
Why not? Just say, progress in sub-task X and Y, stuck on sub-task Z.


[10/05/2020 2:01 PM] scalahub#2618
yes slack seems good.. lets start that


[10/05/2020 2:02 PM] scalahub#2618
and can just report task in progress


[10/05/2020 2:09 PM] scalahub#2618
and I'll make it a practice to not push unfinished work.


[10/05/2020 2:13 PM] scalahub#2618
I really prefer Jira though as that way I don't have to justify what I did on day X and day Y


[10/05/2020 2:14 PM] scalahub#2618
since there may be other tasks related to Ergo that are not related to stablecoin and I would like to account for what I did on those days too


[10/05/2020 2:15 PM] scalahub#2618
Im not manually keeping track yet


[10/05/2020 2:16 PM] Robert K#0722
I already have to do multiple reports per day/week internally in Emurgo, so at least on my end I'd prefer not using another software and just stick to text for the stablecoin project.


[10/05/2020 2:17 PM] scalahub#2618
Im suggesting for entire team, not just stablecoin


[10/05/2020 2:17 PM] Robert K#0722
Yep, I'm just saying that even if you do use Jira for the entire team, I'd prefer if we could stick to text as well for this project.


[10/05/2020 2:20 PM] scalahub#2618
done


[10/05/2020 2:23 PM] Robert K#0722
Great üëç


[10/05/2020 3:30 PM] scalahub#2618
@Robert K FYI, here is the current code in my private repo

{Reactions}
üëç 

[10/05/2020 3:30 PM] scalahub#2618
stablecoin exchange

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/762683197472505876/message.txt


[10/05/2020 3:45 PM] scalahub#2618
I guess the issue you found has been resolved? I realized much later that I am using the same symbol for two different things  in the spec üò¶


[10/05/2020 4:00 PM] Robert K#0722
Ah sorry, I haven't been able to take a deep look yet. Dealing with Plutus stuff right now too.


[10/05/2020 4:01 PM] scalahub#2618
no issues. I'm going to add this to the emurgo repo in the `utxo-spec-single-action` branch.. Still looking at the validation method in Bruno's Scala code.. maybe its better to continue discussion in Slack ?


[10/05/2020 4:05 PM] Robert K#0722
Sounds good


[10/05/2020 5:19 PM] kushti#0978
@Robert K @scalahub can we move tomorrow's call to 3 or 4 PM UTC ?


[10/05/2020 5:19 PM] kushti#0978
Will have a meeting @ 2 PM UTC


[10/05/2020 5:30 PM] scalahub#2618
I'm fine with both times suggested


[10/05/2020 10:05 PM] kushti#0978
https://www.ergoforum.org/t/a-simplest-stablecoin/413

{Embed}
https://www.ergoforum.org/t/a-simplest-stablecoin/413
A Simplest Stablecoin?
The very simple approach to stablecoin would be as follows:   there‚Äôs a bank box holding stablecoin tokens (e.g. sJPY) there‚Äôs also a trusted oracle with JPY/ERG data  The bank‚Äôs box is protected with such script that:   to get 100 JPY out of the bank, one needs to re-create b...


[10/05/2020 10:06 PM] kushti#0978
Some thoughts on a simplest design for a stablecoin, not so well-backed though.


[10/05/2020 11:23 PM] kushti#0978
@Robert K what do you use as a Rust IDE ?


[10/05/2020 11:38 PM] kushti#0978
@Robert K So the Stablecoin offchain protocol will be the first implementation of the Ergo Protocol Framework ?


[10/06/2020 12:11 AM] scalahub#2618
Since we are going to be giving daily updates I propose that we have the call on a "by-need" basis..i.e only if there is any topic to discuss


[10/06/2020 8:51 AM] Robert K#0722
@kushti Sure, it's been moved ahead to 3PM UTC.


[10/06/2020 8:53 AM] Robert K#0722
@kushti I used VS Code + rust extensions.


[10/06/2020 8:53 AM] Robert K#0722
It works pretty well for debugging as well, which is nice.


[10/06/2020 8:54 AM] Robert K#0722
And you have extensions like `crates` which tell you latest versions of libraries you are using inside of your config file.


[10/06/2020 8:55 AM] Robert K#0722
@kushti If the idea for the Ergo Protocol Framework is actually good and I don't realize it sucks half-way through and it needs to get thrown out, then yes it will be


[10/06/2020 8:57 AM] Robert K#0722
It's still in a very rough phase and I'm figuring out the expected usability patterns and if I need to change how things are created/structured, but that will get addressed with use for the Stablecoin project.


[10/06/2020 8:58 AM] Robert K#0722
@scalahub Sure, that makes sense to me. Do we still wish to have today's call then?


[10/06/2020 9:37 AM] scalahub#2618
I had some questions which we can discuss on slack itself (choose between 4 variants). What about @kushti and yourself?


[10/06/2020 9:39 AM] scalahub#2618
If nothing then we could move the call to next week


[10/06/2020 9:40 AM] kushti#0978
> @kushti If the idea for the Ergo Protocol Framework is actually good and I don't realize it sucks half-way through and it needs to get thrown out, then yes it will be
@Robert K I checked it a bit today, looks good, but we need for some examples to see how it really goes I guess


[10/06/2020 9:50 AM] Robert K#0722
@scalahub I think the discussions are going well on Slack, I'd be fine for moving the call forward. @kushti Does that work for you as well?


[10/06/2020 9:51 AM] Robert K#0722
@kushti Yeah, we'll see how it goes. It'll also be interesting once the core `Protocol` is defined and I start to use it effectively as a library when implementing the CLI + later on when we try to compile it to WASM and use it for Yoroi.


[10/06/2020 9:54 AM] kushti#0978
@Robert K yes, today I'm busy with meetings, would be good to have some time for development )


[10/06/2020 9:57 AM] Robert K#0722
Great, I've removed todays event and scheduled one for next week.


[10/06/2020 9:58 AM] Robert K#0722
I've also removed all calls afterwards, so we can decide to have meetings on a as-needed basis.


[10/06/2020 12:55 PM] Robert K#0722
@kushti @greenhat @scalahub This is kind of an interesting idea I've come upon for Ergo Protocol Framework. The idea of not just having `StageBox<T>`s, but multiple types of "predicated boxes". These are wrapper structs which test that your box fits a given predicate, and then effectively exposes it on the type level that any Action you write which uses said boxes should work as expected.

https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/06/2020 12:56 PM] Robert K#0722
While doing working through this I kind of wish I had a more powerful type system (dependent types) to try and encode more, but nonetheless we can still do some interesting stuff.


[10/06/2020 12:56 PM] Robert K#0722
The idea afterwards is then we can create methods on our Protocol struct for actions like this:

```rust
    /// Action: Mint StableCoin by providing Ergs
    pub fn action_mint_stablecoin(
        amount_to_mint: u64,
        oracle_box: OracleBoxLong,
        bank_box: StageBox<Bank>,
        erg_boxes: Vec<ErgsBox>,
    ) {
```


[10/06/2020 12:59 PM] Robert K#0722
It would be pretty cool if we had something like refinement types where we could specify more distinct attributes (such as that an `ErgsBox` has value inside of greater value than X), but nonetheless it's better than writing `ErgoBox` for clarity.


[10/06/2020 1:12 PM] greenhat#6562
@Robert K If you make boxes private then the only way to construct predicated box will be going through ‚Äúnew‚Äù constructor which runs predicate beforehand. Thus constructed predicated box‚Äôs predicate is guaranteed to hold.

{Reactions}
üëçüèª 

[10/06/2020 1:20 PM] Robert K#0722
Ah, great points @greenhat . Thanks for pointing that oversight out.

{Reactions}
üôå 

[10/06/2020 4:55 PM] kushti#0978
> @Robert K If you make boxes private then the only way to construct predicated box will be going through ‚Äúnew‚Äù constructor which runs predicate beforehand. Thus constructed predicated box‚Äôs predicate is guaranteed to hold.
@greenhat interesting trick )


[10/06/2020 10:09 PM] kushti#0978
> @kushti @greenhat @scalahub This is kind of an interesting idea I've come upon for Ergo Protocol Framework. The idea of not just having `StageBox<T>`s, but multiple types of "predicated boxes". These are wrapper structs which test that your box fits a given predicate, and then effectively exposes it on the type level that any Action you write which uses said boxes should work as expected.
> 
> https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs
@Robert K Sounds like we're getting one step closer to an ideal

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/07/2020 9:23 AM] scalahub#2618
> @kushti @greenhat @scalahub This is kind of an interesting idea I've come upon for Ergo Protocol Framework. The idea of not just having `StageBox<T>`s, but multiple types of "predicated boxes". These are wrapper structs which test that your box fits a given predicate, and then effectively exposes it on the type level that any Action you write which uses said boxes should work as expected.
> 
> https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs
@Robert K Looks very nice üôÇ

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-protocol-framework/src/predicated_boxes.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/07/2020 9:23 AM] scalahub#2618
Is Rust's type system more powerful than Scala's?


[10/07/2020 9:27 AM] Robert K#0722
Thanks.


[10/07/2020 9:28 AM] Robert K#0722
Hmm, I don't think it is more powerful than Scalas to my knowledge.


[10/07/2020 9:28 AM] Robert K#0722
Though I know very little about Scala's type system other than comparisons I heard about 4 years ago when I was primarily doing Haskell.


[10/07/2020 9:29 AM] Robert K#0722
I think as long as a language has generics what I did above should be doable.


[10/07/2020 9:30 AM] Robert K#0722
The nice thing about Rust though is that we should be able to hopefully compile -> WASM and potentially even mobile so we get good reusability (theoretically).


[10/07/2020 9:34 AM] scalahub#2618
will try to play around with the framework in next few days..


[10/07/2020 9:36 AM] scalahub#2618
Can probably add a similar layer to Kiosk.. could be useful in offchain design


[10/07/2020 9:36 AM] scalahub#2618
would be nice if we could have something for smart contracts as well. 
like we want to enforce R4 has Int and all others are empty


[10/07/2020 9:37 AM] scalahub#2618
(something like pieces of ergoscript that we can paste into main contract)


[10/07/2020 9:38 AM] greenhat#6562
I would not say that Rust type system is more powerful than Scala‚Äôs. It‚Äôs different (type classes, no inheritance, etc). I find it more strict though, especially runtime type casting.


[10/08/2020 5:11 PM] scalahub#2618
@Robert K @kushti I'll be doing some hardware upgrade to my desktop so the oracles (both production and test) may not be available later tonight for a couple of hours


[10/08/2020 5:16 PM] kushti#0978
@scalahub good


[10/08/2020 5:16 PM] kushti#0978
btw


[10/08/2020 5:17 PM] kushti#0978
Are we going to launch oracles w. deviation check ?


[10/08/2020 5:24 PM] scalahub#2618
Probably need a bit more testing.. can you try to run yours? I've already created your data-point box


[10/09/2020 7:54 AM] Robert K#0722
> @Robert K @kushti I'll be doing some hardware upgrade to my desktop so the oracles (both production and test) may not be available later tonight for a couple of hours
@scalahub Ah, just noticed that the test pool is underfunded so there was no interuption (from taking your oracle offline).


[10/09/2020 7:55 AM] Robert K#0722
Yeah, it'd be good to get at least 3 oracles running.


[10/09/2020 7:56 AM] Robert K#0722
@kushti If you can ping us when you get a deviation check pool oracle running, I'll fund the pool and we can get it back running.


[10/09/2020 10:11 AM] scalahub#2618
yes the pool is underfunded.. just noticed üò¶


[10/09/2020 10:11 AM] scalahub#2618
my oracle is back btw

{Reactions}
üëç 

[10/13/2020 1:54 PM] scalahub#2618
Do we need a call today?


[10/13/2020 2:08 PM] scalahub#2618
@kushti @Robert K


[10/13/2020 2:19 PM] scalahub#2618
Kushti seems to be busy in some other meeting


[10/13/2020 2:20 PM] Robert K#0722
Ah, then we can skip the meeting in that case.


[10/13/2020 2:20 PM] Robert K#0722
Unless you want to discuss about the reserve ratio stuff?


[10/13/2020 2:21 PM] scalahub#2618
You have summarized it quite concisely. I guess the only thing to consider is the in and out .. we can skip the meeting for that I guess


[10/13/2020 2:21 PM] Robert K#0722
Sure, sounds good.


[10/13/2020 2:22 PM] scalahub#2618
And for that we need @kushti s input too


[10/13/2020 2:22 PM] Robert K#0722
In regards to the contract, is it effectively done (not counting the reserve ratio changes)? Or is there more to do?


[10/13/2020 2:22 PM] scalahub#2618
So let's have it when he's available


[10/13/2020 2:23 PM] kushti#0978
I'm available )


[10/13/2020 2:23 PM] kushti#0978
What to review before the call ?


[10/13/2020 2:23 PM] scalahub#2618
It's done in that case unless there are some bugs.. I've sent it to @kushti  for review.. btw can you please give emurgo stablecoin repo access to him if not already done


[10/13/2020 2:25 PM] Robert K#0722
Yeah kushti has access.


[10/13/2020 2:28 PM] Robert K#0722
I guess you could review the contract: https://github.com/Emurgo/stablecoin-project-design/blob/utxo-spec/utxo-spec/v0.1/Contracts.scala


[10/13/2020 2:28 PM] Robert K#0722
And in slack we talked about how the reserve ratios apply for each mint/redeem.


[10/13/2020 2:28 PM] Robert K#0722
Which haven't been added to said above contact.


[10/13/2020 2:29 PM] Robert K#0722
So do we want to have the call to discuss this then?


[10/13/2020 2:30 PM] kushti#0978
We can do


[10/13/2020 2:30 PM] kushti#0978
I will check contracts and slack by then


[10/13/2020 2:35 PM] Robert K#0722
Cool, sounds good.


[10/13/2020 2:38 PM] scalahub#2618
So one thing we can discuss is if we will bootstrap with zero coins and reserves, what are the various initial actions we can take


[10/13/2020 2:48 PM] Robert K#0722
Good idea.


[10/13/2020 2:59 PM] kushti#0978
Contract looks good, however, its lengthy so I can miss something


[10/13/2020 2:59 PM] kushti#0978
Better to check different cases with Kiosk or Playground


[10/13/2020 3:01 PM] scalahub#2618
Yes that part is next (testing edge cases)


[10/13/2020 3:02 PM] kushti#0978
On reserves, we can start with non-zero reserves easily


[10/13/2020 3:33 PM] greenhat#6562
Do you have some drafts of the stablecoin contract already? The one that needs to signed in sigma-rust eventually. If so, I‚Äôd like to have a look. üôÇ


[10/13/2020 3:58 PM] Robert K#0722
@greenhat Sure, one sec.


[10/13/2020 4:13 PM] Robert K#0722
@kushti @scalahub

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/765593137527128124/unknown.png

{Reactions}
üòç (2) ü¶æ üëç (2) 

[10/13/2020 4:14 PM] Robert K#0722
This was a very early rough sketch of potential stablecoin GUI in Yoroi


[10/13/2020 4:14 PM] Robert K#0722
Probably going to go with 3 tabs, 1 for reservecoin/1 stablecoin/1 governance token.


[10/13/2020 4:15 PM] Robert K#0722
@greenhat

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/765593563899232276/scContract.scala


[10/13/2020 4:17 PM] Robert K#0722
That contract has a couple pieces of logic/calculations off, but effectively is everything we're going to be doing for the base of the protocol. (Still staking/governance will be added in future iterations)


[10/13/2020 4:26 PM] greenhat#6562
@Robert K Thanks! Is it private/confidential? I mean, can I put it in github issue(s) in sigma-rust? To plan interpreter and prover implementations.


[10/13/2020 4:38 PM] Robert K#0722
Hmm, yeah, preferrably this would be kept private for now.


[10/13/2020 4:38 PM] Robert K#0722
If you cut it into chunks/change calculations/slightly obfuscate it with different words though, should be fine üòâ

{Reactions}
üòÜ 

[10/13/2020 5:14 PM] greenhat#6562
@Robert K Got it!


[10/13/2020 5:58 PM] Robert K#0722
And thank you for checking in ahead of time to make sure everything will work.

{Reactions}
üëç 

[10/14/2020 10:33 AM] kushti#0978
https://www.ergoforum.org/t/running-a-business-on-top-of-ergo/423

{Embed}
https://www.ergoforum.org/t/running-a-business-on-top-of-ergo/423
Running a business on top of ERGO
Hi community,  We know that ErgoMixer is already making some small profits in a decentralized manner. The aim of this topic is to introduce a raw idea about having a generalized form of running a business on top of ERGO.  As I said, this is certainly a raw idea and I‚Äôm unaware...


[10/14/2020 12:11 PM] greenhat#6562
I've gathered all IR nodes needed for the current stable coin contract into https://github.com/ergoplatform/sigma-rust/issues/117 and planned it for the next milestone (ASAP).

{Embed}
https://github.com/ergoplatform/sigma-rust/issues/117
Implement IR nodes needed the most ¬∑ Issue #117 ¬∑ ergoplatform/sigm...
The following IR nodes should be added and implemented in interpreter first: SELF OUTPUTS CONTEXT.dataInputs register access (ExtractRegisterAs) Option.get arithmetic ops (plus, minus, multiplicati...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/14/2020 12:12 PM] greenhat#6562
Let me know of the contract updates so I could keep the list updated.

{Reactions}
üíØ (2) 

[10/14/2020 12:43 PM] Robert K#0722
Awesome, thanks and will do.


[10/14/2020 12:44 PM] Robert K#0722
For the time being we're mostly dealing with some small changes here and there on equations, but will let you know when we add new logic.

{Reactions}
üôè 

[10/14/2020 2:14 PM] Robert K#0722
@scalahub Maybe can we be a bit less specific on what we've finished for the StableCoin publicly? People are going to keep asking to see stuff if say X spec is done or Y contract is done, and then ask why it's not released if something is ready.


[10/14/2020 2:15 PM] kushti#0978
yes, maybe some very generic stuff like "working on the stablecoin 100% of time"


[10/14/2020 2:15 PM] kushti#0978
@scalahub


[10/14/2020 2:18 PM] scalahub#2618
sure will be careful next time


[10/14/2020 2:19 PM] Robert K#0722
Thanks


[10/14/2020 2:28 PM] scalahub#2618
@kushti @Robert K lets get a few more people to run the pool v2


[10/14/2020 2:28 PM] scalahub#2618
we need to test it before launching


[10/14/2020 2:31 PM] greenhat#6562
I feel guilty for ‚Äúslacking off‚Äù and not running the pool. I want to join. üôÇ


[10/14/2020 2:42 PM] Robert K#0722
That'd be great @greenhat. @scalahub Could you bootstrap him in?


[10/14/2020 2:44 PM] scalahub#2618
awesome! so can you paste first an ordinary address that a full node has


[10/14/2020 2:44 PM] scalahub#2618
then I can give you steps


[10/14/2020 2:49 PM] greenhat#6562
@scalahub thanks! My node is running without a wallet. Let me fix this.


[10/14/2020 3:22 PM] greenhat#6562
@scalahub I had to start a full re-sync so it'd take some time. Here is my wallet's main address 9fQHnth8J6BgVNs9BQjxj5s4e5JGCjiH4fYTBA52ZWrMh6hz2si


[10/14/2020 3:38 PM] scalahub#2618
Cool..I'm away from my laptop for next 2 hours. Will bootstrap your oracle after that . Meantime can you pull the oracle core code from GitHub

{Reactions}
üëå 

[10/14/2020 3:40 PM] scalahub#2618
And instructions Ill paste soon


[10/14/2020 3:41 PM] Robert K#0722
@greenhat https://github.com/ergoplatform/oracle-core/tree/deviation-check

{Embed}
https://github.com/ergoplatform/oracle-core/tree/deviation-check
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
üôè 

[10/14/2020 3:41 PM] Robert K#0722
That's the correct branch


[10/14/2020 3:50 PM] greenhat#6562
Thanks, I'm looking into it.


[10/14/2020 4:06 PM] Robert K#0722
The pool we're testing right now is a `erg-usd` pool.


[10/14/2020 4:10 PM] Robert K#0722
As a heads up, the oracle core expects the protocol to be running live, and so when a datapoint can not be finalized, it posts new datapoints every 5 blocks


[10/14/2020 4:10 PM] Robert K#0722
We have a minimum consenus number right now of 2, and so if no one else is running, you will just waste a lot of ergs on fees.


[10/14/2020 4:11 PM] Robert K#0722
I've turned off my oracle for right now because it seems @scalahub's isn't posting a datapoint right now or our datapoints for some reason aren't within the deviation range.


[10/14/2020 4:12 PM] Robert K#0722
I'm going to go afk for a bit too, and hopefully be back once scalahub is, and so we can restart and get things moving again.

{Reactions}
üëå (2) 

[10/14/2020 9:09 PM] kushti#0978
Would be happy to join too!


[10/14/2020 9:42 PM] scalahub#2618
looks like my node had hanged


[10/14/2020 9:42 PM] scalahub#2618
using 3.3.3.. Should I be using a different one?


[10/14/2020 9:44 PM] scalahub#2618
@kushti I had bootstrapped your oracle earlier, so you only need to rescan


[10/14/2020 9:45 PM] scalahub#2618
this address `9gmNsqrqdSppLUBqg2UzREmmivgqh1r3jmNcLAc53hk3YCvAGWE`


[10/14/2020 9:47 PM] kushti#0978
@scalahub can be related to https://github.com/ergoplatform/ergo/issues/894 ?

{Embed}
https://github.com/ergoplatform/ergo/issues/894
Node can not restore after long network degradation (restart helps)...
After long (approx. 2 hours) network degradation, node can not back to normal work. Logs are: Logs: 00:17:41.097 WARN [tor.default-dispatcher-34] s.c.u.NetworkTimeProvider - Problems with NTP: java...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/14/2020 9:47 PM] kushti#0978
I can send you a private jar with a fix for testing btw


[10/14/2020 9:47 PM] scalahub#2618
your oracle box id is 35f1ed6462c2bcda4cafb69a5102613c740db62ba1d46e5dc0c158fde9cf0e94


[10/14/2020 9:48 PM] scalahub#2618
> I can send you a private jar with a fix for testing btw
@kushti yes please do


[10/14/2020 9:48 PM] kushti#0978
ok will do both the things in my morning )


[10/14/2020 10:02 PM] scalahub#2618
> @scalahub I had to start a full re-sync so it'd take some time. Here is my wallet's main address 9fQHnth8J6BgVNs9BQjxj5s4e5JGCjiH4fYTBA52ZWrMh6hz2si
@greenhat here is the bootstrap tx id: https://explorer.ergoplatform.com/en/transactions/32b3adbbc5f16570bc2bcd3065adb5c2ed82956e97ab59f898bd82e99ea45860


[10/14/2020 10:02 PM] scalahub#2618
your address corresponds to the group element `0274524ee849e4e45f58c46164ac609902bb374fc9375f097ee1af2ef1152ab9bf`


[10/14/2020 10:10 PM] kushti#0978
@greenhat there's API method to get P2PK address from it , something like /utils/rawToAddress

{Reactions}
üôè 

[10/15/2020 9:17 AM] Robert K#0722
Cool, the pool seems to be running once again.


[10/15/2020 11:23 AM] greenhat#6562
I think I'm in:
```
Oracle Datapoint State
--------------------
Your Latest Datapoint: 1536350828
Datapoint Origin Epoch ID: 69f512d636d2c0eec8fdeab374710aae17120442a9003f67e8a5e2400783db5a
Submitted At: 340082
========================================================

--------------------------------------------------
`Submit Datapoint` Transaction Has Been Posted.
Transaction Id: "d6895beb6d4bad5a2fd8b0bdabba3e489404aa25fc103db502ce7e209254a62b"
--------------------------------------------------
```

{Reactions}
üëç 

[10/15/2020 11:28 AM] kushti#0978
joining soon )


[10/15/2020 11:28 AM] kushti#0978
updating


[10/15/2020 11:31 AM] Robert K#0722
Nice @greenhat, looks like it


[10/15/2020 11:32 AM] Robert K#0722
Hmm, I updated to the test v3.3.5 jar from the zk-treasury channel, and my oracle core is now getting this error:
```Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(jL2aaqw6XU61SZznxeykLpREPzSmZv8bwbjEsJD6DMfXQLgBc12wMmPpVD81JnMAQBBBB9FruzhMpRbC9Gb5jD2vijgUKo8ZxWXhC3ykRnqBEveS3kqT8TXSQZsu1ReSFazVzXdR2BFLedefWDoiFSpnUVsthKboDG82gscdPij8ZMQzwUcMtNaaFiMoBoosspL7vZ1Y8FweVzQkPkcUU37j81tEksjfzBLYbcSsasLXJTPeo3MM7ZqaT7UGK,1000000,List(([B@2ef4859a,1)),Map(R4 -> ConstantNode(ECPoint(9f2230,58d110,...),SGroupElement), R5 -> ConstantNode(Coll(-13,-116,53,-59,66,-34,-94,-94,7,99,50,-92,28,-23,-75,118,81,105,69,93,44,33,-43,46,27,43,119,-44,67,-75,5,117),Coll[SByte$]), R6 -> LongConstant(1527246847))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1000000,List(),Map())). requirement failed: Does not have change address to send change to
--------------------------------------------------```


[10/15/2020 11:33 AM] Robert K#0722
I was using v3.3.1 before, and I assume this is related to EIP3 change from v3.3.4 of the wallet update


[10/15/2020 11:38 AM] kushti#0978
@Robert K how did you update, just replacing jar ?


[10/15/2020 11:39 AM] kushti#0978
Can you please test 3.3.4 also ?


[10/15/2020 11:40 AM] kushti#0978
It could be some 3.3.5 regression also


[10/15/2020 11:59 AM] Robert K#0722
Yeah I just replaced the jar


[10/15/2020 11:59 AM] Robert K#0722
I'll try 3.3.4


[10/15/2020 12:16 PM] Robert K#0722
@kushti 3.3.4 seems to work


[10/15/2020 12:17 PM] kushti#0978
@Robert K thanks a lot! Some regression bug then


[10/15/2020 1:03 PM] scalahub#2618
do we need to rescan when bumping to 3.3.4?


[10/15/2020 1:04 PM] kushti#0978
no, if you're upgrading from 3.3.x


[10/15/2020 1:04 PM] kushti#0978
3.2.x -> wallet rescan needed


[10/15/2020 1:04 PM] kushti#0978
3.1.x & 3.0.x -> full rescan needed


[10/15/2020 3:32 PM] scalahub#2618
Yes I'm running 3.3 3


[10/16/2020 7:47 AM] greenhat#6562
I see:
```
The Oracle Pool is underfunded.
Please submit funds to the pool to continue operation.
```


[10/16/2020 8:10 AM] Robert K#0722
Ah, I'll send funds in an hour or so.


[10/16/2020 8:42 AM] Robert K#0722
Okay, I submit some funds and the oracles should collect them shortly and the pool will restart.


[10/16/2020 8:43 AM] Robert K#0722
For ease of finding for the future, the current test deviation checking pool deposits P2S address is:  `zLSQDVBaERY5Yozrqu1qAjKj8vrFii6dLae6caogo8m52VBcWySSZPMApEF6xWng6b2KYPMCtGLxqGN8JnGHeczJcoC9eEKqWafCJbzfn8NNgfV8GcZZNjvgi3Nim69ggxfVpCHAz5q3mqq3yZwvprZf3XcZLRYeMTRrYP6eFgeEBsKokyPXoaH6wTGAiyh3LmTjNCagH9NaHyJg7nnKMxkioD9U16AKo89C5iH9hWEdvfhdJb`


[10/16/2020 9:17 AM] kushti#0978
sent 20 ergs https://explorer.ergoplatform.com/en/addresses/zLSQDVBaERY5Yozrqu1qAjKj8vrFii6dLae6caogo8m52VBcWySSZPMApEF6xWng6b2KYPMCtGLxqGN8JnGHeczJcoC9eEKqWafCJbzfn8NNgfV8GcZZNjvgi3Nim69ggxfVpCHAz5q3mqq3yZwvprZf3XcZLRYeMTRrYP6eFgeEBsKokyPXoaH6wTGAiyh3LmTjNCagH9NaHyJg7nnKMxkioD9U16AKo89C5iH9hWEdvfhdJb


[10/16/2020 9:33 AM] Robert K#0722
Oh wow, thanks, but that is likely a bit excessive for a test pool.


[10/16/2020 9:33 AM] Robert K#0722
I guess we're going to be running this test pool in the background for a few months to try and unlock all of those ergs haha üòÖ


[10/16/2020 9:34 AM] Robert K#0722
@kushti If you can RBF and just send like 2 Ergs instead thats probably just better.


[10/16/2020 9:48 AM] Robert K#0722
Ah, they confirmed.


[10/16/2020 9:49 AM] Robert K#0722
@scalahub How many tokens do you have for this test pool?


[10/16/2020 9:54 AM] kushti#0978
ohh too late


[10/16/2020 9:54 AM] kushti#0978
was in talks with anon


[10/16/2020 9:54 AM] kushti#0978
ok, will be a gift to miners then )

{Reactions}
üëç 

[10/16/2020 10:34 AM] Robert K#0722
@kushti I made a bunch of edits to the description/comments to make them more understandable + added more comments to make the code more clear. https://github.com/ergoplatform/ergoscript-by-example/blob/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696/singleChainSwap.md

{Embed}
https://github.com/ergoplatform/ergoscript-by-example/blob/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696/singleChainSwap.md
ergoplatform/ergoscript-by-example
Learn ErgoScript by reading example smart contracts powered by Ergo Playground. - ergoplatform/ergoscript-by-example
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/16/2020 10:34 AM] Robert K#0722
I'll merge on Monday so it feels more "fresh" of a release when people look at the repo.


[10/16/2020 10:35 AM] Robert K#0722
@greenhat @kushti As a heads up I've also added a `Difficulty` rating to the ErgoScript By Example repo which we should use going forward to let people know: https://github.com/ergoplatform/ergoscript-by-example/tree/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696

{Embed}
https://github.com/ergoplatform/ergoscript-by-example/tree/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696
ergoplatform/ergoscript-by-example
Learn ErgoScript by reading example smart contracts powered by Ergo Playground. - ergoplatform/ergoscript-by-example
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
üëçüèª (2) 

[10/16/2020 10:36 AM] Robert K#0722
And after we post the DEX contracts, I highly recommend we only focus on `Beginner` difficulty examples, because otherwise no one will end up understanding what is going on tbh.

{Reactions}
üëç 

[10/16/2020 10:36 AM] Robert K#0722
We can likely just focus on converting ideas from the Design patterns forum thread to short examples.


[10/16/2020 10:37 AM] kushti#0978
> @kushti I made a bunch of edits to the description/comments to make them more understandable + added more comments to make the code more clear. https://github.com/ergoplatform/ergoscript-by-example/blob/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696/singleChainSwap.md
@Robert K nice, thanks a lot!

{Embed}
https://github.com/ergoplatform/ergoscript-by-example/blob/bdc5215b91f3c7d7b2716f25c5c6f2c6c8cce696/singleChainSwap.md
ergoplatform/ergoscript-by-example
Learn ErgoScript by reading example smart contracts powered by Ergo Playground. - ergoplatform/ergoscript-by-example
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/16/2020 10:39 AM] kushti#0978
> And after we post the DEX contracts, I highly recommend we only focus on `Beginner` difficulty examples, because otherwise no one will end up understanding what is going on tbh.
@Robert K I think to continue with DEX examples, e.g. a tokensale with buy-back guarantee


[10/16/2020 11:07 AM] scalahub#2618
> @scalahub How many tokens do you have for this test pool?
@Robert K around 400 more


[10/16/2020 11:15 AM] Robert K#0722
@scalahub So we theoretically can spam bootstrap oracles to withdraw all of the Ergs if we ever so desire


[10/16/2020 11:15 AM] Robert K#0722
(So if Ergs ever 1000x and we still have 10+ Ergs inside, good to know üòâ )


[10/16/2020 11:16 AM] scalahub#2618
not sure if contract has some limit on the number of oracles


[10/16/2020 11:19 AM] Robert K#0722
I think it's an implicit limit based on the number of tokens generated


[10/16/2020 11:19 AM] Robert K#0722
iirc


[10/16/2020 11:20 AM] Robert K#0722
And the limit is more so for checking that there are sufficient funds to pay out all oracles, and so the max doesn't check how many get collected I believe


[10/16/2020 11:21 AM] Robert K#0722
So I believe we'd be able to use all 400 tokens if we ever really wanted to.


[10/16/2020 11:45 AM] scalahub#2618
yes mostly there is only min limit no max


[10/16/2020 11:45 AM] scalahub#2618
in contract


[10/19/2020 2:38 PM] kushti#0978
Hi guys, how's it going ?


[10/19/2020 3:13 PM] Robert K#0722
Hey, going well. Working on the CLI currently.

{Reactions}
üòç 

[10/19/2020 6:05 PM] Robert K#0722
@kushti For UTXO-set scanning, when I want to search for a P2PK address, I presume I still use `     "predicate": "equals",`


[10/19/2020 6:05 PM] Robert K#0722
But how do I have to encode the P2PK address?


[10/19/2020 8:10 PM] kushti#0978
@Robert K simplest option would be to set "value" to "0e240008cd" + ecPoint, where ecPoint is output of /utils/addressToRaw/{address}


[10/19/2020 8:12 PM] kushti#0978
so for 9fPiW45mZwoTxSwTLLXaZcdekqi72emebENmScyTGsjryzrntUe you should get


[10/19/2020 8:12 PM] kushti#0978
0e240008cd027304abbaebe8bb3a9e963dfa9fa4964d7d001e6a1bd225eadc84048ae49b627c


[10/19/2020 8:16 PM] kushti#0978
0e is type descriptor(byte array)


[10/19/2020 8:16 PM] kushti#0978
24 is byte array length


[10/19/2020 8:17 PM] kushti#0978
0008cd is header + opcode ("proveDlog")


[10/19/2020 8:17 PM] kushti#0978
027304abbaebe8bb3a9e963dfa9fa4964d7d001e6a1bd225eadc84048ae49b627c is serialized ecPoint


[10/19/2020 8:17 PM] kushti#0978
encoded in the address


[10/20/2020 8:09 AM] Robert K#0722
Great, thanks Alex. I'll add a method for this in the rust node interface lib to simplify the process.


[10/20/2020 4:09 PM] kushti#0978
so no call today ?


[10/20/2020 4:53 PM] Robert K#0722
Ah, @scalahub didn't want weekly calls except when needed so we didn't have on scheduled.


[10/20/2020 4:53 PM] Robert K#0722
And I've ended up with other things on my schedule right now.


[10/20/2020 4:54 PM] scalahub#2618
oh yes.. lets have one next week


[10/20/2020 4:59 PM] kushti#0978
good ok


[10/20/2020 5:01 PM] Robert K#0722
Send a calendar invite


[10/21/2020 3:54 PM] Robert K#0722
@kushti @greenhat The `Ergo Node Interface` rust lib is starting to get reasonably useable for dApps. Just added a couple simple unspent box selection strategies to it + added some basic local config ease-of-use functions + upgraded the `Scanning` interface too to make it all easier to use.

{Reactions}
üòç 

[10/21/2020 3:54 PM] Robert K#0722
There's still a decent chunk of the endpoints missing, but I think a lot of the key use cases for dApps are already implemented/will be in the next week or two.


[10/21/2020 3:55 PM] Robert K#0722
Do you guys think it'd be a decent idea to move it out into it's own repo under the `Ergo Platform` organization, and release a 0.1 version, even if it doesn't support all of the endpoints? (say in a couple weeks when I finish off the extra things I need for the stablecoin CLI)


[10/21/2020 3:58 PM] greenhat#6562
@Robert K Nice! Let's release it.


[10/21/2020 3:59 PM] greenhat#6562
@Robert K BTW, I'm rewriting `SimpleBoxSelector` box selection to support tokens in https://github.com/ergoplatform/sigma-rust/pull/118

{Embed}
https://github.com/ergoplatform/sigma-rust/pull/118
Add tokens support in TxBuilder and ErgoBoxCandidateBuilder by gree...
Close #88
Todo:

 tx builder tests for minting and burning a token;
 implement token selection in SimpleBoxSelector;
 box builder tests for adding, minting token;
 newtype for token amount;
 token ...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/21/2020 4:00 PM] greenhat#6562
You might want to use it.


[10/21/2020 4:01 PM] greenhat#6562
I'm testing the sh*t out of it with PBT. üôÇ

{Reactions}
üíØ (2) 

[10/21/2020 4:52 PM] Robert K#0722
Ah nice.


[10/21/2020 4:53 PM] Robert K#0722
For the CLI probably won't need anything fancy, but could be good for when we get to WASM potentially/implementing in Yoroi.


[10/21/2020 5:47 PM] kushti#0978
@Robert K let's release ! You can create repos, right ?


[10/21/2020 6:34 PM] Robert K#0722
Yes I can.


[10/21/2020 6:35 PM] Robert K#0722
Let's wait a week or so until I add a few more things/cleanup some of the interface.


[10/21/2020 6:35 PM] Robert K#0722
I'm making a lot of changes right now as I'm working on the CLI, and want to get it a tiny bit more stable.


[10/21/2020 6:35 PM] Robert K#0722
But glad to hear you are both good with releasing it.


[10/21/2020 6:45 PM] Robert K#0722
@kushti @greenhat Just spoke with Nico and he prefers that we'd release it from the Emurgo github organization so that we can publicly announce the project as something that Emurgo has produced for the community.

{Reactions}
üëç 

[10/21/2020 6:46 PM] Robert K#0722
Might get an extra tweet or two out of it as well from Emurgo side, so maybe we'll get a few more eyes on it.

{Reactions}
üëçüèª 

[10/21/2020 9:46 PM] scalahub#2618
It seems that `sigmaProp(false).propBytes` is not the ergotree of a box with script `sigmaProp(false)`


[10/21/2020 9:53 PM] kushti#0978
@scalahub indeed. sigmaProp(false).ergoTree is the tree

{Reactions}
üëç 

[10/22/2020 10:39 AM] Robert K#0722
@kushti After a tx is signed via `/wallet/transaction/sign`, there seems to be no endpoint to actually submit the tx via the node?


[10/22/2020 10:50 AM] Robert K#0722
Ah, nevermind, it's `/transactions`, right? Thought it'd be in the wallet endpoints.


[10/22/2020 10:59 AM] kushti#0978
@Robert K yes, POST request to /transactions


[10/22/2020 11:00 AM] kushti#0978
also, you can check that the tx is valid via /transactions/check


[10/22/2020 11:00 AM] kushti#0978
(/transactions is sending asynchronously)


[10/23/2020 9:38 AM] Robert K#0722
@kushti @greenhat @scalahub 
Do you see the error here?

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/769117615427289098/message.txt


[10/23/2020 9:39 AM] Robert K#0722
I'm attempting to the sign a "Mint ReserveCoins" tx created by the CLI, using the ergo full node.


[10/23/2020 9:39 AM] Robert K#0722
The node error is:
```BadRequest("The request content was malformed:\norg.ergoplatform.validation.ValidationException: Validation failed on ValidationRule(1012,For version greater then 0, size bit should be set.) with args WrappedArray(3): DownField(ergoTree),MoveRight,DownArray,DownField(outputs),DownField(tx)")```


[10/23/2020 10:28 AM] greenhat#6562
@Robert K Nope, my node is at peers=0 again üôÇ . @kushti I'm preparing the log and will make an issue.


[10/23/2020 10:33 AM] Robert K#0722
That is weird @greenhat, odd that it keeps happening. Guess that will need to be looked into for stability of the full node.


[10/23/2020 10:34 AM] Robert K#0722
Though for clarity, the above error was from the StableCoin project and I was wondering if any of you had any idea of what the error meant.


[10/23/2020 10:37 AM] greenhat#6562
@Robert K Oh, I did not get that. I'm looking into it. @kushti https://github.com/ergoplatform/ergo/issues/1227

{Embed}
https://github.com/ergoplatform/ergo/issues/1227
Eventual empty peers list (no peers, no connection) state ¬∑ Issue #...
I've experienced it twice already. Attached the log from running with jar built from v3.3.5 branch. ergo.log.gz
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/23/2020 10:41 AM] greenhat#6562
@Robert K I'm sorry, in my head oracle-related stuff == defi.


[10/23/2020 10:41 AM] kushti#0978
> @kushti @greenhat @scalahub 
> Do you see the error here?
@Robert K lemme check


[10/23/2020 10:42 AM] kushti#0978
@greenhat is your node recovering from no-peers or not ?


[10/23/2020 10:42 AM] greenhat#6562
@Robert K It seems like unwrapping Option with 'get' failed.


[10/23/2020 10:43 AM] Robert K#0722
Yeah, the unwrapping isn't the problem. It's returning the ergo full node error for why the tx couldn't be signed.


[10/23/2020 10:44 AM] Robert K#0722
Which is what I'm asking for help as I don't really understand what 
`BadRequest("The request content was malformed:\norg.ergoplatform.validation.ValidationException: Validation failed on ValidationRule(1012,For version greater then 0, size bit should be set.) with args WrappedArray(3): DownField(ergoTree),MoveRight,DownArray,DownField(outputs),DownField(tx)")` means


[10/23/2020 10:45 AM] Robert K#0722
Or are you saying in the ergoscript it failed while signing?


[10/23/2020 10:45 AM] greenhat#6562
@kushti no, I found that it was completely "peerless" for the last 3 hours.


[10/23/2020 10:45 AM] kushti#0978
I also encountered weird "size bit" error message when it was really about typecast

{Reactions}
ü§î 

[10/23/2020 10:45 AM] kushti#0978
> @kushti no, I found that it was completely "peerless" for the last 3 hours.
@greenhat and no problems with connectivity ?


[10/23/2020 10:46 AM] greenhat#6562
@kushti no, network is fine.


[10/23/2020 10:48 AM] greenhat#6562
@Robert K I see  ` Failed to sign boxes due to Error in Evaluation.compile.evaluate(s205186 -> MethodCall(s205185, scalan.Base$Ref wrappers.scala.WOptions$WOption.get(), [], true))` and I'm assuming that it failed to sign the tx.


[10/23/2020 10:50 AM] Robert K#0722
@greenhat You mean for the oracle-core?


[10/23/2020 10:51 AM] Robert K#0722
This has been a bit confusing inter-weaving both conversations here üòÖ


[10/23/2020 10:52 AM] greenhat#6562
@Robert K It's from the message.txt you uploaded above.


[10/23/2020 10:53 AM] Robert K#0722
Hmm? The full error from that message.txt is:

```thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: BadRequest("The request content was malformed:\norg.ergoplatform.validation.ValidationException: Validation failed on ValidationRule(1012,For version greater then 0, size bit should be set.) with args WrappedArray(3): DownField(ergoTree),MoveRight,DownArray,DownField(outputs),DownField(tx)")', stablecoin-cli/src/main.rs:181:61
```


[10/23/2020 10:53 AM] Robert K#0722
Or are you saying you tried to sign that tx yourself?


[10/23/2020 10:59 AM] greenhat#6562
@Robert K I'm sorry, I've confused it with some old message.txt in my downloads folder. Please, ignore everything I wrote. I'll be more careful. Too many simultaneous tasks. üò¶ I'm looking into it now.


[10/23/2020 11:04 AM] Robert K#0722
Ah @greenhat, that makes more sense. No worries.


[10/23/2020 11:04 AM] kushti#0978
@greenhat please try latest commit from 3.3.5 branch and put 
scorex.network.syncStatusRefreshStable = 2m

into config

also, what's your environment ?

also, next time do not shut down the node please, save output of 127.0.0.1:9053/peers/blacklisted and  127.0.0.1:9053/peers/all


[10/23/2020 11:04 AM] Robert K#0722
@kushti So by "typecast", do you mean that typecasting in the script itself is failing? Or what do you mean exactly.


[10/23/2020 11:05 AM] kushti#0978
@Robert K yes, type of a script after all should be sigmaProp but was SBoolean in my case


[10/23/2020 11:06 AM] Robert K#0722
So is it possible that values I put in the output registers cause this error to happen, or is it purely in the script itself?


[10/23/2020 11:06 AM] Robert K#0722
In other words, is it possible the error is in my off-chain code, or we need to look into the on-chain script?


[10/23/2020 11:07 AM] greenhat#6562
@Robert K Did you serialize ErgoTree's for output boxes in rust?


[10/23/2020 11:10 AM] Robert K#0722
Yes @greenhat


[10/23/2020 11:10 AM] Robert K#0722
```rust
    let address = encoder
        .parse_address_from_str(address_str)
        .map_err(|_| EncodingError::FailedToSerialize(address_str.to_string()))?;
    let ergo_tree = ErgoTree::sigma_parse_bytes(address.content_bytes())
        .map_err(|_| EncodingError::FailedToSerialize(address_str.to_string()))?;
```


[10/23/2020 11:11 AM] Robert K#0722
So I went from p2s address `String` -> `Address` -> `ErgoTree`


[10/23/2020 11:11 AM] Robert K#0722
Then used that in a `ErgoBoxCandidate` that I manually constructed


[10/23/2020 11:12 AM] Robert K#0722
Which I then used in `UnsignedTransaction::new` as the output_candidates


[10/23/2020 11:14 AM] Robert K#0722
And the json in the file above is from the `UnsignedTx` that comes out of this process.


[10/23/2020 11:14 AM] kushti#0978
@Robert K what is the on-chain contract?


[10/23/2020 11:15 AM] Robert K#0722
@kushti  https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/main/scala/stablecoin/v1/Contracts.scala


[10/23/2020 11:16 AM] Robert K#0722
Here's the file for those who don't have access

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/769142130332532746/message.txt


[10/23/2020 11:24 AM] Robert K#0722
@scalahub Did you end up testing the contract via Kiosk? I know you mentioned it was harder to get actions to work, but did you ever test signing a tx with the contact?


[10/23/2020 11:28 AM] greenhat#6562
@Robert K There are two outputs. I believe the error is originated the second output box. The one with ergoTree `03f1102eb87a4166bf9fbd6247d087e92e1412b0e819dbb5fbc4e716091ec4e4ec` .  It has the version set in the header, but not size bit. Was it constructed via the method you described above?


[10/23/2020 11:31 AM] Robert K#0722
Ah interesting. So the second box is supposed to go to a user's wallet (so effectively P2PK).


[10/23/2020 11:32 AM] Robert K#0722
Yes, I do the same process to construct the box.


[10/23/2020 11:32 AM] Robert K#0722
But in this case the `address_str` which is parsed into a `Address` is a P2PK string.


[10/23/2020 11:33 AM] Robert K#0722
Is that possibly an incorrect way to get an `ErgoTree` which is to be used in an `OutputBoxCandidate` for p2pk addresses?


[10/23/2020 11:54 AM] greenhat#6562
@Robert K Yes, that's not going to work. After you parse the Address call it's `script` method to get ErgoTree, don't parse it from `content_bytes`. The reason `ErgoTree::sigma_parse_bytes` does not fail now is because I made it to handle trees that it cannot parse by just storing the whole "unparsable" bytes and "give" them back on `ErgoTree::sigma_serialize` call. Since most of the deserializers are not implemented yet.


[10/23/2020 11:57 AM] greenhat#6562
@Robert K for `P2S` addresses `Address::script()` is also works.


[10/23/2020 11:58 AM] Robert K#0722
Ah, I see. Great, thanks.


[10/23/2020 12:00 PM] Robert K#0722
@greenhat To clarify, for both types of addresses I can just do `address.script()` and it'll work?


[10/23/2020 12:00 PM] greenhat#6562
@Robert K yes


[10/23/2020 12:00 PM] Robert K#0722
Awesome üëç


[10/23/2020 12:03 PM] Robert K#0722
And that was indeed the fix.


[10/23/2020 12:03 PM] Robert K#0722
Though now I have a new error:
```
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: BadRequest("Malformed request: Script reduced to false")'
```


[10/23/2020 12:04 PM] Robert K#0722
Which is always fun because now I need to read all of @scalahub's code and all of my code and see what's different.

{Reactions}
üôÇ 

[10/23/2020 12:12 PM] Robert K#0722
@scalahub Did you end up looking at my rust off-chain code like I asked earlier in the week to see if everything made sense?


[10/23/2020 12:13 PM] Robert K#0722
I have a few meetings today so I'm going to try and find where our logic diverges, but probably won't have too much time until Monday.


[10/23/2020 12:14 PM] Robert K#0722
I'm guessing it's most likely related to something with the base reserves/transaction fees and we're a few nanoErgs off, but who knows.


[10/23/2020 12:32 PM] scalahub#2618
> @scalahub Did you end up looking at my rust off-chain code like I asked earlier in the week to see if everything made sense?
@Robert K yes I had a look but we made some changes to onchain after that


[10/23/2020 12:33 PM] scalahub#2618
Today I'm going to make some mock tests using appkit and try to make an exchange


[10/23/2020 12:33 PM] scalahub#2618
Will also look at your rust code


[10/23/2020 12:34 PM] scalahub#2618
It's probably because of some rounding difference between offchain and onchain because we require strict equality


[10/23/2020 12:34 PM] scalahub#2618
I'll run some tests and update later today


[10/23/2020 12:43 PM] Robert K#0722
Ah, that may indeed be the case.


[10/23/2020 12:46 PM] Robert K#0722
Once you end up getting some mock tests that work it'd be good to print out the unsigned tx data so we can compare it to unsigned tx data from the rust code.


[10/23/2020 5:14 PM] Robert K#0722
@kushti @scalahub Okay, a bit of a change of plans from up above me.


[10/23/2020 5:16 PM] Robert K#0722
It seems that we have a long list of to-dos for Yoroi between Cardano + Ergo , and we didn't end up hiring someone in time, so it looks like Yoroi StableCoin support by EOY is going to be quite a far stretch.


[10/23/2020 5:17 PM] Robert K#0722
The EOY target was for a number of reasons, but some of them have already passed anyways.


[10/23/2020 5:18 PM] Robert K#0722
What we're thinking for right now by EOY is:
- StableCoin specs released
- StableCoin contracts released
- StableCoin WASM-supporting off-chain library released
- StableCoin CLI released
- Stablecoin Protocol Includes: Minting/Redeeming StableCoins + ReserveCoins, Dynamic Fees, Update Protocol
- Bonus: Staking (ReserveCoins/StableCoins to earn Governance Token)


[10/23/2020 5:20 PM] Robert K#0722
The idea would be to effectively release all of the material about the StableCoin protocol + the CLI for technical users to test on-chain and then deliver the full-fledged Yoroi GUI experience in the new year.


[10/23/2020 5:26 PM] Robert K#0722
Does this make sense to you guys?


[10/23/2020 5:43 PM] kushti#0978
Well, what can we do


[10/23/2020 5:43 PM] kushti#0978
Let's go for that


[10/23/2020 5:43 PM] kushti#0978
Can EF help maybe ?


[10/23/2020 5:53 PM] Robert K#0722
Here's what we effectively need to accomplish for Yoroi:
1. Add sigma-rust support in Yoroi
2. Get token support in Yoroi
3. Add a caching solution which every time a new block arrives checks/caches the latest Oracle Pool box + StableCoin Bank box. This will eventually then be served to end-user's wallets when using the StableCoin.
4. Implement logic inside of Yoroi which takes the above cached boxes, any boxes from the user's wallet (with Ergs/ReserveCoins/StableCoins), and any user input, and then uses the WASM off-chain stablecoin library Action methods to create UnsignedTransactions for the given action (ex. Mint StableCoin).
5. Implement a GUI


[10/23/2020 5:58 PM] Robert K#0722
Potentially #3 or #4 could be aided by the EF as they don't strictly require Yoroi knowledge.


[10/23/2020 5:59 PM] Robert K#0722
#4 can just be a simple JS library which interacts with the ergo explorer to acquire all of the boxes and then uses the WASM methods from my rust off-chain protocol lib


[10/23/2020 10:43 PM] kushti#0978
#3 can be a piece of Rust code with a scan?


[10/23/2020 10:44 PM] kushti#0978
will ask DeadIt about #4, when will it be needed ?


[10/23/2020 11:04 PM] Robert K#0722
Hmm, yeah #3 could indeed just be a bunch of scans. With the new rust lib i have a decent scan interface so that's pretty trivial to do. Depends on how we want to make it accessible on our side which I'll need to talk internally.


[10/23/2020 11:05 PM] Robert K#0722
#4 is likely closer to the new year when we have 1 and 2 already


[10/23/2020 11:13 PM] kushti#0978
ok I can ask DeadIt in prior

{Reactions}
üëç 

[10/23/2020 11:13 PM] kushti#0978
so i can play with mint already ?


[10/24/2020 6:44 AM] greenhat#6562
After tokens and some minor stuff, my next goal will be the interpreter/prover implementation to support StableCoin contracts.

{Reactions}
üíØ 

[10/24/2020 8:04 AM] scalahub#2618
@Robert K unfortunately there was a bug in the contract due to typo
The fixed one is here 
https://github.com/Emurgo/stablecoin-project/blob/9dc1b572052d583595083a041a78d8939d6dabd7/ergo-stablecoin/src/main/scala/stablecoin/v1/Contracts.scala#L51

I have also tested various exchange operations using mocks and contract looks ok
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v1/ContractsSpec.scala

Older addresses no longer valid. I'll have to bootstrap another one

{Reactions}
üòç üëç 

[10/24/2020 8:55 AM] scalahub#2618
I'll post the updated addresses along with token ids shortly


[10/24/2020 1:34 PM] scalahub#2618
@Robert K updated bank address 
https://github.com/Emurgo/stablecoin-project/blob/04abddc79e32d2a4572ef4b03ed51264290b6a77/ergo-stablecoin/src/main/scala/stablecoin/v1/Contracts.scala#L130

{Reactions}
üòç 

[10/26/2020 8:23 AM] Robert K#0722
@greenhat Thanks for prioritizing it üëç


[10/26/2020 8:25 AM] Robert K#0722
@scalahub Ah I see, I imagine that means the box was unspendable, right?


[10/26/2020 8:26 AM] Robert K#0722
So is the new contract bootstrapped yet, or no?


[10/26/2020 9:03 AM] scalahub#2618
not yet, I wanted to test if the offchain picks it up

{Reactions}
üëç (2) 

[10/26/2020 9:03 AM] scalahub#2618
I'll generate the tokens and share the ids shortly (within an hour)


[10/26/2020 9:08 AM] Robert K#0722
Sounds good. Once I ge tthe ids I'll update the parameters in the codebase and push so we can both compile the CLI and register the scans


[10/26/2020 11:16 AM] scalahub#2618
```sc token 2d554219a80c011cc51509e34fa4950965bb8e01de4d012536e766c9ca08bc2c 100000000000
rc token bcd5db3a2872f279ef89edaa51a9344a6095ea1f03396874b695b5ba95ff602e 100000000000
bank nft 9f90c012e03bf99397e363fb1571b7999941e0862a217307e3467ee80cf53af7 1```


[10/26/2020 11:16 AM] scalahub#2618
let me know when to bootstrap


[10/26/2020 11:24 AM] Robert K#0722
@scalahub The latest commit has the parmeters updated


[10/26/2020 11:25 AM] Robert K#0722
I've registered my scan, but I'm going to go afk for a little


[10/26/2020 11:26 AM] scalahub#2618
no worries


[10/26/2020 12:10 PM] Robert K#0722
Okay I'm back


[10/26/2020 12:10 PM] Robert K#0722
The bank hasn't been bootstrapped I presume? (Scans don't return anything)


[10/26/2020 12:11 PM] scalahub#2618
Yes it's been bootstrapped . My scans did pick up


[10/26/2020 12:11 PM] Robert K#0722
Hmmm, odd


[10/26/2020 12:12 PM] Robert K#0722
So using the CLI `scans check` you see a bank box?


[10/26/2020 12:12 PM] Robert K#0722
Mine found the oracle pool box only.


[10/26/2020 12:13 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/bc193b5226c8b04bfefb2d7a8ed6d2436a131f0c584371736956b0c62e3d6c06


[10/26/2020 12:14 PM] scalahub#2618
Hmm actually let me check.. it could be pool box only for me


[10/26/2020 12:15 PM] scalahub#2618
Yes it found both


[10/26/2020 12:15 PM] scalahub#2618
Using `scan check`


[10/26/2020 12:15 PM] Robert K#0722
Ah, my 3.3.4 node seems to have gotten stuck


[10/26/2020 12:16 PM] Robert K#0722
After restarting it, it found the scan


[10/26/2020 12:17 PM] Robert K#0722
Ah, the current mint action breaks


[10/26/2020 12:17 PM] Robert K#0722
I didn't check for the scenario where the box has less value than the minimum box value parameter we set, so we get a subtract overflow


[10/26/2020 12:18 PM] scalahub#2618
Ok cool I'll see if I can spend manually


[10/26/2020 12:19 PM] Robert K#0722
Sounds good, I'll be squashing bugs as there seems to be a number of small math checks which need to be added


[10/26/2020 12:34 PM] Robert K#0722
@scalahub Can you also print out the tx you create which spends the box?


[10/26/2020 12:36 PM] Robert K#0722
Ah, it seems I am missing a tiny bit of Ergs in my logic


[10/26/2020 12:36 PM] Robert K#0722
`thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: BadRequest("Malformed transaction: Amount of Ergs in inputs should be equal to amount of Erg in outputs. 6c6f1c6e7b96a3e4d414019ed3b63bb2bb0db243f2c0e244bdf8024ffb7cddee: Success(39957000000) == Success(39956000000)")', stablecoin-cli/src/main.rs:225:10`


[10/26/2020 12:38 PM] Robert K#0722
Ah I think I forgot to create the miner fee output box, hah.


[10/26/2020 12:38 PM] Robert K#0722
I got too use to doing requests rather than manually building txs.


[10/26/2020 12:39 PM] Robert K#0722
@greenhat When building a tx with ergo-lib, is there some sort of quick function I can use to build an output candidate box for the tx fee?


[10/26/2020 12:40 PM] Robert K#0722
(Also are there any requirements for which output the fee should be or anything like that?)


[10/26/2020 12:42 PM] greenhat#6562
@Robert K no, tx fee box made by tx builder.


[10/26/2020 12:43 PM] greenhat#6562
No requirements besides min box value yet. I planned to add tx fee estimation/suggestion to tx builder later.


[10/26/2020 12:46 PM] Robert K#0722
Cool, I'm manually creating the txs for now, but good to know.


[10/26/2020 12:48 PM] Robert K#0722
Ah cool, I am minting ReserveCoins: https://explorer.ergoplatform.com/en/transactions/7efca0df3f8d82cc86971077aa6e11dd5030d298021118748ba4f687ed280e5a

{Reactions}
üòç (2) 

[10/26/2020 12:49 PM] Robert K#0722
`1000000` to be exact.


[10/26/2020 12:49 PM] Robert K#0722
All the logic besides the substraction check was good, I just forgot to create the tx fee output üòÖ


[10/26/2020 12:50 PM] Robert K#0722
Will update the repo in a few minutes @scalahub


[10/26/2020 12:53 PM] Robert K#0722
Nice, and it was confirmed.


[10/26/2020 12:57 PM] Robert K#0722
Ah, I completely forgot to implement the `info` command in the CLI. Will do so now so we can easily see the ciruclating coins/reserves.


[10/26/2020 1:00 PM] scalahub#2618
cool so I'll not do the manual spending I guess.. I can start on the updatable contracts


[10/26/2020 1:00 PM] scalahub#2618
btw I'll be afk for the next couple of hours.. will check messages when back


[10/26/2020 1:03 PM] Robert K#0722
Sounds good.


[10/26/2020 1:14 PM] Robert K#0722
I was also thinking that if we could write an informal spec for the update protocol that is separate from the core stablecoin protocol spec but used within it (kind of like how oracle pools are separate but used) that would be great as well as a goal.


[10/26/2020 1:14 PM] Robert K#0722
On the Ergo roadmap we have a point to ship the update protocol, and so this would be hitting that


[10/26/2020 1:15 PM] Robert K#0722
Also we can get some marketing value out of it as we can announce that this came about from the Emurgo <-> Ergo partnership, and is the first dApp Update protocol to be released for the EUTXO model.


[10/26/2020 1:15 PM] Robert K#0722
And so we can market it in the Cardano sphere too.

{Reactions}
üëç (3) 

[10/26/2020 1:16 PM] Robert K#0722
@scalahub Would you be fine with posting the Update protocol spec in the `Emurgo Research` repo?

{Reactions}
üëç (3) 

[10/26/2020 1:16 PM] Robert K#0722
And maybe we could have the contracts be in an Ergo organization repo, and we link to the contracts in the spec.


[10/26/2020 1:24 PM] Robert K#0722
---------------------


[10/26/2020 3:25 PM] Robert K#0722
Just issued the first `Redeem ReserveCoins` action: https://explorer.ergoplatform.com/en/transactions/dc20fffb72d79f29bd2120fcc012ea90af4368ea4cedd4da50372f718e87d892

{Reactions}
üëçüèª 

[10/26/2020 3:26 PM] Robert K#0722
Since I'm doing manual tx creation, I forgot that the reservecoin boxes also hold Ergs as well. And so I wasn't adding them to the Receipt Box output.


[10/27/2020 12:20 AM] kushti#0978
@Robert K @greenhat on node stuck in 3.3.4, there are a couple of issues (a regression bug appeared in 3.3.4 + an old bug fixed in 3.3.5) which are causing the problems observed. 3.3.5 is already better, 1 bug is fixed, 3.3.6 will solve all the issues hopefully.

{Reactions}
üëç (3) 

[10/27/2020 7:57 AM] Robert K#0722
Ah, good to hear, thanks.


[10/27/2020 11:04 AM] Robert K#0722
@kushti The default ergo node scan failed to catch this output: https://explorer.ergoplatform.com/en/transactions/8e66c61638374d25445aee5ef86faeefa83470ea78eaafa8edaefad61f1a6e13


[10/27/2020 11:04 AM] Robert K#0722
62.142 Ergs


[10/27/2020 11:04 AM] Robert K#0722
It's the "Receipt" from the stablecoin protocol, which is the user's address + a couple values in R4 + R5.


[10/27/2020 11:05 AM] Robert K#0722
I did a full rescan with my node and it still failed to track it.


[10/27/2020 11:10 AM] Robert K#0722
Hmm, when you add a box to scan id number 10, how long does it take to be reflected within the balance? Does a block have to pass?


[10/27/2020 12:39 PM] kushti#0978
@Robert K so you added it via /scan/addBox and id = 10 ?


[10/27/2020 1:10 PM] Robert K#0722
Yes, but I think the history got corrupted.


[10/27/2020 1:10 PM] Robert K#0722
Will let you know once I resync.


[10/27/2020 1:32 PM] kushti#0978
@Robert K wallet history ? Any details ?


[10/27/2020 7:40 PM] Robert K#0722
@kushti So I resynced and the utxo still isn't showing up (though it got spent I believe by my oracle core somehow, so it somehow got found?)


[10/27/2020 7:40 PM] Robert K#0722
This is the box I just added:
```json
{
  "scanIds": [
    10
  ],
  "box": {
  "boxId": "c736f4340f9d8d0cbf4e35e265b8c21607c45e1a76980ec11bcd286e2de6bb70",
  "value": 62141415574,
  "ergoTree": "0008cd03f1102eb87a4166bf9fbd6247d087e92e1412b0e819dbb5fbc4e716091ec4e4ec",
  "assets": [
    {
      "tokenId": "bcd5db3a2872f279ef89edaa51a9344a6095ea1f03396874b695b5ba95ff602e",
      "amount": 1000000
    }
  ],
  "creationHeight": 348064,
  "additionalRegisters": {},
  "transactionId": "b7709a1c092c2e69235f28dcfe9bb05db964f86fb7f13ba5b9555f65c8d3a1db",
  "index": 2
}
}
```


[10/27/2020 7:41 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/b7709a1c092c2e69235f28dcfe9bb05db964f86fb7f13ba5b9555f65c8d3a1db


[10/27/2020 7:41 PM] Robert K#0722
Index 2 of outputs


[10/27/2020 7:41 PM] Robert K#0722
The explorer is showing that UTXO as a part of my balance, but my wallet isn't (shows I have 1.947 Ergs), even after manually adding box to scan id 10


[10/27/2020 7:43 PM] Robert K#0722
And this is on 3.3.5 (with a full resync from 0)


[10/27/2020 9:09 PM] kushti#0978
@Robert K ok will check in the morning

{Reactions}
üëå 

[10/28/2020 9:01 AM] kushti#0978
checking


[10/28/2020 9:02 AM] Robert K#0722
Hmm this is quite weird.


[10/28/2020 9:03 AM] Robert K#0722
So the box was found by the wallet and used by the oracle core it seems.


[10/28/2020 9:03 AM] Robert K#0722
But it never displays it to me?


[10/28/2020 9:03 AM] Robert K#0722
And I think I got back into the same situation as before where I added the new box manually to scan `10`, but now my wallet seems to be stuck


[10/28/2020 9:04 AM] Robert K#0722
`{
  "isInitialized": true,
  "isUnlocked": false,
  "changeAddress": "",
  "walletHeight": 348758
}`


[10/28/2020 9:04 AM] Robert K#0722
`Current height

348804`


[10/28/2020 9:19 AM] kushti#0978
@Robert K do you have logs ?


[10/28/2020 9:25 AM] kushti#0978
I see, checking


[10/28/2020 9:28 AM] kushti#0978
With /scan/addBox, yes it seems there's some problem


[10/28/2020 9:28 AM] kushti#0978
checking


[10/28/2020 9:31 AM] Robert K#0722
Uploading the log, will send it your way


[10/28/2020 9:32 AM] kushti#0978
@Robert K ok, so the box added to the wallet boxes (you can check it in the Swagger by calling /wallet/boxes/unspent), but balance shown is not updated (a needed check is missed)


[10/28/2020 9:33 AM] kushti#0978
another question is why the wallet stuck


[10/28/2020 9:35 AM] Robert K#0722
https://drive.google.com/file/d/1hqrkDNlTw7S-0rKsXwAk-ICFZ6VFuM2E/view?usp=sharing

{Embed}
https://drive.google.com/file/d/1hqrkDNlTw7S-0rKsXwAk-ICFZ6VFuM2E/view?usp=sharing
ergo.log


[10/28/2020 10:52 AM] kushti#0978
@Robert K I see some issue in the log


[10/28/2020 10:52 AM] kushti#0978
Not sure what could that be about


[10/28/2020 10:52 AM] kushti#0978
lemme send you a private jar in ~2 hours


[10/28/2020 10:52 AM] kushti#0978
with connectivity fixes also


[10/28/2020 10:55 AM] Robert K#0722
Great, thanks.


[10/28/2020 12:11 PM] kushti#0978
@Robert K please try https://anonymousfiles.io/Gd9FLdY1/ and send me logs after ~10 minutes

{Embed}
https://anonymousfiles.io/Gd9FLdY1/
ergo.jar
Anonymous file sharing with zero logs, zero speed or bandwidth restrictions, large upload size - Anonymous Files.
https://images-ext-2.discordapp.net/external/wtqZ3vV3piyaTa-HUBQ7DO5gKJC-t1GNx1rTZoBpTes/https/anonymousfiles.io/android-icon-192x192.png


[10/28/2020 12:13 PM] kushti#0978
there's some exception now being printed


[10/28/2020 1:37 PM] Robert K#0722
@greenhat @kushti Here's the rough code I've been working on for the `BoxSpec` stuff: https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/src/box_spec.rs

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/src/box_spec.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/28/2020 1:37 PM] Robert K#0722
It's super rough so I didn't want to share publicly yet üòÖ


[10/28/2020 1:38 PM] Robert K#0722
Don't think I'll have too much spare time to finish it off, but I wanted to get the basic idea down for the future.


[10/28/2020 1:43 PM] greenhat#6562
@Robert K Neat! Wanna make a PR out of this branch to have comments? Using NanoErg type for token amounts in TokenSpec caught my eye. üôÇ


[10/28/2020 1:45 PM] Robert K#0722
Good catch. That was a result of bad editing after copy pasting üôÇ


[10/28/2020 1:46 PM] Robert K#0722
And sure will do


[10/28/2020 1:47 PM] Robert K#0722
https://github.com/robkorn/ergo-utilities-rust/pull/3

{Embed}
https://github.com/robkorn/ergo-utilities-rust/pull/3
Ergo Protocol Framework V0.2 by robkorn ¬∑ Pull Request #3 ¬∑ robkorn...
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/28/2020 3:33 PM] Robert K#0722
The first `Mint StableCoin` action has been posted: https://explorer.ergoplatform.com/en/transactions/e497a33807b5b97402fc5733ff68619be19a50fa5632ce56ad9edab8aa806cc2

{Reactions}
üòç (2) 

[10/28/2020 3:34 PM] Robert K#0722
And thus I have minted a single USD-StableCoin with v0.1 of our StableCoin protocol using the Erg/USD deviation-checking oracle pool.

{Reactions}
üòç (2) 

[10/28/2020 3:34 PM] Robert K#0722
Pretty cool.


[10/28/2020 3:58 PM] Robert K#0722
And here is the `Redeem StableCoin` action: https://explorer.ergoplatform.com/en/transactions/024b027c0065f07799208ff9ffd639289b5d9c1262ca47153a0140590fa40801


[10/28/2020 4:00 PM] Robert K#0722
Hmmm....


[10/28/2020 4:01 PM] Robert K#0722
@scalahub I think we didn't convert the oracle datapoint properly.


[10/28/2020 4:01 PM] Robert K#0722
The minting/redeeming StableCoin actions worked perfectly, in that the amount deposited/withdrawn was 1:1 between the two above txs.


[10/28/2020 4:02 PM] Robert K#0722
However said stablecoin was valued at:
`0.3576370` Ergs


[10/28/2020 4:03 PM] Robert K#0722
The current price of Ergs are $0.46, so it should be at least 2 Ergs, not under 0.5


[10/28/2020 5:57 PM] scalahub#2618
yes good catch.. looks like a bug ..what is the r4 of the oracle box actually @Robert K ?


[10/28/2020 5:58 PM] scalahub#2618
I'm not able to see the data inputs from explorer. can you paste the box id of the oracle pool box


[10/28/2020 6:00 PM] scalahub#2618
nevermind. its here https://api.ergoplatform.com/api/v0/transactions/024b027c0065f07799208ff9ffd639289b5d9c1262ca47153a0140590fa40801


[10/28/2020 6:05 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771072124604514354/test.png


[10/28/2020 6:05 PM] scalahub#2618
what is this unit BTW?


[10/28/2020 6:07 PM] scalahub#2618
here is the pool box https://api.ergoplatform.com/api/v0/transactions/boxes/9e289deab858c3f14c7056e568cfa1026c01242d151a94b165268b650e9ac966


[10/28/2020 6:11 PM] scalahub#2618
@Robert K what are the units of this  `357637000`


[10/28/2020 6:11 PM] scalahub#2618
maybe we can keep the stablecoin contract same and change the value in the pool box to correspond to the units we need?


[10/29/2020 8:20 AM] Robert K#0722
@scalahub The units of the oracle pool are how many nanoErgs *per* USD


[10/29/2020 8:20 AM] Robert K#0722
We chose to use this value to avoid decimals and to have an accurate value.


[10/29/2020 8:21 AM] Robert K#0722
It makes more sense to edit the StableCoin calculations to match this


[10/29/2020 8:21 AM] Robert K#0722
For the oracle pool frontend I already do the calculation to get Erg/USD, so let me just take a look at the code there and I'll paste the equation here.


[10/29/2020 8:23 AM] Robert K#0722
```rust
(1.0 / datapoint as f64) * 1000000000.0
```


[10/29/2020 8:26 AM] Robert K#0722
But that uses floats/is the calculation to get Erg/USD


[10/29/2020 8:27 AM] Robert K#0722
@scalahub @greenhat are your oracles running for the deviation pool btw? It seems to have paused.


[10/29/2020 8:28 AM] scalahub#2618
its running but throwing error


[10/29/2020 8:29 AM] scalahub#2618
> It makes more sense to edit the StableCoin calculations to match this
@Robert K sure.. will do some tests and update the contract in a bit


[10/29/2020 8:30 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771289745137336340/unknown.png


[10/29/2020 8:30 AM] Robert K#0722
What datapoint did your oracle post @scalahub ?


[10/29/2020 8:30 AM] scalahub#2618
for now maybe if you want to continue testing the simplest way would be to change the data point unit for the oracle pool (maybe push it in a test branch and I'll sync with that)


[10/29/2020 8:31 AM] scalahub#2618
```Oracle Datapoint State
--------------------
Your Latest Datapoint: 2195100535
Datapoint Origin Epoch ID: f094ce6a1ad0b8f37b4bb763051ce4bd11fb7ff4c1f06ef66769d879bd5b4d1e
Submitted At: 349434
========================================================

The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(Gxd4hMRT5aE7dxAoMpvcP1G5cnu2snDfDoToVhtMzx1vUHmQtsMPMauXZ38p2j3hDmdAuGqu1uA94ULrFPGnhKvfKLuvDjsxHyoXXJJQzxQHGJSMUjvGmhGJNThMd7FoXsZqqN1vN2Vf4tXhekZfrHhYtr8GbFPL8drdgD4QftfSFWqxTsmBskxKBxcytmaLSQjQzcPEs5xUbjR1r4Ym5KoUUQKKYKNLFZMVLzzm2yqcmW6YwXGA7NEjZ41Fz9eG6Q7bJxxhXrZXshXpfXbWf6i1fRssNgJfuBLYa43Px8HXfc3CvvQcXAtixLYqHcKfeSiZVt2exXM97LPcSeNHhzEj242aVbcspL4GJUvVmGFGoqfZcYD39YQv8sVVrehGpsAqmSjQnerkG7,18471500000,List(([B@4dc4b58e,1)),Map(R4 -> LongConstant(2195100535), R5 -> IntConstant(349338))), PaymentRequest(9gEn3XctxRx7GwLNpu1pevckKMvSVrx5ZizBwMxFZaWa2UbVBLo,4000000,List(),Map(R4 -> IntConstant(0))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V....
```


[10/29/2020 8:33 AM] Robert K#0722
That datapoint is pretty old, we're on `349595` now


[10/29/2020 8:33 AM] Robert K#0722
Is your node working properly?


[10/29/2020 8:33 AM] scalahub#2618
looks like my node was stuck @kushti using 3.3.5


[10/29/2020 8:33 AM] scalahub#2618
just restarted


[10/29/2020 8:33 AM] Robert K#0722
Ah, that makes sense.


[10/29/2020 8:34 AM] Robert K#0722
> for now maybe if you want to continue testing the simplest way would be to change the data point unit for the oracle pool (maybe push it in a test branch and I'll sync with that)
@scalahub I can continue testing with the current numbers to see if the other logic in the contracts works as it's not really relevant.

{Reactions}
üëç 

[10/29/2020 8:35 AM] Robert K#0722
> @Robert K what are the units of this  `357637000`
@scalahub How did you get this number by the way? The latest oracle pool datapoint is `2181673600`


[10/29/2020 8:35 AM] scalahub#2618
it was in R4 of the oracle pool box used as datapoint in the tx


[10/29/2020 8:36 AM] scalahub#2618
https://discord.com/channels/668903786361651200/702853765660934194/771072125771186236


[10/29/2020 8:36 AM] Robert K#0722
That is super weird, the oracle core is reporting that number as `2181673600`


[10/29/2020 8:38 AM] scalahub#2618
is it the same box?


[10/29/2020 8:39 AM] scalahub#2618
```"dataInputs":[{"id":"9e289deab858c3f14c7056e568cfa1026c01242d151a94b165268b650e9ac966"...```


[10/29/2020 8:39 AM] Robert K#0722
Well I'm just looking at the CLI of the oracle core which is reporting the number


[10/29/2020 8:40 AM] scalahub#2618
yes it must be the same box becaus its still unspent as per explorer.. (not sure if explorer is correct)


[10/29/2020 8:40 AM] scalahub#2618
https://api.ergoplatform.com/api/v0/transactions/boxes/9e289deab858c3f14c7056e568cfa1026c01242d151a94b165268b650e9ac966


[10/29/2020 8:40 AM] Robert K#0722
Wait, you're reading R4?


[10/29/2020 8:41 AM] scalahub#2618
I think your code (or sigma-rust) needs to remove the "type" before decoding the register


[10/29/2020 8:41 AM] scalahub#2618
but not the datapoint, the pool box


[10/29/2020 8:41 AM] Robert K#0722
Ah, I think you're right.


[10/29/2020 8:42 AM] Robert K#0722
So you're saying sigma-rust(ergo-lib) is encoding it improperly?


[10/29/2020 8:42 AM] scalahub#2618
yes but I think decoding


[10/29/2020 8:42 AM] Robert K#0722
Because the value it gets is correct


[10/29/2020 8:43 AM] Robert K#0722
`2181673600` is the right nanoErgs per USD value


[10/29/2020 8:43 AM] scalahub#2618
ah its both then


[10/29/2020 8:44 AM] kushti#0978
> looks like my node was stuck @kushti using 3.3.5
@scalahub PMing )


[10/29/2020 8:44 AM] scalahub#2618
@kushti @greenhat can you please check what this value in register actually means as per Ergo Spec `0590ee88d502`


[10/29/2020 8:45 AM] kushti#0978
sec


[10/29/2020 8:46 AM] scalahub#2618
> However said stablecoin was valued at:
> `0.3576370` Ergs
@Robert K  your code still somehow got that value.. can you check this?


[10/29/2020 8:46 AM] Robert K#0722
Yeah, looking into both codebases to see what's going on.


[10/29/2020 8:48 AM] kushti#0978
@scalahub LongConstant(357637000)

{Reactions}
üëç 

[10/29/2020 8:49 AM] scalahub#2618
@Robert K for reference, this is snippet used to decode
https://github.com/scalahub/Kiosk/blob/0ed221d5dfc5e7515187acb29c3990fc89ccfa72/src/main/scala/kiosk/encoding/ScalaErgoConverters.scala#L37-L51

{Embed}
https://github.com/scalahub/Kiosk/blob/0ed221d5dfc5e7515187acb29c3990fc89ccfa72/src/main/scala/kiosk/encoding/ScalaErgoConverters.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[10/29/2020 8:50 AM] Robert K#0722
So this is the logic used for serializing the long when posting a datapoint on-chain:

https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs#L38-L42

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/29/2020 8:50 AM] Robert K#0722
And for deserializing: https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs#L66-L73

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/29/2020 8:50 AM] Robert K#0722
Effectively just wrapper functions around ergo-lib rust.


[10/29/2020 8:51 AM] Robert K#0722
And this is the commit datapoint action where its being serialized https://github.com/ergoplatform/oracle-core/blob/deviation-check/src/actions.rs#L42

{Embed}
https://github.com/ergoplatform/oracle-core/blob/deviation-check/src/actions.rs
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/29/2020 8:51 AM] Robert K#0722
And deserialized to read the state: https://github.com/ergoplatform/oracle-core/blob/deviation-check/src/oracle_state.rs#L227

{Embed}
https://github.com/ergoplatform/oracle-core/blob/deviation-check/src/oracle_state.rs
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/29/2020 8:52 AM] Robert K#0722
So it looks like long serialization/deserialization is broken in ergo-lib?


[10/29/2020 8:52 AM] Robert K#0722
But I don't understand how in the StableCoin off-chain code it produced valid txs that got accepeted if that is the case.

{Reactions}
ü§î 

[10/29/2020 8:52 AM] kushti#0978
@Robert K is everything ok with oracle pools? on explorer, outdated height (349332 / 349327) reported


[10/29/2020 8:53 AM] Robert K#0722
On which pool? @kushti


[10/29/2020 8:53 AM] kushti#0978
old ones


[10/29/2020 8:53 AM] kushti#0978
https://explorer.ergoplatform.com/en/oracle-pool-state/ergusd


[10/29/2020 8:55 AM] Robert K#0722
My node got stuck for the old pools


[10/29/2020 8:55 AM] Robert K#0722
I guess everyone's did and it just stalled (v3.3.6 will be very important for the oracle pool when we launch the stablecoin to ensure they stay up)


[10/29/2020 8:56 AM] scalahub#2618
@Robert K maybe first check that `0590ee88d502` should deserialize to `LongConstant(357637000)` then the rest will become clear


[10/29/2020 8:56 AM] Robert K#0722
If everyone here could check their old oracles nodes to ensure they're up too, that'd be great.


[10/29/2020 8:57 AM] Robert K#0722
> @Robert K maybe first check that `0590ee88d502` should deserialize to `LongConstant(357637000)` then the rest will become clear
@scalahub Will do


[10/29/2020 9:00 AM] kushti#0978
> My node got stuck for the old pools
@Robert K I guess because few nodes from seed list with open API got DoSed too


[10/29/2020 9:02 AM] Robert K#0722
Ah I see.


[10/29/2020 9:02 AM] Robert K#0722
So ergo-lib rust seems to serialize properly directly using
```rust
        let c = Constant::from(357637000 as i64);
        println!("Constant: {:?} -- {:?}", c, c.base16_str());
```


[10/29/2020 9:03 AM] Robert K#0722
Result:
```rust
Constant: Constant { tpe: SLong, v: Long(357637000) } -- "0590ee88d502"
```


[10/29/2020 9:03 AM] Robert K#0722
I'll check if my helper functions break it?


[10/29/2020 9:08 AM] Robert K#0722
It all seems fine:
```rust
Constant: Constant { tpe: SLong, v: Long(357637000) } -- "0590ee88d502"
My Serialized: "0590ee88d502"
My Deserialized: Ok(357637000)
```


[10/29/2020 9:08 AM] Robert K#0722
Though I think maybe I screwed up what value is being serialized in the oracle core?


[10/29/2020 9:10 AM] scalahub#2618
> That is super weird, the oracle core is reporting that number as `2181673600`
@Robert K then some issue here?


[10/29/2020 9:12 AM] Robert K#0722
Yes, but where is "here" is the question


[10/29/2020 9:15 AM] greenhat#6562
> And for deserializing: https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs#L66-L73
@Robert K I don't see deserialization here. How do you get `Constant` instance?

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/master/ergo-offchain-utilities/src/encoding.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[10/29/2020 9:16 AM] greenhat#6562
I mean from hex-decoded bytes


[10/29/2020 9:18 AM] Robert K#0722
In the oracle pool case I get a json from the ergo node which I import which provides me with the `Constant`s


[10/29/2020 9:19 AM] Robert K#0722
I suppose naming that "deserialization" is indeed false.


[10/29/2020 9:20 AM] greenhat#6562
Got it. Yeah, that word tripped me up.


[10/29/2020 9:20 AM] Robert K#0722
Most of those functions were made when I understood less of what was going on under the hood, my bad.


[10/29/2020 9:22 AM] greenhat#6562
@Robert K I checked the code posted above and I did not see a problem with ser/deser in both scala and rust. I'm taking a closer look.


[10/29/2020 9:28 AM] Robert K#0722
Thanks.


[10/29/2020 9:31 AM] kushti#0978
@Robert K please use private jar for oracle pools. Hopefully 3.3.6 will be proposed for review today


[10/29/2020 9:34 AM] Robert K#0722
Alright cool, will do


[10/29/2020 9:41 AM] greenhat#6562
I still don‚Äôt see any problems in these pieces of code (ser/deser). @Robert K I‚Äôm going to checkout oracle core and check the whole code path.


[10/29/2020 9:42 AM] greenhat#6562
@Robert K the issue is that somehow oracle core ends up encoding 2.1 ergs as 0.3, right?


[10/29/2020 9:46 AM] Robert K#0722
Yes


[10/29/2020 9:49 AM] Robert K#0722
I'm looking into it now a well, updating the codebase to the latest ergo lib and then debugging


[10/29/2020 10:09 AM] kushti#0978
@Robert K for oracle pools progress some manual efforts needed (again) ?


[10/29/2020 10:15 AM] Robert K#0722
@kushti Potentially, depending on the current state


[10/29/2020 10:15 AM] Robert K#0722
My node is really far behind and needs to catch up before I can post new txs


[10/29/2020 10:16 AM] kushti#0978
I see, thanks!


[10/29/2020 10:17 AM] Robert K#0722
If you have an oracle core running in the old pools and they aren't posting (or are failing because outside of the outlier range)


[10/29/2020 10:17 AM] Robert K#0722
then you can also post a datapoint manually to the oracle-core


[10/29/2020 10:17 AM] Robert K#0722
just make a http post request with a "datapoint" field in the body json with the number


[10/29/2020 10:18 AM] Robert K#0722
But I can just do it when my node catches up


[10/29/2020 10:30 AM] Robert K#0722
@scalahub @greenhat I am genuinely confused what is broken.


[10/29/2020 10:30 AM] Robert K#0722
So the oracle core is reporting that the latest datapoint is `Pool Datapoint (r4): Constant { tpe: SLong, v: Long(1991861254) }, "058c90cbeb0e"
`


[10/29/2020 10:30 AM] Robert K#0722
And that is R4 in output 0 in this transaction: https://explorer.ergoplatform.com/en/transactions/5deff3e69ca875b861c354d9ee3a3febeb2cd7a1ca7d4620c3f902661e9e389e


[10/29/2020 10:31 AM] Robert K#0722
@scalahub Can you test that value to make sure it is correct in scala?


[10/29/2020 10:34 AM] greenhat#6562
@Robert K The value (in r4) seems correct. What is the next step?


[10/29/2020 10:35 AM] greenhat#6562
I did not find anything suspicious in oracle-core so far.


[10/29/2020 10:35 AM] Robert K#0722
So then it appears that the problem is in the StableCoin afterall in how it uses said value


[10/29/2020 10:47 AM] scalahub#2618
> @scalahub Can you test that value to make sure it is correct in scala?
@Robert K `058c90cbeb0e` decodes to to `1991861254` even for me


[10/29/2020 10:54 AM] Robert K#0722
@scalahub I'm not sure how you found a value that was supposedly being encoded wrong earlier?


[10/29/2020 11:03 AM] Robert K#0722
Hmm, I think our stablecoin nominal price equation is the problem here


[10/29/2020 11:03 AM] Robert K#0722
`val scNominalPrice = min(rate, liableRate)`


[10/29/2020 11:03 AM] Robert K#0722
or in my case


[10/29/2020 11:03 AM] Robert K#0722
```rust
    pub fn stablecoin_nominal_price(&self, oracle_rate: u64) -> u64 {
        if self.num_circulating_stablecoins() == 0 {
            return oracle_rate;
        } else {
            return self.liabilities(oracle_rate) / self.num_circulating_stablecoins();
        }
    }
```


[10/29/2020 11:08 AM] Robert K#0722
Ah, I see, in Bruno's original code he had:
```scala

  private def stablecoinNominalPrice(r: N, sc: N): N = {
    val p = oracle.conversionRate(peg, base)
    if (sc == 0) p else min(p, liabilities(r, sc)/sc)
  }
```


[10/29/2020 11:14 AM] Robert K#0722
So I think there's two things to note:
1. I screwed up encoding the same logic in the off-chain code (didn't take the min), however it seems to still have worked because the `liableRate` was less than the oracle_rate(aka `rate`)


[10/29/2020 11:20 AM] Robert K#0722
2. I don't understand why the oracle_rate isn't working as expected to keep the USD peg.


[10/29/2020 11:27 AM] Robert K#0722
Hmm, so in the StableCoin CLI, when attempting to mint the oracle_rate is:
```rust
Oracle Rate: 357637000
Liability Rate: 357637000
```


[10/29/2020 11:35 AM] Robert K#0722
I think I've found the problem.


[10/29/2020 11:36 AM] Robert K#0722
@scalahub The oracle pool nft isn't an NFT, right?


[10/29/2020 11:37 AM] Robert K#0722
My oracle pool scan in the stablecoin CLI found a bunch of different boxes

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771336827432730624/message.txt


[10/29/2020 11:38 AM] Robert K#0722
And so the UTXO-set scan is just using some random old box as a data-input that has the long value `357637000` in it


[10/29/2020 11:38 AM] scalahub#2618
yes currently the deviation pool one is not an nft


[10/29/2020 11:38 AM] scalahub#2618
(its a test token)


[10/29/2020 11:39 AM] scalahub#2618
I guess we should launch a new pool for testinmg


[10/29/2020 11:39 AM] Robert K#0722
Right, but that's rather crappy to reuse because the utxo-set scan was just set to find the NFT (due to there being 2 stages).


[10/29/2020 11:39 AM] scalahub#2618
or we could use the live one for testing stablecoin.. that is indeed an nft


[10/29/2020 11:40 AM] Robert K#0722
But that would entail re-deploying, right?


[10/29/2020 11:41 AM] scalahub#2618
yes so if we want to continue testing stablecoin and new deviation pool, then we need to redeploy both
if we want to test stablecoin with old pool then we need to deploy only stablecoin


[10/29/2020 11:42 AM] Robert K#0722
Hmm, so then redeploy the stablecoin for the old pool sounds good.


[10/29/2020 11:42 AM] scalahub#2618
yes and then we can redeploy the new pool afterwards


[10/29/2020 11:43 AM] Robert K#0722
You mean afterwards in regards to for the release/lauch of deviation checking?


[10/29/2020 11:50 AM] scalahub#2618
yes exactly


[10/29/2020 11:51 AM] scalahub#2618
because Im guessing even that can be messed up due to non-nft


[10/29/2020 11:52 AM] Robert K#0722
Sounds good


[10/29/2020 11:53 AM] Robert K#0722
And @kushti The old pool is working properly, however the Egro node got stuck on height `349333`


[10/29/2020 11:53 AM] Robert K#0722
Asking Marek for logs now.


[10/29/2020 12:41 PM] Robert K#0722
@scalahub The cli now has improved status printing so we can see a lot more of what is going on:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771353097213575168/unknown.png


[10/29/2020 12:44 PM] kushti#0978
> Asking Marek for logs now.
@Robert K good, thanks! Version also would be useful

{Reactions}
üëå 

[10/29/2020 2:20 PM] Robert K#0722
@scalahub Are you going to bootstrap a new stablecoin instance today?


[10/29/2020 2:22 PM] Robert K#0722
Or do we maybe want to try and integrate the update protocol too?


[10/29/2020 2:23 PM] scalahub#2618
update protocol not sure when it'll be done


[10/29/2020 2:23 PM] scalahub#2618
I was planning to bootstrap sometime later today..


[10/29/2020 2:24 PM] Robert K#0722
You already wrote the voting portion, which is most of the logic, right?


[10/29/2020 2:25 PM] Robert K#0722
We theoretically just add an extra spending path to the bank contract that allows for updating the output ergotree


[10/29/2020 2:36 PM] Robert K#0722
Hmm, due to my manual tx creation I think I may have by mistake burned ReserveCoins while minting StableCoins, hah.


[10/29/2020 4:32 PM] scalahub#2618
about using the v0.2 contract, let me revert by tomorrow on the amount of testing / design needed. If not too much we could use it instead. 
Also, today won't be able to bootstrap. got tied up in debugging the voting and need to crash. so will update tomorrow on the plan of action


[10/29/2020 4:40 PM] Robert K#0722
Alright, sounds good.


[10/29/2020 4:40 PM] Robert K#0722
On my end I was testing the CLI/protocol we have right now and will be adding extra checks tomorrow to prevent token burning.


[10/30/2020 8:03 AM] scalahub#2618
@Robert K v0.2 is not so simple as just adding a new path. Because of the not-so-lazy-evaluation, the other path won't work. Need a lot of tweaks and testing


[10/30/2020 8:04 AM] scalahub#2618
so if you really wanna do it in 0.2, I'll need to create the mockups and test + debug until it works.. so contracts will be ready maybe mid of next week

{Reactions}
üëç (2) 

[10/30/2020 8:06 AM] scalahub#2618
meantime today I'm working on automating parts of the bootstrap process like we have for oracle pool

{Reactions}
üëç (2) 

[10/30/2020 8:08 AM] kushti#0978
@Robert K Fixing /scan/addBox

{Reactions}
üíØ 

[10/30/2020 8:09 AM] scalahub#2618
for the updatable contracts variant, I think simplest approach is to decide the path using token id in data inputs and then extract registers based on which path.


[10/30/2020 8:41 AM] scalahub#2618
lets move the bootstrap of the test stablecoin to mid next week.. By then I should have both contracts (vote + bank) tested a bit.. so the plan is to have the mocks for both paths (update + exchange) working and then I'll bootstrap


[10/30/2020 8:46 AM] Robert K#0722
> @Robert K v0.2 is not so simple as just adding a new path. Because of the not-so-lazy-evaluation, the other path won't work. Need a lot of tweaks and testing
@scalahub Hmm, I think I'm not understanding how the strict evaluation prevents other paths from working.


[10/30/2020 8:47 AM] Robert K#0722
What prevents you from encoding a boolean check if Input 0 has token id X in token index 0?


[10/30/2020 8:47 AM] scalahub#2618
it does.. in one case dataInputs(0).R4 has Coll[Byte] and in other case it has Long


[10/30/2020 8:47 AM] Robert K#0722
And then evaluating update logic, or otherwise the other paths


[10/30/2020 8:47 AM] scalahub#2618
and same with other case.. the default path requires receipt box etc


[10/30/2020 8:47 AM] scalahub#2618
yes so the contracts need to be twaked.. its just not add a new path


[10/30/2020 8:47 AM] Robert K#0722
But that's only if you put all the logic for reading data from registers before the logical check, right?


[10/30/2020 8:48 AM] scalahub#2618
and I want to test the various paths because later on your offchain should not get stuck because of this


[10/30/2020 8:49 AM] scalahub#2618
so I want to test both voting and bank contracts to work


[10/30/2020 8:49 AM] Robert K#0722
Sounds good.


[10/30/2020 8:49 AM] scalahub#2618
> What prevents you from encoding a boolean check if Input 0 has token id X in token index 0?
@Robert K hmm yes thats is what Im planning


[10/30/2020 8:49 AM] Robert K#0722
> yes so the contracts need to be twaked.. its just not add a new path
@scalahub I mean effectively it's just wrapping the v0.1 contract in a spending path if the update token isn't there.


[10/30/2020 8:50 AM] scalahub#2618
if I understood, we decide the paths based on token id.. but i recall that in some cases there was still issue even with if condition


[10/30/2020 8:51 AM] scalahub#2618
and I think a CLI like we have for oraclepool is needed


[10/30/2020 8:51 AM] scalahub#2618
because bootstrap is quite involved


[10/30/2020 8:51 AM] Robert K#0722
Hmm, issue in regards to what? Can't you use an option for example to check existence of a register value?


[10/30/2020 8:51 AM] Robert K#0722
Yeah, a bootstrap CLI sounds good.


[10/30/2020 8:51 AM] scalahub#2618
> Hmm, issue in regards to what? Can't you use an option for example to check existence of a register value?
@Robert K yes exactly going to do something like that.. I mean I kind of know what to do


[10/30/2020 8:52 AM] Robert K#0722
üëç


[10/30/2020 8:52 AM] Robert K#0722
I'll implement commands into the stablecoin CLI for voting for updates/issuing the update tx too.


[10/30/2020 8:53 AM] scalahub#2618
do you want to look at 0.3?


[10/30/2020 8:53 AM] scalahub#2618
hardwired fee, so no additional registers needed, just new script


[10/30/2020 8:54 AM] scalahub#2618
btw for bootstrap were you planning to add to the offchain?


[10/30/2020 8:55 AM] Robert K#0722
Currently on my to do list:
1. Fix my tx creation logic to never burn any other tokens which happened to be part of the input boxes.
2. Cleanup/abstract out as much code from the existing actions so that it's easier to read/more general.
3. Test more edgecases in the live contract we have running to see if they all work as expected.


[10/30/2020 8:55 AM] scalahub#2618
if so I can skip CLI


[10/30/2020 8:55 AM] scalahub#2618
I think token burn prevention should be in sigma-rust?


[10/30/2020 8:56 AM] Robert K#0722
No, we'll only bootstrap the live protocol once so I think it doesn't make sense to add more commands. Also I think the scala appkit lib is probably easier to implement a bootstrap CLI quickly.


[10/30/2020 8:56 AM] Robert K#0722
I'm doing manual tx creation in the code.


[10/30/2020 8:56 AM] Robert K#0722
Box selection with specific indexed inputs wasn't implemented when I wrote the code.


[10/30/2020 8:58 AM] scalahub#2618
my to do list today and next week:
1. Create bootstrap CLI (create tokens, create bank box)
2. Update bank with new spending path
3. Test voting, exchange and update actions using mocks
4. Create CLI for exchange (like an alternative to rust) , if needed


[10/30/2020 9:00 AM] Robert K#0722
Why would we need a 2nd CLI for minting/redeeming?


[10/30/2020 9:00 AM] scalahub#2618
not needed but it will not be too much more code from the mocks


[10/30/2020 9:01 AM] scalahub#2618
or maybe for the update


[10/30/2020 9:01 AM] Robert K#0722
Can't we skip the mocks for exchanging since we already have the off-chain code for that working?


[10/30/2020 9:01 AM] Robert K#0722
And just do mocks for updating


[10/30/2020 9:01 AM] scalahub#2618
sounds good


[10/30/2020 9:02 AM] scalahub#2618
anyway no need to skip mocks for exchanging.. its already there. üòÑ


[10/30/2020 9:02 AM] Robert K#0722
Ah, I see haha


[10/30/2020 9:03 AM] scalahub#2618
so i mean if they break then it means your offchain will break.. need to ensure they work


[10/30/2020 9:03 AM] scalahub#2618
btw so I will not wait to inform you before bootstrapping.. as soon as I'm ready I'll generate tokens and you can manaully add scan later..

{Reactions}
üëç 

[10/30/2020 9:04 AM] scalahub#2618
we can test if scan works separately in another node


[10/30/2020 9:05 AM] scalahub#2618
and maybe instead of exchange, I'll do update CLI


[10/30/2020 9:06 AM] Robert K#0722
Wouldn't it be better to keep all the logic together in one CLI (update/exchange)? I don't see why we need to make it more complicated by having 2 and spending more time on that?


[10/30/2020 9:07 AM] Robert K#0722
I already have everything set up to find the bank boxes, I have a framework in Rust which easily makes registering/getting boxes from scans.


[10/30/2020 9:09 AM] Robert K#0722
I think a bootstrap CLI is fine to have separate as the logic is effectively completely different to the rest of the protocol and only needs to happen once.


[10/30/2020 9:09 AM] Robert K#0722
But when we have Emurgo/EF people voting for updates to the protocol, getting them to use a .jar + a rust compiled binary seems chaotic and not a good use of time on our end for recreating the wheel.


[10/30/2020 9:18 AM] scalahub#2618
Sure. I can skip that    üòÉ  the only reason was that update is a rare case and didn't know if u wanted to add to rust

{Reactions}
üëç 

[10/30/2020 9:20 AM] scalahub#2618
I have enough on my plate anyway üòé


[10/30/2020 9:26 AM] kushti#0978
@scalahub with "if" bypassing non-so-laziness is pretty easy imho , like 
val defined = OUTPUTS(0).R2[Coll[(Coll[Byte], Long)]].isDefined && OUTPUTS(0).R4[Coll[Byte]].isDefined

{Reactions}
üëç (2) 

[10/30/2020 9:26 AM] kushti#0978
if(defined) {} else {}


[10/30/2020 9:41 AM] scalahub#2618
And `box R4[Int].get` in one branch and `box.R4[something else]` in another branch should be fine?


[10/30/2020 10:03 AM] kushti#0978
another type ?


[10/30/2020 10:04 AM] kushti#0978
https://www.ergoforum.org/t/registers-and-types/220

{Embed}
https://www.ergoforum.org/t/registers-and-types/220
Registers and types
By @morphic with very minor edits of mine:  ErgoScript (as well as ErgoTree) is typed, so accessing a register is an operation which involves some expected type given in brackets. Thus SELF.R4[Int] expression should evaluate to a valid value of the Option[Int] type.  For examp...


[10/30/2020 10:06 AM] kushti#0978
you need to use a type tag from another register then


[10/30/2020 10:36 AM] Robert K#0722
@scalahub The contracts allow for other tokens to be held in the receipt box, right?


[10/30/2020 10:37 AM] scalahub#2618
> @scalahub The contracts allow for other tokens to be held in the receipt box, right?
@Robert K yes


[10/30/2020 10:42 AM] Robert K#0722
Cool, thanks.


[10/30/2020 11:37 AM] Robert K#0722
@scalahub Can we also make the RC default price like 1,000,000 for the next bootstrap?


[10/30/2020 12:00 PM] Robert K#0722
@kushti Are the miners just not including txs right now?


[10/30/2020 12:00 PM] Robert K#0722
For the deviation checking oracle pool the epoch ended `350404`


[10/30/2020 12:00 PM] Robert K#0722
And the txs to start/create a new epoch have not been getting included


[10/30/2020 12:00 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/8b8f0a0269dee523362dac659d2552cc076d2029154c6561ab0f57cabf47971d


[10/30/2020 12:00 PM] Robert K#0722
It's currently `350427`


[10/30/2020 12:15 PM] kushti#0978
@Robert K trying to understand what's going on. some txs are included, others not


[10/30/2020 12:18 PM] kushti#0978
e.g. https://explorer.ergoplatform.com/en/blocks/ef48ef4d7a41a6e16e11adf2c6cf1ce13b27d9b1a169a0aa2bf4ce1f3279a767/transactions


[10/30/2020 12:18 PM] kushti#0978
just included


[10/30/2020 12:23 PM] kushti#0978
will configure seed nodes to do more aggressive re-broadcasting of transactions

{Reactions}
üëç 

[10/30/2020 12:23 PM] kushti#0978
maybe it will help


[10/30/2020 12:57 PM] Robert K#0722
The deviation check oracle pool can be followed at this address for reference (for epoch prep): https://explorer.ergoplatform.com/en/addresses/Gxd4hMRT5aE7dxAoMpvcP1G5cnu2snDfDoToVhtMzx1vUHmQtsMPMauXZ38p2j3hDmdAuGqu1uA94ULrFPGnhKvfKLuvDjsxHyoXXJJQzxQHGJSMUjvGmhGJNThMd7FoXsZqqN1vN2Vf4tXhekZfrHhYtr8GbFPL8drdgD4QftfSFWqxTsmBskxKBxcytmaLSQjQzcPEs5xUbjR1r4Ym5KoUUQKKYKNLFZMVLzzm2yqcmW6YwXGA7NEjZ41Fz9eG6Q7bJxxhXrZXshXpfXbWf6i1fRssNgJfuBLYa43Px8HXfc3CvvQcXAtixLYqHcKfeSiZVt2exXM97LPcSeNHhzEj242aVbcspL4GJUvVmGFGoqfZcYD39YQv8sVVrehGpsAqmSjQnerkG7


[10/30/2020 12:57 PM] Robert K#0722
Still hasn't been accepted ü§î


[10/30/2020 12:58 PM] Robert K#0722
I think the old oracle pools look like they're good though


[10/30/2020 12:59 PM] Robert K#0722
Weird


[10/30/2020 1:03 PM] kushti#0978
Yes, because of the fee probably


[10/30/2020 1:05 PM] Robert K#0722
But the blocks seem so empty?


[10/30/2020 1:05 PM] Robert K#0722
Or are they being filtered out you think for too lower fee/byte?


[10/30/2020 1:10 PM] kushti#0978
yes, looks like filtered by fee/byte


[10/30/2020 1:10 PM] kushti#0978
not sure why


[10/30/2020 1:18 PM] Robert K#0722
Yeah, increased base tx fee to `1200000` from `1000000` and it got accepted


[10/30/2020 1:20 PM] kushti#0978
weird


[10/30/2020 1:33 PM] kushti#0978
checking if it is about propagation or not


[10/30/2020 1:34 PM] kushti#0978
@Robert K finishing /scan/addBox, turns out to be more involved than planned )

{Reactions}
üëç 

[10/30/2020 2:04 PM] scalahub#2618
@Robert K @kushti I've added the basic update path as per your suggestions.. going to be testing it now.. Please review if you can in the meantime https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/main/scala/stablecoin/v2/Bank.scala


[10/30/2020 2:12 PM] scalahub#2618
@kushti @Robert K the older spending path also now breaks (as I suspected). Please see if you can debug this error in the attached file

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771738214679445534/error


[10/30/2020 2:13 PM] scalahub#2618
somehow contract still executing both paths


[10/30/2020 2:14 PM] scalahub#2618
> @scalahub with "if" bypassing non-so-laziness is pretty easy imho , like 
> val defined = OUTPUTS(0).R2[Coll[(Coll[Byte], Long)]].isDefined && OUTPUTS(0).R4[Coll[Byte]].isDefined
@kushti @Robert K Can you suggest how to apply this logic in the v2 contract?


[10/30/2020 2:18 PM] scalahub#2618
This is the test that fails
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2/BankSpec.scala


[10/30/2020 2:21 PM] scalahub#2618
> another type ?
@kushti See the code in the `Bank.scala` file above. In both branches R4 is defined. The problem is in one branch it is defined as `Long` and in other its defined as `Coll[Byte]`. Not sure if the approach in forum post works in this case. It doesn't work in my test at least. In the forum post, different types in R4 are used but the same thing doesn't work in my code


[10/30/2020 2:38 PM] Robert K#0722
Hmmm


[10/30/2020 2:39 PM] Robert K#0722
Is there a way to make `val rate = rateBox.R4[Long].get` return an option which then you check for an None while unwrapping?


[10/30/2020 2:39 PM] Robert K#0722
And if None, then validation fails?


[10/30/2020 2:39 PM] Robert K#0722
To try and make it compile


[10/30/2020 2:40 PM] scalahub#2618
Hmm let me try that and revert


[10/30/2020 2:40 PM] scalahub#2618
But as per forum post my code should work


[10/30/2020 2:45 PM] scalahub#2618
In worst case we will have to put dummy data in some registers


[10/30/2020 2:54 PM] scalahub#2618
@kushti going to test this in a bit but if you know can you quickly let me know what will `foo.R4[Int]` contain if the register actually has a `Coll[Byte]`?


[10/30/2020 2:55 PM] scalahub#2618
Will it be None?


[10/30/2020 2:55 PM] kushti#0978
@scalahub no, as stated in the forum post, it will be an exception


[10/30/2020 2:56 PM] kushti#0978
None means that there's no value of type Int  in R4


[10/30/2020 2:56 PM] kushti#0978
and since value exists, None would break semantics


[10/30/2020 2:56 PM] scalahub#2618
I see


[10/30/2020 3:00 PM] scalahub#2618
Though technically semantics would still not break if it's None since we explicitly asked for Option[Int]


[10/30/2020 3:01 PM] scalahub#2618
Basically it's the semantics of  `Try.toOption`


[10/30/2020 3:01 PM] Robert K#0722
Hmm, those are my thoughts as well ^


[10/30/2020 3:15 PM] kushti#0978
But its about R4.asInstanceOf[Option[Int]] kinda, not try wrapping


[10/30/2020 3:27 PM] kushti#0978
@scalahub going to look into contracts within few minutes


[10/30/2020 3:27 PM] kushti#0978
if still needed


[10/30/2020 3:29 PM] scalahub#2618
Yes please .. as I'm not sure how to handle the error :(


[10/30/2020 3:37 PM] scalahub#2618
I believe we need semantics of `isInstanceOf`.. is it supported?


[10/30/2020 4:04 PM] Robert K#0722
Hmm, on my end the v0.1 contract or my off-chain code seems to be broken for `Mint ReserveCoins`?


[10/30/2020 4:04 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771766437827837952/message.txt


[10/30/2020 4:04 PM] Robert K#0722
I tested minting/redeeming stablecoins works still.


[10/30/2020 4:13 PM] Robert K#0722
I probably won't have time tonight due to meetings to dive into it, but it is rather unfortunate that the above issue has popped up.


[10/30/2020 4:16 PM] scalahub#2618
> Hmm, on my end the v0.1 contract or my off-chain code seems to be broken for `Mint ReserveCoins`?
@Robert K any chance it's due to some tokens not being NFTs that should have been?


[10/30/2020 4:16 PM] Robert K#0722
Sorry, what do you mean by "that should have been"?


[10/30/2020 4:19 PM] scalahub#2618
As per design (right now there is only oracle pool if I recall)


[10/30/2020 4:20 PM] scalahub#2618
The test pool


[10/30/2020 4:21 PM] Robert K#0722
Ah I see what you mean now.


[10/30/2020 4:21 PM] Robert K#0722
I don't think so? The `Mint StableCoin` action works which relies on the oracle exchange rate.


[10/30/2020 4:22 PM] Robert K#0722
The script is just reducing to false now for some reason


[10/30/2020 4:27 PM] kushti#0978
@scalahub I believe getting R4 from rateBox / updateBox should be OK


[10/30/2020 4:27 PM] kushti#0978
how to run and play with code which fails ?


[10/30/2020 4:28 PM] scalahub#2618
can you run this test https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2/BankSpec.scala @kushti


[10/30/2020 4:29 PM] Robert K#0722
@scalahub I think I may have hit an edgecase or something in the smart contract? (or in my off-chain code)


[10/30/2020 4:30 PM] Robert K#0722
I tried commits from the past 3 days (some of which worked for minting reservecoins earlier) and they fail now.


[10/30/2020 4:31 PM] scalahub#2618
I guess you have ruled out that its not due to the oracle pool token not being NFT


[10/30/2020 4:31 PM] Robert K#0722
Yeah, that just provided a fake rate, but everything else works fine


[10/30/2020 4:36 PM] kushti#0978
@scalahub ok will run the test few hours later


[10/30/2020 5:10 PM] scalahub#2618
> @scalahub ok will run the test few hours later
@kushti you just need to pull the repo `git@github.com:Emurgo/stablecoin-project.git` then checkout `utxo-spec` branch and do `sbt test`


[10/30/2020 5:22 PM] scalahub#2618
It fails with this
```[info] BankSpec:
[info] - One complete exchange *** FAILED ***
[info]   scalan.Base$StagingException: Error in Evaluation.compile.evaluate(s12179 -> ThunkForce(s11925))
[info]   at scalan.Base.$bang$bang$bang(Base.scala:36)
[info]   at sigmastate.eval.Evaluation.$anonfun$compile$1(Evaluation.scala:876)
[info]   at sigmastate.eval.Evaluation.$anonfun$compile$5(Evaluation.scala:759)
[info]   at scala.collection.IndexedSeqOptimized.foldLeft(IndexedSeqOptimized.scala:60)
[info]   at scala.collection.IndexedSeqOptimized.foldLeft$(IndexedSeqOptimized.scala:68)
[info]   at scala.collection.mutable.WrappedArray.foldLeft(WrappedArray.scala:38)
[info]   at sigmastate.eval.Evaluation.$anonfun$compile$4(Evaluation.scala:758)
[info]   at sigmastate.eval.Evaluation.$anonfun$compile$8(Evaluation.scala:889)
[info]   at sigmastate.eval.IRContext.$anonfun$checkCostWithContext$1(IRContext.scala:132)
[info]   at scala.runtime.java8.JFunction0$mcI$sp.apply(JFunction0$mcI$sp.java:23)
[info]   ...
[info]   Cause: scalan.Base$StagingException: Error in Evaluation.compile.evaluate(s12133 -> MethodCall(s12131, scalan.Base$Ref special.sigma.CostedObjects$SizeBox.getReg(scalan.Base$Ref,scalan.TypeDescs$Elem), [s12132, CollElem<Coll[Byte]>], true))
[info]   at scalan.Base.$bang$bang$bang(Base.scala:36)```


[10/30/2020 5:34 PM] scalahub#2618
> Hmm, on my end the v0.1 contract or my off-chain code seems to be broken for `Mint ReserveCoins`?
@Robert K so it seems script reduced to false. I am guessing its due to small difference in rouding while division. Do you have the values you had used as input (rate, current reserves, etc) so I can recalculate from my side?


[10/30/2020 5:34 PM] scalahub#2618
because in the mock tests mint reservecoin works


[10/30/2020 5:35 PM] scalahub#2618
or it could either be an edge case that I didn't consider in my mocks


[10/30/2020 6:11 PM] Robert K#0722
@scalahub

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/771798402446524436/unknown.png


[10/30/2020 6:13 PM] Robert K#0722
Oracle rate: `357637000`


[10/30/2020 7:02 PM] scalahub#2618
@Robert K seems to be an issue with two things:
1. reserve ratio exceeds max reserve ratio (reduce rc mined and it works)
2. base reserve correct formula is `bankBox.value - minStorageRent`


[10/30/2020 7:07 PM] scalahub#2618
If you are able to run the code tweak this value and it'll fail at times
https://github.com/Emurgo/stablecoin-project/blob/bc680af5dcbe17a0a816fe49c9c8162a4f5e96ed/ergo-stablecoin/src/test/scala/stablecoin/v1/MintReserveCoinSpec.scala#L78


[10/30/2020 9:14 PM] scalahub#2618
@Robert K @kushti I have effectively run into a blocker and cannot proceed until we find a solution. The suggestions of using Option, etc don't seem to work. 
In order to understand the issue, please try to create a box with the below script and try to spend it using both paths

```{ 
  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
    CONTEXT.dataInputs(0).R4[Long].get <= SELF.value
  } else { // assume Coll[Byte]
    CONTEXT.dataInputs(0).R4[Coll[Byte]].get != SELF.propositionBytes
  }
  sigmaProp(ok)
}```


[10/30/2020 9:19 PM] kushti#0978
yeah good simplification


[10/30/2020 9:25 PM] scalahub#2618
I guess using non-overlapping registers should work (example use register R5 in second branch)
```{ 
  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
    CONTEXT.dataInputs(0).R4[Long].get <= SELF.value
  } else { // assume Coll[Byte]
    CONTEXT.dataInputs(0).R5[Coll[Byte]].get != SELF.propositionBytes
  }
  sigmaProp(ok)
}```
I can go ahead and use this approach but not sure if a better way (using overlapping registers) exists


[10/30/2020 9:26 PM] morphic#4133
@scalahub I suspect this script will not work because the same register (dataInputs(0).R4) has different type in branches. (this is for our previous script)


[10/30/2020 9:26 PM] kushti#0978
Ergo Playground doesn't support dataInputs it seems (


[10/30/2020 9:27 PM] scalahub#2618
using non-overlapping register will make it more complex though because have to put dummy data


[10/30/2020 9:29 PM] scalahub#2618
@morphic what about this approach?

```    s"""{ 
       |  val validIn = SELF.id == INPUTS(0).id
       |  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
       |    blake2b256(INPUTS(1).propositionBytes) == leftBranchBytesHash
       |  } else {
       |    blake2b256(INPUTS(1).propositionBytes) == rightBranchBytesHash
       |  }
       |  sigmaProp(ok && validIn)
       |}
       |""".stripMargin

  val leftScript =
    s"""{
       |  sigmaProp(CONTEXT.dataInputs(0).R4[Long].get <= INPUTS(0).value)
       |}""".stripMargin

  val rightScript =
    s"""{
       |  sigmaProp(CONTEXT.dataInputs(0).R4[Coll[Byte]].get != INPUTS(0).propositionBytes)
       |}""".stripMargin```


[10/30/2020 9:31 PM] morphic#4133
I'm not sure I understant this example


[10/30/2020 9:32 PM] scalahub#2618
so in simple terms, if (left condition), then the second input encodes the code block inside the left branch and 
if (right condition) then the second input encodes the code block inside the right branch


[10/30/2020 9:33 PM] scalahub#2618
so we outsource the act of checking the contents of R4 to different script


[10/30/2020 9:36 PM] scalahub#2618
this works in my tests (and I don't see why it won't)


[10/30/2020 9:36 PM] morphic#4133
The limitation you are hitting here it, that AOT costing have to kind of  "execute" (or more traverse) both branches regardless of the condition (because it is AOT). This means that both branches should observe the same type of register.


[10/30/2020 9:38 PM] morphic#4133
Also long as you don't violate this restriction, you should be fine üôÇ


[10/30/2020 9:39 PM] scalahub#2618
yes, so the trick is to split the program into multiple sub-programs, one for each branch and then require that branch code to be in a separate input box


[10/30/2020 9:40 PM] morphic#4133
Yes, possible strategy


[10/30/2020 9:42 PM] kushti#0978
@morphic how's about this example of yours then ? https://www.ergoforum.org/t/registers-and-types/220

{Embed}
https://www.ergoforum.org/t/registers-and-types/220
Registers and types
By @morphic with very minor edits of mine:  ErgoScript (as well as ErgoTree) is typed, so accessing a register is an operation which involves some expected type given in brackets. Thus SELF.R4[Int] expression should evaluate to a valid value of the Option[Int] type.  For examp...

{Reactions}
‚ùì 

[10/30/2020 9:44 PM] scalahub#2618
Two approaches then. 1) use non-overlapping registers (can lead to extra dummy data) and 2) use different boxes for different branches. I have made an example for 2nd approach:
Non working single program: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/nonlazy/Branch.scala
Working split programs: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/nonlazy/Split.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/nonlazy/Branch.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/nonlazy/Split.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[10/30/2020 9:45 PM] kushti#0978
@scalahub btw "sbt test" is not executing any tests


[10/30/2020 9:46 PM] scalahub#2618
you need to do `cd ergo-stablecoin` I guess


[10/30/2020 9:46 PM] kushti#0978
in root folder


[10/30/2020 9:46 PM] kushti#0978
yeah


[10/30/2020 9:46 PM] scalahub#2618
yes.. sorry forgot to mention


[10/30/2020 9:47 PM] scalahub#2618
anyway if the issue is known maybe easier to look at simpler example above (`Branch.scala`)


[10/30/2020 10:37 PM] scalahub#2618
created a forum post about this for future reference https://www.ergoforum.org/t/tips-and-tricks-for-branching-programs/447

{Embed}
https://www.ergoforum.org/t/tips-and-tricks-for-branching-programs/447
Tips and Tricks for branching programs
Currently ErgoTree (and ErgoScript) programs are interpreted in a ‚Äúnot-so-lazy-way‚Äù to ensure fail-safe cost evaluation and prevent some attacks in the AOTC model. This could change in future if JITC is used.  Due to this, certain programs with branches may not execute as inte...


[10/31/2020 1:40 PM] scalahub#2618
@morphic @kushti how do we check if a register is empty?
would `! (box.R4[Int].isDefined)` work?


[10/31/2020 2:07 PM] morphic#4133
@scalahub yes, this should work.


[10/31/2020 2:08 PM] morphic#4133
> @morphic how's about this example of yours then ? https://www.ergoforum.org/t/registers-and-types/220
@kushti hm, good question, will add a test case with this example


[11/01/2020 10:20 AM] scalahub#2618
Apparantly the not-so-lazy evaluation issue is quite subtle and breaks some contracts with multiple paths

```
val condition1 = {
  val foo = OUTPUTS(0).R4[Coll[Byte]].get
  // some code
} 

val condition2 = {
  val foo = OUTPUTS(0).R4[Long].get    
  // some code
}

condition1 && condition2
```


[11/01/2020 10:20 AM] scalahub#2618
this seems to break


[11/01/2020 10:21 AM] scalahub#2618
Trying various combinations of `if` and `isDefined` etc doesn't help


[11/01/2020 10:22 AM] scalahub#2618
so when designing protocols, we have to ensure that all the registers have identical types. (not very user-friendly IMHO)


[11/01/2020 10:54 AM] scalahub#2618
> @scalahub yes, this should work.
@morphic I did some tests. For the script `sigmaProp(! (SELF.R4[Int].isDefined))`
1. When the register is empty it works
2. When the register contains `Coll[Byte]`, it throws exception `Caused by: special.sigma.InvalidType: Cannot getReg[Int](4): invalid type of value Value(Coll(1)) at id=4`
3. When the register contains `Int` it throws exception `Script reduced to false`
So I guess this test works


[11/01/2020 10:57 AM] scalahub#2618
as long we we can consider that an error during execution is equivalent to false


[11/01/2020 10:59 AM] scalahub#2618
to summarize, it is easy to check if a register is empty.
it is more tricky to ensure that a register is non-empty. but I guess there does not seem to be any use-case for that


[11/02/2020 7:55 AM] greenhat#6562
my oracle is failing on posting with error:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/772730475990876190/message.txt


[11/02/2020 7:55 AM] greenhat#6562
`Script reduced to false`


[11/02/2020 10:11 AM] morphic#4133
> @morphic how's about this example of yours then ? https://www.ergoforum.org/t/registers-and-types/220
@kushti @scalahub this example seems to work https://github.com/ScorexFoundation/sigmastate-interpreter/commit/9a07701c912d63ba9e713c5a8600a2003a9f6ede


[11/02/2020 10:14 AM] morphic#4133
The function scripts from the tests are actually inlined into this final script
```
{
  val func = $funcScript
  val res = func(getVar[${tA.name}](1).get)
  res
}
```
where the box is passed as context variable


[11/02/2020 10:15 AM] morphic#4133
here `${tA.name}` == Box


[11/02/2020 10:16 AM] Robert K#0722
> my oracle is failing on posting with error:
@greenhat Looking into it


[11/02/2020 10:23 AM] Robert K#0722
I think that's because consensus wasn't reached potentially @greenhat


[11/02/2020 10:24 AM] Robert K#0722
My `Comit Datapoint` txs seemed to not get accepted (and weren't even showing up in explorer) until now when I increased Current Tx Base Fee: 1400000


[11/02/2020 10:25 AM] Robert K#0722
(For future reference, you can edit the base fee in your oracle-config.yaml in order to scale the tx fee that is used by the oracle core.)


[11/02/2020 10:28 AM] greenhat#6562
@Robert K got it. Thanks!


[11/02/2020 10:37 AM] Robert K#0722
So I am currently using 1 wallet for both oracle pools, and so I'm guessing since both oracle cores use the same box selection logic, they are RBFing one another and I think that's why my deviation checking test pool oracle isn't getting it's datapoint accepted.


[11/02/2020 10:37 AM] Robert K#0722
@scalahub It sounds like your oracle is also down (probably node again)


[11/02/2020 10:38 AM] Robert K#0722
The current test pool has a minimum consensus number of 2, and so it's likely that only your oracle has been functioning properly @greenhat


[11/02/2020 1:23 PM] scalahub#2618
> @kushti @scalahub this example seems to work https://github.com/ScorexFoundation/sigmastate-interpreter/commit/9a07701c912d63ba9e713c5a8600a2003a9f6ede
@morphic Going to play around with the above. Can you please also check this example:
https://github.com/scalahub/Kiosk/blob/09b3d9a94310ae20f5b5f8310ca423afedfde113/src/test/scala/kiosk/nonlazy/Branch.scala#L14-L21
This fails with error `Caused by: java.lang.AssertionError: assertion failed: Unexpected register type found at register #4: PrimitiveType(Long), expected CollType(PrimitiveType(Byte))`
This is the test that fails: https://github.com/scalahub/Kiosk/blob/09b3d9a94310ae20f5b5f8310ca423afedfde113/src/test/scala/kiosk/nonlazy/BranchSpec.scala#L95-L104
Full error here https://gist.github.com/scalahub/81e471a7f006dcef461b15fd3caccb26
to run, clone Kiosk (`git clone git@github.com:scalahub/Kiosk.git`) and then do `sbt test` in the project folder

{Embed}
https://github.com/ScorexFoundation/sigmastate-interpreter/commit/9a07701c912d63ba9e713c5a8600a2003a9f6ede
todo coverage: Conditional access to registers ¬∑ ScorexFoundation/s...
https://images-ext-2.discordapp.net/external/YpBER9jxoC4piVA-OFwYuv0LT48G70XEXqXD46lUmgg/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/20186710

{Embed}
https://gist.github.com/scalahub/81e471a7f006dcef461b15fd3caccb26
Error in ErgoScript branching program
Error in ErgoScript branching program. GitHub Gist: instantly share code, notes, and snippets.
https://images-ext-1.discordapp.net/external/v2ToTBFZ7zHPk2sQlBt80EaH2hhwBfD3Zdf1J_uxMxs/https/github.githubassets.com/images/modules/gists/gist-og-image.png

{Embed}
https://github.com/scalahub/Kiosk/blob/09b3d9a94310ae20f5b5f8310ca423afedfde113/src/test/scala/kiosk/nonlazy/Branch.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/09b3d9a94310ae20f5b5f8310ca423afedfde113/src/test/scala/kiosk/nonlazy/BranchSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[11/02/2020 1:24 PM] scalahub#2618
I believe issue may not be in sigma side but on "ergo side"


[11/02/2020 1:46 PM] scalahub#2618
The script is very similar to what you have
```  |{ 
  |  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
  |    CONTEXT.dataInputs(0).R4[Long].get <= SELF.value
  |  } else { // assume Coll[Byte]
  |    CONTEXT.dataInputs(0).R4[Coll[Byte]].get != SELF.propositionBytes
  |  }
  |  sigmaProp(ok)
  |}```


[11/02/2020 4:29 PM] kushti#0978
@scalahub "ergo side" is very lean, just calling sigma


[11/02/2020 4:30 PM] scalahub#2618
ok can you please look at above code and why it fails in the first branch (but not in second one)?


[11/02/2020 4:30 PM] kushti#0978
going to do


[11/02/2020 4:32 PM] scalahub#2618
multiple types seem to work in certain cases and not in others.. Need help in understanding the rules for when they will work


[11/02/2020 4:37 PM] scalahub#2618
@Robert K @kushti shall we have our call tomorrow? Lets do it a bit earlier like 2PM UTC


[11/02/2020 4:39 PM] scalahub#2618
or even earlier if possible


[11/02/2020 4:54 PM] Robert K#0722
Sounds good, I set it for 1pm UTC if that works for you guys


[11/02/2020 5:03 PM] Robert K#0722
@scalahub By the way the mint reservecoin still doesn't work in the v0.1 contracts/off-chain code


[11/02/2020 5:04 PM] Robert K#0722
I've been busy with 100 different things today, but I'm going to try and look into the equations I used now tonight to see if as you said there's some basic math issues going on, and worst case look into it more tomorrow.


[11/02/2020 5:04 PM] Robert K#0722
If I can't find anything I'll ping you again tomorrow to get a second pair of eyes figuring out what is going wrong.


[11/02/2020 5:07 PM] kushti#0978
@scalahub so the difference from your example and morphic's is that you're using the same register (R4) as a tag, and morphic is using a different registers for tag and value (R4/R5).


[11/02/2020 5:07 PM] kushti#0978
I think that's the key difference


[11/02/2020 5:07 PM] scalahub#2618
hmm but I'm using same register of *different* boxes


[11/02/2020 5:08 PM] kushti#0978
oh my bad


[11/02/2020 5:08 PM] scalahub#2618
cool üôÇ


[11/02/2020 5:08 PM] kushti#0978
need for some rest )


[11/02/2020 5:08 PM] scalahub#2618
yes for sure üôÇ


[11/02/2020 5:08 PM] kushti#0978
will clone your example and play after it )


[11/02/2020 5:37 PM] Robert K#0722
Here's json of an example mint reservecoin tx which has failed due to script reducing to false.

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/772877031859290163/message.txt


[11/02/2020 5:40 PM] Robert K#0722
@scalahub Did you get around to running the mock tests for replicating the current scenario btw, or can we try that tomorrow if not?


[11/02/2020 5:40 PM] scalahub#2618
@Robert K I managed to run the mocks with your example


[11/02/2020 5:41 PM] Robert K#0722
Ah cool, so it's 99% likely it's in the rust off-chain code


[11/02/2020 5:41 PM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v1/MintReserveCoinSpec.scala


[11/02/2020 5:41 PM] Robert K#0722
Is it possible for you to exactly emulate the current state and print out a json unsigned tx to see what the difference is between the two piece sof code?


[11/02/2020 5:42 PM] scalahub#2618
this is the test with the data from your message.. check the Json at the bottom of the code


[11/02/2020 5:42 PM] scalahub#2618
let me print a tx


[11/02/2020 5:43 PM] Robert K#0722
Ah awesome you already did this.


[11/02/2020 5:43 PM] Robert K#0722
> Sounds good, I set it for 1pm UTC if that works for you guys
@Robert K Hmm? @scalahub

{Reactions}
üëç (2) 

[11/02/2020 5:44 PM] scalahub#2618
https://discord.com/channels/668903786361651200/702853765660934194/771811205227741184


[11/02/2020 5:46 PM] scalahub#2618
the json in the code is your message. The json output in the mock is below:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/772879437779435530/message.txt


[11/02/2020 5:47 PM] Robert K#0722
> @Robert K seems to be an issue with two things:
> 1. reserve ratio exceeds max reserve ratio (reduce rc mined and it works)
> 2. base reserve correct formula is `bankBox.value - minStorageRent`
@scalahub I don't think either of these is the case.


[11/02/2020 5:48 PM] Robert K#0722
1. Might be possible, but I have checks already in place for valid reserve ratios (they could be encoded wrong will check).
2. I already claculate it as:
```rust
    pub fn base_reserves(&self) -> NanoErg {
        if self.ergo_box.value.as_u64().clone() < MIN_BOX_VALUE {
            return 0;
        }
        self.ergo_box.value.as_u64().clone() - MIN_BOX_VALUE
    }
```


[11/02/2020 5:53 PM] scalahub#2618
yes it seems in your original tx. the mint amount was too high


[11/02/2020 5:53 PM] scalahub#2618
how much were you minting in the tx?


[11/02/2020 5:53 PM] Robert K#0722
Ah, you are right about #1 now after testing


[11/02/2020 5:53 PM] Robert K#0722
That was rather stupid of me üòÖ


[11/02/2020 5:54 PM] Robert K#0722
Minting smaller amounts of rc works just fine.


[11/02/2020 5:54 PM] scalahub#2618
10000000 was too much


[11/02/2020 5:54 PM] Robert K#0722
Indeed, my bad on that.


[11/02/2020 5:54 PM] Robert K#0722
Though I guess it shows that my off-chain check for reserve ratio is not working properly.


[11/02/2020 5:59 PM] Robert K#0722
Found the problem, by mistake fed the reserve ratio calc function the circulating reservecoins, not the circulating stablecoins


[11/02/2020 5:59 PM] Robert K#0722
Thanks for helping out troubleshooting

{Reactions}
üôÇ 

[11/02/2020 6:06 PM] Robert K#0722
So then I will do some more testing tomorrow and give the v0.1 contract another look to see if I can somehow break it, and otherwise it looks like I can move forward towards implementing the update CLI commands.


[11/02/2020 6:08 PM] Robert K#0722
If I understand correctly we're going with #3 as we mentioned, which will spend the update NFT box. Is that code working, or is there anything else we need to figure out/address?


[11/02/2020 6:18 PM] scalahub#2618
yes that code is working (all paths tested)


[11/02/2020 6:19 PM] scalahub#2618
so this should be final version of 0.2 unless we find some issues

{Reactions}
üëç 

[11/02/2020 6:20 PM] scalahub#2618
and if I recall, we are going to do 0.3 via update


[11/02/2020 7:54 PM] kushti#0978
1PM UTC works!


[11/03/2020 8:20 AM] Robert K#0722
> and if I recall, we are going to do 0.3 via update
@scalahub That is indeed the goal. When we bootstrap 0.2 in guessing we can just do it with you/me voting to keep things simple?


[11/03/2020 8:56 AM] Robert K#0722
@scalahub @greenhat Are your oracles running?


[11/03/2020 8:56 AM] Robert K#0722
I still think yours has been down since yesterday @scalahub


[11/03/2020 8:58 AM] scalahub#2618
I had restarted my node yesterday. Let me check and revert


[11/03/2020 9:11 AM] greenhat#6562
@Robert K mine is running fine.


[11/03/2020 9:20 AM] kushti#0978
@scalahub can't run "sbt test" for Kiosk on my machine ( due to Java 8 ) ( fi.getInputStream.readAllBytes not supported )


[11/03/2020 9:20 AM] kushti#0978
@scalahub if your node is on laptop lemme provide you a private jar


[11/03/2020 9:24 AM] Robert K#0722
@greenhat Are you sure yours is running fine? The live epoch was supposed to end on `352363` and its `352410` and my oracle is failing to collect (likely due to no consensus)


[11/03/2020 9:24 AM] scalahub#2618
my node on desktop but now seems no oracle core is running (node is synced)
```The UTXO-Set scans have not found all of the oracle pool boxes yet.

Error: No Boxes Found For Local Oracle Datapoint Scan```
getting this in all 3 oracles


[11/03/2020 9:24 AM] Robert K#0722
Sounds like a node/utxo-set scan issue @scalahub


[11/03/2020 9:25 AM] scalahub#2618
yes but it suddently started ... I didn't do anything from my side


[11/03/2020 9:25 AM] Robert K#0722
Maybe rescan?


[11/03/2020 9:25 AM] scalahub#2618
let me rescan and revert


[11/03/2020 9:26 AM] scalahub#2618
should I delete the `history` and `state` folders and keep the `wallet` folder? @kushti


[11/03/2020 9:27 AM] kushti#0978
@scalahub in opposite, remove /wallet/registry only


[11/03/2020 9:28 AM] kushti#0978
@scalahub (or call /wallet/rescan API method)


[11/03/2020 9:29 AM] kushti#0978
@scalahub do you have another node with the same wallet shared maybe ?


[11/03/2020 9:29 AM] scalahub#2618
no only this node


[11/03/2020 9:29 AM] morphic#4133
@scalahub I don't know why your test fails. Will check your script in the sigma test suite, maybe find some workaround.


[11/03/2020 9:30 AM] scalahub#2618
> @scalahub (or call /wallet/rescan API method)
@kushti this is simplest.. trtiggered it. showing balance 0 erg now


[11/03/2020 9:30 AM] Robert K#0722
Scanning takes some time


[11/03/2020 9:31 AM] kushti#0978
> @kushti this is simplest.. trtiggered it. showing balance 0 erg now
@scalahub now your wallet will scan all the blocks since genesis


[11/03/2020 9:31 AM] scalahub#2618
yes I'll wait


[11/03/2020 9:31 AM] kushti#0978
if you're on hdd may take 15-20 mins


[11/03/2020 9:31 AM] scalahub#2618
should be faster or as fast than downloading blocks


[11/03/2020 9:32 AM] Robert K#0722
Much faster, you're just processing the blocks, not downloading them


[11/03/2020 9:32 AM] Robert K#0722
Unless you're cpu-bottlenecked I guess


[11/03/2020 9:34 AM] scalahub#2618
> @scalahub can't run "sbt test" for Kiosk on my machine ( due to Java 8 ) ( fi.getInputStream.readAllBytes not supported )
@kushti thats odd.. I also have java 8 `openjdk version "1.8.0_272"` unless sbt is using different one


[11/03/2020 9:35 AM] greenhat#6562
@Robert K oh, I meant I don‚Äôt see errors in the logs. 
I‚Äôm at the dentist now, I‚Äôll check when I get back home.


[11/03/2020 9:35 AM] Robert K#0722
Cool, thanks


[11/03/2020 9:35 AM] scalahub#2618
> if you're on hdd may take 15-20 mins
@kushti how will I know thats its done?


[11/03/2020 9:36 AM] Robert K#0722
`/wallet/status` endpoint @scalahub


[11/03/2020 9:36 AM] Robert K#0722
If the height is the same as current height


[11/03/2020 9:38 AM] scalahub#2618
Don't think current height changes in `/wallet/rescan`. its showing 352412


[11/03/2020 9:38 AM] Robert K#0722
`walletHeight`


[11/03/2020 9:38 AM] scalahub#2618
let me check


[11/03/2020 9:38 AM] Robert K#0722
in the status endpoint


[11/03/2020 9:39 AM] scalahub#2618
ah yes right its at 202693


[11/03/2020 9:40 AM] scalahub#2618
and all three oracle-cores are running in background


[11/03/2020 9:44 AM] scalahub#2618
hmm the first 2 oracles found some thing.. the 3rd one not yet


[11/03/2020 9:52 AM] Robert K#0722
What does that specifically mean?


[11/03/2020 9:52 AM] Robert K#0722
Is the deviation checking one not working?


[11/03/2020 10:04 AM] scalahub#2618
just checked and It is working now.. is it posting the data?


[11/03/2020 10:06 AM] scalahub#2618
wait its saying pool is underfunded


[11/03/2020 10:07 AM] scalahub#2618
but scan is still not completed.. so let me wait.. still about 30k blocks remaining


[11/03/2020 10:11 AM] kushti#0978
@scalahub don't forget to unlock the wallet also )

{Reactions}
üëç 

[11/03/2020 10:45 AM] Robert K#0722
Someone's oracle is working, as the pool seems to be back on track.


[11/03/2020 11:25 AM] greenhat#6562
Ok, how to assess the oracle state? Here is my oracle log: |
```
Pool Deposits State
--------------------
Number Of Deposit Boxes: 0
Total nanoErgs In Deposit Boxes: 0

Live Epoch State
-----------------
Total Pool Funds: 18245500000
Latest Pool Datapoint: 2286205556
Live Epoch ID: 447d3e1714b89facf4debda6b3a52ee34efb52542dc74291864e5ce3ac3b438c
Commit Datapoint In Live Epoch: true
Live Epoch Ends: 352465

Oracle Datapoint State
--------------------
Your Latest Datapoint: 2479795863
Datapoint Origin Epoch ID: 447d3e1714b89facf4debda6b3a52ee34efb52542dc74291864e5ce3ac3b438c
Submitted At: 352435
========================================================
```


[11/03/2020 11:29 AM] greenhat#6562
I see datapoints submitted. Deposit boxes are empty, but I don't know if it means something bad. It's hard for a lay person to see if there are any problems. Can we "yell" in the logs, if something is not right? üôÇ


[11/03/2020 11:37 AM] Robert K#0722
Hmm, yours looks fine.


[11/03/2020 11:38 AM] Robert K#0722
The yelling effectively is the error messages that prop up, unless it's say your node that breaks and can't find the scans


[11/03/2020 11:38 AM] Robert K#0722
If you check the log like 3 hours back, you should see some error messages because the pool failed to collect a datapoint for a while.


[11/03/2020 11:39 AM] Robert K#0722
So it should have logged failing to collect datapoints


[11/03/2020 11:46 AM] greenhat#6562
@Robert K Got it, thanks! I found only one error message:
```
[435:59:11.693] (700009afb000) INFO   --------------------------------------------------
Failed To Issue `Submit Datapoint` Transaction.
Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(jL2aaqw6XU61SZznxeykLpREPzSmZv8bwbjEsJD6DMfXQLgBc12wMmPpVD81JnMAQBBBB9FruzhMpRbC9Gb5jD2vijgUKo8ZxWXhC3ykRnqBEveS3kqT8TXSQZsu1ReSFazVzXdR2BFLedefWDoiFSpnUVsthKboDG82gscdPij8ZMQzwUcMtNaaFiMoBoosspL7vZ1Y8FweVzQkPkcUU37j81tEksjfzBLYbcSsasLXJTPeo3MM7ZqaT7UGK,1000000,List(([B@2bf36424,1)),Map(R4 -> ConstantNode(ECPoint(74524e,33f1ae,...),SGroupElement), R5 -> ConstantNode(Coll(-125,54,-79,120,-57,-15,57,-6,5,86,3,-28,-92,104,121,-31,64,45,89,-49,-115,-61,27,-13,-115,-127,5,-25,114,-69,-73,-33),Coll[SByte$]), R6 -> LongConstant(2553887016))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1000000,List(),Map())). invalid characters encountered in Hex data
--------------------------------------------------
```


[11/03/2020 12:01 PM] Robert K#0722
Hmm, interesting.


[11/03/2020 12:03 PM] scalahub#2618
yes I also got that


[11/03/2020 12:05 PM] Robert K#0722
Very weird, that is the submit datapoint action which is super simple.


[11/03/2020 12:05 PM] Robert K#0722
It's effectively the least logic, not even sure how it'd fail


[11/03/2020 12:06 PM] Robert K#0722
Can you post yours as well @scalahub


[11/03/2020 12:07 PM] scalahub#2618
It was while the wallet was scanning..its gone now; could the invalid hex be empty string?


[11/03/2020 12:08 PM] Robert K#0722
Well while scanning is irrelevant


[11/03/2020 12:08 PM] Robert K#0722
It was trying to submit txs for old box data which is always going to break


[11/03/2020 12:09 PM] Robert K#0722
Maybe your node @greenhat got stuck for a while somehow?


[11/03/2020 12:11 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/773157519706554418/Screenshot_from_2020-11-03_17-38-49.png


[11/03/2020 12:12 PM] scalahub#2618
bottom one is deviation check pool


[11/03/2020 12:12 PM] scalahub#2618
While scanning because the wallet may not have found its own boxes? or some boxes yet


[11/03/2020 12:13 PM] Robert K#0722
It rescans the entire history, and the oracle core reads the scans/retries posting every X seconds.


[11/03/2020 12:13 PM] Robert K#0722
And so if your utxo-set scans catch something in the history, the oracle core tries to build a tx and post it


[11/03/2020 12:14 PM] Robert K#0722
We can add a check to prevent that from happening, but I never had time to do so, and it's an edgecase that effectively doesn't cause any problems so not that important.


[11/03/2020 12:14 PM] scalahub#2618
@greenhat is your wallet and node synced?


[11/03/2020 12:40 PM] greenhat#6562
@scalahub yes


[11/03/2020 12:47 PM] scalahub#2618
> @scalahub can't run "sbt test" for Kiosk on my machine ( due to Java 8 ) ( fi.getInputStream.readAllBytes not supported )
@kushti You can test directly using node. I have created the boxes.
1. Box with script
```{ 
  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
    CONTEXT.dataInputs(0).R4[Long].get <= SELF.value
  } else { // assume Coll[Byte]
    CONTEXT.dataInputs(0).R4[Coll[Byte]].get != SELF.propositionBytes
  }
  sigmaProp(ok)
}```

boxId: `a03a3f892a515d7d9bde3c756d86e724339b66aed4c4ae77d03c3d6f420c8bcb`
address: `88dwYDNXcCq9UyA7VBcSdqJRgooKVqS8ixprCknxcm2sba4jbhQYGphjutEebtr3ZeC4tmT9oEWKS2Bq`
value: `2000000`

This is to be spent using the first path (assume dataInputs(0).R4 contains Long)

2. Box with R4 as Long (to be used as data input). Try to create tx using this
boxId: `c7521a568c8dd2629b47f030724bbcaf1ed6ab86d7749e22b7134b708020a689`
 
3. Box with R4 as Coll[Byte] (to be used as data input) for testing second path
boxId: `ceecce91e6a8b4ea122268c31d2e41cece35745a081d7b6d2a5f3263ce5c245d`


[11/03/2020 12:47 PM] scalahub#2618
also @morphic ^


[11/03/2020 12:56 PM] scalahub#2618
And here is a box that can only be spent from the first path :)
boxId: `15f749a67cfb2e4b99afe2b06983670795fa67fc5a507318d8d7669c32681afe`
address: `ofi3BzXd8H72AsSCjsnfxRj1SUcNk2wzrhAYH6TwRqFU7AofS3TSS7aBv4LKs6cKaMxHQE9hoq9NXyK68GEJ1`
Script: 
```{ 
  val ok = if (OUTPUTS(0).R4[Int].get == 1) {
    CONTEXT.dataInputs(0).R4[Long].get <= SELF.value
  } else { // assume Coll[Byte]
    blake2b256(CONTEXT.dataInputs(0).R4[Coll[Byte]].get) == fromBase64("AA==")
  }
  sigmaProp(ok)
}```
``AA==` is base64 of `00` in hex. So to spend the box from the second path, you need to find a value whose hash is `00`


[11/03/2020 2:38 PM] Robert K#0722
@scalahub Let me know when you have the token ids/new contract address for v0.2


[11/03/2020 2:39 PM] Robert K#0722
v0.1 is just dead right now due to the non-NFT problem and it now finds a box with a R4 value of `1` which breaks everything üòÖ


[11/03/2020 3:00 PM] scalahub#2618
yes gimme a couple of hours.. will do it by then

{Reactions}
üëç 

[11/03/2020 4:25 PM] Robert K#0722
@kushti I just realized that the Ergo Node Interface probably won't get WASM support any time soon.


[11/03/2020 4:25 PM] kushti#0978
@Robert K that's okay )


[11/03/2020 4:26 PM] Robert K#0722
Rust -> WASM typically works best with pure code, because anything with side effects either doesn't work, or requires restructuring the entire library + writing code that specifically works for WASM (ie. making requests via JS)


[11/03/2020 4:26 PM] kushti#0978
as would be limited anyway, you need to have some node to talk with from a mobile


[11/03/2020 4:27 PM] Robert K#0722
If we had more time, we probably could abstract things out more so that we could try to target that (or maybe just have functions that return endpoints/json bodies to then be used for making requests and thus having the lib be pure)


[11/03/2020 6:33 PM] scalahub#2618
@Robert K please note the following details
```  val oraclePoolNFT = "08b59b14e4fdd60e5952314adbaa8b4e00bc0f0b676872a5224d3bf8591074cd"

  val updateNFT = "77d14a018507949d1a88a631f76663e8e5101f57305dd5ebd319a41028d80456" // quantity 1
  val ballotTokenId = "dd26438230986cfe7305ad958451b69e55ad5ac37c8a355bfb08d810edd7a20f" // quantity 1000

  val bankNFT = "7bd873b8a886daa7a8bfacdad11d36aeee36c248aaf5779bcd8d41a13e4c1604" // quantity 1
  val scToken = "a908bf2be7e199014b45e421dc4adb846d8de95e37da87c7f97ac6fb8e863fa2" // quantity 10000000000000
  val rcToken = "b240daba6b5f9f9b6d4e6d7fc8b7c0423f1dfa28a883ec626a18b69be6c7590e" // quantity 10000000000000
```


[11/03/2020 6:33 PM] scalahub#2618
the addresses: 
Bank `3hWDrtdxDrwi6FoQ3izoXkR8WUZDZQk98jQ4VpVN2qFhRXDFfNzfkPCDPNw9eNMJBVLHpbmaiszpfLjFKsw7Pba4NNZ4szzKToy7C2goqCAqr4k62o8UpUaiVNNWDvQbAyhj69zG5erhYLtAYoA9hBzG136BvHaFSxSW4Mk4NpZnq1o828pT3Ui5RPh4cuxCDiPGJCFNANQmtkqU6oo2iHREB9hvEfse46EeYVXjXvuAkt1wrkoK8bKAPAAMYdAF7VakvLD1MTWM7zgqKxif9hq6w4614ge8jPGJexeCkPRcDKxDsCZD88jDR6BrPXD84Vd89KjjKTNJZ19pLD4CjtZGx2KiaoDZcoWVLRAiSA6teQR215bSpXbf3ASudp3Le1DVdkCytSQBzAgsGcuD5AWy6FarRJe1dSAx3nzDPiene3xZ23VUM2ipr6Ne7XHANUH4aTSnKK75tqVYFKXMgnmout6CY5VR3tEqQodpfihPMpRAP93tMJPHeZT6UggqpchUvZjZJCGfw7tx3kiguZkYeJfboYWtHiLsPjeiyNfLCJtq1pTiZj9J4qwutQjDzwPNhr9npKq1fywzYPDu9uPAN6LYnY6o1Dq8jpbnHpiZosZuj59mrJ7HJoBx2jGfi3SXhcM74YzRYCM9Ynd92yUzWi3mAfgHeToxBep1yDr82WjRTXtM8DYPigbjvbvTopW3Wc4e642hxiQ4NyzVZXaeKCWyXppUZWUq8PieLoMXMdsXuK1wRsPvBgCGs6tqvoRrsrwpQpSHBeLWpn94vo1TyQwuyo79MN3VQb8ENndRo9ekKTjj43u7RZVhVYDWYbro9xNo9fF6q4fw2ETC2VArXLMoEmfXcNhgBET3HAdiW3xXA6cGHSVoC8WqVJxjeqTYb`


[11/03/2020 6:33 PM] scalahub#2618
Update box
`6Vs43fLottAzin3EiEiswbSD31ETscqBLy9i3zTWCwUVuG79fWuP7S3Kko5PEK56UEBWSTE8GuuXq3ZYzWKCGmzPQ9y5AU4hvwGcTsYPH74qLsm3kmXctHLRnEVAxvsviB5aTRJo41adKHZ4EJSdWJpNUuJM4BJXGpM7BJnjT9cNB63QMtMUrfqaq8Ku8aJ7jM1VtXZFQiNH1pzwNFRQzU4fD4Dg8VqTtaAVWw98zKgGZmm35pq8QbAb5je796CWnQQRzDuGdPxwfBzzVCPjCf5hpFev56odduByacWPGYnd671A7CLrF7iSqae2ZHs4YmeXvAbBUW6s3A7U8YZAdPvaugBjNEkP9eVYZjDR4ppWcGukcrnjWBSqcv9nrBMudcLQLZwS653mVCbD8rqki2u2DjR4PMMtSQLAnH4HkeZFnz3w8Nav7YXkgviAFYR5AEdse8sUUKmb34AhU2uCxCJw6thqRfcMsWwaRHetzkhp6YoAy66EXmpVgM7pDo9RxpE9aRwPbxY6BwZ8`


[11/03/2020 6:34 PM] scalahub#2618
also about to bootstrap both boxes


[11/03/2020 6:35 PM] scalahub#2618
done bootstrap
https://explorer.ergoplatform.com/en/transactions/0ddd6eaaecff8dc297c101c8995561282c260a1dd2d428e743285c34afe37740


[11/03/2020 6:41 PM] scalahub#2618
also please note following updated parameters
```val rcDefaultPrice = 1000000
val minStorageRent = 10000000```
The bank box currently has only `2000000` so it will be good edge case


[11/04/2020 8:10 AM] scalahub#2618
(the contract allows for initial negative bcReservesIn, if the box value is less than minStorageRent, so will be a tesf of the offchain)


[11/04/2020 8:47 AM] Robert K#0722
> the addresses: 
> Bank `3hWDrtdxDrwi6FoQ3izoXkR8WUZDZQk98jQ4VpVN2qFhRXDFfNzfkPCDPNw9eNMJBVLHpbmaiszpfLjFKsw7Pba4NNZ4szzKToy7C2goqCAqr4k62o8UpUaiVNNWDvQbAyhj69zG5erhYLtAYoA9hBzG136BvHaFSxSW4Mk4NpZnq1o828pT3Ui5RPh4cuxCDiPGJCFNANQmtkqU6oo2iHREB9hvEfse46EeYVXjXvuAkt1wrkoK8bKAPAAMYdAF7VakvLD1MTWM7zgqKxif9hq6w4614ge8jPGJexeCkPRcDKxDsCZD88jDR6BrPXD84Vd89KjjKTNJZ19pLD4CjtZGx2KiaoDZcoWVLRAiSA6teQR215bSpXbf3ASudp3Le1DVdkCytSQBzAgsGcuD5AWy6FarRJe1dSAx3nzDPiene3xZ23VUM2ipr6Ne7XHANUH4aTSnKK75tqVYFKXMgnmout6CY5VR3tEqQodpfihPMpRAP93tMJPHeZT6UggqpchUvZjZJCGfw7tx3kiguZkYeJfboYWtHiLsPjeiyNfLCJtq1pTiZj9J4qwutQjDzwPNhr9npKq1fywzYPDu9uPAN6LYnY6o1Dq8jpbnHpiZosZuj59mrJ7HJoBx2jGfi3SXhcM74YzRYCM9Ynd92yUzWi3mAfgHeToxBep1yDr82WjRTXtM8DYPigbjvbvTopW3Wc4e642hxiQ4NyzVZXaeKCWyXppUZWUq8PieLoMXMdsXuK1wRsPvBgCGs6tqvoRrsrwpQpSHBeLWpn94vo1TyQwuyo79MN3VQb8ENndRo9ekKTjj43u7RZVhVYDWYbro9xNo9fF6q4fw2ETC2VArXLMoEmfXcNhgBET3HAdiW3xXA6cGHSVoC8WqVJxjeqTYb`
@scalahub Great thanks, will update the CLI soon.


[11/04/2020 8:48 AM] Robert K#0722
Going to improve the box selection strategy for the oracle core first as I noticed theres potential edge cases where things can go a bit off.


[11/04/2020 8:51 AM] Robert K#0722
> (the contract allows for initial negative bcReservesIn, if the box value is less than minStorageRent, so will be a tesf of the offchain)
@scalahub Hmmm, could you explain what you mean by this?


[11/04/2020 8:54 AM] scalahub#2618
what I mean is that in contract we have `bcReserveIn = bankBoxIn.value - minStorageRent`, which can be negative (it currently is)


[11/04/2020 8:54 AM] scalahub#2618
but this should not affect the actions


[11/04/2020 8:55 AM] scalahub#2618
so as long as offchain handles this, we should not see any errors


[11/04/2020 9:08 AM] Robert K#0722
So how should the off-chain handle this?


[11/04/2020 9:08 AM] Robert K#0722
I'm not understanding what you're implying specifically.


[11/04/2020 9:09 AM] Robert K#0722
Just ignoring the face that bcReserveIn is a negative?


[11/04/2020 10:05 AM] scalahub#2618
yes


[11/04/2020 10:06 AM] scalahub#2618
as long as its not doing any calculations using a negative balance


[11/04/2020 10:06 AM] scalahub#2618
in the sense "wrong calculatons"  mean like price is negative üôÇ


[11/04/2020 10:07 AM] Robert K#0722
Ah alright cool. That should be easy enough to avoid I believe.


[11/04/2020 10:07 AM] Robert K#0722
Btw I've now added better box selection strategy to the oracle core in the latest commit in deviation-check branch


[11/04/2020 10:08 AM] Robert K#0722
I'll keep testing it for another epoch or two to be sure, but just letting you guys know that it's available


[11/04/2020 10:18 AM] Robert K#0722
And the parameters for the stablecoin protocol have been updated. You can now use the latest commit to register new scans, use the node endpoint to then trigger a re-scan by your node, and then theoretically minting/redeeming should be working properly


[11/04/2020 11:42 AM] greenhat#6562
Where can I see the latest version of stablecoin contract (intended to be signed with sigma-rust) so I could update https://github.com/ergoplatform/sigma-rust/issues/117 
I'm getting close to it.

{Embed}
https://github.com/ergoplatform/sigma-rust/issues/117
Implement IR nodes needed the most ¬∑ Issue #117 ¬∑ ergoplatform/sigm...
The following IR nodes should be added and implemented in interpreter first: SELF OUTPUTS CONTEXT.dataInputs register access (ExtractRegisterAs) Option.get arithmetic ops (plus, minus, multiplicati...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[11/04/2020 11:53 AM] Robert K#0722
@greenhat

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/773515365837045780/message.txt


[11/04/2020 11:54 AM] greenhat#6562
Thanks!


[11/04/2020 11:54 AM] Robert K#0722
The bank script is effectively the same except for the new spending path of updating the contract


[11/04/2020 11:55 AM] Robert K#0722
And then there's the update script which is effectively a voting protocol where users who hold the ballot token can vote for a new contract address to update to


[11/04/2020 12:03 PM] greenhat#6562
Function defs, fold, filter. Some serious stuff you got there. üôÇ


[11/04/2020 12:05 PM] Robert K#0722
Hmm, I guess now that we've moved the roadmap a bit back I guess we don't need ergo-lib rust support immediately for everything.


[11/04/2020 12:05 PM] Robert K#0722
We're launching with full node support EOY, and in Q1 we'd likely need ergo-lib support.


[11/04/2020 12:06 PM] Robert K#0722
So if the required features are a bit challenging to implement, they can be pushed back a bit. (Or we likely can rewrite the update script to be simpler as well if possible)


[11/04/2020 12:26 PM] greenhat#6562
@Robert K no worries, seems like we have enough time. I‚Äôll know for sure when I start it.

{Reactions}
üëç 

[11/04/2020 3:17 PM] Robert K#0722
Tested out minting reservecoins with a 298 input tx: https://explorer.ergoplatform.com/en/transactions/1336e701bc412832fc23fcfbbe20fd93dbafad993ca2a2c8395b4e46f69b46e0


[11/04/2020 3:18 PM] Robert K#0722
Effectively I'm just cleaning my wallet of all of the oracle pool rewards that have been accumulating üòÅ


[11/04/2020 3:26 PM] kushti#0978
oh wow


[11/04/2020 3:58 PM] Robert K#0722
I spoke with Marek and he said he's going to make a list of people (probably mostly stake pool operators) from the Cardano ecosystem who would like to run oracles.


[11/04/2020 3:58 PM] Robert K#0722
If they're reasonably popular stake pools then this could be a good marketing strategy for us as well.


[11/04/2020 3:59 PM] Robert K#0722
As if we add say 3-4 new oracles who are also stake pool operators together with the release of deviation checking pools, then that could bring more attention from the Cardano-sphere.


[11/04/2020 4:00 PM] kushti#0978
@Robert K good!


[11/04/2020 4:00 PM] kushti#0978
Gravity guys willing to jump into as well

{Reactions}
üíØ 

[11/04/2020 4:00 PM] Robert K#0722
And if that goes well, we can probably also release a BTC/USD oracle pool with them as oracles as well, and get some retained interest/marketing over time.


[11/04/2020 4:00 PM] Robert K#0722
Are the gravity guys willing to get started right away?


[11/04/2020 4:04 PM] kushti#0978
Will meet them on Mon


[11/04/2020 4:04 PM] kushti#0978
after that I guess


[11/04/2020 4:06 PM] Robert K#0722
Sounds good. And if you could help us schedule a meeting of Me + Nico w/the Gravity guys to talk about potential Cardano support, that'd be great.


[11/04/2020 4:08 PM] kushti#0978
@Robert K yes, that's in the plan also )


[11/04/2020 4:09 PM] kushti#0978
I think they'll be happy to talk about that

{Reactions}
üëç 

[11/05/2020 9:59 AM] Robert K#0722
Haa


[11/05/2020 9:59 AM] Robert K#0722
I think I just gave miners 17 ergs for the far far future


[11/05/2020 10:00 AM] Robert K#0722
Minted a lot of reservecoins and my token preserving logic only checked for tokens in your box that weren't sc/rc, and thus I burned all of my reservecoins


[11/05/2020 11:12 AM] Robert K#0722
Alright, the token burning should now be completely fixed.


[11/05/2020 11:13 AM] Robert K#0722
Though it's taking a long time to test because the latest version of the node wallet seem to fail scanning UTXOs which holds tokens as part of the wallet, or something like that.


[11/05/2020 11:13 AM] Robert K#0722
So I have to keep finding the boxes manually, and using the end point to add them to my wallet to actually use them.


[11/05/2020 2:18 PM] Robert K#0722
@scalahub Oh yeah, I recall we talked about making the stablecoin be US cents and not US dollar.


[11/05/2020 2:18 PM] Robert K#0722
Would be good to implement that.


[11/05/2020 3:05 PM] Robert K#0722
@scalahub Did you mint/send the update tokens btw?


[11/05/2020 4:38 PM] Dmitry Usov#0134
Is there anything I can help you, guys?


[11/05/2020 5:47 PM] Robert K#0722
We're primarily working on the contracts/a CLI so unfortunately I don't think so.

{Reactions}
üëå 

[11/05/2020 5:47 PM] Robert K#0722
But thanks for offering.


[11/05/2020 6:16 PM] scalahub#2618
not yet tried minting on chain


[11/05/2020 6:17 PM] scalahub#2618
will use usd cents for v0.3.. should have an update tomorrow

{Reactions}
üëç 

[11/06/2020 8:09 AM] Robert K#0722
> not yet tried minging on chain
@scalahub i assume you mean voting?


[11/06/2020 8:12 AM] Robert K#0722
And could you please work on the v0.2 spec which explains the update spending path in the StableCoin spec, and then write a spec for the update protocol that is separate and referenced in the StableCoin spec?


[11/06/2020 8:13 AM] Robert K#0722
I still have a lot to do for the offchain code to implement updating.


[11/06/2020 9:04 AM] Robert K#0722
I was thinking of calling the Actions:
- Vote For Update
- Finalize Vote
- Update Protocol


[11/06/2020 12:22 PM] scalahub#2618
I haven't tried mint or redeem operations yet.
Yes good point.. I'll update 0.2 spec first before continuing on 0.3


[11/06/2020 12:25 PM] scalahub#2618
So I'll continue to work on spec then on 0.3. Not much update today


[11/06/2020 12:26 PM] scalahub#2618
how to mint? can you quickly give the cLi command?


[11/06/2020 12:28 PM] Robert K#0722
It's pretty self explanatory/there's a help that prints:

```
   _____ _        _     _       _____      _          _____ _      _____
  / ____| |      | |   | |     / ____|    (_)        / ____| |    |_   _|
 | (___ | |_ __ _| |__ | | ___| |     ___  _ _ __   | |    | |      | |
  \___ \| __/ _` | '_ \| |/ _ \ |    / _ \| | '_ \  | |    | |      | |
  ____) | || (_| | |_) | |  __/ |___| (_) | | | | | | |____| |____ _| |_
 |_____/ \__\__,_|_.__/|_|\___|\_____\___/|_|_| |_|  \_____|______|_____|
==========================================================================
Invalid arguments.

Usage:
        stablecoin_cli status
        stablecoin_cli parameters
        stablecoin_cli scans register
        stablecoin_cli scans check
        stablecoin_cli mint stablecoin <amount>
        stablecoin_cli mint reservecoin <amount>
        stablecoin_cli redeem stablecoin <amount>
        stablecoin_cli redeem reservecoin <amount>
        stablecoin_cli vote finalize
        stablecoin_cli vote <address>
        stablecoin_cli update <address>
```

{Reactions}
üëç (2) 

[11/06/2020 12:29 PM] Robert K#0722
Effectively you register the scans, trigger a rescan of your node yourself, and then you can mint rc/sc.


[11/06/2020 1:38 PM] Robert K#0722
@scalahub I wasn't clear on your previous response, have you issued the vote tokens yet?


[11/06/2020 1:38 PM] Robert K#0722
I think I might be able to get the "Vote For Update" action logic implemented by EOD if everything goes smoothly

{Reactions}
üëçüèª 

[11/06/2020 1:38 PM] Robert K#0722
(assuming I encode it all properly first try)


[11/06/2020 1:40 PM] kushti#0978
@Robert K


[11/06/2020 1:40 PM] kushti#0978
how's the private jar ?


[11/06/2020 1:45 PM] Robert K#0722
Currently rescanning


[11/06/2020 1:45 PM] Robert K#0722
Will let you know once it finishes/I test using it


[11/06/2020 1:52 PM] scalahub#2618
> @scalahub I wasn't clear on your previous response, have you issued the vote tokens yet?
@Robert K yes


[11/06/2020 1:54 PM] Robert K#0722
Could you send one to `9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r`


[11/06/2020 1:56 PM] Robert K#0722
Ah cool, the utxo-set scans seem to be accurate for the ballot scans/update box scan.


[11/06/2020 1:56 PM] Robert K#0722
I see you've minted 1k update tokens, hmm I guess I'll need to do more filtering logic.


[11/06/2020 1:58 PM] scalahub#2618
cool I'll send shortly


[11/06/2020 2:00 PM] Robert K#0722
How many votes did you set as a minimum for finalizing a vote?


[11/06/2020 2:02 PM] scalahub#2618
As in the code.  It's 5 min


[11/06/2020 2:10 PM] Robert K#0722
Ah, well that's a bit annoying.


[11/06/2020 2:11 PM] Robert K#0722
I mentioned it'd be best to do 2 so we could test more easily.


[11/06/2020 2:11 PM] Robert K#0722
The current logic expects to have each person only have 1 token and use just 1 address in the node wallet.


[11/06/2020 2:12 PM] Robert K#0722
Otherwise I have to do like 4x times more logic to figure out sortng/which to use/etc. which won't be relevant to the real world use case.


[11/06/2020 2:13 PM] Robert K#0722
I guess we can get everyone in this channel to help us test voting then and make it a bigger experiment üòâ


[11/06/2020 3:38 PM] scalahub#2618
hmm thats strange.. I thought you meant to keep 5


[11/06/2020 3:38 PM] scalahub#2618
anyway we can use more than 1 token\


[11/06/2020 3:41 PM] Robert K#0722
Hmm, actually that's a good point. If you can send me 3 tokens in 1 output that will work too.


[11/06/2020 7:52 PM] scalahub#2618
Can I send more? like 10?


[11/06/2020 8:33 PM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/43b0c3add1fde20244a3467798a777684f9234d1f56f31ad01a297c86c6d40c7


[11/06/2020 8:59 PM] Robert K#0722
Would be better less so we can test the logic


[11/06/2020 8:59 PM] Robert K#0722
See if finalizing fails with < 5 voting power


[11/06/2020 9:05 PM] scalahub#2618
can you split the 10 as needed?


[11/07/2020 10:59 AM] scalahub#2618
or if you want I can send multiple tokens.. let me know


[11/07/2020 11:38 AM] scalahub#2618
@Robert K here is a wallet with some tokens that you can split as needed
https://erg.urlwallet.org/wallet/95DvD6M9JEuScFp4Pi5pxA13sQDfbal7F3Btd5aPifQOUAHPlu


[11/08/2020 9:57 AM] Robert K#0722
Yeah I'll split the 10, it's just a bit of extra manual tx creation work.


[11/08/2020 9:57 AM] Robert K#0722
Cool, thanks for the url wallet.


[11/08/2020 9:58 AM] Robert K#0722
Pretty cool we can share a url wallet for test tokens for protocols.


[11/09/2020 12:25 PM] Robert K#0722
With the tx assembly service released, I think we have a new goal we should aim for, for the launch of the stablecoin.


[11/09/2020 12:25 PM] Robert K#0722
The CLI will be useful for technical people, but waaaaay too confusing for 99% of users.


[11/09/2020 12:26 PM] Robert K#0722
As such I'm going to push for token support in Yoroi, and we should do StableCoin auctions via the Auction House.

{Reactions}
üòç (3) 

[11/09/2020 8:33 PM] kushti#0978
@Robert K would be good to get tokens in Yoroi, yes, for auctions, gateways, stablecoin tokens.


[11/09/2020 8:33 PM] kushti#0978
Maybe it will be especially useful to put into reserves with just Yoroi + assembler


[11/10/2020 8:59 AM] Robert K#0722
@kushti Hmmm


[11/10/2020 8:59 AM] Robert K#0722
So this is an interesting idea.


[11/10/2020 9:00 AM] Robert K#0722
As I mentioned prior, I've abstracted out the core logic of the stablecoin into a pure rust library that can compile to WASM.


[11/10/2020 9:00 AM] Robert K#0722
The idea is that we could eventually have different frontend targets.


[11/10/2020 9:01 AM] Robert K#0722
So maybe we could have one frontend use the tx assembler service as a web dApp, similar to the Auction House?


[11/10/2020 9:19 AM] Robert K#0722
Hmm, maybe we could just create a web dApp instead of adding a GUI inside of Yoroi for the stablecoin


[11/10/2020 9:20 AM] Robert K#0722
And v1 of the stablecoin web dApp will use tx assembler, while v2 will use our web dApp bridge once we release that


[11/10/2020 9:20 AM] Robert K#0722
Will talk internally about it.


[11/10/2020 9:22 AM] Robert K#0722
@scalahub Have you had a chance to test the CLI?


[11/10/2020 9:22 AM] Robert K#0722
I believe I've squashed out the vast majority of bugs for minting/redeeming tokens.


[11/10/2020 9:22 AM] Robert K#0722
The only thing is that you might need to use a pre-release version of the Ergo Node to get better utxo-set scanning support


[11/10/2020 9:23 AM] Robert K#0722
https://anonymousfiles.io/8HCxWMlP/

{Embed}
https://anonymousfiles.io/8HCxWMlP/
ergo-shared.jar
Anonymous file sharing with zero logs, zero speed or bandwidth restrictions, large upload size - Anonymous Files.
https://images-ext-2.discordapp.net/external/wtqZ3vV3piyaTa-HUBQ7DO5gKJC-t1GNx1rTZoBpTes/https/anonymousfiles.io/android-icon-192x192.png


[11/10/2020 9:23 AM] scalahub#2618
I had tried on Friday and got some error.. haven't had a chance after that.. will update and test today again


[11/10/2020 9:24 AM] scalahub#2618
do I need to use the new jar for my nodE?


[11/10/2020 9:24 AM] scalahub#2618
Im running 3.3.5


[11/10/2020 9:24 AM] Robert K#0722
It will help, and most likely address some of the errors you had


[11/10/2020 9:25 AM] Robert K#0722
One of the problems is that the scans were competing with wallet boxes, and that jar allows the scans/wallet to share boxes


[11/10/2020 9:25 AM] Robert K#0722
You might have to delete the old scans from your node, and rescan after that (or maybe just register new scans + rescan).


[11/10/2020 9:26 AM] Robert K#0722
And if you run into errors, please share them with me.


[11/10/2020 9:35 AM] Robert K#0722
And it seems that theoretically the `Cast Ballot` action works via the CLI


[11/10/2020 9:35 AM] Robert K#0722
(Tx submits)


[11/10/2020 9:37 AM] Robert K#0722
@scalahub Do you mind if we rename the actions in the v0.2 spec:
- "Vote For Update"
- "Collect Update Votes"


[11/10/2020 9:38 AM] Robert K#0722
Already using "vote" rather than "cast ballot" in the code, and "vote" works better for cli commands, so I'd prefer to have unison between the two.


[11/10/2020 9:56 AM] scalahub#2618
yes I'll do it locally and push it in next update


[11/10/2020 9:57 AM] scalahub#2618
And maybe its better to call collect as "Validate Votes"


[11/10/2020 9:58 AM] scalahub#2618
or even "Finalize"


[11/10/2020 9:59 AM] Robert K#0722
collect or finalize both make sense to me.


[11/10/2020 9:59 AM] Robert K#0722
Collect may be more explicit about what actually happens I suppose

{Reactions}
üëç 

[11/10/2020 1:03 PM] Robert K#0722
@scalahub Are you joining the call?


[11/10/2020 7:52 PM] kushti#0978
@Robert K @scalahub how was the call ?


[11/10/2020 8:11 PM] kushti#0978
@Robert K also, with stablecoin released as a Rust lib (and app) it will be easier to do bots on top of that I guess ? )


[11/11/2020 9:04 AM] Robert K#0722
@kushti The call went well, we discussed next steps and clarified a few things between us.

{Reactions}
‚ù§Ô∏è 

[11/11/2020 9:04 AM] Robert K#0722
And talked a bit about the tx assembler & how Gravity works.


[11/11/2020 9:06 AM] Robert K#0722
And that is a great point I never thought about.


[11/11/2020 9:07 AM] Robert K#0722
Building off-chain logic as a pure/portable library means it can be used by effectively any "front end"


[11/11/2020 9:07 AM] Robert K#0722
whether that front end receives input from users, or ends up being a bot which reads some external state and then issues txs


[11/11/2020 9:09 AM] Robert K#0722
Theoretically if we go down the route of using the Auction House as the first GUI method of purchasing stablecoins in the network, then we could create a bot that constantly mints StableCoins and puts them up for auction for example, and only mints more/puts up more auctions when demand appears to be high.


[11/11/2020 9:10 AM] Robert K#0722
Probably not worth devoting resources to right now tbh, but a cool idea indeed.


[11/11/2020 6:40 PM] kushti#0978
Yes, sounds exciting.


[11/11/2020 6:40 PM] kushti#0978
Hopefully, I'm fully back from tomorrow


[11/11/2020 7:25 PM] Robert K#0722
Hope your family is well @kushti, and don't worry if you have to take a few more days off.

{Reactions}
‚ù§Ô∏è 

[11/12/2020 10:38 AM] scalahub#2618
@Robert K here is the address with the modified `maxReserveRatio` (900 instead of 800)
`3hWDrtdxDrwi6FoQ3izoXkR8WUZDZQk98jQ4VpVN2qFhRXDFfNzfkPCDPNw9eNMJBVLHpbmaiszpfLjFKsw7Pba4NNZ4szzKTok457svGqh4ivKyq75wBRW3ghfWXbSUPvTqMmhsJAtJvhwEdHaSbpeksf25zTRUZrJ6mwBmMpHZeeMyM3xCKSvZPmA1C3Rv7NkaadUKxufJN8kNH5jyhCWH4UtJLjG8RLSB4nhdweEWw6yhRWbgTCLNG5nNtD5neya1cLE7y8pU95fffqngEeMtt6bYiGPd1fa3WQSao9E4YQdCCKgNR5amj1sL4jM443JZ4uTJt8zRuURWwXFhscnXc89rF8w6W36QWDSKgQ9VhpTKJC1Lrg4ADK3wpZ2z4x9eA9afgzVbmuyWmVojsimieWfqy6Tw5zrofwCUxgrYhmvL4eGuZf3Udafcvo6tUiv83Po83A7dh6hrGnKGVT8GJsExrL2Cy61Azh1stbFqDn51a1kimV2BRy9RAqFGkzsM57WQD24yZENJmncadQzByruwUKLHxhqHDcbtevw36LNsVoTitdacV8Nn51n45hVpoVh391DTnzZutVHUzpcxFsRAWokTb9YRNuXB3XUdqmQ2LHFTZu93TkdFoj8Um6BhLqioevScciWLRhqUNa2oAkmqCFiqpev839PKkaP3msrNeFAR7ZyUcjbX1np8UeTQfFPqYbEzuSLL6nAEa2eEhn1CQ6cPBf3aukdNsAJVaeDm7fP6SGm3esHd8YtezKiYv3fvftFbDFqtTjwHBKEjkfqLM2F3YJAcHUbCahkrAvYheYm1tQUchPG3BySUzzuw7n92JMqpa4t8D8q7TQHtGVXynHMckoTbQknctzXFaePyuegEdhCBgwxpstPpmPekH`


[11/12/2020 10:39 AM] scalahub#2618
Didn't realise it was already uploaded in v0.2 a while ago
https://github.com/Emurgo/stablecoin-project/blob/1533c3b9b3c1d7a76541668a260a6c7dac1ac110/ergo-stablecoin/src/test/scala/stablecoin/v2/NewBankContractSpec.scala#L10


[11/12/2020 10:43 AM] Robert K#0722
Ah, thanks.


[11/12/2020 10:43 AM] Robert K#0722
I've implemented the collect votes Action in the off-chain lib.


[11/12/2020 10:44 AM] Robert K#0722
Will be connecting it to the CLI today and testing collecting votes.


[11/12/2020 10:44 AM] scalahub#2618
awesome! I'm going to be trying the CLI today for exchange


[11/12/2020 10:45 AM] scalahub#2618
The current CLI already has the cast vote action right?


[11/12/2020 10:46 AM] Robert K#0722
Yes, and it appears to work well


[11/12/2020 10:46 AM] Robert K#0722
(Haven't hit any errors)


[11/12/2020 10:47 AM] Robert K#0722
By the way as a silly aside, when we're done testing with this test stablecoin deployment, I'll probably vote to withdraw the finals reserves in the end.


[11/12/2020 10:47 AM] Robert K#0722
I by mistake burned a bunch of reservecoins and a stablecoin, and would prefer to rescue those funds eventually üòÅ


[11/12/2020 10:48 AM] scalahub#2618
yes sure why not üôÇ


[11/12/2020 10:49 AM] scalahub#2618
btw for testing we should keep rate little low


[11/12/2020 10:49 AM] scalahub#2618
(default rate, and even oracle rate)


[11/12/2020 10:50 AM] Robert K#0722
Yeah, but in the end it's good to test with the live oracle rate


[11/12/2020 10:51 AM] Robert K#0722
And if we use the live oracle rate, then changing rc default price doesn't really change anything


[11/12/2020 11:34 AM] Robert K#0722
@scalahub I think this part of the v0.2 spec is incorrect :

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/776409489226203146/unknown.png


[11/12/2020 11:34 AM] Robert K#0722
R5 should be the id of the current update box, right?


[11/12/2020 11:48 AM] scalahub#2618
Yes it should be update box. Hope the contract is correct. Checking


[11/12/2020 11:52 AM] scalahub#2618
contract is correct though, just a typo üòå

{Reactions}
üëå 

[11/12/2020 1:37 PM] Robert K#0722
Hmm, I just realized that it may be best to remove any hardcoded addresses from the CLI


[11/12/2020 1:37 PM] Robert K#0722
Because every time we update the protocol, the CLI will be broken


[11/12/2020 1:38 PM] Robert K#0722
Instead it's best to get the addresses from the boxes which currently exist, and as such just rely on the NFTs


[11/12/2020 1:39 PM] Robert K#0722
So addresses are only required on bootstrap, and from there NFTs are relied on

{Reactions}
üëç 

[11/12/2020 1:46 PM] scalahub#2618
should we store the hash of the bank contract in the recept box as well to indicate which version of protocol was used?


[11/12/2020 1:47 PM] scalahub#2618
And should we store the fee taken in another register of the receipt box?


[11/12/2020 1:50 PM] Robert K#0722
Hmm, those are not bad ideas.


[11/12/2020 1:51 PM] Robert K#0722
Do you think that would add a lot of size, or be pretty minimal?


[11/12/2020 1:56 PM] scalahub#2618
fee is pretty minimal. hash of the address (ergotree) is also not too much 32 bytes. @kushti what do you think?


[11/12/2020 2:01 PM] scalahub#2618
keeping fee will be helpful for the frontend.. not sure keeping contract hash helps that much


[11/12/2020 2:24 PM] Robert K#0722
I can just expose the functions for calculating fee in the off-chain library


[11/12/2020 2:25 PM] Robert K#0722
The off-chain code has to do it anyways, and it's more effort for the front-end to look at the results on-chain to find the numbers


[11/12/2020 2:53 PM] scalahub#2618
I see. In that case we can leave it out for now. I was thinking of explorer or some other 3rd party frontend


[11/12/2020 3:00 PM] Robert K#0722
By the way @scalahub You'll need to re-register your utxo-set scans with the latest commit in the near future (before we run an update through)


[11/12/2020 3:01 PM] Robert K#0722
Removed all hardcoded addresses and so the scans should be good going forward


[11/12/2020 3:34 PM] Robert K#0722
@scalahub @kushti @greenhat If I could get any help/insight on what this error specifically is that'd be great.


[11/12/2020 3:34 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/776470067969523732/message.txt


[11/12/2020 3:34 PM] Robert K#0722
`"Malformed request: Error in Evaluation.compile.evaluate(s4778 -> s4643 && { s4657 })"`


[11/12/2020 3:35 PM] Robert K#0722
The file above has the json of the tx which is meant to be signed by an ergo node.


[11/12/2020 3:36 PM] Robert K#0722
I am trying to spend the "Update" box via the "Collect Votes" action


[11/12/2020 3:41 PM] scalahub#2618
Is the update box the first input box?


[11/12/2020 3:41 PM] scalahub#2618
the update must be second and bank the first


[11/12/2020 3:42 PM] scalahub#2618
Actually this does not seem to be bank box either
https://api.ergoplatform.com/api/v0/transactions/boxes/17da0c63a00008ce3659d074a9cf3f2f473045fabdc2b8918114807de9ca5831


[11/12/2020 3:42 PM] scalahub#2618
the first input


[11/12/2020 3:43 PM] scalahub#2618
oh wait you are talking about collect


[11/12/2020 3:44 PM] greenhat#6562
Looks like an error on evaluation of an input box during the tx signing.


[11/12/2020 4:01 PM] scalahub#2618
found the issue. its due to using lower value


[11/12/2020 4:01 PM] scalahub#2618
`val minStorageRent = 10000000L`


[11/12/2020 4:02 PM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/1533c3b9b3c1d7a76541668a260a6c7dac1ac110/ergo-stablecoin/src/main/scala/stablecoin/v2/Contracts.scala#L142
`updateBoxOut.value >= $minStorageRent`


[11/12/2020 4:02 PM] scalahub#2618
so please make the output update box at least `10000000` and it'll work


[11/12/2020 4:07 PM] Robert K#0722
Ah, hmmm


[11/12/2020 4:07 PM] Robert K#0722
So effectively you bootstrapped too little Ergs initially?


[11/12/2020 4:08 PM] scalahub#2618
yup looks like it üòõ forgot that the min storage rent was higher


[11/12/2020 4:08 PM] Robert K#0722
The current logic in the off-chain preserves Ergs amount I believe, so I'll have to manually do the plus/minusing and hard code stuff to unbrick the situation


[11/12/2020 4:08 PM] Robert K#0722
But shouldn't be a big deal


[11/12/2020 4:08 PM] scalahub#2618
its only the firs time and next time we can just preserve the amount


[11/12/2020 4:09 PM] Robert K#0722
It's only a one-time tx


[11/12/2020 4:09 PM] Robert K#0722
Yep


[11/12/2020 4:09 PM] scalahub#2618
I could spend it but it'll be better if you try the cli


[11/12/2020 4:09 PM] Robert K#0722
Sounds good


[11/12/2020 4:12 PM] Robert K#0722
Yep, you were right


[11/12/2020 4:12 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/0e433a7fd9a4b31ae6c6d250831302c7fb1d59d1a10496ba75d94120811572d5


[11/12/2020 4:12 PM] scalahub#2618
oh cool I was about to send


[11/12/2020 4:12 PM] Robert K#0722
Tx passed


[11/12/2020 4:13 PM] scalahub#2618
cool and the update also ready?


[11/12/2020 4:15 PM] Robert K#0722
The bank update action you mean?


[11/12/2020 4:15 PM] Robert K#0722
I haven't implemented that part at all


[11/12/2020 4:15 PM] Robert K#0722
Going one step at a time to make sure everything works


[11/12/2020 4:16 PM] Robert K#0722
@scalahub Could you compile a new address with a different max reserve ratio?


[11/12/2020 4:16 PM] Robert K#0722
I would like to test the update voting + vote collecting end-to-end without manual intervention


[11/12/2020 4:19 PM] scalahub#2618
ok so first was 800, this is 900 and you want one more.. right?


[11/12/2020 4:20 PM] scalahub#2618
`3hWDrtdxDrwi6FoQ3izoXkR8WUZDZQk98jQ4VpVN2qFhRXDFfNzfkPCDPNw9eNMJBVLHpbmaiszpfLjFKsw7Pba4NNZ4szzKTp2qhWwQzZ7R6iJPhWBr47PbL55oiahJssxvkk42vyJNSfyvH23HxgTFfCo9sHk6h4WMtdx6PrBNrapLz5AWWzCyX2BiSc8khtjUEFnLg5UiatjCuuyrfQExZzMh7mvsFUJzTbmjogoxPwA4dC9zsVz5ZmzP5gMYaMSpeScS1zKtJV4EgvdWruNwQkyfXheJ2moRUm99WbuxtsftdGth8huxCaorQiCq3hAwpJYJDgzCeusV18LmLYcQvdSKvDaXFNQiD4AwLN9BTqLhjAkQDFgUYRBcwdLiQ5snYdsxUnBK8aND2LxdVzW181hNJvNr5ondMYWRnjnWAcWiaGqR7wS76476T3Ccbyh6pyocc7vjdEuBWp4jmzBz2FPMX89cw92HJnUCBPG9cRh8yBpZKPpnLaUL8kJuqoPLKNsn8wVbCCYzF2tzLzrssc4kptdRuZXVwwbZGJTopvAAH4PCKuTKY7EK1HMs6zqvkx8fjpN82uQVcaQ1aQ9DF7DW9H2poSyeKdSLgUpwZKCuPcF7Dzg6GgwAcJv5npkoPdMjY56V6ygFuJNsP42dqPdKrno7CWwPJ2y4mEAsB6pX6gJhKoAQFQCP1qhBEaKTACLNcSQZoibPrzmbk1KghLpR9YuDHoGwtGxZ1fMgYxincgUu8CstHeSCssYKSTheGDFwNPTAgVCWt2YihtJMZcfKJJ4iEbVMjrA4E9mybPvkLaY1puKWcqVyK9rxNR218h7Sc5KCsDxLWfU6n6f1WkJoSEzkoYJuQsBHUFU5CqgWQYusx8FgXrhP9JYbDCRss`


[11/12/2020 4:20 PM] scalahub#2618
this is 1000


[11/12/2020 4:21 PM] Robert K#0722
Great, thanks.


[11/12/2020 4:25 PM] Robert K#0722
@scalahub Are you going to update the v0.2 spec btw before we forget?


[11/12/2020 4:27 PM] scalahub#2618
just now pushed


[11/12/2020 4:27 PM] Robert K#0722
Ah great


[11/12/2020 4:28 PM] Robert K#0722
@scalahub Have you got your CLI running?


[11/12/2020 4:28 PM] Robert K#0722
It'd be good to test the case where we both vote too


[11/12/2020 4:28 PM] Robert K#0722
For collecting


[11/12/2020 4:29 PM] scalahub#2618
not yet..still using the old jar..need to update that first. Will I have to rescan wallet with new jar?


[11/12/2020 4:30 PM] Robert K#0722
register new scans + rescan


[11/12/2020 4:30 PM] Robert K#0722
Because the scans are updated too


[11/12/2020 4:30 PM] Robert K#0722
so you can do both at once


[11/12/2020 4:31 PM] scalahub#2618
doing that now


[11/12/2020 4:31 PM] Robert K#0722
üëå


[11/12/2020 4:32 PM] scalahub#2618
hmm but I'm running oracle-core using the same node .. do I need to do anything to that?


[11/12/2020 4:32 PM] scalahub#2618
should I keep it off till its synced?


[11/12/2020 4:37 PM] Robert K#0722
Doesn't really matter


[11/12/2020 4:37 PM] Robert K#0722
It'll just give you error messages


[11/12/2020 4:37 PM] Robert K#0722
but nothing bad will happen


[11/12/2020 4:37 PM] scalahub#2618
getting this error in `cargo run`
```error[E0723]: loops and conditional expressions are not stable in const fn
  --> /home/amitabh/.cargo/registry/src/github.com-1ecc6299db9ec823/ergo-lib-0.3.0/src/chain/ergo_box/box_value.rs:44:9
   |
44 |         v >= BoxValue::MIN_RAW as u64 && v <= BoxValue::MAX_RAW as u64
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information
   = help: add `#![feature(const_fn)]` to the crate attributes to enable

error: aborting due to previous error

For more information about this error, try `rustc --explain E0723`.
error: could not compile `ergo-lib`.

To learn more, run the command again with --verbose.
warning: build failed, waiting for other jobs to finish...
error: build failed```


[11/12/2020 4:38 PM] Robert K#0722
run `cargo update`


[11/12/2020 4:39 PM] Robert K#0722
And build after


[11/12/2020 4:41 PM] Robert K#0722
I've got to head out (probably for the night)


[11/12/2020 4:42 PM] Robert K#0722
I just tested both voting/collecting alone and they both work


[11/12/2020 4:42 PM] scalahub#2618
still getting same üò¶


[11/12/2020 4:42 PM] Robert K#0722
Are you sure you're on the latest commit?


[11/12/2020 4:42 PM] scalahub#2618
``` cargo run
   Compiling ergo-lib v0.3.0
error[E0723]: loops and conditional expressions are not stable in const fn
  --> /home/amitabh/.cargo/registry/src/github.com-1ecc6299db9ec823/ergo-lib-0.3.0/src/chain/ergo_box/box_value.rs:44:9
   |
44 |         v >= BoxValue::MIN_RAW as u64 && v <= BoxValue::MAX_RAW as u64
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information
   = help: add `#![feature(const_fn)]` to the crate attributes to enable

error: aborting due to previous error

For more information about this error, try `rustc --explain E0723`.
error: could not compile `ergo-lib`.

To learn more, run the command again with --verbose.
```


[11/12/2020 4:42 PM] Robert K#0722
Ah, it might also be your rust version is old


[11/12/2020 4:42 PM] Robert K#0722
type `rustc -V`


[11/12/2020 4:42 PM] Robert K#0722
in console


[11/12/2020 4:42 PM] scalahub#2618
rustc 1.45.1 (c367798cf 2020-07-26)


[11/12/2020 4:43 PM] Robert K#0722
I'm 1.47


[11/12/2020 4:43 PM] scalahub#2618
how can I get that?


[11/12/2020 4:43 PM] Robert K#0722
Do you have `rustup` installed?


[11/12/2020 4:43 PM] scalahub#2618
yes


[11/12/2020 4:43 PM] Robert K#0722
`rustup update`


[11/12/2020 4:46 PM] scalahub#2618
looks like that was it.. because its now updating and building.. will let you know if any issues


[11/12/2020 4:46 PM] scalahub#2618
what are the steps now? Just register scan?


[11/12/2020 4:47 PM] scalahub#2618
wallet rescan already started


[11/12/2020 4:49 PM] scalahub#2618
registered scans as well .. will try out a bit later once its scanned wallet.


[11/12/2020 4:55 PM] Robert K#0722
Yep that should be sufficient


[11/13/2020 9:50 AM] Robert K#0722
@scalahub Did it end up working?


[11/13/2020 10:23 AM] Robert K#0722
@greenhat I've been thinking about this quite a bit, and I'm still unsure of what is the better choice between using a custom predicate for a `BoxSpec` struct, versus specifically defining the address/registers/tokens.


[11/13/2020 10:23 AM] Robert K#0722
For the Ergo Protocol Framework


[11/13/2020 10:24 AM] Robert K#0722
Because I realized that in many cases you won't want to specify a value (for example the address) when say using an update protocol in your dApp.


[11/13/2020 10:24 AM] Robert K#0722
So going the predicate route might indeed make more sense


[11/13/2020 10:24 AM] Robert K#0722
Hmm, though I guess we could just use `Option`s for all fields in a `BoxSpec`


[11/13/2020 10:25 AM] Robert K#0722
So if the `BoxSpec` has a `None` in the address, then no verification is performed on it.


[11/13/2020 10:25 AM] Robert K#0722
And then likewise you can skip say register R5 by putting `None` there, but specify R6 still.


[11/13/2020 10:34 AM] greenhat#6562
I see the predicate way as a "black box" without an ability to recognize the requirements. It gives your freedom, but you pay the price.


[11/13/2020 10:36 AM] Robert K#0722
Hmm, then maybe we can do both.


[11/13/2020 10:37 AM] Robert K#0722
By default a `BoxSpec` creation func has a predicate that just returns "true", but we can have a customized predicated creation function too


[11/13/2020 10:37 AM] Robert K#0722
And if we make all of the fields `Option`s, then for advanced usage someone can make them all `None` and just use a pure predicated-based definition


[11/13/2020 10:38 AM] Robert K#0722
Or do half-half if there's some complicated logic which needs to ensure R4 has some relation with R6


[11/13/2020 10:38 AM] Robert K#0722
And as such get the best of both worlds.


[11/13/2020 10:40 AM] greenhat#6562
Sounds good.


[11/13/2020 12:10 PM] Robert K#0722
@greenhat When do you think 0.4 of ergo-lib will release?


[11/13/2020 12:11 PM] Robert K#0722
For EPF I need the exploer box_id json reading, but I am reliant on other code I have which is stuck on 0.3.0 and I can't mix/match.


[11/13/2020 12:16 PM] greenhat#6562
@Robert K I'm re-working https://github.com/ergoplatform/sigma-rust/pull/142 and would like to include it. I hope to finish it today, then I'm ready to push a release.

{Embed}
https://github.com/ergoplatform/sigma-rust/pull/142
Check crate exports and remove internals by greenhat ¬∑ Pull Request...
Close #141

 update changelog;

Changelog
https://github.com/ergoplatform/sigma-rust/pull/142/files#diff-d0e8518e7058db8fd9b4487668d3aa6e062366493cbfde1c1ccf4c6029511814
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
‚ù§Ô∏è (2) 

[11/13/2020 12:27 PM] Robert K#0722
Oh wow, that's much earlier than expected.


[11/13/2020 12:27 PM] Robert K#0722
Great, looking forward to it.


[11/13/2020 12:32 PM] greenhat#6562
@Robert K only part of the planned milestone (v0.4) is implemented. The interpreter stuff will be moved into v0.5. There are quite a lot of breaking changes already there, so it's a good reason to push them out.

{Reactions}
üëç 

[11/13/2020 2:12 PM] Robert K#0722
@scalahub @kushti I'm going to have to push the meeting for next week up 1 hour if that works for you guys


[11/13/2020 2:16 PM] kushti#0978
@Robert K yeah, no problem!


[11/13/2020 2:17 PM] kushti#0978
on my side, I'm preparing 3.3.7 node release and catching up with the things


[11/13/2020 2:18 PM] kushti#0978
ready to jump into deviation check pool


[11/13/2020 2:18 PM] kushti#0978
also @scalahub let's have a call when you can


[11/13/2020 2:47 PM] scalahub#2618
@kushti lets connect Monday. Bit of a busy weekend due to diwali festival in india
@Robert K could not test yet. Will be testing tonight and report back over weekend
Will check my oracle-pool in a couple of hours when back home


[11/13/2020 2:47 PM] scalahub#2618
> @scalahub @kushti I'm going to have to push the meeting for next week up 1 hour if that works for you guys
@Robert K Sure though not sure if "up" means earlier or later üòõ but both are fine


[11/13/2020 2:51 PM] kushti#0978
@scalahub shubh dipawali !


[11/13/2020 3:40 PM] Robert K#0722
Ah sorry, I meant later.


[11/14/2020 8:06 AM] Robert K#0722
@scalahub We can't just be handing out participant tokens to Oracle pools to random people.


[11/14/2020 8:06 AM] Robert K#0722
The current pool doesn't really matter, but that kind of destroys any safety.


[11/14/2020 8:08 AM] Robert K#0722
Or were you recommending that you create new tokens for the person to use?


[11/14/2020 8:26 AM] scalahub#2618
I was talking about the test pool (deviation check)


[11/14/2020 8:27 AM] scalahub#2618
but yes we cannot hand out tokens for the main net pool..


[11/14/2020 8:28 AM] scalahub#2618
btw who is Keith? is he from emurgo?


[11/14/2020 8:30 AM] scalahub#2618
@Robert K have tested mint and redeem operations

{Reactions}
üëç 

[11/16/2020 6:26 AM] scalahub#2618
@Robert K @kushti taking the day off today.. Will share my updates tomorrow


[11/16/2020 8:21 AM] Robert K#0722
Idk who Keith is


[11/16/2020 8:21 AM] Robert K#0722
Some new community member


[11/16/2020 8:22 AM] Robert K#0722
That's why I mentioned we shouldn't hand out tokens.


[11/16/2020 10:17 AM] Robert K#0722
@scalahub When you get a chance, any idea why I'm getting the same error again for collecting votes? 
```Malformed request: Error in Evaluation.compile.evaluate(s4778 -> s4643 && { s4657 })```


[11/16/2020 10:17 AM] Robert K#0722
Tx json

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/777839868520300584/message.txt


[11/16/2020 10:19 AM] Robert K#0722
The output has `10000000` nanoErgs so unclear to me what's the problem this time, when it worked on Friday. Hmmm


[11/16/2020 4:30 PM] Robert K#0722
@greenhat, and for anyone else who's interested, I think by end of week I should have v0.2 of the Ergo Protocol Framework in a pretty useable state and will have the stablecoin off-chain code implemented with it.


[11/16/2020 4:30 PM] Robert K#0722
I've made some solid progress on figuring out on how to structure many things to make them play nice with each other/have the types be allowed for WASM compatability


[11/16/2020 4:32 PM] kushti#0978
@Robert K anything I can help with ?


[11/16/2020 4:32 PM] Robert K#0722
One thing I wanted some opinions on, is that in the EPF I initially wanted a function on the `BoxSpec` struct that is:

```rust
    /// Finds boxes which match your `BoxSpec` via using an instance of
    /// the Ergo Explorer Backend.
    /// `explorer_api_url` must be formatted as such:
    /// `https://api.ergoplatform.com/api/v0/
    pub fn find_boxes_in_explorer(&self, explorer_api_url: &str) -> Result<Vec<ErgoBox>> {
```


[11/16/2020 4:33 PM] Robert K#0722
The developer experience is really nice here, you just define a `BoxSpec` and you can have it automatically fetch the ErgoBoxes from the exploer


[11/16/2020 4:34 PM] Robert K#0722
But the problem here is that this makes the library non-pure, which makes it worse for portability and currently doesn't compile to WASM (I think I can probably hide certain functions depending on compilation target, so it may be avoidable using features)


[11/16/2020 4:34 PM] Robert K#0722
I was thinking instead to expose something like:
```
 /// Potentially replace this method with 2 methods that are pure:
    /// 1. explorer_endpoint()
    /// 2. process_explorer_response()
```


[11/16/2020 4:35 PM] Robert K#0722
And so once you define a `BoxSpec`, you can do 
```
my_box_spec.explorer_endpoint()
```


[11/16/2020 4:35 PM] Robert K#0722
to get the url for the get request that will give you a json response with boxes


[11/16/2020 4:35 PM] Robert K#0722
and then you take that json response string and feed it to `process_explorer_response()`


[11/16/2020 4:36 PM] Robert K#0722
As such we outsource the get request to whatever target platform is using the off-chain code, and we can keep the framework pure.


[11/16/2020 4:36 PM] Robert K#0722
But it does make the UX a bit more crappy, and less self-evident.


[11/16/2020 4:47 PM] Robert K#0722
@kushti Once I get to a more-or-less stable version, if you could take a look at that point to see if you have any ideas that'd be good.

{Reactions}
‚ù§Ô∏è 

[11/16/2020 4:48 PM] Robert K#0722
We're probably going to be re-releasing the EPF via Emurgo github again like with the Node Interface, probably End of the month


[11/16/2020 4:50 PM] Robert K#0722
Actually, there is one thing that maybe would fit you well.


[11/16/2020 4:51 PM] Robert K#0722
I want to create a method on the `BoxSpec` struct that auto-generates a UTXO-set scan json based off of the spec.


[11/16/2020 4:51 PM] Robert K#0722
Not sure if you have much time/want to mess around getting use to Rust syntax, but that could potentially be helpful since you know the UTXO-set scan json format better than anyone else, so that could be a good option.


[11/16/2020 4:52 PM] Robert K#0722
(It's not really important tbh, but is a nice to have eventually)


[11/16/2020 5:22 PM] greenhat#6562
I'd avoid from networking code in rust if we want this lib to be multi-platfrom. Besides JS, both iOS and Android devs would want to use OS-specific facilities for networking stuff.

{Reactions}
üëå (2) 

[11/16/2020 10:05 PM] kushti#0978
> Not sure if you have much time/want to mess around getting use to Rust syntax, but that could potentially be helpful since you know the UTXO-set scan json format better than anyone else, so that could be a good option.
@Robert K will try to find time for that! let's discuss during the call


[11/17/2020 9:37 AM] Robert K#0722
> @Robert K will try to find time for that! let's discuss during the call
@kushti Great, sounds good.


[11/17/2020 9:38 AM] Robert K#0722
@scalahub Hey, any ideas about the error I posted above for the collect votes action?


[11/17/2020 9:54 AM] scalahub#2618
> @scalahub Hey, any ideas about the error I posted above for the collect votes action?
@Robert K I tried just now but the data input box does not exist (its been spent). Did it finally work? 
https://api.ergoplatform.com/api/v0/transactions/boxes/bdaefa70f11721e384f112fbceb3255b6b4e3db72a0f081c0970bf8fb538fad2


[11/17/2020 10:16 AM] Robert K#0722
What data-input was spent?


[11/17/2020 10:16 AM] Robert K#0722
Are you referring to the "Update Protocol" action? @scalahub


[11/17/2020 10:16 AM] Robert K#0722
So just as a recap:
1. The "Update Protocol" action was broken in the off-chain code always.


[11/17/2020 10:17 AM] Robert K#0722
2. Since Monday the "Collect Votes" has become broken again, after working on Friday with no code changes in between.


[11/17/2020 10:18 AM] scalahub#2618
in the message.txt you posted, you have `"dataInputs":[{"boxId":"bdaefa70f11721e384f112fbceb3255b6b4e3db72a0f081c0970bf8fb538fad2"}]...`


[11/17/2020 10:18 AM] scalahub#2618
this box does not exist


[11/17/2020 10:20 AM] scalahub#2618
I am referring to the same message.txt, so it should be "collect votes", not "update protocol"


[11/17/2020 10:22 AM] Robert K#0722
Right but that's not the problem


[11/17/2020 10:22 AM] Robert K#0722
It got spent from further testing I was trying


[11/17/2020 10:23 AM] Robert K#0722
Here's a new one with the exact same problem:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/778203548822667274/message.txt


[11/17/2020 10:23 AM] Robert K#0722
And that data-input used now is unspent


[11/17/2020 10:23 AM] scalahub#2618
ok let me check


[11/17/2020 10:23 AM] Robert K#0722
Thanks


[11/17/2020 10:30 AM] scalahub#2618
ok I think I found the reason: 
Current update box has R4 `5ddfa4199e67db6d957c6340526d871f114e395fd35664fd073e0add28e3b40e`
Ballot box also has same value in R4 (which implies that same value must be in new update box R4)
The logic for collect is that the R4 of old update box must be different from new 
Did you use new address to generate the hash?


[11/17/2020 10:33 AM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/8c244d961225a50dfe5b487dd0c95dbd90fe5991/ergo-stablecoin/src/main/scala/stablecoin/v2/Contracts.scala#L144


[11/17/2020 10:38 AM] Robert K#0722
Ah, I see.


[11/17/2020 10:38 AM] Robert K#0722
I'll test, and if that's the problem then I'll add a check in the off-chain code to throw an error if the vote is the same.


[11/17/2020 10:45 AM] Robert K#0722
Yep, that was it, good catch


[11/17/2020 10:45 AM] Robert K#0722
Will add the error checking


[11/17/2020 11:40 AM] Robert K#0722
Any idea on what the problem is with the "Update Protocol" action @scalahub ?


[11/17/2020 11:58 AM] scalahub#2618
> Any idea on what the problem is with the "Update Protocol" action @scalahub ?
@Robert K not yet. Will check and get back. Do you have json of failed tx btw?


[11/17/2020 12:39 PM] Robert K#0722
Yeah sure


[11/17/2020 12:39 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/778237800930738206/message.txt


[11/17/2020 1:56 PM] Robert K#0722
Sorry I might be delayed on the meeting


[11/17/2020 1:56 PM] Robert K#0722
Current meeting is running long


[11/17/2020 2:02 PM] kushti#0978
ah ok


[11/17/2020 2:02 PM] kushti#0978
I'm knocking


[11/17/2020 2:03 PM] scalahub#2618
I dont see you @kushti


[11/17/2020 2:03 PM] kushti#0978
I need for a permission to join


[11/17/2020 2:04 PM] Robert K#0722
Sorry, it's going quite long


[11/17/2020 2:11 PM] Robert K#0722
Feel free to start a different call/meeting and send me the link and I'll try to join when this meeting finishes


[11/17/2020 2:18 PM] scalahub#2618
How about we move to same time tomorrow? I may need to leave a bit earlier today.. in about 30 mins


[11/17/2020 2:18 PM] Robert K#0722
I'm about to get off the call


[11/17/2020 2:18 PM] Robert K#0722
2 minutes


[11/17/2020 2:19 PM] scalahub#2618
Ok sure


[11/17/2020 2:20 PM] Robert K#0722
@kushti


[11/17/2020 2:20 PM] Robert K#0722
@kushti https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[11/18/2020 6:27 AM] scalahub#2618
@Robert K haven't got a chance to test the update protocol yet. Will be doing it today

{Reactions}
üëç 

[11/18/2020 12:51 PM] Robert K#0722
@greenhat When do you estimate that ergo-lib 4.0 will be released?


[11/18/2020 12:51 PM] Robert K#0722
I'm thinking about writing a 2 part tutorial about making an end-to-end dApp using the Ergo Protocol Framework using the explorer to fetch boxes


[11/18/2020 12:54 PM] greenhat#6562
@Robert K tomorrow. Sebastian‚Äôs PR is almost ready. I‚Äôm making SType public and am ready to push a release.


[11/18/2020 12:54 PM] Robert K#0722
Awesome, and it will include the `boxId` json fix as well, right?


[11/18/2020 12:54 PM] greenhat#6562
@Robert K yep


[11/18/2020 12:55 PM] Robert K#0722
Perfect.


[11/18/2020 1:44 PM] scalahub#2618
@Robert K found the issue. There was a bug in the spec. The correct order of boxes is 
Input 0: update box
Input 1: bank box

output 0: update box
output 1: bank box

I'll update the spec accordingly. 
The tx for update is this https://explorer.ergoplatform.com/en/transactions/94de59f80945ee17ddf042921bdae1c26d360748bccd6908392fdc966c808dfa


[11/18/2020 1:45 PM] Robert K#0722
Ah I see


[11/18/2020 1:45 PM] Robert K#0722
Cool, that's a simple fix


[11/18/2020 1:47 PM] Robert K#0722
I'll update the code and start voting to then try and update again

{Reactions}
‚ù§Ô∏è (2) 

[11/18/2020 1:57 PM] scalahub#2618
There is already an address I had shared with different Max reserve ratio. Let me know if you need it again


[11/18/2020 1:57 PM] Robert K#0722
I have like 3 addresses in my terminal history so I think I'm fine


[11/18/2020 1:58 PM] Robert K#0722
there's a non 0 chance one of the addresses is something random, but I think they're all the SC contract


[11/18/2020 2:03 PM] Robert K#0722
Btw currently discussing with a stake pool operator (http://stakhanovite.io/) that Marek recommended for setting up an oracle


[11/18/2020 2:03 PM] Robert K#0722
Will let you know his address once I help him get setup @scalahub


[11/18/2020 3:15 PM] Robert K#0722
@scalahub Perfect, updating works: https://explorer.ergoplatform.com/en/transactions/3165c9573176a12d8d0b8fc518eb0d6d2bab81ea33d44048f62ec5bfbf4bdebf


[11/18/2020 4:30 PM] Robert K#0722
I think by the end of the week I should have an example project/tutorial available for the EPF


[11/18/2020 4:31 PM] Robert K#0722
The first tutorial is just about how to use the EPF to build the pure off-chain logic/library


[11/18/2020 4:32 PM] Robert K#0722
Might have to release with just that for the initial release, and then I want a 2nd tutorial that implements a CLI using the off-chain lib for the dApp


[11/18/2020 4:34 PM] Robert K#0722
@scalahub Can you vote for `3hWDrtdxDrwi6FoQ3izoXkR8WUZDZQk98jQ4VpVN2qFhRXDFfNzfkPCDPNw9eNMJBVLHpbmaiszpfLjFKsw7Pba4NNZ4szzKTok457svGqh4ivKyq75wBRW3ghfWXbSUPvTqMmhsJAtJvhwEdHaSbpeksf25zTRUZrJ6mwBmMpHZeeMyM3xCKSvZPmA1C3Rv7NkaadUKxufJN8kNH5jyhCWH4UtJLjG8RLSB4nhdweEWw6yhRWbgTCLNG5nNtD5neya1cLE7y8pU95fffqngEeMtt6bYiGPd1fa3WQSao9E4YQdCCKgNR5amj1sL4jM443JZ4uTJt8zRuURWwXFhscnXc89rF8w6W36QWDSKgQ9VhpTKJC1Lrg4ADK3wpZ2z4x9eA9afgzVbmuyWmVojsimieWfqy6Tw5zrofwCUxgrYhmvL4eGuZf3Udafcvo6tUiv83Po83A7dh6hrGnKGVT8GJsExrL2Cy61Azh1stbFqDn51a1kimV2BRy9RAqFGkzsM57WQD24yZENJmncadQzByruwUKLHxhqHDcbtevw36LNsVoTitdacV8Nn51n45hVpoVh391DTnzZutVHUzpcxFsRAWokTb9YRNuXB3XUdqmQ2LHFTZu93TkdFoj8Um6BhLqioevScciWLRhqUNa2oAkmqCFiqpev839PKkaP3msrNeFAR7ZyUcjbX1np8UeTQfFPqYbEzuSLL6nAEa2eEhn1CQ6cPBf3aukdNsAJVaeDm7fP6SGm3esHd8YtezKiYv3fvftFbDFqtTjwHBKEjkfqLM2F3YJAcHUbCahkrAvYheYm1tQUchPG3BySUzzuw7n92JMqpa4t8D8q7TQHtGVXynHMckoTbQknctzXFaePyuegEdhCBgwxpstPpmPekH`


[11/18/2020 4:34 PM] Robert K#0722
I want to try collecting multiple votes


[11/18/2020 5:54 PM] scalahub#2618
Ok.. now many votes do you want?


[11/18/2020 6:26 PM] scalahub#2618
here is a tx with two vote boxes containing 3 votes total
1st with 2 votes
2nd with 1 votes
https://explorer.ergoplatform.com/en/transactions/1470150da3ab82c51d0cac1f9d67d6cc42fcd6bdc43d536e03ee12b155e7601b


[11/18/2020 8:29 PM] Robert K#0722
Perect, I'll test tomorrow


[11/18/2020 8:30 PM] Robert K#0722
(Also, have you tested failure cases with the contract to ensure it's working properly for disallowing vote collection?)


[11/19/2020 9:02 AM] Robert K#0722
@scalahub Can you bootstrap `9fckoJSnYpR38EkCzintbJoKaDwWN86wCmNdByiWyeQ22Hq5Sbj` into the test deviation pool?


[11/19/2020 10:15 AM] scalahub#2618
> (Also, have you tested failure cases with the contract to ensure it's working properly for disallowing vote collection?)
@Robert K yes (but in mocks)
https://github.com/Emurgo/stablecoin-project/blob/49e0ec4455acb878687e2671d1f8f3145b76e2fa/ergo-stablecoin/src/test/scala/stablecoin/v2/VotingSpec.scala#L111-L125


[11/19/2020 10:39 AM] Robert K#0722
Cool, that should be good


[11/19/2020 10:39 AM] Robert K#0722
I'm more worried about the contract than the off-chain code in failure cases


[11/19/2020 2:09 PM] scalahub#2618
> @scalahub Can you bootstrap `9fckoJSnYpR38EkCzintbJoKaDwWN86wCmNdByiWyeQ22Hq5Sbj` into the test deviation pool?
@Robert K I'll do it a bit later tonight

{Reactions}
üëå 

[11/19/2020 2:22 PM] Robert K#0722
Great, thanks.


[11/19/2020 2:51 PM] Robert K#0722
@scalahub @kushti @greenhat I've made a lot of progess on the EPF (and still more to be done especially with the new release of ergo-lib) and I was wondering if you guys could read through the README + a tutorial I wrote and give me feedback

{Reactions}
‚ù§Ô∏è 

[11/19/2020 2:52 PM] Robert K#0722
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/README.md

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/README.md
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[11/19/2020 2:52 PM] Robert K#0722
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/tutorials/Math_Bounty/1-math-bounty-dApp-getting-started.md

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/tutorials/Math_Bounty/1-math-bounty-dApp-getting-started.md
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[11/19/2020 2:53 PM] Robert K#0722
The idea is that I want to make a tutorial series going from 0 to creating an end-to-end CLI dApp that uses the explorer to find all the boxes automatically using the EPF.


[11/19/2020 2:54 PM] Robert K#0722
@greenhat I've cut a number of corners/added some wrapped functions on top of what you have in ergo-lib to try and simplify the experience of creating output box candidates for example into a couple lines for example.


[11/19/2020 3:23 PM] greenhat#6562
@Robert K This sounds very similar to what I've tried to do in Playgrounds API.


[11/19/2020 3:23 PM] greenhat#6562
Sure, I'll take a look.


[11/19/2020 3:57 PM] kushti#0978
@scalahub let's have a call finally )


[11/19/2020 5:06 PM] greenhat#6562
@Robert K It looks great! I wrote my feedback/thoughts in a PR desc - https://github.com/robkorn/ergo-utilities-rust/pull/4

{Embed}
https://github.com/robkorn/ergo-utilities-rust/pull/4
Fix typos, provide feedback by greenhat ¬∑ Pull Request #4 ¬∑ robkorn...
I wonder if MathBountyBox::new can be &quot;auto-generated&quot; either on type-level or via macros. It seems like a boilerplate.
consider using builder pattern (like TxBuilder in ergo-lib)...
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
üíØ (2) 

[11/19/2020 5:20 PM] Robert K#0722
Thanks for the great feedback & typo fix


[11/19/2020 5:42 PM] Robert K#0722
@greenhat I'm glad you made me take a look at `new` again


[11/19/2020 5:43 PM] Robert K#0722
Implementing the macro for it was trivial just now, and fields actually weren't needed at all.


[11/19/2020 5:44 PM] Robert K#0722
Funny enough, I was already using methods for everything on the `Bank` box in the stablecoin library, but for some reason I switched to fields when defining structs later on.


[11/19/2020 5:57 PM] greenhat#6562
I‚Äôm happy to help.


[11/19/2020 6:43 PM] kushti#0978
@Robert K looks fascinating ) willing to play with it )

{Reactions}
üëç 

[11/19/2020 10:11 PM] Robert K#0722
@greenhat Ah, I just remembered that I think one reason I was also disuaded from your tx builder interface is because it uses `ErgoTree` iirc, rather than String addresses. Though I guess we could build out an alternative `new` which uses a string instead.


[11/20/2020 5:44 AM] scalahub#2618
> @scalahub Can you bootstrap `9fckoJSnYpR38EkCzintbJoKaDwWN86wCmNdByiWyeQ22Hq5Sbj` into the test deviation pool?
@Robert K https://explorer.ergoplatform.com/en/transactions/4e2e626b85f810b03960c6da0725d5afb4fd15d3ab4da38f23a1eebb31618e86 (the 1st output)

{Reactions}
üëç 

[11/20/2020 8:03 AM] greenhat#6562
@Robert K I was suggesting to employ a builder pattern, not exposing ergo-lib's `TxBuilder` directly. Like the following:
```
 let math_bounty_candidate = create_candidate(
            bounty_amount_in_nano_ergs,
            &"94hWSMqgxHtRNEWoKrJFGVNQEYX34zfX68FNxWr".to_string(),
            &vec![],
            &vec![],
            current_height,
        )
``` 
would become something like 
```
let math_bounty_candidate = CandidateBuilder::new(bounty_amount_in_nano_ergs, &"address".to_string(), current_height)
.build();
```
and if you add tokens :
```
let math_bounty_candidate = CandidateBuilder::new(bounty_amount_in_nano_ergs, &"address".to_string(), current_height)
.set_tokens(tokens)
.build();
```
Or even breaking `new` into separate methods to "name" parameters:
```
let math_bounty_candidate = CandidateBuilder::with_value(bounty_amount_in_nano_ergs)
.with_address(&"address".to_string())
.with_height(current_height)
.with_tokens(tokens)
.build();
```


[11/20/2020 8:08 AM] greenhat#6562
I was using the reason to put required parameters into `new` method for ergo-lib builders and have optional parameters in `set_*` methods. But in this case "readability" might be more important than the notion of which parameters are required and which are optional.


[11/20/2020 8:14 AM] Robert K#0722
Thaks @scalahub


[11/20/2020 8:14 AM] Robert K#0722
Also I just remembered for v0.3 we need to make 1 more adjustment


[11/20/2020 8:15 AM] Robert K#0722
We need to convert into cents rather than dollars

{Reactions}
üëç 

[11/20/2020 8:15 AM] Robert K#0722
And this is really important


[11/20/2020 8:15 AM] Robert K#0722
So v0.3:
- cooling off period
- Fixed ratio fee
- StableCoin US cents, not dollars


[11/20/2020 8:19 AM] Robert K#0722
> I was using the reason to put required parameters into `new` method for ergo-lib builders and have optional parameters in `set_*` methods. But in this case "readability" might be more important than the notion of which parameters are required and which are optional.
@greenhat Ah right, I see what you mean. This is a great idea, but I have a lot to do these days and so unfortunately I'd like to push this off into a future version.

{Reactions}
üëç 

[11/20/2020 8:20 AM] Robert K#0722
Feel free to make an issue about it so the idea won't be forgotten


[11/20/2020 8:21 AM] greenhat#6562
Will do.


[11/20/2020 8:33 AM] Robert K#0722
@greenhat I'm thinking about exposing ergo-lib types via `pub use` in EPF so that people just need 1 import to get started


[11/20/2020 8:33 AM] Robert K#0722
So something like
```rust
pub use ergo_lib::chain::ergo_box::ErgoBox;
pub use ergo_lib::chain::transaction::unsigned::UnsignedTransaction;
pub use ergo_lib::ergo_tree::ErgoTree;
pub use ergo_lib::types::stype::SType;
```


[11/20/2020 8:34 AM] Robert K#0722
Do you think that's a good idea?


[11/20/2020 8:36 AM] greenhat#6562
@Robert K sounds good!


[11/20/2020 8:37 AM] Robert K#0722
And I just realized we can't use enums for `RegisterSpec` because they can't be compiled to WASM


[11/20/2020 8:37 AM] Robert K#0722
Only c-style enums üòÖ


[11/20/2020 10:26 AM] greenhat#6562
Well, technically they compile to WASM. It‚Äôs JS being a ‚Äúcommon denominator‚Äù makes things worse.


[11/20/2020 10:35 AM] Robert K#0722
Ah yes.


[11/20/2020 11:18 AM] Robert K#0722
I've finished the first draft of tutorial #2 for the EPF, if any of you guys have time to make run through it and see if it all makes sense or if there's anything that could be improved, it'd be much appreciated: https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/tutorials/Math_Bounty/2-math-bounty-dApp-finishing-the-off-chain-lib.md

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-protocol-framework/tutorials/Math_Bounty/2-math-bounty-dApp-finishing-the-off-chain-lib.md
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[11/20/2020 11:20 AM] Robert K#0722
I think I'll aim for releasing the tutorials more spread out(maybe 1 a week) after the EPF gets officially released from Emurgo org on github


[11/20/2020 12:58 PM] greenhat#6562
Looking good!


[11/20/2020 2:59 PM] kushti#0978
Looks good!


[11/20/2020 5:40 PM] Robert K#0722
I think I've come up with a good marketing shtick for the off-chain libraries: `Headless dApps`

{Reactions}
üôÇ ‚ù§Ô∏è (3) 

[11/20/2020 6:04 PM] kushti#0978
@Robert K like a headless browser ?


[11/20/2020 6:04 PM] Robert K#0722
Precisely


[11/20/2020 6:04 PM] Robert K#0722
I'm considering renaming the Ergo Protocol Framework to the `Ergo Headless dApp Framework`


[11/20/2020 6:05 PM] Robert K#0722
And then we can push the stablecoin release as the first Headless dApp on the Ergo Blockchain

{Reactions}
‚ù§Ô∏è 

[11/20/2020 6:05 PM] Robert K#0722
With an example CLI implementation


[11/20/2020 8:55 PM] Robert K#0722
The above has been done


[11/20/2020 8:56 PM] Robert K#0722
@scalahub I think we should try to bootstrap the deviation check oracle pool at the start of December


[11/20/2020 8:56 PM] Robert K#0722
And prepare next week to have everyone ready


[11/20/2020 8:56 PM] Robert K#0722
Because there's like 100000 things I need to do, and we can't forget this


[11/20/2020 8:58 PM] kushti#0978
@Robert K headless dapps sounds interesting indeed!

{Reactions}
üëç (2) 

[11/20/2020 11:33 PM] kushti#0978
@Robert K "I saw the podcast on Oracle Pools with Robert Kornacki and have been following Cardano for 3 years (also I was part of Fund 1 Catalyst) and I am really interested in providing data for Oracle Pools.
https://www.youtube.com/watch?v=QcNZYhAa2xU
I have created my own bot (this is just for background) and as part of this I regularly poll price data for many coins from Binance and other exchanges.
Is there a need for this data to be published to an Oracle pool? If so how do I get started and what timeframe/coins are of interest?
Is there a testnet or do I have to pay to post the transactions from my own ADA savings?

Thanks,
Rob Greig"

{Embed}
The Cardano Effect
https://www.youtube.com/watch?v=QcNZYhAa2xU
Oracle Pools and Interoperability of Cardano and Ergo with Robert K...
Robert Kornacki, EMURGO Head of R&D and Ergo Foundation Board Member, joins us to discuss oracle pools and their place in Cardano. 
Learn more about what Robert does at 
https://emurgo.io/blog/emurgo-head-of-rd-robert-kornacki-appointed-to-ergo-foundation-board
https://ergoplatform.org/en/foundation/

Timestamps
00:00 Intro
00:44 Meet Robert Kor...
https://images-ext-2.discordapp.net/external/cg6PVTdPqcx3XWG7hSs4Jy8oJ5VWWF-25LVBJEdajAE/https/i.ytimg.com/vi/QcNZYhAa2xU/maxresdefault.jpg


[11/20/2020 11:33 PM] kushti#0978
sounds good


[11/21/2020 5:54 AM] scalahub#2618
Have updated spec + tests with the last one (1 stablecoin = 1 USD cent rather than 1 USD)

{Reactions}
‚ù§Ô∏è 

[11/21/2020 9:51 AM] Robert K#0722
That does sound good, though I imagine it's mostly ada pairs, and I'm not sure how many Ergs-supported exchanges he's likely to have implemented for


[11/21/2020 9:51 AM] Robert K#0722
We do need to improve the connector to source from multiple places eventually


[11/21/2020 9:51 AM] Robert K#0722
But there's too much to do right now


[11/21/2020 9:52 AM] Robert K#0722
Great, so was it a pretty simple change in the equations? I'll check the spec on monday


[11/21/2020 9:54 AM] scalahub#2618
yes I didn't realize it was going to be quite a small change.. hope I got it right

{Reactions}
‚ù§Ô∏è 

[11/23/2020 9:23 AM] Robert K#0722
@scalahub Can you prepare to launch the new deviation pool this week?


[11/23/2020 9:23 AM] Robert K#0722
@kushti Have you set up your oracle?


[11/23/2020 9:23 AM] Robert K#0722
We don't have very much time so we actually can't just keep talking about this stuff and have to make it happen


[11/23/2020 9:23 AM] Robert K#0722
I'm helping a new operator currently via telegram on the test pool


[11/23/2020 10:08 AM] scalahub#2618
@Robert K yes lets launch and then we can test with this pool for sometime before making it public.. I'll plan for it


[11/23/2020 10:09 AM] scalahub#2618
Is there a simple write-up with steps for onboarding anyone (which explains how to clone repo, what files to edit, etc). Would be good for helping @kushti as I also don't remember all the steps


[11/23/2020 10:11 AM] scalahub#2618
As far as I recall the steps are
clone repo
switch to deviation-check branch
setup new node+wallet
add wallet address in config file + node IP address
run oracle-core (which will add scans)


[11/23/2020 10:36 AM] Robert K#0722
https://github.com/ergoplatform/oracle-core/tree/deviation-check#building--running-an-oracle

{Embed}
https://github.com/ergoplatform/oracle-core/tree/deviation-check
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
üëç (2) 

[11/23/2020 10:40 AM] kushti#0978
thanks! setting up a node


[11/23/2020 10:44 AM] Robert K#0722
And make sure you're on the right branch `deviation-check`


[11/23/2020 11:12 AM] kushti#0978
base16_str(),
    |                                             ^^^^^^^^^^ method not found in `std::string::String`


[11/23/2020 11:12 AM] kushti#0978
getting errors while compiling it


[11/23/2020 11:12 AM] kushti#0978
Rust version ?


[11/23/2020 11:12 AM] kushti#0978
@Robert K ^


[11/23/2020 11:29 AM] Robert K#0722
` rustc --version
rustc 1.47.0 (18bf6b4f0 2020-10-07)

`


[11/23/2020 11:29 AM] Robert K#0722
You should update to the latest rust most likely


[11/23/2020 11:30 AM] Robert K#0722
@kushti


[11/23/2020 11:30 AM] Robert K#0722
Also make sure you are on the correct branch/latest commit and run `cargo update`


[11/23/2020 12:27 PM] Robert K#0722
@kushti @greenhat I've finished tutorial #3, which goes through building a CLI frontend on a headless dApp (for 1/2 actions): https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-headless-dapp-framework/tutorials/Math_Bounty/3-math-bounty-dApp-writing-a-cli-frontend-that-allows-creating-bounties.md

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-headless-dapp-framework/tutorials/Math_Bounty/3-math-bounty-dApp-writing-a-cli-frontend-that-allows-creating-bounties.md
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
üëç 

[11/23/2020 12:29 PM] Robert K#0722
It was pretty cool to finally test the whole process from end-to-end and post a real action to the blockchain that was coded using the Ergo Headless dApp framework + only fetching boxes via the `BoxStruct` design pattern + Ergo Explorer api


[11/23/2020 12:31 PM] Robert K#0722
@kushti I think with this tutorial series I can eventually do one on implementing a frontend developer fee to all actions in your headless dApp in order to incentivize frontend developers to build frontends


[11/23/2020 12:31 PM] Robert K#0722
And as such we can start to push the monetization angle


[11/23/2020 12:32 PM] Robert K#0722
And I wrote a whole summary of the concept of headless dApps that is in the readme of the repo:  https://github.com/robkorn/ergo-utilities-rust/tree/EPF-v0.2/ergo-headless-dapp-framework#what-are-headless-dapps

{Embed}
https://github.com/robkorn/ergo-utilities-rust/tree/EPF-v0.2/ergo-headless-dapp-framework
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932


[11/23/2020 1:01 PM] kushti#0978
solved with rustup update

{Reactions}
üëç 

[11/23/2020 1:49 PM] Robert K#0722
So for the new oracle pool should we have a min consensus number of 2 still?


[11/23/2020 1:49 PM] Robert K#0722
And what deviation range do we want?


[11/23/2020 2:03 PM] kushti#0978
I'm in !


[11/23/2020 2:03 PM] kushti#0978
submitting datapoints


[11/23/2020 2:21 PM] Robert K#0722
Nice üëç


[11/24/2020 7:47 AM] scalahub#2618
how many oracle tokens should I generate for the new pool?


[11/24/2020 9:16 AM] Robert K#0722
Hmm, let me think


[11/24/2020 9:18 AM] Robert K#0722
I believe this is our current list of oracles:


[11/24/2020 9:18 AM] Robert K#0722
- Robert
- Amitabh
- Dennys
- Emurgo
- Alex
- Markus (Clio.1)
- Malick/Psychbomb (Stakhanovite)
- Marek (Stakenuts)
- Gravity


[11/24/2020 9:18 AM] Robert K#0722
So that would be 9, am I missing anyone you guys can recall?


[11/24/2020 9:55 AM] Robert K#0722
I think everyone on this list should have telegram, right? I'm considering creating a telegram group where we can easily co-ordinate with all of the operators


[11/24/2020 10:33 AM] Robert K#0722
@greenhat Just created a telegram group to simplify talking with the operators of oracles: https://t.me/joinchat/HDHd8x0GB7tNAIJDzo4oAg

{Embed}
https://t.me/joinchat/HDHd8x0GB7tNAIJDzo4oAg
Ergo Oracle Pool Operators
https://images-ext-2.discordapp.net/external/vQJF1mUTS5Fumitbe1LLlMqmyrwKJ2tgTbvnfq1kLP0/https/telegram.org/img/t_logo.png

{Reactions}
üëå (2) 

[11/24/2020 10:49 AM] Robert K#0722
Ah, and if you guys don't know we're putting on an event in mid-December that'll be called something like the "Ergo Summit" (still to be decided)


[11/24/2020 10:49 AM] Robert K#0722
It'll be 3-5 hours of pre-recorded talks strung together in one video and premiered on youtube


[11/24/2020 10:50 AM] Robert K#0722
@scalahub I was wondering if you could do a talk about the stablecoin from a technical perspective


[11/24/2020 10:50 AM] Robert K#0722
We're looking to get Bruno to do a talk about the stablecoin from an economic perspective


[11/24/2020 10:51 AM] Robert K#0722
@greenhat Are you comfortable with presenting in front of a camera for 30 minutes (pre-recorded)/would you like to potentially do a talk about anything Ergo-related?


[11/24/2020 10:51 AM] Robert K#0722
Maybe sigma-rust/ergo-lib?


[11/24/2020 10:57 AM] greenhat#6562
@Robert K not really. üòî


[11/24/2020 10:59 AM] Robert K#0722
Hmm, the problem is we have so little people who understand Ergo to present


[11/24/2020 11:00 AM] Robert K#0722
Don't want to have Alex or me be in like 80% of the talks üòÖ


[11/24/2020 11:07 AM] kushti#0978
@Robert K @scalahub my oracle was out for some time, due to using unmerged branch with some issues )


[11/24/2020 11:07 AM] kushti#0978
now I'm in !

{Reactions}
üëç 

[11/24/2020 11:09 AM] Robert K#0722
And @scalahub can you compile the v0.3 contracts and update the stablecoin to them?


[11/24/2020 11:28 AM] Robert K#0722
Also, @scalahub in the receipt R5, do we include the fee in the delta?


[11/24/2020 12:37 PM] scalahub#2618
Yes it's included in bc delta


[11/24/2020 12:38 PM] scalahub#2618
Will do after call


[11/24/2020 1:28 PM] Robert K#0722
Amitabh's technical stablecoin talk points:
 - The use of the NFT
- pre-minting tokens
- update voting protocol
- how update protocol works


[11/24/2020 1:47 PM] Robert K#0722
---


[11/24/2020 1:47 PM] Robert K#0722
Oracle pool parameters:


[11/24/2020 1:47 PM] Robert K#0722
Minimum consensus #: 3


[11/24/2020 1:47 PM] Robert K#0722
Max oracle numbers/tokens: 10


[11/24/2020 1:49 PM] Robert K#0722
Payout per oracle: 0.02 Ergs


[11/24/2020 1:49 PM] Robert K#0722
Deviation range: 5%


[11/24/2020 1:59 PM] Robert K#0722
Belus & Agenor


[11/24/2020 1:59 PM] Robert K#0722
Castor & Pollux


[11/24/2020 3:29 PM] Robert K#0722
@scalahub Do you have the new address for the sc v0.3?


[11/24/2020 3:32 PM] scalahub#2618
yes this is the address 
`Ki3QKAykt4tKVPKaYUfWe3GkPBr8rwvfEeEBbR1tXTciyUND3HqRwEk8k9uMVYzJ9akqniL8mJvWDox2fPZq9XMfCJykUnFE4uyibZfxox2i8dZbHKHjUvb1H8FntF5g38XtjmQxrpXdN4T94My79Jd2UzGZfRQFTUdoybJuyZL78yUUZRFB23VxHnmwqtRroqmsx1YTtNyoCiR7yQtp4beEpgpmzb97KJp8reZEu7c376eEW3AxjLd22YrQPdhZtXYNU4FYzowpUuu3rqijKu9uKLyLR3iEVJGzk9N7mA898u6PQr2KRtMH486892ogg8znkMPB9BvHvhXVBN6YLVhC7oJ8d5C4EdvbQhGCCPSp96vRLKSQo8qTWEEgEaeHm6s91NUJLNVW4C8ZuSND7KabT759C32ig1NFtf7BiKdz9BQLPqZuCtCuJyCSGvo8gLzEFuVFwbUG53E2oW3t3wD1W3vN2AcmHk2gnrgdo6CsyAjNV1yeVbzM7GtpwxZUb1YwXjmDmC8euNewv6MuRYvz9fHXdD6XgjH5WpmtLMn4J7TAgiWuy4tqnABFAbAC5nGNXXejbrzh4hTpAK7mXead6kJrNxCfXHQi8mbU8AYe5TXTzZq7MeskbzD2Qjf2EFiykTWh1Uo5xSM3M3vcinzd3DnoRVbQWduroHi93B29WAyEsTEmi4i7AjSVtk7vdAzxMVKfpT8jUgMqbE45bKy1ayFUH6Tdf5pumi7STeoPpFA5RWJ6M6tpEThQyfdKRKzjQ8MtSt93DuqQ7tvvBdJMWxu5HJTyx3LozfDR7k1rYRVnMqViP5o1tNt2ES7GKhU4zVSXZw5g3d61JmvACq61F7gy1t3f4fvXYcbmqjWLvGPn4D1ZDmsHw9sLSBizJjmLSqtam8FGrq5muYRJLuJiuEWar8sFt31MjFgdE6CJYNJaqmknvbdynrKKWm7eNYqroTZ8XtWap9sXe`


[11/24/2020 3:33 PM] scalahub#2618
cooling off height = `371485`


[11/24/2020 3:39 PM] scalahub#2618
the address hash is `714B9072D15BEB62B6ADDCC1EA36131F890C49EF6B834AD570AA7E97030374DB`


[11/24/2020 3:42 PM] scalahub#2618
tx with my vote https://explorer.ergoplatform.com/en/transactions/ee198d9063a055c3f89635038f52e679baeed7c3fdb6acf1a157a38c1c89bc8c


[11/24/2020 4:10 PM] Robert K#0722
Great thanks


[11/24/2020 4:26 PM] Robert K#0722
@scalahub Do you have the tx id of the transaction where you sent me the update vote token?


[11/24/2020 4:26 PM] Robert K#0722
It seems I lost the update token somehow from my wallet


[11/24/2020 4:27 PM] Robert K#0722
Need to find out what happened


[11/24/2020 4:27 PM] scalahub#2618
checking


[11/24/2020 4:27 PM] Robert K#0722
Or what address you used


[11/24/2020 4:28 PM] scalahub#2618
is this the one? https://explorer.ergoplatform.com/en/transactions/e3e335a1d34ec7ad4eecde3813a4b066114692cad65b3aa0f3876abba8bb6307


[11/24/2020 4:29 PM] scalahub#2618
hmm no most likely its this https://explorer.ergoplatform.com/en/transactions/43b0c3add1fde20244a3467798a777684f9234d1f56f31ad01a297c86c6d40c7


[11/24/2020 4:29 PM] scalahub#2618
address `9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r`


[11/24/2020 4:35 PM] Robert K#0722
Yes that is my address


[11/24/2020 4:39 PM] Robert K#0722
Ah, woops...


[11/24/2020 4:39 PM] Robert K#0722
When I was testing my headless dApp from the tutorial I wrote it selected the utxo with my vote tokens


[11/24/2020 4:39 PM] Robert K#0722
üòÖ


[11/24/2020 4:40 PM] Robert K#0722
I should definitely have a separate node/wallet for testing


[11/24/2020 4:41 PM] Robert K#0722
Could you send me some more voting tokens to `9iHyKxXs2ZNLMp9N9gbUT9V8gTbsV7HED1C1VhttMfBUMPDyF7r`?


[11/24/2020 4:41 PM] Robert K#0722
And actually could it be 4?


[11/24/2020 4:42 PM] Robert K#0722
(We need 5 to vote, right?)


[11/24/2020 4:43 PM] scalahub#2618
done https://explorer.ergoplatform.com/en/transactions/20fa374c6746ab8b809e3b3e8f2945e5c6d3dc0ac322d936908354d5f8515760


[11/24/2020 4:44 PM] Robert K#0722
Great, thank you


[11/24/2020 5:52 PM] Robert K#0722
Btw when we bootstrap the update tokens in the real implementation, please include some random data in R4/R5


[11/24/2020 5:52 PM] Robert K#0722
That match the correct types


[11/24/2020 5:52 PM] Robert K#0722
Otherwise it causes isues in the CLI


[11/24/2020 5:59 PM] scalahub#2618
do you mean for EIP-0004 or for the ballot box registers?


[11/24/2020 9:50 PM] Robert K#0722
ballot box registers


[11/24/2020 9:51 PM] Robert K#0722
The ballot boxes always check if they match the spec, and if they don't have those 2 registers they get ignored by default

{Reactions}
üëç 

[11/25/2020 9:44 AM] Robert K#0722
Ah, thanks for reminding me about eip-4


[11/25/2020 9:45 AM] Robert K#0722
@scalahub When you mint the stablecoins please remember to follow eip4 and specify the correct number of decimals now that we are minting us cents

{Reactions}
üëç 

[11/25/2020 9:55 AM] Robert K#0722
Also @scalahub I'm hitting a "script reduced to false" error with the mint reservecoin action with the v0.3 contracts + my updated off-chain code


[11/25/2020 9:55 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/781095632063561768/message.txt


[11/25/2020 9:55 AM] Robert K#0722
That's the tx json


[11/25/2020 9:55 AM] Robert K#0722
If you could take a look/try to see if something is off


[11/25/2020 9:55 AM] Robert K#0722
(Trying to mint 5000 rc)


[11/25/2020 12:44 PM] scalahub#2618
will check after dev meet


[11/25/2020 2:21 PM] Robert K#0722
@scalahub Any progess on finding out what's wrong?


[11/25/2020 2:57 PM] scalahub#2618
haven't done yet.. is the new contract deployed btw?


[11/25/2020 2:58 PM] scalahub#2618
and I guess you used the new rate (divide by 100) plus added fee?


[11/25/2020 3:01 PM] Robert K#0722
Yes


[11/25/2020 3:01 PM] Robert K#0722
updated to new contract and finished all additions


[11/25/2020 3:01 PM] Robert K#0722
(well fee only for mint resrevecoins, ran into error and stopped implementing)


[11/25/2020 3:01 PM] Robert K#0722
@scalahub @kushti So are you guys both happy with the name `Belus` for cardano stablecoin, and `Agenor` for ergo stablecoin?

{Reactions}
üëç 

[11/25/2020 3:01 PM] scalahub#2618
ok sure.. will need some time to debug to reproduce using the same values..will update shortly


[11/25/2020 3:02 PM] Robert K#0722
We will need to get the ok from IOHK, but need your ok as well officially.


[11/25/2020 5:38 PM] Robert K#0722
@kushti @greenhat With the latest update to the explorer box query API, I updated the query URL generation logic for `BoxSpec`s to look for tokens of value of 1 first (typically nft), and so that allows us to create `BoxSpec`s without addresses and search for them via the api. Thus now I created a default specified box for the Erg/USD oracle pool (which has 2 stages, which made it impossible to query the explorer api for before using address with this design), and so it's actually trivial for any dev to us the Headless dApp Framework and get the current erg/usd rate now.

https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-headless-dapp-framework/src/specified_boxes.rs#L72-L102

{Embed}
https://github.com/robkorn/ergo-utilities-rust/blob/EPF-v0.2/ergo-headless-dapp-framework/src/specified_boxes.rs
robkorn/ergo-utilities-rust
General utilities to make writing off-chain Ergo code in Rust simpler. - robkorn/ergo-utilities-rust
https://images-ext-1.discordapp.net/external/2OPR3WvCIa-xR7SaUQtTxrMoPp2IVm2cxgG1EoB0K_w/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/11645932

{Reactions}
‚ù§Ô∏è 

[11/25/2020 5:39 PM] Robert K#0722
And I think as the ecosystem grows, we can incorporate default definitions for key boxes from various protocols that may be useful (ex. maybe the StableCoin protocol box? probably too complex to add to lib by deafult if we want to keep all of the action logic with the definition) which allows anyone to find the UTXO and use it


[11/25/2020 5:43 PM] greenhat#6562
That‚Äôs awesome!


[11/25/2020 7:25 PM] Robert K#0722
I like it a lot as well


[11/25/2020 7:26 PM] Robert K#0722
I think one of the future tutorials I write for the HDF will be about using the default oracle pool specified boxes to acquire oracal data trivially


[11/25/2020 7:26 PM] Robert K#0722
I guess this framework can be used to even build applications that don't post anything off-chain and just allow them to read on-chain state data more easily.


[11/25/2020 8:09 PM] scalahub#2618
@Robert K haven't found out the issue yet.. its a bit odd. My tests are passing using the same parameters as yours ... but the live tx is failing. Will debug more and get back
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v3/MintReserveCoinSpec.scala


[11/25/2020 8:09 PM] scalahub#2618
any ideas?


[11/25/2020 8:10 PM] scalahub#2618
this is the contract btw https://github.com/Emurgo/stablecoin-project/blob/665a35b3f2ef5e19aba8da592218a5f7b4b230f8/ergo-stablecoin/src/main/scala/stablecoin/v3/Contracts.scala#L23


[11/25/2020 8:44 PM] scalahub#2618
@kushti ^


[11/25/2020 9:59 PM] scalahub#2618
@Robert K seems bit hard to debug.. lets do it in increments. so 1st version with just usd cents (and rest same as v0.2)


[11/25/2020 10:14 PM] kushti#0978
offchain part maybe ?


[11/25/2020 10:14 PM] kushti#0978
can take a look tomorrow, how to reproduce ?


[11/26/2020 8:39 AM] Robert K#0722
Okay @scalahub


[11/26/2020 8:39 AM] Robert K#0722
Sounds good


[11/26/2020 8:39 AM] Robert K#0722
Can you give me the address for that?


[11/26/2020 8:40 AM] Robert K#0722
(Or update the running contract to it youreslf)


[11/26/2020 8:42 AM] Robert K#0722
I'll try to analyze the v0.3 contract further in the mean time


[11/26/2020 10:22 AM] scalahub#2618
will be bit hard to reproduce easily. @Robert K would you be able to share a tx request that is generated?


[11/26/2020 10:27 AM] Robert K#0722
I'm not using tx requests for building txs in this dApp


[11/26/2020 10:27 AM] Robert K#0722
Manually creating the tx


[11/26/2020 10:28 AM] Robert K#0722
You can just clone the latest off-chain code, build the cli, and try to mint reservecoins.


[11/26/2020 10:28 AM] Robert K#0722
But it's probably just going to produce the same result. I think the bigger problem is that we juts have no real info from the failure of the script, just that it returned false


[11/26/2020 10:29 AM] Robert K#0722
But yeah @scalahub Why don't we just move forward with what you recommended?


[11/26/2020 10:30 AM] scalahub#2618
Sure I'll try to update the contract myself .. but we will still run into this maybe later üòÄ


[11/26/2020 10:31 AM] scalahub#2618
this is the message by Robert @kushti not sure if that helps

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/781467182529642516/message.txt


[11/26/2020 10:37 AM] Robert K#0722
What do oyu mean we will still run into this maybe later?


[11/26/2020 10:37 AM] Robert K#0722
The point of updating it to just the US cents is so we can find what the problem is


[11/26/2020 10:37 AM] Robert K#0722
We add one feature at a time so we see where it breaks and so it's easier to debug


[11/26/2020 10:38 AM] scalahub#2618
why I feel is because there does not seem to be any bug in the contract,, so it could be some issue with the node or cost exceeded or something


[11/26/2020 10:39 AM] scalahub#2618
but anyway we will get to know what breaks it when we add features incrementally


[11/26/2020 10:39 AM] scalahub#2618
since the mock tests pass, which is more or less calling the sigma prover so the issue looks subtle


[11/26/2020 10:40 AM] Robert K#0722
Ah, right


[11/26/2020 10:40 AM] Robert K#0722
Well, it'll be good to know whether it's in the cents or the fee


[11/26/2020 10:40 AM] Robert K#0722
(Or I guess the cool off period, but that seems unlikely)


[11/26/2020 10:40 AM] scalahub#2618
the only thing different would be context (i.e., height) but I've ruled that out too


[11/26/2020 10:41 AM] Robert K#0722
Unless the cooling off period maybe had the logic reversed the height?


[11/26/2020 10:41 AM] Robert K#0722
Ah, alright.


[11/26/2020 10:47 AM] scalahub#2618
addev v0.2-a, with just the difference of USD-cents from v0.2


[11/26/2020 10:47 AM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/main/scala/stablecoin/v2a/Contracts.scala


[11/26/2020 10:48 AM] scalahub#2618
Please have a look before I update


[11/26/2020 10:50 AM] Robert K#0722
I think it looks good


[11/26/2020 10:50 AM] Robert K#0722
Pretty much just the `/100`  added to the rate, right? @scalahub


[11/26/2020 11:05 AM] scalahub#2618
yes thats the only difference


[11/26/2020 11:07 AM] Robert K#0722
Cool, let me know when it's updated


[11/26/2020 11:07 AM] Robert K#0722
Or pass the address to me and I can do it as well


[11/26/2020 11:30 AM] Robert K#0722
@scalahub Is there something that's taking long to change?


[11/26/2020 11:30 AM] Robert K#0722
I want to try and get this error figured out before this week ends if possible


[11/26/2020 11:30 AM] Robert K#0722
There's so much to prepare for the Ergo Summit/get the stablecoin ready for release that I really don't want to leave this stuff to the last minute


[11/26/2020 1:03 PM] Robert K#0722
@scalahub Do you need me to compile it myself?


[11/26/2020 1:04 PM] Robert K#0722
I'm going to have meetings soon and won't really have time to test the contracts since a lot of the day has already passed


[11/26/2020 1:04 PM] Robert K#0722
And I think you said you're going to busy from Friday -> Mon/Tuesday


[11/26/2020 1:04 PM] Robert K#0722
So this is pretty inoportune timing


[11/26/2020 1:51 PM] kushti#0978
@Robert K 3.3.7 is finalized, final review will be tomorrow

{Reactions}
üëç 

[11/26/2020 1:51 PM] kushti#0978
can help with the stablecoin over the weekend

{Reactions}
üëç 

[11/26/2020 2:05 PM] scalahub#2618
I had pushed a while ago.. looks like some net issue my message didnt go


[11/26/2020 2:05 PM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/70aa54d3fc6e2a31dd1915c9b6ec6aa71bd7d1ac/ergo-stablecoin/src/test/scala/stablecoin/v2a/BankContractSpec.scala#L10


[11/26/2020 2:06 PM] scalahub#2618
anyway Im confused. Are you going to do the update? I thought you wanted me to do the update + mint test


[11/26/2020 2:13 PM] scalahub#2618
btw sorry, got a little stuck elsewhere.. will be doing it now.


[11/26/2020 2:30 PM] scalahub#2618
this is address `6vzHjr7EzVmHNLM1Au1hijyAZXnncpCjjyMLwLUA4Y9prMhTy18JLP53ApEQNZE1BLM4NzHw54e1nmbsYSDJhxWurawNYkgRWa2qxBGtD6G44r8JyHA3ztqiNMkmKWrQx4VGZdBFWHPo1yEYMXLqfi2ytL8KqKayRLHXkToSuK6jAiZDt2ydFWd6zeNszFpw87FEh1Qdxdgi2VnVHpdWgGXz2Tq9fppX7mXkZkK1eyUHqq8NQrc6njG3a93X4hN6G2dAYBsnB3Xu1ySjdWtSqCgZb3puG7h1zn5t8SaBTGfpqSkr287cfQh7P4VZFzunmMHmQQVn9hbHULjTuDjJJJUDDTgim9KdtXPwtHFfYmebLJg43iRFSJ2DY7HsrpdTzb7BBoebKKfxPdSY37SEomeZVAWuiDg7L6TGxR6sq6BfdbkjCM1uC8vNwCmpB1vhDumofwGNZkRJtXVdAkdbBiq22Yuax4VY6pfKSPoToyRDdyLPobq9KXppr3fUb98NmzmiB4vfg7Npdm1FqT3oVoo8avrjpKUhRETE3NYiByEA79b9qW64JL1waFHcYyRggnYjHjb7oyTJk9hvqW4vTcwp8qXkc2MZEiRDonF1XacNmQ6URb3DReAzMsmLaF1xEtXjrbnjYsQzPnrAZb56Qz9Bq3FqZzTEFiFXr8pZx1wNbe9TZZDSC5rS4zF4avAsr7KNr96KipPBQNwdHtUZBbcdo4iNgknhq3988RoicvzoQsAodg8G3E57TG1YuavjSWDooEaWt4CVnRg2qnUKi58akxZYNQwJGUqpG3xGHzPPEeQyStcUKqLwWNf6ZMd9XQzPsqskUw7X3nAgsbUk3bH91vCcaJNW7Bc9TmnVkeNVNQYWthceNafNguqfhSrY5v74tHNieTpJj`


[11/26/2020 2:30 PM] scalahub#2618
with hash `4259242E42DC2E99BC365FD8C1B31006347A38187EDE4BA482B1C339940B70B6`


[11/26/2020 2:31 PM] scalahub#2618
this is the ballot box tx https://explorer.ergoplatform.com/en/transactions/c1a64efd0cdf786717579ab1fd3eec1f4917dae440c2cc0787d07652cdf0bfd7


[11/26/2020 2:57 PM] scalahub#2618
update tx https://explorer.ergoplatform.com/en/transactions/20100c6353efaec11a05795a1b5046ff6cca8e0de16f9d4642c4ee29ec384cd5


[11/26/2020 3:25 PM] Robert K#0722
Alright cool, good to see it updated


[11/26/2020 3:26 PM] Robert K#0722
I just wanted it updated whether you did it or i did it myself.


[11/26/2020 3:27 PM] Robert K#0722
I have a few minutes now to try and edit the code and test.


[11/26/2020 3:37 PM] Robert K#0722
Okay, I think it seems to be working


[11/26/2020 3:37 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/6d06986838a2fbc38ca411de29256073178356790f57ce5390f7a60f58b3d8be

{Reactions}
‚ù§Ô∏è 

[11/26/2020 3:37 PM] Robert K#0722
Bought 1 cent of stablecoin for 0.0406414770000012 Ergs

https://explorer.ergoplatform.com/en/transactions/624aa9757fe2daebbc62698544e580461b81c22f4c78e114410cc392e4f45222

And in this tx bought 10 cents for
0.30841477000000084 Ergs

(I think the oracle rate might have changed in between)


[11/26/2020 3:43 PM] Robert K#0722
----------------------------------
@scalahub Are you going to bootstrap the new oracle pool today btw?


[11/26/2020 3:43 PM] Robert K#0722
Oracle pool parameters:
Minimum consensus #: 3
Max oracle numbers/tokens: 10
Payout per oracle: 0.02 Ergs
Deviation range: 5%


[11/26/2020 3:49 PM] scalahub#2618
yes I'll do it tonight sometime


[11/26/2020 3:49 PM] Robert K#0722
Great thanks, I've asked everyone to post their oracle addresses in the telegram


[11/26/2020 4:55 PM] scalahub#2618
how many addresses do we have?


[11/26/2020 5:20 PM] Robert K#0722
10 tokens as we agreed on


[11/26/2020 5:42 PM] scalahub#2618
I mean how many are ready?


[11/26/2020 5:56 PM] Robert K#0722
4 were posted on telegram


[11/26/2020 5:56 PM] Robert K#0722
But they're not ready


[11/26/2020 5:56 PM] Robert K#0722
I need to do like 20 things


[11/26/2020 5:56 PM] Robert K#0722
But that doesn't really matter, they can just rescan


[11/26/2020 5:57 PM] Robert K#0722
I have to touch up the oracle core codebase and merge to master for the deviation check


[11/26/2020 5:57 PM] Robert K#0722
And @scalahub can you post addresses for stablecoin contracts v0.2b, with the cooling off period as well


[11/26/2020 6:04 PM] scalahub#2618
will do that later.. in the middle of oracle pool bootstrap


[11/26/2020 6:04 PM] scalahub#2618
^ regarding the 0.2b contract with cooling off period


[11/26/2020 6:06 PM] scalahub#2618
For the pool, please check these params
addresses: https://github.com/scalahub/Kiosk/blob/cf955b785f14f4508ef485aa424d8340a35090ef/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPoolLiveAddressSpec.scala#L30-L36
parameters: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPoolLive.scala
contracts: https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPool.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPoolLive.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/cf955b785f14f4508ef485aa424d8340a35090ef/src/test/scala/kiosk/oraclepool/v4a/FixedEpochPoolLiveAddressSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[11/26/2020 6:45 PM] scalahub#2618
bootstrapped the pool and the 4 oracles that were posted in telegram
https://explorer.ergoplatform.com/en/transactions/0153136d1bf101d23a0a9f074b342a8971562c0dcf710f866eed3b13555dbb95

{Reactions}
üíØ 

[11/26/2020 8:05 PM] kushti#0978
are we going to shut down the old pool (w. deviations check)? then my pubkey from it can be reused


[11/26/2020 9:27 PM] scalahub#2618
I believe I've found a subtle bug in the existing equation if the bcReserveIn happens to be negative. In that case the rate will be negative.
I've pushed the fixed contract in v0.2b 
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/main/scala/stablecoin/v2b/Contracts.scala#L42
Also this version has cooling off-period. Details below
address: `9nygmfSzxffrGV6rbrtw8KU6TP6dZZkCYVenaGSo5HzecY5m1scZvVgvvErWqYUjN23KZkRMGX5awKKqRpK2eAA3ncn5cmKk9gMmRm9jczV1WTXYTTD5eT6fqzV4LoLrp4jDZ5McZLLUL3YDL2EEexxLvGxEC97Rg5j1tKRkrMyoNJeBcGGp1M3Gie1Hyhoh77JZtq2cLqCKYfXM4oQuwtFrjW2kLsC6sCzNShJM1T91TgyzeysR9FQvtPZaD49baCcQcRvRHVexztp4BKQxR4vdfT36NkY2Eau2gVcQ67ttNr3hUyStomoYrvbGQ5VA8Ld8Dv4Jm2aBqMJm3Boh83wZ5K1aX3A4WToPHQCzDm1J2rTxLBojTw2bwTvdbcQxec6A8vvwQTZU1kTvJRCbXbXuQrd2MumsAJkiBt9ZSYNGzgAj8xrtxdRteGydQ6x2Mpw5JEaYJrwqZc6nM6AAoBq4Mpm6fYgNXpkrYus1MPZCWi7u41f26BdpgRMJKZb4yemukeDzhrgKDpV6i8F34jStUYS9LpNUsGzjxxhqAQbZVnhrkcAWAt575sFuyhDSEPfpKSTFfhJ3DMKQHsvbG99k8mUDiM8xKoygTc3VUtoBsRop9Wk2omB8imr1wuVA95GcoarQhDnAdRHWvCFEiGFRcWhJpNDij4h5Sd3wsZVScLzZfPL6W7LosymY9zUVjaggYTf1FBeqEf28rPMagfaCg6ssHFtRf5ZPUZcWzPmpk8UaQTgAcZ4MiRuAEbZDEkynDb3SqUrQatw5YDVJ8oTds2BMUhsMLukvGctyaLnU1tqAS8BwtyjCKt4AvBvNp5kwhqEE9pzB6XxvWP99A2fE9fo1yhZJfCkk2Cbz87QHNSvgKGWtTBoCJdj9ct6yFRR1ohYxc5tPoxgNw`
cooling-off height: 373170


[11/27/2020 8:38 AM] Robert K#0722
Perfect


[11/27/2020 8:39 AM] Robert K#0722
I'll work on getting the oracle core ready for people to jump onto the new pool, and then I'll take a look at the bug you found, and start testing the cooling off period too.

{Reactions}
‚ù§Ô∏è (2) 

[11/27/2020 8:43 AM] Robert K#0722
Yes, we are. Sounds good, if you could post your address on telegram that'd help to keep things together in 1 place.


[11/27/2020 9:12 AM] scalahub#2618
Yes I'll also post my address by Monday in telegram once I set my new node


[11/27/2020 10:46 AM] kushti#0978
Done!


[11/27/2020 12:04 PM] Robert K#0722
@greenhat We're bootstrapping the new erg-usd oracle pool in Telegram, so if you can find some time to share your address and try to get setup that'd be great. (Amitabh will need to bootstrap your oracle after you post your address, but you can still prepare/get set up)


[11/27/2020 12:15 PM] greenhat#6562
@Robert K Thanks! I'm yet to setup my node on my new and shiny linux. üôÇ I'll ping you when I'm done.


[11/27/2020 12:24 PM] Robert K#0722
Great, thanks.


[11/27/2020 1:57 PM] Robert K#0722
@scalahub  Ah, hmm, I'm getting script reduced to false when the minimum box value in the off-chain code is changed from `10000000` to `1000000`


[11/27/2020 1:57 PM] Robert K#0722
(divided by 10)


[11/27/2020 1:58 PM] Robert K#0722
iirc you mentioned something about that being hardcoded in the contract 10x too high?


[11/27/2020 1:58 PM] Robert K#0722
But I don't understand why it only effects RC actions.


[11/27/2020 4:44 PM] Robert K#0722
@scalahub I also responded to your bug update in Slack with a potential problem.


[11/27/2020 4:46 PM] Robert K#0722
----
Also for the update tokens, Nico & I talked and IOHK wants to be a part of it as well, so we were thinking of having 6 tokens with 4 required to update. (2 Emurgo, 2 IOHK, 2 EF)

{Reactions}
üëç 

[11/27/2020 4:46 PM] Robert K#0722
For EF, maybe me and Alex would hold the tokens?

{Reactions}
üëç 

[11/27/2020 4:47 PM] Robert K#0722
Emurgo is probably going to be Sebastien + Nico


[11/27/2020 4:47 PM] Robert K#0722
And IOHK is probably going to take like 5 years to get a wallet setup, so I can probably hold onto those 2 tokens until they setup a node wallet.

{Reactions}
üòÜ (2) 

[11/27/2020 4:52 PM] scalahub#2618
Will check it out


[11/27/2020 5:06 PM] Robert K#0722
Okay, and I think I'm about to be done for tonight, feeling kind of dead from this week.


[11/27/2020 5:06 PM] Robert K#0722
But, one last thing to mention


[11/27/2020 5:06 PM] Robert K#0722
@scalahub I am failing to update to the cooling off address you posted


[11/27/2020 5:07 PM] Robert K#0722
Voting works, but collecting votes does not

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/781929191356497950/message.txt


[11/27/2020 5:07 PM] Robert K#0722
iirc that error typically means the vote has already been collected for said address, right?


[11/27/2020 5:08 PM] Robert K#0722
And then if we assume the above, when I try to update to the cooling off address, I get script reduced to false:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/781929490816696350/message.txt


[11/27/2020 5:38 PM] scalahub#2618
Isn't the threshold 5? https://api.ergoplatform.com/api/v0/transactions/boxes/92d26ce4b23c43c3bfb30e8f2037ab1fad965339b2204dd28e23f4da0a15d6c5


[11/27/2020 5:38 PM] scalahub#2618
this has only 4 tokens


[11/27/2020 5:47 PM] scalahub#2618
have you figured this out? if not, this looks a bit more involved so may not get time to dig in until Mon/Tue.. meantime, please post any JSON etc to help in debugging


[11/29/2020 7:44 PM] Robert K#0722
Ah, I see. Sorry that should have been obvious. Could you send me 1 more update token please?


[11/29/2020 7:46 PM] Robert K#0722
This is the json for trying to redeem 500 reservecoins that failed when I lowered the minimum box value:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/782693937961762838/message.txt


[11/30/2020 8:51 AM] Robert K#0722
@scalahub I just wanted to go over what we need to do this week so we don't get lost.


[11/30/2020 8:51 AM] Robert K#0722
1. Bootstrap more oracles that you didn't get to prior.


[11/30/2020 8:51 AM] Robert K#0722
2. Please send me 1 more update token so we can move forward in testing the cooling off period & then the fees.


[11/30/2020 8:52 AM] Robert K#0722
3. Implement/test the minimum box value adjustment you recommended.


[11/30/2020 8:53 AM] Robert K#0722
4. Maybe figure out the reservecoin 10x lower minimum box value error, but that doesn't really matter.


[11/30/2020 9:00 AM] kushti#0978
@Robert K will play with stablecoin tonight, should I use master branch ?


[11/30/2020 9:21 AM] Robert K#0722
@kushti The stablecoin cli is in the `offchain-code` branch.

{Reactions}
‚ù§Ô∏è 

[11/30/2020 9:22 AM] Robert K#0722
Actually, we'll probably be splitting up the stablecoin into 3 repos:


[11/30/2020 9:23 AM] Robert K#0722
1. Agenor (Ergo implementation/specs/details)
2. Belus (Cardano impl./specs/details)
3. Ibeji (Repo for the underlying protocol that both implementation are using. So the paper + the simulations)


[11/30/2020 9:24 AM] Robert K#0722
We still need to get IOG to accept the naming before we're 100% going for that, but that repo structure is likely what we'll still use.


[11/30/2020 10:02 AM] kushti#0978
3 repos makes sense

{Reactions}
üëå 

[11/30/2020 1:04 PM] scalahub#2618
From older post


[11/30/2020 1:04 PM] scalahub#2618
@Robert K here is a wallet with some tokens that you can split as needed
https://erg.urlwallet.org/wallet/95DvD6M9JEuScFp4Pi5pxA13sQDfbal7F3Btd5aPifQOUAHPlu


[11/30/2020 1:06 PM] scalahub#2618
Ill b back Wednesday. Will check messages then. Meantime above wallet stiil has some voting tokens.. so just send to your address and use as needed.


[11/30/2020 1:31 PM] Robert K#0722
Ah yes, thanks, I forgot about that.


[11/30/2020 1:35 PM] Robert K#0722
@scalahub Would you like to also do a 10 minute demo of urlwallet for the Ergo Summit btw?


[11/30/2020 1:35 PM] Robert K#0722
It's a cool tool for devs that I think would interest people.

{Reactions}
üòç 

[11/30/2020 4:27 PM] Robert K#0722
Cool, I just tested and the cooling off period seems to work.


[11/30/2020 4:28 PM] Robert K#0722
At least, the no max reserve limit seems to work, will probably be good to try setting a closer blockheight in a new contract so we can test if it turns off properly


[12/01/2020 7:24 AM] kushti#0978
Trying Math example:
    Updating crates.io index
error: no matching package named `ergo-headless-dapp-framework` found
location searched: registry `https://github.com/rust-lang/crates.io-index`


[12/01/2020 7:24 AM] kushti#0978
not published yet ?


[12/01/2020 7:25 AM] kushti#0978
@Robert K Amitabh is on vacation today, so can we have just the Thursday's call this week ?

{Reactions}
üëå 

[12/01/2020 8:55 AM] Robert K#0722
@kushti Ah yes, sorry, forgot to publish to crates.io yesterday


[12/01/2020 8:55 AM] Robert K#0722
Will do it in an hour or two


[12/01/2020 11:48 AM] Robert K#0722
It's been published

{Reactions}
‚ù§Ô∏è 

[12/02/2020 11:02 AM] Robert K#0722
@scalahub Are you going to be back online today? (And hope the moving went well)


[12/02/2020 11:24 AM] scalahub#2618
I'll need another day to be back fully online. I'm going to online for a bit today and will bootstrap the remaining oracles..


[12/02/2020 11:24 AM] scalahub#2618
moving went well (some things need to be sorted, but overall smooth)

{Reactions}
‚ù§Ô∏è üëç 

[12/02/2020 12:06 PM] Robert K#0722
That's great to hear


[12/02/2020 12:07 PM] Robert K#0722
In regards to the StableCoin, we got feedback from legal from iohk finally and it seems like we may have to pause on releasing the StableCoin for now.


[12/02/2020 12:07 PM] Robert K#0722
Will be figuring out what's going on and will keep you updated.


[12/02/2020 12:11 PM] kushti#0978
@Robert K will tokens be added to Yoroi this month anyway?


[12/02/2020 12:19 PM] Robert K#0722
Checking with Seba to see if he's on track.

{Reactions}
‚ù§Ô∏è 

[12/02/2020 12:19 PM] kushti#0978
ans how much left for the stablecoin ?


[12/02/2020 12:22 PM] Robert K#0722
From a technical perspective we currently have implemented (and tested working):
- Minting/redeem stablecoins & reservecoins using oracle pool data
- US Cents, so 1 stablecoin token = 1 cent
- Update protocol with token-based voting
- A "Cooling Off" period on bootstrap that turns off the maximum reserve ratio limit for some predefined amount of time


[12/02/2020 12:23 PM] Robert K#0722
For this release we also expected to add a fixed fee, but when we were trying that earlier, we were getting errors.


[12/02/2020 12:23 PM] Robert K#0722
I've been testing the us cents/cooling off period, and those work just fine alone, and so the error seemed to be related to the fixed fee.


[12/02/2020 12:24 PM] kushti#0978
nice


[12/02/2020 12:24 PM] kushti#0978
rescanning my wallet to get into stablecoin

{Reactions}
üëç 

[12/02/2020 12:24 PM] Robert K#0722
@scalahub By the way I've updated the off-chain code to now work with the new reserve calculation, and so when you're back tomorrow, it'd be good to try the fixed fee again, but with the new reserve calc, and try to troubleshoot what is going on.


[12/02/2020 12:25 PM] Robert K#0722
And after talking with IOHK it seems we're leaning more towards `AgeUSD` and `BelUSD`, rather than the full Agenor and Belus.


[12/02/2020 12:25 PM] Robert K#0722
Though that's still not finalized.


[12/02/2020 12:40 PM] kushti#0978
Minted my first usd )


[12/02/2020 1:07 PM] Robert K#0722
@kushti Nice üíØ


[12/02/2020 1:07 PM] Robert K#0722
So it seems to be working properly?


[12/02/2020 1:22 PM] kushti#0978
@Robert K yeah, got some error for "mint reservecoin"


[12/02/2020 1:22 PM] kushti#0978
but my repo was outdated


[12/02/2020 1:22 PM] kushti#0978
trying with latest commit


[12/02/2020 1:25 PM] Robert K#0722
@kushti Ah, I just pushed my latest commit, and that is 100% working.


[12/02/2020 1:40 PM] kushti#0978
@Robert K getting "thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: FailedTokenSpec', ageusd-cli/src/main.rs:97:82"


[12/02/2020 1:41 PM] kushti#0978
"scans check" output looks ok


[12/02/2020 2:05 PM] Robert K#0722
What command are you doing? @kushti


[12/02/2020 2:06 PM] Robert K#0722
Ah, that's related to the oracle box.


[12/02/2020 2:06 PM] Robert K#0722
Please check if you are on the latest commit (there was some conflicting problems with the headless dApp framework, since I made it use the latest oracle pool, but the contracts use the old oracle pool, and so I had to make a quick update)


[12/02/2020 2:07 PM] Robert K#0722
That's been addressed, and I believe I just pushed that commit, so please `git pull` and recompile


[12/02/2020 3:35 PM] kushti#0978
ok doing


[12/02/2020 3:50 PM] kushti#0978
@Robert K yeah works!


[12/02/2020 3:50 PM] kushti#0978
ReserveCoin Mint Tx Id: "c8960b7f96d8e15c76a47e447d6ecdb881c1ffed15d1469c52ecaa61c09f2af3"


[12/03/2020 7:42 AM] scalahub#2618
I'm back. Will dig into your issue today


[12/03/2020 7:49 AM] scalahub#2618
I recall you had created a to-do list for Dec. Can you please share again


[12/03/2020 7:56 AM] Robert K#0722
Welcome back.


[12/03/2020 7:57 AM] Robert K#0722
So the current things to do:

{Reactions}
‚ù§Ô∏è (2) 

[12/03/2020 7:57 AM] Robert K#0722
1. Finish bootstrapping oracles


[12/03/2020 7:57 AM] Robert K#0722
2. Change the oracle pool nft id in the stablecoin contract to `0fb1eca4646950743bc5a8c341c16871a0ad9b4077e3b276bf93855d51a042d1` (the new oracle pool)


[12/03/2020 7:58 AM] Robert K#0722
3. Compile the contract address and send it to me so I can test using the new oracle pool.


[12/03/2020 8:00 AM] Robert K#0722
4. Add fixed rate fee back into the contract, compile, and send it to me again so we can try one more time and see if we hit the erorr again. If so, then we have to figure out what's going on.


[12/03/2020 9:37 AM] scalahub#2618
Good idea to in push ergo summit mid jan


[12/03/2020 9:55 AM] kushti#0978
Playing with the CLI


[12/03/2020 9:55 AM] kushti#0978
Got reserves to 1434% )


[12/03/2020 9:56 AM] kushti#0978
everything is going well


[12/03/2020 10:54 AM] Robert K#0722
Nice.


[12/03/2020 10:55 AM] Robert K#0722
Yeah, the maximum reserve ratio is not being taken into account due to the cooling off period still running.


[12/03/2020 10:56 AM] kushti#0978
I'm getting reserve ratio errors on mint reservecoin


[12/03/2020 10:56 AM] kushti#0978
so get into this number via "redeem ageusd"


[12/03/2020 10:56 AM] Robert K#0722
Ah, I may have forgotten to apply the cooling off period logic to mint reservecoin action in offchain code


[12/03/2020 10:56 AM] kushti#0978
then "mint reservecoin" is not working, but "redeem reservecoin" is


[12/03/2020 10:56 AM] kushti#0978
perfect!


[12/03/2020 11:00 AM] Robert K#0722
Ah, I see that the cooling off height has finished


[12/03/2020 11:01 AM] Robert K#0722
It was set to `373170`


[12/03/2020 11:01 AM] Robert K#0722
So the contract works properly


[12/03/2020 11:01 AM] Robert K#0722
(I was able to mint reservecoins past the max reserve ratio previously)


[12/03/2020 12:00 PM] Robert K#0722
@scalahub When are you going to have time to troubleshoot the fixed fee contract?


[12/03/2020 12:11 PM] scalahub#2618
`9nygmfSzxffrGV7AvV8QjPCPuqvQnrmbwM5fm7oUafrnFWjCG6cbjsnS39YcvrHTgUz9cC3eNnhjN1C6E3BUnvMKU9HFsMb43SgDQvVBud2angZPP4J5THMhe6c54u3gnTYhUxBhvUa9UAJQWiAt36buFYnUrpihroyFjU6HezZcPgXJ4Xubz3NHV3uzfhAmybKaRnyVFC35ykRBC482LvQeHnW5xHGmy5S72w1RTYPgq9Kn2kGvY61v9xuQ9zi2KmKNQiQTS89R7mrxr7afcAuWJBVW8UwJWs8wYMUX2Ld1NJGJsE38AbRq5fQhBBfDXQzM6mWvFUK9qR3ReADJSFGNSXNVpwqx1Gvq7MSyczFhUA6pKwPkdtPPRGapL2Kjs1s5zWh4hWakhnt2eWmkLXHzpwbQiXLFy28uoinWwa7rCSD6LmW2f3VbH4p42MqZCEoz3PHRYrhSctnRAbsoVSkvDukr1eE78synQsoc6DKB64Bu6dgniUwF3PNnxTNLzDCernAmT4xc51avE3Ek3LVLDBgZ4d1maspwB1AaSSWkexvrZhgKux5ULx53qwoGztfrd7G96jtkqBhv17dqt8GhjbaQM22C5DMJ5AJrb2jvDP7SxrBsVh7bbMBp5nKFtyvYPweyxsUaGzQUSkjrUd9M7ENJ8stMHbBoErXYzBVtKhk5z5fPfMZJDmMvLpfCfMLNZABvKmpaCBB2LrW18mStKGMXfMm1hc8WTZ7xTiFpEV2aBAzRR4Phw14NBUUcjRgxGafPfMN6eJBba4R6axK6aF8LfjqZ63boRQGFdTi5sS4Yw2JyyMs25gPQn1FX5iKHZb9QjxmNhjn69cd9pfKQVbtjn3KY1zAJALj6Zsg6fb6p1dFVqVRMSDvv5CeG9CuK264zbKLgTQJX3`


[12/03/2020 12:11 PM] scalahub#2618
this is the new address with the new NFT (without fee)


[12/03/2020 12:12 PM] scalahub#2618
Lets upgrade this first and then test fee after that..


[12/03/2020 12:12 PM] scalahub#2618
or should we do both at once?


[12/03/2020 12:13 PM] scalahub#2618
will troubleshoot once the fixed fee contract is up


[12/03/2020 12:17 PM] Robert K#0722
Alright cool.


[12/03/2020 12:17 PM] Robert K#0722
If you can compile the fixed fee contract too that'd be great.


[12/03/2020 12:17 PM] Robert K#0722
I'll update to this contract, update the headless lib, recompile, and test with the new oracle


[12/03/2020 12:33 PM] scalahub#2618
Some tests failing with the fee. Will upload the fee contract once fixed, hopefully in the next hour


[12/03/2020 12:48 PM] Robert K#0722
Okay cool. Are these new tests?


[12/03/2020 12:55 PM] scalahub#2618
the same mint, redeem tests


[12/03/2020 12:58 PM] scalahub#2618
to be precise, these 3 tests failing
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2c/MintStableCoinSpec.scala
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2c/ExchangeSpec.scala
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2c/MintReserveCoinSpec.scala


[12/03/2020 1:01 PM] kushti#0978
@Robert K knocking to https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[12/03/2020 1:06 PM] Robert K#0722
Oracle pool funding address: `zLSQDVBaHb3fokB31Fv5jdpRdGAbnkNgsFas3BrADM1XBFqfZjGNAh7K94gRRdyjcRtq6B9tGKRkThczZR5vtYzAD5TTdML2bpBmpdZqkGVb6kSj1wH8JEiqx1L54GcU9CtFRdN64B1sccA41DR3t1uYJh3BBCDcBiZyVFqMF3MenohN5gt8JTMcUzwzDjCUbtmt2MULpUDZvNPgnwFmFQTAqEHKEkunaKZPHs8WsnMJzhXHbU`


[12/03/2020 2:14 PM] kushti#0978
2 erg delivered @Robert K ?


[12/03/2020 2:57 PM] Robert K#0722
Yep


[12/03/2020 2:57 PM] Robert K#0722
Looks like the pool is back running


[12/03/2020 3:56 PM] Robert K#0722
@scalahub I updated to the new oracle pool and it works fine.

{Reactions}
üëç 

[12/03/2020 5:54 PM] scalahub#2618
@Robert K here is the address with fee `FGXe86WvPeLNsqisTbaNJRGRXtAtUBRim3RpCT1iVfQpDFQ5BcELg1tcy1Y8fymR3fXkhPrbMkTtKRy4WQ22U8xhKfF7oAsZvPS1Y9mmbFMC9Mkq6LuXA4foSfA7rDkgBFRTNVnv9xq9CKW168EDSz2TbP1RzeHcNtC9CcgxFDdAxyJkzrEsnb9zRA8rSb39N9iEidVScCSoBtWmitZ1GZzxsXWtYBNJcRUzeSBeMqAWj4qHkqobrrkJqHmu72xtNXwkUppPrNVgJrEfjZ9sMM18dLoo6mH3kS3jMRKP7mv1eRTUFcpxwQMvMwb9CcurtYuQKmjvcZy69XhucH5boySCLysvXcUSM9xHyPSntKfpgzx2WFKBNhECEsjr9tbgqvGAqXQyibv4UENdmp92ZFCBDbPgHMKoEGYKdbkwwL8SdBjXbZTJnxTUoS4tmLfRHj9Y6qCM4dmsboXGERSEDFPy3fFJoSt75UQAPv9grj6BNEqXTwFB54FjwUg6Ja78sqzvtV2U7QVfawy93fR72t5eTUGTjQjSerZMC9dsBzSAQTFMXM9QHui8hy6vJSWbKZ2maLK23UKTfyVfS5KnVRDuKSJHhowz3BqZbdLzvNPy2zapTBqVuTJ1KzoXP1soHwbwiqTWvkft5vHCVSRN5dWcwuA214M3osoTWy3gcoREFK4nT678SLxTo5MekkSJNzXpKvP8qPDdsLPgZ6riysmPz4mRw3L3vFX7ofry2Wvm6vL9HKf5p4dGxg2qUSHYT4HUUrA3NpNhKT3uvb88Xo1ccZSNwXRsS66o55Y1W32hoQQ9mFxphPgi1WwQcV2p4tQLSSVARNpP2JaLoSt3AcpGqrqnU9QmCeMf6ucDG2QGN6zvtwb8ykBYwgr6iyCj77fufy9FoofF4t91qVjEUAxdHPo41TdPLRif`


[12/03/2020 5:55 PM] scalahub#2618
found the bug.. was adding fee twice in the simulations

{Reactions}
üëç 

[12/03/2020 5:56 PM] scalahub#2618
This one does not have the cooling off period. I'd like to test just the fee first and if this works, will update to one with cooling off


[12/03/2020 5:57 PM] scalahub#2618
please review the contract here: https://github.com/Emurgo/stablecoin-project/blob/b44b9fef89dbc04922a452545b52cec98a52083f/ergo-stablecoin/src/main/scala/stablecoin/v2c/Contracts.scala#L21


[12/03/2020 6:25 PM] Robert K#0722
Alright, will test tomorrow


[12/03/2020 8:37 PM] kushti#0978
Put 120 erg into the pool from the mixer )


[12/03/2020 8:40 PM] kushti#0978
DeFi composability for free )

{Reactions}
üëç 

[12/03/2020 8:51 PM] kushti#0978
"thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: BadRequest("Malformed request: Script reduced to false")', ageusd-cli/src/main.rs:433:64"

known error?


[12/03/2020 9:57 PM] Robert K#0722
You need to update to latest commit


[12/03/2020 9:57 PM] Robert K#0722
We switched to a new contract with the new Oracle pool again


[12/03/2020 10:36 PM] kushti#0978
@Robert K can you invite anon-real ?


[12/04/2020 7:55 AM] Robert K#0722
Invite anon real to what specifically?


[12/04/2020 8:50 AM] kushti#0978
@Robert K stablecoin repo ?


[12/04/2020 8:51 AM] Robert K#0722
Ah, we already maxed out seats for our org with IOG (had to throw out a researcher who didn't do anything just to add Colin)


[12/04/2020 8:52 AM] Robert K#0722
Might just be better to send him updates of the codebase once in a while directly?


[12/04/2020 9:19 AM] kushti#0978
yeah, lemme do that


[12/04/2020 9:49 AM] Robert K#0722
@scalahub So the fixed fee contract is failing once again


[12/04/2020 9:49 AM] Robert K#0722
Ex: Mint 1000 reservecoins

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/784355796627882054/message.txt


[12/04/2020 9:50 AM] Robert K#0722
And it's just "script reduced to false"


[12/04/2020 10:02 AM] scalahub#2618
@Robert K I am unable to run the deviation check pool on fresh node


[12/04/2020 10:03 AM] scalahub#2618
output

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/784359111659749416/message.txt


[12/04/2020 10:12 AM] scalahub#2618
here is full transcript of my session

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/784361530501627914/transcript


[12/04/2020 10:13 AM] scalahub#2618
the binary files are also not created
```scalahub@scalahub-erg-oracle:~/oracle-core$ cd oracle-core-deployed/
scalahub@scalahub-erg-oracle:~/oracle-core/oracle-core-deployed$ ls -l
total 8
-rw-rw-r-- 1 scalahub scalahub 3137 Dec  4 15:37 oracle-config.yaml
-rw-rw-r-- 1 scalahub scalahub  208 Dec  4 15:37 run-oracle.sh
scalahub@scalahub-erg-oracle:~/oracle-core/oracle-core-deployed$ 
```


[12/04/2020 10:15 AM] scalahub#2618
did it work for any amount or always failing?


[12/04/2020 11:15 AM] Robert K#0722
Always failing (I just wanted to be specific)


[12/04/2020 11:16 AM] Robert K#0722
Looks like you don't have openssl installed?


[12/04/2020 11:17 AM] Robert K#0722
Also I think you're using an old version of the codebase @scalahub


[12/04/2020 11:18 AM] Robert K#0722
Make sure you are using master branch latest commit


[12/04/2020 12:39 PM] scalahub#2618
I used both  deviation check and master. I did install openssl as well


[12/04/2020 12:40 PM] scalahub#2618
And using the latest code base.. from ergo github


[12/04/2020 12:42 PM] scalahub#2618
Ok will try to find the issue tonight


[12/04/2020 1:02 PM] scalahub#2618
Openssl seems to be installed
```scalahub@scalahub-erg-oracle:~/oracle-core/scripts/erg-usd-oracle$ openssl version
OpenSSL 1.1.1f  31 Mar 2020
```


[12/04/2020 1:02 PM] scalahub#2618
also I've got the latest codebase


[12/04/2020 1:42 PM] Robert K#0722
Hmm, that error is super weird if you're in the latest codebase


[12/04/2020 1:46 PM] Robert K#0722
@scalahub You can't be on the latest commit


[12/04/2020 1:46 PM] Robert K#0722
The codebase no longer imports `sigma-tree` and that's the error from your file:
```
error: no matching package named `sigma-tree` found
```


[12/04/2020 1:47 PM] Robert K#0722
And yeah, not entirely sure why you are running into an OpenSSL error as well.


[12/04/2020 1:49 PM] Robert K#0722
Make sure you have the dev packages installed as recommended in the readme I wrote


[12/04/2020 2:35 PM] scalahub#2618
cool I'll debug this later.. debugging the issue with mint/redeem action


[12/04/2020 2:35 PM] scalahub#2618
have you tried redeem btw?


[12/04/2020 2:35 PM] scalahub#2618
Also for the oracle-core, is the box selection set up properly so that I can share the same node with multiple cores?


[12/04/2020 2:43 PM] Robert K#0722
Yes/no. You can use multiple cores, but they can potentially use the same box for fees.


[12/04/2020 2:44 PM] Robert K#0722
Not really sure how you'd guarantee they use different boxes/assuming the user has more boxes without doing a lot of work and having to have them all talk to each other


[12/04/2020 2:44 PM] Robert K#0722
I believe i checked all 4 actions


[12/04/2020 3:10 PM] scalahub#2618
even I'm not sure üôÇ but I recall you had mentioned adding box selection at some point


[12/04/2020 3:55 PM] Robert K#0722
I suggested we could do random box selection, but that still only improves the chances, doesn't fix the problem.


[12/04/2020 3:56 PM] Robert K#0722
And so I didn't bother doing it because it's not a fix.


[12/04/2020 5:10 PM] Robert K#0722
@scalahub And here's the json from trying to redeem $0.1 of AgeUSD:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/784466727462895666/message.txt


[12/04/2020 5:10 PM] Robert K#0722
(To make it easier to try and troubleshoot)

{Reactions}
üëç 

[12/07/2020 3:46 AM] scalahub#2618
@Robert K It seems that token id was wrong in the address. I've upgraded to another and tested
This is the address: https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/ergo-stablecoin/src/test/scala/stablecoin/v2e/BankContractSpec.scala#L10
This is the tx-builder script I used for minting reserve coins: https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/TxBuilder/v2e/mintReserveCoin.json


[12/07/2020 8:22 AM] Robert K#0722
Oh, lol.


[12/07/2020 8:24 AM] Robert K#0722
Glad it was a simply fix.


[12/07/2020 8:25 AM] Robert K#0722
How'd you end up with the wrong token ids between versions? From testing?


[12/07/2020 9:00 AM] Robert K#0722
@scalahub In your json you linked above you have the bank address as: `q2fgM5CxxTH6fow8XCh8qkX4jTGhnuEMF1nGmYMrotR71vjBgvGBBP4D4E2QTMpSJJrUhX8gnScKMzXeRaCaFfgLRmknuoDRxetNKTitMZJCqrGzLtHsDNJwqx851fjxtN55vtYY9uWoNFsyhssbCMCXDNkx4btwCuGXkJBAAbpobpQgvypojsPQpX7pHk55L4KE5rYLqAw7AVZMVutaSGCtH2sWL8z3SBCNgbftnrUVMkc86V9nZSq6pBGcodo4VpYumo7YVTQVAwnzdMkNE8K78ZtbngBSn5C6ou6AZbCy4z4d1395ndwLTnSU6FSj2RCbxbdGJTgze1SaoWKh8YtuGMMT9gRArAMxron8VUgnwuf1WnU6pmUj53bCUDxAt21sYBaCAafAvkV5H3hAv361ecxz9exi3u6z5Tw6V7oZL9wmvKjjcvtSiKmcrsSi3zSuTVgWx7iLs6Xxw27Cop9C86fEXvBm6sxcRtvKem8bsiB3BSiqphh7FVmLVF5WJzm8zk21nnMJ8CCAiwLcarKtnK1RkyPteGHJ14cALHAUjuKgwV2Q6NQcirrGMaKFUxFeqw9Jr4PtzFa6nThxafnsYMEin5Nkd479YyPBxuFJHf5YKo8n12vvCFSW4cGVXN6YNZWSRxN4B2zmUgEzPg2CNFpQWuRLFNv2te1Z2XmD3iMjtYSjcwLQSEL4VZ4pmA1Q4iqhyz81jE4QKCrt2dojjrrQov4cqxqVQXnwYqzfNrR4X6nzdHet3aa2FTvoiwon951ZeMg3DBeAYxtPJMUuzYJ9sL2epank8aTmTz1X3SQMUThF77Rg2MRuCeLjAtG4WMM5Fe5CAZT5CH1j6yWF25rwSJxQfQpS8LvngvzjhCZx7vWGm1Dg`


[12/07/2020 9:01 AM] Robert K#0722
While you are saying the address is supposed to be `FGXe86WvPeLNsqVJcSJ4UknSS6T1bCgu1K3hN5noiUnBN5FjZCp859cq1j6yzHP73WYHUzz6buv6asg3yfFwRpkpAqpoWG18GFpHQnYkb3SDUvzZMitvJsSdLUkcaH89qcLVq6APVS4ReDdLqFX5rFGXovukciyroY89NNh7BRRwk16fiZVMSYh7coFkjvxazRsqw2w4zJZX28z13dNf8WFCvdEwSdsurHZe4T2GgihNXYR9KRwybyDUMCGCGUFtJPaKKKKCCavYnCxRMdF3UNGwARj4RfwPoiQhdU2xK4wst3neFqQiRRpahrCtPeGVfjdRJozowqrw8mZf8nkgsMy3TNc4FaZELmewBvxMMDTfgaJ6X34qQLFjL6jkzsyxyGWPEgUXVVkXs1U4vG44XWVZozPiXqZNticBajdoQG1w6CzMxaMPAoHpaREGK8Xz2BhrfTVWkbsKyT12szR7UXMjZQTuhBkLSBaR6strFDLSAJrwBQTdXPbcLXFVvE8gsbivDZ6qHX6ZB6yk9QrvtEksMYRRTd4G9rSWkBZDwsuPZNWqCsBLVQU694ZtXcRmNeFLPkgny9mhztARoWi8XqQ4dKrzAk3HuVBSYNYBTB6C5aHt6W3KjiVNbS4W7TenL1jcbqiFB8fa1Df5Vo72tBiorqwGZXZZTsrWNsCkiy1Bx8J2HtuC22PTrgC8WUPegVMJcoVE3rn3kwjjtEaH3VsTowT93Zh4UJRMqzRj2hfWvAPzshLZ8Uv1PrHgZHgK5PYJUZNYgtj2dCNWfaomjUb787vgyvtGRntZCjgD2NKqW89tTSHFRkDpTDm6TQDvKcudjCNW7BDBCdkgzFkke6qTSrGGjArsBBFJ4pqNmMW3wf9M7TnNx48ortzP8HjxMEeYdcFc3BWxkHPqBzJ8tamJokpz7YuYvf4W`


[12/07/2020 9:02 AM] Robert K#0722
I've updated the bank to be at the new address `FGX...` but it's failing just like before.


[12/07/2020 9:02 AM] Robert K#0722
Are you sure you weren't running tests on an old contract?


[12/07/2020 1:15 PM] scalahub#2618
checking.. will revert shortly


[12/07/2020 1:42 PM] scalahub#2618
@Robert K there was a bug in my json. Its fixed. I just now tested a mint tx
fixed script: https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/TxBuilder/v2e/mintReserveCoin.json


[12/07/2020 1:42 PM] scalahub#2618
tx: https://explorer.ergoplatform.com/en/transactions/1ef1513924072055598a7f6eae947efdb3a9601f0f27dffb731b6ed473101d6b


[12/07/2020 1:44 PM] scalahub#2618
another one with 10 coins https://explorer.ergoplatform.com/en/transactions/209e55165c2ce67735be9398823879cc0e884dc663294f8b23fce897e21dade1


[12/07/2020 1:47 PM] Robert K#0722
So what does that mean it's fixed?


[12/07/2020 1:47 PM] Robert K#0722
The off-chain code still doesn't work, which is what we need to debug


[12/07/2020 1:49 PM] scalahub#2618
Well contract seems to be fine and it's working in txbuilder so some issue with offchain code


[12/07/2020 1:50 PM] scalahub#2618
Here is the exact contract for reference


[12/07/2020 1:50 PM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/510dd8af528f1b83b281466d2ceac2c39efa5d2c/ergo-stablecoin/src/main/scala/stablecoin/v2e/Contracts.scala#L21


[12/07/2020 1:52 PM] Robert K#0722
Indeed, that was my guess as well that it's in the off-chain code.


[12/07/2020 1:52 PM] Robert K#0722
Which is why I gave you two json examples so you can try and compare with your tx builder to see what is different, since you have a lot better of an idea of how the contracts work (which is important when our one error message is `reduced to false` üòÖ )


[12/07/2020 1:55 PM] scalahub#2618
I guess its the fee calculation. Btw you can try minting some here (there is already some ergs in this wallet) https://ergo.kioskweb.org/session/NbraQa9En19GfwPFPW1yuPPK3#kiosk.Wallet.txBuilder


[12/07/2020 1:55 PM] scalahub#2618
using the above script.


[12/07/2020 1:56 PM] scalahub#2618
Also please refer to the fee calculation https://github.com/Emurgo/stablecoin-project/blob/510dd8af528f1b83b281466d2ceac2c39efa5d2c/ergo-stablecoin/src/main/scala/stablecoin/v2e/StableCoin.scala#L25-L28


[12/07/2020 1:56 PM] scalahub#2618
and the deltaBc calculation https://github.com/Emurgo/stablecoin-project/blob/510dd8af528f1b83b281466d2ceac2c39efa5d2c/ergo-stablecoin/src/main/scala/stablecoin/v2e/StableCoin.scala#L25-L28


[12/07/2020 1:57 PM] Robert K#0722
So then can you give me a json of a valid tx?


[12/07/2020 1:57 PM] Robert K#0722
Without posting it


[12/07/2020 1:57 PM] scalahub#2618
ok sure


[12/07/2020 1:57 PM] Robert K#0722
So I can create a json from the off-chain code and we can compare


[12/07/2020 1:57 PM] scalahub#2618
basically set broadcast to false


[12/07/2020 1:57 PM] scalahub#2618
valid tx json

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785505374576836608/message.txt


[12/07/2020 1:58 PM] Robert K#0722
So mint 5 reservecoins?


[12/07/2020 1:59 PM] scalahub#2618
yes


[12/07/2020 1:59 PM] scalahub#2618
btw can you check order of operations
`val fee = bcDelta * feePercent / 100` is different from `val fee = bcDelta / 100 * feePercent` (division before multiplication, etc)


[12/07/2020 2:00 PM] Robert K#0722
Ah right


[12/07/2020 2:00 PM] Robert K#0722
Will do


[12/07/2020 2:03 PM] Robert K#0722
Ah, you are right.


[12/07/2020 2:03 PM] Robert K#0722
I think I messed up the fee calc


[12/07/2020 2:03 PM] Robert K#0722
Mint reservecoins now works


[12/07/2020 2:03 PM] Robert K#0722
https://explorer.ergoplatform.com/en/transactions/94c431936e3338d71063df881eb45ade799c00a4c01a9e1ce9ba0b872b7251fc


[12/07/2020 2:04 PM] Robert K#0722
Though redeeming ageusd still fails:

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785507149513621574/message.txt


[12/07/2020 2:09 PM] scalahub#2618
Ok that's still better than nothing working üòÄ will be trying remaining operations today.. and after that will test with new contract that has cooling off period as well


[12/07/2020 2:13 PM] Robert K#0722
Indeed


[12/07/2020 2:13 PM] Robert K#0722
Ah, so minting stablecoins also works


[12/07/2020 2:14 PM] Robert K#0722
Hmm, I need to look to see if redeeming uses different fee calculations?


[12/07/2020 3:07 PM] Robert K#0722
@scalahub Can you give me json for a redeem action?


[12/07/2020 3:13 PM] scalahub#2618
working on it. will send shortly


[12/07/2020 3:14 PM] Robert K#0722
Thanks


[12/07/2020 3:24 PM] scalahub#2618
json for redeem rc

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785527272223670333/message.txt


[12/07/2020 3:25 PM] scalahub#2618
this tx https://explorer.ergoplatform.com/en/transactions/9b7191e95ff9acf6a4abaeccfba4be3b781992073750f0b0e0089aaed1a9cf24


[12/07/2020 3:25 PM] scalahub#2618
let me know if you need one unbroadcasted


[12/07/2020 3:29 PM] scalahub#2618
here is one unbroadcasted

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785528388353392640/message.txt


[12/07/2020 3:30 PM] Robert K#0722
Great, yeah unbroadcasted is better so I can compare with the json the off-chain code creates


[12/07/2020 3:30 PM] scalahub#2618
this is the script I used to generate if it helps https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/TxBuilder/v2e/redeemReserveCoin.json


[12/07/2020 3:36 PM] Robert K#0722
Ah, the protocol is too close to the min reserve ratio to redeem 5 reservecoins


[12/07/2020 3:38 PM] Robert K#0722
And I have a bunch of error checks in the off-chain logic stopping the tx creation process.


[12/07/2020 3:38 PM] Robert K#0722
I'll mint more reservecoins so we can test redeeming, and I might have to ask you for a new unbroadcast json after that.


[12/07/2020 3:40 PM] scalahub#2618
no worries


[12/07/2020 3:40 PM] scalahub#2618
would it be possible to bypass those checks and see that tx indeed fails via script?


[12/07/2020 3:41 PM] Robert K#0722
It would have been, but it's like in 3 places and so I already broadcast a tx out


[12/07/2020 3:42 PM] Robert K#0722
I minted 200 rc, and now tested redeem 5 again and it breaks as expected


[12/07/2020 3:42 PM] Robert K#0722
If you could send me your json with a new redeem 5 reservecoin tx that'd be great.


[12/07/2020 3:43 PM] scalahub#2618
new json with 5 rc redeem

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785531915931222037/message.txt


[12/07/2020 3:46 PM] Robert K#0722
In your case your receipt box just holds the register data, and you have a 4th box that holds the redeemed ergs, right?


[12/07/2020 3:46 PM] scalahub#2618
yes in the change box


[12/07/2020 3:47 PM] scalahub#2618
btw it can also be stored in the receipt.. will try that next


[12/07/2020 3:48 PM] Robert K#0722
Yes, that is what I'm doing


[12/07/2020 3:48 PM] Robert K#0722
Though I noticed the calculations are wrong


[12/07/2020 3:48 PM] Robert K#0722
Your receipt box:
``` "additionalRegisters": {
            "R4": "0509",
            "R5": "05ddfc9905"
         },
```


[12/07/2020 3:49 PM] Robert K#0722
My receipt box:
```
"additionalRegisters":{"R4":"0509","R5":"05e9b6a705"},
```


[12/07/2020 3:49 PM] scalahub#2618
here is a tx with the redeemed erg in recepit

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785533532578906132/message.txt


[12/07/2020 3:51 PM] scalahub#2618
yes this is different. Mine is Long: -5455663, yours is -5565877


[12/07/2020 3:51 PM] scalahub#2618
so are you subtracting fee?


[12/07/2020 3:52 PM] Robert K#0722
It should be


[12/07/2020 3:52 PM] scalahub#2618
if the sign is negative, then fee must be added


[12/07/2020 3:52 PM] scalahub#2618
```  def getBcDeltaWithFee(bcDelta: Long) = {
    val fee = bcDelta * feePercent / 100
    bcDelta + (if (fee < 0) -fee else fee)
  }
```


[12/07/2020 3:52 PM] Robert K#0722
Ah, right.


[12/07/2020 3:52 PM] Robert K#0722
Yep, that's 99% likely the problem.


[12/07/2020 3:54 PM] Robert K#0722
Cool, redeeming reservecoins now works: `ReserveCoin Redeem Tx Id: "25f5969a1f07e4b872e5689571954c3ea4e1ab3a28de6ea0c5ea9fa7e8a9b229"`


[12/07/2020 3:56 PM] Robert K#0722
And ageusd as well: `StableCoin Redeem Tx Id: "ca0ef24a0e7dabcaaa213e9b4cccfacb78e62da2e4359c3cb1fdc1d9d9f46e14"`


[12/07/2020 3:57 PM] Robert K#0722
Perfect, we are now running with a 1% fee contract


[12/07/2020 3:58 PM] Robert K#0722
Thanks for figuring out the bad logic I implemented


[12/07/2020 3:59 PM] Robert K#0722
So now all we have to do is add the cooling off period back in?


[12/07/2020 4:08 PM] scalahub#2618
Awesome üëç so everything works !


[12/07/2020 4:08 PM] scalahub#2618
Yes next step is to add cooling off. What height do you want?


[12/07/2020 4:08 PM] scalahub#2618
And would you like to test voting plus update?


[12/07/2020 4:08 PM] Robert K#0722
Maybe like +2 hours from now?


[12/07/2020 4:09 PM] Robert K#0722
So +60 blocks


[12/07/2020 4:09 PM] Robert K#0722
And sure, I've been voting/updating by myself using the CLI like 10 times, so I'm pretty sure it works, but we can try together.


[12/07/2020 4:09 PM] scalahub#2618
Ok so how do you want to do it?


[12/07/2020 4:09 PM] Robert K#0722
Maybe you'd like to try the CLI as well?


[12/07/2020 4:09 PM] Robert K#0722
So we can test 2 people 100% using the CLI for voting/updating


[12/07/2020 4:10 PM] scalahub#2618
Ok cool let me check cli for update

{Reactions}
üëå 

[12/07/2020 4:12 PM] Robert K#0722
The CLI assumes you only have 1 box that holds your vote token btw.


[12/07/2020 4:13 PM] scalahub#2618
hmm I cannot test the CLI immediately because my node is messed up and I have restarted rescanning so it will take a while


[12/07/2020 4:13 PM] scalahub#2618
let me do manually as last time


[12/07/2020 4:13 PM] Robert K#0722
Alright sure.


[12/07/2020 4:13 PM] scalahub#2618
after updating to 3.3.6, old wallet no longer works btw @kushti


[12/07/2020 4:14 PM] scalahub#2618
will give more info after testing @kushti


[12/07/2020 4:14 PM] Robert K#0722
So if you can vote manually + send me the address so I can vote as well, then I'll also collect & do the update.


[12/07/2020 4:19 PM] kushti#0978
what was previous version ?


[12/07/2020 4:22 PM] scalahub#2618
this is the address @Robert K `3cVqWME2PB1k1PDMKWVUKz47zVJwyipr7qnTAzpwp9xZbn5Qv583aa6B2VeWe5Pj5y2gfGfi2EcA9UaJJxmp3doxoxSG83AjX6oU4CCiBxoYAR9UytzFk38b9AP4BLpFYL1nyPB3dLrCuj3i7p1CmVRxr4PXEhbit6oV5GvnXjPRLpixi8hSiSKer6XbsTPLdvq8GfcHaFABnBXqpNQmQ9Upoig1CEYWRu6Xv5ZKApY45eJoBfG4gtihX1p4xLi3vuMFZP6646CDs3aVJ5gGoJuDAL2wSLxPdTwqveY9TN6qtJ5Bgdr6wxJyQ8wzfnvgVAQsBxGqcVx3y5Q1w7aqaks43xxdgYdqAjP7hTk837FbQLX2U6xYxwnBAm5LXrpe4kwQhM32YjqM1YqiR9mwq5ZyQhsBDNeLL5kvGZ1XbqxH8g29wn4XMautz7AF6d5EYCHmGRfGSnBF3TjD1RZWuSJVjsNCqa8EAwk87RHRoUh4WbjrAXa5mBFkdQY7sK9ZmxcAMJCB7Wv7aD8DuJeLaZznjDQn8cohpcoxH3xhGTex936wrKJMK45bZJVLs6WfVvsQubMHnhnFZPPhMGqH9kUHmkjvFNQoaKq5ypozxtKZGxCcfhZX6ikRxtsGMbhUadozUyAvjXvfPEDvRvoRkXEqySgeMbXV7a6ndkRTmP4PLxCpHDXZs7Mqd55fixuDYYKaK3K51T89f7kF4uwJiaoEbww2q3wTd2iNyenLFn9oE2rRToe6yJX9BDsoDwNdD4jLL3T3tAaGVULB78oAWkF83Mmrv948NRRTXAogwCMeWosqq98nCTgwU2TibqSyzNyTY2ZkyLigoLGc3GdADEgYjAtnVfXVfMCFt37B2TnRZN3Qxa9hySS1PZvHjH9Rh4jESnoJKHtE4yKGwXmCF6cJMg8fEuyAaEPQjHBrFvUQe2d3kbS49w8yY6dKR`


[12/07/2020 4:23 PM] scalahub#2618
not sure the version. its called `ergo-shared.jar` (given by Robert)


[12/07/2020 4:24 PM] kushti#0978
hmm


[12/07/2020 4:24 PM] kushti#0978
shared is after 3.3.6 )


[12/07/2020 4:24 PM] kushti#0978
will be merged into 3.3.7


[12/07/2020 4:26 PM] scalahub#2618
no I think its before 3.3.6.. Isn't 3.3.6 the latest?


[12/07/2020 4:27 PM] scalahub#2618
I am getting an exception and the api key does not work. After deleting wallet folder, it works fine


[12/07/2020 4:27 PM] scalahub#2618
@Robert K this is the contract with cooling off period https://github.com/Emurgo/stablecoin-project/blob/361db14a54b59fa8640fb158d1b745996ca0df70/ergo-stablecoin/src/main/scala/stablecoin/v2f/Contracts.scala#L24


[12/07/2020 4:28 PM] scalahub#2618
I'll create a ballot box with 3 tokens for the new address


[12/07/2020 4:36 PM] scalahub#2618
@Robert K here is a tx with two ballot boxes, with 3 and 2 votes respectively
https://explorer.ergoplatform.com/en/transactions/3add48713387f0d223f5aaff26826be4f94b32baea2cae239504b4fb937af27d

{Reactions}
üëç 

[12/07/2020 4:38 PM] Robert K#0722
Hmm, now voting broke apparently in my off-chain code somehow (we didn't change the contracts so this is a bit odd).


[12/07/2020 4:38 PM] Robert K#0722
`Error(\"invalid type: map, expected a string\", line: 1, column: 1668)")`


[12/07/2020 4:39 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/785545914441531452/message.txt


[12/07/2020 4:41 PM] Robert K#0722
@greenhat The above error seems to be a parsing problem for box json from the explorer


[12/07/2020 4:42 PM] Robert K#0722
(So that was from testing using the Headless dApp Framework + fetching the update box via the explorer, but it works just fine using UTXO-set scanning: https://explorer.ergoplatform.com/en/transactions/5d82498e1f4bf2abc7c94352a3e409755ebdb04651827eeef46ba7887b94f736)


[12/07/2020 4:43 PM] Robert K#0722
------------------
@scalahub Did you leave the height as `373170`?


[12/07/2020 4:44 PM] Robert K#0722
Because the current height is `377669`


[12/07/2020 4:44 PM] scalahub#2618
oh yes I messed that üò¶


[12/07/2020 4:44 PM] scalahub#2618
will create another

{Reactions}
üëå 

[12/07/2020 4:46 PM] scalahub#2618
new address
`3cVqWME2PB1k1PDMKWVUKz47zVJwyipr7qnTAzpwp9xZbn5Qv583aa6B2VeWe5Pj5y2gfGfi2EcA9UaJJxmp3doxoxSG83AjX6oU4CCiBxoYAR9UytzFk38b9AP4BLp24AZbjK2xXd7Fg4MVqJE3BnRS6aGWnYS3cnFV8mSGEM4fKkVbuBArCUGKmWD4PS73EaKNBaGEf7zWDg8o5gkazRtxpMy8sDsMw2tz7WByz7vBtxhuEsuXHenRtdNBYUKmUm1KZaE1FzQsPndQM29opVUoYXDPS7RDsqe395mxxNp8j2vnHYDdtiJWzh9iTPiqZC4PiQypsNbkuSb94Y7ZfohisuhvM5FojmmvkJrLJcoJVodiv8BELmr5wpPD3RRdtCopFsnUoftXSyTjRa9JtNALERet11pM2buY5QMR7sf9xH8VxhgPLHL2tkxPMvLEVjNS82CdZTwSiVQZ8HwbVTAY9mxZYpy2TXFdxc2cSNYzSLPJiEAivqneWoydhEbZNviH155AzmUURbN1nydDzqA8vPzDKvNyacBpH1WJhTZqkDi2JqyScqsAaDc2o6eAGXTtjfZENhPjPfbATDqLvckF9jybzo7Vo2WFH5Fi7KjKBNhnRttAojNBXpE7aZVK3wM2gt5kgPiD9iGWAhnvw4RVnMYi4ZRWszED1e556xhYwgAt6PVprfK5qfb2AbELEEP8xbjgXDRHkqVmeZczGKdqUw7pfzR2Nd2GWJgCCp9wZ3vQtYETdaGQGq2HrASAtnPb4XsqRdXR8qW9kPBepqB8bhvz3hjVm4HrX528LYKJeinAXzL8QQHntraVBgH3d4dE1fz56bvRQVTBzbcLYhy1ZrzwgJdVx13EPNYQNrzoGPdjA1X1qtGMoB6zyHdoiG2BY8D3jZYtjzmJkxvY3C1Wx1HkgDAz5iUwvMLRci3LGNLdfbwkEavVWnzHX`


[12/07/2020 4:50 PM] Robert K#0722
What's the new height?


[12/07/2020 4:50 PM] scalahub#2618
val coolingOffHeight: Int = 377770


[12/07/2020 4:54 PM] Robert K#0722
Alright cool, my vote tx is processing


[12/07/2020 4:54 PM] scalahub#2618
here is one vote tx https://explorer.ergoplatform.com/en/transactions/e2623111c783debcca8334a3c7e082ded29bdb9d0635c05fc87a5c91b804930b


[12/07/2020 4:55 PM] Robert K#0722
Mine: https://explorer.ergoplatform.com/en/transactions/188402b61854cccc20fc3cd4608e7ebf4bb0a3c6ae6f009211addd4e849e4351


[12/07/2020 5:02 PM] Robert K#0722
And i've collected the votes. Here's the json showing it used both of ours: `"dataInputs\":[{\"boxId\":\"35057316bba14fb9a7ea9025365520ad614bfbf7b94f7f0d8a76831957378248\"}],\"outputs\":[{\"boxId\":\"dd68f5d5aea201a57603bbcddb13b67bd361c237a80c81db172c71cd721225f9\`


[12/07/2020 5:02 PM] Robert K#0722
Tx: https://explorer.ergoplatform.com/en/transactions/9b43c5a3329ccd72dae2a6fe9ba892eba822cfd0292a521e926690d20c373a09


[12/07/2020 5:11 PM] Robert K#0722
Update tx:https://explorer.ergoplatform.com/en/transactions/69243c7fa0de0f7270d178f379f6a300f34ad8c74d46b2d9dd89c32dc000202c


[12/07/2020 5:13 PM] greenhat#6562
Yes, seems like it. I'll take a look first thing in the morning.


[12/07/2020 5:20 PM] Robert K#0722
Great, thanks üëç


[12/07/2020 5:20 PM] scalahub#2618
yes it seems recently explorer api changed Json; few things broke in Kiosk as well over weekend


[12/07/2020 5:35 PM] Robert K#0722
@kushti @scalahub I need to push tomorrow's call 2 hours ahead, is that alright for you guys?


[12/07/2020 5:36 PM] scalahub#2618
its fine with me


[12/07/2020 6:09 PM] Robert K#0722
Is the max reserve ratio 900% @scalahub ?


[12/07/2020 6:09 PM] scalahub#2618
its 800


[12/07/2020 6:10 PM] Robert K#0722
Right, I got slightly confused because there's this 900 too: https://github.com/Emurgo/stablecoin-project/blob/361db14a54b59fa8640fb158d1b745996ca0df70/ergo-stablecoin/src/main/scala/stablecoin/v2f/NewBankContract.scala


[12/07/2020 6:10 PM] Robert K#0722
And 800 here: https://github.com/Emurgo/stablecoin-project/blob/361db14a54b59fa8640fb158d1b745996ca0df70/ergo-stablecoin/src/main/scala/stablecoin/v2f/StableCoin.scala


[12/07/2020 6:17 PM] scalahub#2618
yes the new contract is to test update locally


[12/07/2020 6:18 PM] scalahub#2618
we probably don't need it anymore since update has been tested a lot


[12/07/2020 6:44 PM] Robert K#0722
```Circulating Status
===================
Amount Of Circulating AgeUSD: $3.1
Amount Of Circulating ReserveCoins: 70735

Prices
=======
AgeUSD Nominal Price: 2.6323686 Ergs
ReserveCoin Nominal Price: 0.001108431 Ergs

Bank Status
============
Current Reserve Ratio: 1060%
Base Reserves: 86.565271559 Ergs
Liabilities: 8.16034266 Ergs
Equity: 78.404928899 Ergs

User Wallet Status
======================
Node Wallet Balance: 8.647916944 Ergs
ReserveCoins Owned: 39905
AgeUSD Owned: $0.81```


[12/07/2020 6:44 PM] Robert K#0722
So we've passed the 1k reserve ratio


[12/07/2020 6:45 PM] Robert K#0722
Now tomorrow when I come back on I'll test raising it further and see if the cooling off period works


[12/07/2020 6:47 PM] Robert K#0722
And @scalahub, @kushti , I've moved the call back to the normal time.

{Reactions}
üëç 

[12/07/2020 6:47 PM] Robert K#0722
Sorry about that, people keep changing their schedules and it's rather annoying but alas.


[12/08/2020 9:25 AM] Robert K#0722
And the cooling off period works as expected.


[12/08/2020 9:26 AM] Robert K#0722
Both the script failes to evaluate & the off-chain code logic throws an error due to the cooling off period being over when trying to increase reserve ratio further past the max


[12/08/2020 11:10 AM] kushti#0978
@Robert K so 4 PM CET ?


[12/08/2020 11:35 AM] Robert K#0722
@kushti 2pm CET (in 1.5h)


[12/08/2020 11:50 AM] kushti#0978
@Robert K ah okay


[12/08/2020 12:05 PM] scalahub#2618
yes and I also checked (without the offchain checks, the script evaluates to false)


[12/08/2020 1:07 PM] greenhat#6562
New explorer format for additional regs breaks the code:
```
{\"R4\":{\"rawValue\":\"0e20a71e8120ec9cd600e7f7e76b9c1b0a9f7f7fa36dd04633911b556b8c6166572d\",\"valueType\":\"Coll[Byte]\",\"decodedValue\":\"Coll(-89,30,-127,32,-20,-100,-42,0,-25,-9,-25,107,-100,27,10,-97,127,127,-93,109,-48,70,51,-111,27,85,107,-116,97,102,87,45)\"}
```
vs. old(node):
```
{\"R4\": \"0e20a71e8120ec9cd600e7f7e76b9c1b0a9f7f7fa36dd04633911b556b8c6166572d\"}
```
It could not be fixed with a serde field alias. üôÇ I need to find a way to support both. @Robert K How urgent is this?


[12/08/2020 1:15 PM] Robert K#0722
@greenhat Not very urgent, but would be good before EoY


[12/08/2020 1:17 PM] greenhat#6562
@Robert K Got it.

{Reactions}
üëç 

[12/08/2020 1:25 PM] greenhat#6562
I made https://github.com/ergoplatform/sigma-rust/issues/156

{Embed}
https://github.com/ergoplatform/sigma-rust/issues/156
Parsing support for new explorer format for box's additionalRegiste...
New explorer format for additional regs breaks the code: &quot;R4&quot;: { &quot;decodedValue&quot;: &quot;Coll(-89,30,-127,32,-20,-100,-42,0,-25,-9,-25,107,-100,27,10,-97,127,1...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[12/08/2020 4:04 PM] Robert K#0722
@kushti We talked with IOHK today and their KYC system Atala is likely going to be generic, and the smart contracts on-chain are doable in Ergo, so if we ever want KYC support this is a viable option.


[12/08/2020 4:05 PM] Robert K#0722
And the angle for this would be that someone can get KYCed once, and have their KYC-representative token on both Cardano and Ergo deployed, which could be attractive (especially if for example we were to one day add that to Yoroi, and have users have KYC on both).


[12/08/2020 4:06 PM] Robert K#0722
Not sure if it's something we care too much about/want to do in Ergo, but just letting you know the option is likely there.


[12/08/2020 7:05 PM] scalahub#2618
@Robert K ADA-USD oracle token ids https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4b/FixedEpochPoolLive.scala
addresses https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4b/FixedEpochPoolLiveAddressSpec.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4b/FixedEpochPoolLive.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v4b/FixedEpochPoolLiveAddressSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922

{Reactions}
üëç 

[12/08/2020 7:17 PM] kushti#0978
@Robert K sounds good!

Btw, anon-real agreed on doing the UI


[12/09/2020 8:45 AM] Robert K#0722
Awesome.


[12/09/2020 8:46 AM] Robert K#0722
And actually, we will probably talk tomorrow with you/Nico about this, but we may go with Amitabh's recomended strategy of allowing the community/anons to release the Ergo stablecoin while Emurgo/EF just publicly release the research/contracts.


[12/09/2020 8:47 AM] Robert K#0722
If you think that's a good idea as well.


[12/09/2020 8:48 AM] Robert K#0722
We talked it over quite a bit, and from Emurgo's side we've ended up not caring about receiving governance tokens at all or holding the update tokens either, but more so that we can get the Stablecoin deployed and have people using/testing the protocol.


[12/09/2020 8:49 AM] kushti#0978
But how to update the protocol ?


[12/09/2020 8:50 AM] kushti#0978
Or it is set in stone? @Robert K


[12/09/2020 8:50 AM] Robert K#0722
So 2 options:


[12/09/2020 8:50 AM] Robert K#0722
1. Just deploy a simple stablecoin that is set in stone


[12/09/2020 8:51 AM] Robert K#0722
2. Include the update protocol but controlled by anons who promise to move to governance tokens (kind of risky for an average person).


[12/09/2020 8:53 AM] Robert K#0722
Hmm, what if we treat the current update token we have, as a governance token by multiplying it by like 10000x?


[12/09/2020 8:53 AM] Robert K#0722
And say we do an airdrop to everybody in the ecosystem (not counting exchange addresses)


[12/09/2020 8:54 AM] Robert K#0722
From a marketing standpoint we can argue "the community" owns the stablecoin dApp, and since miners are selling like crazy there won't really be much of a worry they can do anything.


[12/09/2020 8:55 AM] Robert K#0722
I guess the problem there is that we'll never have enough people to update though.


[12/09/2020 2:55 PM] Robert K#0722
Hmm, @kushti maybe for liquidity pools we can do something more decentralized than Jason is doing with ergoswap


[12/09/2020 2:55 PM] Robert K#0722
As in we can use the idea i had a while ago about data accumulators


[12/09/2020 2:57 PM] Robert K#0722
And for example if we have a dApp fee we can have a treasury that acquires the fees and pays out liquidity providers who are within a specific price range (the most competitive)


[12/09/2020 2:57 PM] Robert K#0722
Or reward then with governance tokens


[12/09/2020 2:57 PM] Robert K#0722
And so we force the coordination of what the lowest price is to be off chain


[12/09/2020 2:58 PM] Robert K#0722
And liquidity providers are rewarded if they adjust their liquidity positions to be competitive


[12/09/2020 2:59 PM] Robert K#0722
And we pay such people out by using data inputs as proof to find the current price (most competitive)


[12/09/2020 3:03 PM] Robert K#0722
So the idea is that whoever provides liquidity in the lowest X% price range, every epoch of Y blocks they get rewarded either with Ergs from fees or by governance tokens.


[12/09/2020 4:07 PM] scalahub#2618
@Robert K @kushti the scan has not found my box


[12/09/2020 4:07 PM] scalahub#2618
3.3.6. I can see the right scan Id with my public key


[12/09/2020 4:08 PM] scalahub#2618
wait.. node is still syncing üôÇ


[12/09/2020 4:24 PM] Robert K#0722
Also @scalahub 3.3.6 won't work well


[12/09/2020 4:25 PM] Robert K#0722
Which is why I gave you the shared jar


[12/09/2020 4:25 PM] Robert K#0722
It should still work, but if you have a lot of Ergs in the same box as your stablecoins or reservecoins it might break


[12/09/2020 4:29 PM] scalahub#2618
oh but this is oracle pool.


[12/09/2020 4:30 PM] scalahub#2618
so I wont be sharing this with stablecoins


[12/09/2020 4:31 PM] Robert K#0722
Ah right, then you should be fine


[12/09/2020 4:32 PM] scalahub#2618
it picked up the datapoint box now


[12/09/2020 4:49 PM] kushti#0978
hmm seems syncing is now working slower than before, will check why after finalizing 4.0.0


[12/09/2020 5:52 PM] kushti#0978
or you can just reward immediately with reward input (extracted from the treasury ? )


[12/09/2020 5:52 PM] kushti#0978
also thinking a lot on how to do DEXes on top of Ergo


[12/09/2020 5:52 PM] kushti#0978
no need to replicate UNI yes


[12/09/2020 5:58 PM] scalahub#2618
Issue was with my network.node seems to be fine

{Reactions}
üòç 

[12/09/2020 6:09 PM] Robert K#0722
But if we reward people immediately then people will likely just do as small of an increment as possible in order to be the lowest.


[12/09/2020 6:09 PM] Robert K#0722
I guess we could do something like:


[12/09/2020 6:25 PM] Robert K#0722
- Time is separated into epochs (epoch prep/live epoch design pattern)
- In epoch prep all liquidity providers bid for the lowest price they're willing to go with their liquidity (they submit them into their own UTXOs with their price attached. This can only be done once per epoch, meaning if a new price is submit then the liquidity provider is "locked in" for said epoch). Furthermore they also attach however much liquidity they put in into one of the registers, thereby allowing us to keep track of their total amount of liquidity even if it gets used (boxes will never be allowed to be destroyed, and so liquidity boxes will always live on)
- Once the epoch prep ends, the protocol moves into the live epoch. 
- During the live epoch we use the global context claim design pattern of using data-inputs to acquire the current lowest price that has been submit (similar to datapoint collection in oracle pools at the end of live epochs, but instead we are searching for the lowest value held in a register (worry here is an attack that can stall this process which would have to be considered)).
- Anyone who has liquidity locked up during the live epoch within X% of the lowest price determined at the end of the live epoch can be rewarded fees/governance tokens.
- Next Epoch prep starts, liquidity providers have access to their liquidity again to change their prices if they so wish/withdraw the liqudity.


[12/09/2020 6:26 PM] Robert K#0722
We could potentially make the live epoch length dynamic, based on some default minimum and it may continue until the process of finding the lowest price has finished. Those who actually have the lowest price have an incentive to get their data-input proof tx to be accepted by paying a higher tx fee, while those who are stalling do not.


[12/09/2020 6:30 PM] Robert K#0722
I guess the largest attack here is if the exchange rate of the trading pair changes a lot externally, stalling allows users to get to pillage the liquidity.


[12/09/2020 7:34 PM] kushti#0978
Yeah


[12/09/2020 7:34 PM] kushti#0978
and we can call it "liquidity pools" üôÇ


[12/09/2020 7:35 PM] kushti#0978
but why not to give some mount of tokens according to trade volume just ? or fees?


[12/09/2020 9:47 PM] Robert K#0722
That can work too, I'm thinking how best to optimize competitiveness of pricing as if it were an AMM but with game theoretic incentives that can't be gamed as easily.


[12/09/2020 9:48 PM] Robert K#0722
In the above scheme i think I've figured out how to do it so that each liquidity provider can prove they submit liquidity at a given price in a given epoch completely in parallel


[12/09/2020 9:49 PM] Robert K#0722
But it's really really complicated


[12/09/2020 9:49 PM] Robert K#0722
We have to split the liquidity into 2 boxes, a pricing box and a liquidity box (so changing price doesn't invalidate a users tx who is doing an exchange with your liquidity)


[12/09/2020 9:51 PM] Robert K#0722
And the pricing box needs to also be a liquid provider specific token emission box that is created from a liquidity pool dApp participant token emission box that ensured they entered into the protocol fairly.


[12/09/2020 9:54 PM] Robert K#0722
I think for any parallelized protocol, we're likely going to have to use a design pattern like this, where users enter into the protocol via a participant token emission box which verifies they entered at a valid state (valid bootstrap action), and this valid initial state forces the user to mint i64 total tokens into a be UTXO that is a token emission box which only allows the user to emit tokens when they use boxes from the wider dApp state as data inputs to prove they have the right to do so.


[12/09/2020 9:56 PM] Robert K#0722
Their personal token emitted is proof they performed an action during a valid state in the protocol in parallel, and can be used as a data input together with the personal token emission box to prove it is valid (ex. That the user changed price and locked their liquidity in epoch X without having any locking or synchronization required in the protocol)

In our case the user token is emitted into a new "Locking Proof" box that holds the price the user locked their liquidity under, and the epoch id that this locking happened. This box is locked under a contract that only allows it to be spent (and force burning the token) if it is used in a tx to redeem rewards.

How this works is that at the end of a live epoch, the rewards from the live epoch box are emitted into a "Epoch Down-Bidding" Box and the epoch id is stored in one of the registers. This "Epoch Down-Bidding" Box first goes through the down-bidding process where anyone with a "Locking Proof" box can use their box as a data-input together with the "Epoch Down-Bidding Box" to keep bidding the price downwards to find what price was indeed the most competitive during the epoch. (Since this is asynchronous from the rest of the protocol, because both the "Epoch Down-Bidding Box" and the "Locking Proof" boxes are parallelized into their own async sub-protocol, we have no issues with stalling or any other problems tied to synchronization that caused issues in the original design above)

Once no one can provide "Locking Proof" boxes with lower prices after a predefined duration (ex. 30 blocks), then the "Epoch Down-Bidding Box" can be spent into the "Epoch Rewards" stage. In this stage anyone who has a price in their "Locking Proof" box within a given % of the lowest price arrived at via the "down-bidding period" has the ability to withdraw rewards from the "Epoch Rewards" box and destroy the "Locking Proof" box/burn their token inside of it.


[12/09/2020 9:57 PM] Robert K#0722
But even with all of that said, we still have the co-ordination problem of people all spending the same utxos


[12/09/2020 9:57 PM] Robert K#0722
Which kind of seems like we need to have mempool scanning to avoid


[12/09/2020 10:40 PM] Robert K#0722
Though I guess what we can do is force the liquidity providers to split up their liquidity into certain sized chucks and have off-chain code randomly pick a utxo


[12/10/2020 5:19 PM] scalahub#2618
my oracle has been working fine as of now

{Reactions}
üíØ 

[12/11/2020 8:59 AM] Robert K#0722
@scalahub Can you write instructions for how to bootstrap the StableCoin?


[12/11/2020 9:10 AM] Robert K#0722
Ah, and I forgot to ask, @scalahub  did you bootstrap the oracle tokens for the ada-usd pool to all of the operators' addresses?


[12/11/2020 9:43 AM] scalahub#2618
no I only created the tokens.. can bootstrap. are they the same addresses?


[12/11/2020 9:43 AM] scalahub#2618
would it be ok to run two oracle-core with same node and no clashes?


[12/11/2020 9:46 AM] scalahub#2618
btw, I'm down with toothache.. So mostly will not be online much.today (getting tooth extracted tomorrow)
will bootstrap ADA oracles though


[12/11/2020 9:47 AM] scalahub#2618
please confirm the addresses


[12/11/2020 9:53 AM] scalahub#2618
Sure. Will add a section about bootstrap to the overview document


[12/11/2020 10:36 AM] Robert K#0722
Yes, everyone's addresses will be the same.


[12/11/2020 10:36 AM] Robert K#0722
We can run 2 cores with same node, and it'll be fine


[12/11/2020 10:37 AM] Robert K#0722
They might clash for a little bit, but one pool will win priority and then the second will get delayed for a few blocks and then the epochs should be desynced/fine


[12/11/2020 10:37 AM] Robert K#0722
With only 2 pools they shouldn't really run into many issues


[12/12/2020 9:01 AM] kushti#0978
@Robert K is stablecoin tool registering scans with walletInteraction == forced ?


[12/14/2020 8:30 AM] Robert K#0722
No, i left the scans with no new flags since shared was supposed to be default

{Reactions}
üëåüèª 

[12/14/2020 9:05 AM] kushti#0978
https://ergoutils.org/


[12/14/2020 9:05 AM] kushti#0978
Another tool from anon-real


[12/14/2020 9:17 AM] Robert K#0722
Ah, very cool.


[12/14/2020 9:17 AM] Robert K#0722
üíØ


[12/14/2020 9:52 AM] kushti#0978
@Robert K so should I propose him to do stablecoin UI after ?


[12/14/2020 10:04 AM] Robert K#0722
Sounds good


[12/14/2020 1:22 PM] Robert K#0722
@kushti I am currently implementing the frontend implementor fee to the ageusd headless dApp


[12/14/2020 1:22 PM] Robert K#0722
Current fee is 0.1%, but we can increase as desired


[12/14/2020 1:23 PM] Robert K#0722
So essentially implementor just has to supply their own address as one of the arguments when calling an action method, and they automatically get paid out a 0.1% of the value of the mint/redeem in a box in the tx.


[12/14/2020 1:49 PM] kushti#0978
@Robert K sounds good!


[12/15/2020 4:32 AM] scalahub#2618
@Robert K should I bootstrap the ada oracles today?


[12/15/2020 7:58 AM] scalahub#2618
Currently working on instructions to bootstrap stablecoin

{Reactions}
üëç 

[12/15/2020 9:08 AM] Robert K#0722
Yeah sure, we can bootstrap the ada pool


[12/15/2020 9:47 AM] scalahub#2618
have already pushed the commit with addresses. Would you like to push the new code first and have our oracle-cores running before I bootstrap?


[12/15/2020 9:56 AM] kushti#0978
when do we have a call today ? @Robert K @scalahub


[12/15/2020 10:08 AM] Robert K#0722
@kushti In 3 hours


[12/15/2020 11:25 AM] Robert K#0722
@kushti @scalahub I am beginning to prepare an `Age-USD` repo that is currently private


[12/15/2020 11:25 AM] Robert K#0722
The idea is that it will be a lot more organized than the current shared repo we have with IOG, and it only pertain to AgeUSD


[12/15/2020 11:25 AM] scalahub#2618
Yes I believe so


[12/15/2020 11:25 AM] scalahub#2618
At same time


[12/15/2020 11:26 AM] Robert K#0722
And I am going to make sure everything we push to the repo doesn't have any remnants of information from our current test stablecoin deployment


[12/15/2020 11:26 AM] Robert K#0722
So I am leaving all of the addresses/token ids empty


[12/15/2020 11:27 AM] Robert K#0722
So what we'll be releasing from commit #1 will be all clean and tidy


[12/15/2020 1:00 PM] kushti#0978
https://meet.google.com/wjq-rcvd-rbu ?

{Embed}
https://meet.google.com/wjq-rcvd-rbu
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[12/15/2020 1:01 PM] Robert K#0722
https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[12/15/2020 1:01 PM] Robert K#0722
@kushti


[12/15/2020 5:08 PM] Robert K#0722
In a call with lawyers right now, and we got the OK that if we release the code/specs, we are not liable if someone else uses it/builds on top and deploys it on-chain.


[12/15/2020 5:08 PM] Robert K#0722
So our plans seem good.


[12/15/2020 5:36 PM] kushti#0978
@Robert K the issue though it will be not possible to list the token on most of the centralized exchanges. A legal opinion is needed for that


[12/15/2020 5:49 PM] Robert K#0722
Yeah, centralized exchanges will likely all require KYC, at least in the coming future


[12/16/2020 9:31 AM] Robert K#0722
@scalahub Hey, can you bootstrap the ada-usd pool now?


[12/16/2020 9:32 AM] Robert K#0722
Marek switched over all of the Emurgo oracles to the new pools, and so the current ada-usd oracle pool page on the explorer is broken


[12/17/2020 1:01 PM] Robert K#0722
@scalahub Can we officially consider smart contract v0.2f to be v0.3?


[12/17/2020 1:01 PM] Robert K#0722
As in, does v0.2f match the v0.3 spec?


[12/17/2020 1:01 PM] Robert K#0722
(Trying to unify everything to be clean in the AgeUSD repo)


[12/17/2020 1:27 PM] scalahub#2618
yes we can consider 0.2f to be 0.3


[12/17/2020 1:27 PM] scalahub#2618
and the current 0.3, I'll remove.


[12/17/2020 1:28 PM] scalahub#2618
Its similar but not exactly same: example, bank box value = reserve (instead of value - minStorageRent)


[12/17/2020 1:29 PM] scalahub#2618
apart from that its same


[12/17/2020 2:05 PM] Robert K#0722
Cool üëå


[12/19/2020 4:38 PM] scalahub#2618
I have renamed v0.2f to v0.3 (and deleted older v3)


[12/19/2020 10:45 PM] Robert K#0722
Great thanks


[12/21/2020 10:34 AM] Robert K#0722
@scalahub Just wanted to let you know that in the Slack no one is really going to understand the contracts, so I doubt you'll get some feedback


[12/21/2020 10:42 AM] scalahub#2618
no worries, it was mostly for @kushti and the others can probably give feedback on the simulation (which is not based on any implementation)


[12/21/2020 10:46 AM] Robert K#0722
Ah good point üëç


[12/21/2020 12:59 PM] kushti#0978
when do we have a call tomorrow ?


[12/21/2020 12:59 PM] kushti#0978
@Robert K @scalahub ^


[12/21/2020 1:00 PM] scalahub#2618
It should be 1 PM UTC


[12/21/2020 1:46 PM] Robert K#0722
Yep


[12/22/2020 1:00 PM] kushti#0978
knocking to https://meet.google.com/vxi-hhsy-toh @Robert K

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[12/22/2020 1:01 PM] kushti#0978
@scalahub please join


[12/22/2020 2:12 PM] Robert K#0722
@kushti @scalahub Actually let me double check with Nico to be 100% sure about the bpsaa presentation so we're all on the same page


[12/22/2020 2:47 PM] Robert K#0722
Yeah, all clear. Just want to make sure that its very tame language/privacy focused rather than anything related to not following rules/laws/...


[12/23/2020 1:12 PM] scalahub#2618
have informed @draeth of BPSAA


[12/29/2020 10:11 AM] kushti#0978
@Robert K @scalahub ADA/USD pool stuck https://explorer.ergoplatform.com/en/oracle-pool-state/adausd


[12/29/2020 6:24 PM] Robert K#0722
@kushti

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/793544920853250049/unknown.png


[12/29/2020 6:24 PM] Robert K#0722
It's just underfunded


[12/29/2020 6:24 PM] Robert K#0722
For now tbh it's fine to leave it underfunded


[12/29/2020 6:24 PM] Robert K#0722
Until right before Ergo Summit


[01/04/2021 12:31 PM] Robert K#0722
@scalahub Hey let me know when you're back working and when you have the bootstrap instructions so I can add them to the age usd repo.


[01/04/2021 5:14 PM] scalahub#2618
I'll be back tomorrow evening (before our call, if we have).. Should have the bootstrap instructions on Wednesday.. We already have some details here  https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/utxo-spec/v0.3/stablecoin-spec.md#Action-Bootstrap


[01/04/2021 5:14 PM] scalahub#2618
what additional do we need?


[01/04/2021 5:29 PM] Robert K#0722
Well you said you were working on bootstrap instructions, so I assumed you were doing the same thing as for the oracle pools


[01/04/2021 5:33 PM] scalahub#2618
No I am actually working on "stablecoin for layman" explanation


[01/04/2021 5:33 PM] scalahub#2618
but you mentioned about bootstrap in the last call so I thought I'll add it


[01/04/2021 5:34 PM] scalahub#2618
for oracle pools, there was a bootstrap module (CLI).. do we need that?


[01/04/2021 5:35 PM] scalahub#2618
since we are releasing a bootstrapped version, don't think a CLI is needed.


[01/04/2021 5:36 PM] Robert K#0722
Asking anon what he needs


[01/04/2021 5:36 PM] scalahub#2618
cool let me know and I'll add to the same document (or make separate one if needed)


[01/04/2021 5:37 PM] scalahub#2618
for anon the instructions should be enough.. please share above link


[01/04/2021 6:25 PM] kushti#0978
will we have a call tomorrow ?


[01/04/2021 6:25 PM] kushti#0978
what time?


[01/04/2021 7:34 PM] Robert K#0722
I think setting up all of the values/compiling is probably not the most straightforward but I'll see if it's enough


[01/04/2021 7:34 PM] Robert K#0722
14:00 UTC+1

{Reactions}
üëç (2) 

[01/04/2021 7:39 PM] scalahub#2618
Ok let's discuss tomorrow what else is needed for bootstrap


[01/04/2021 7:40 PM] Robert K#0722
But yeah, I would still prefer if we had instructions


[01/04/2021 7:40 PM] Robert K#0722
What use is all of the tooling if no one understands how to deploy the dApp lol


[01/04/2021 7:41 PM] Robert K#0722
We need more educational material, not more tooling/random code, and I think this is something we need to be ardent about tbh


[01/04/2021 7:44 PM] scalahub#2618
yes sure instructions is one thing and CLI is another


[01/04/2021 7:44 PM] scalahub#2618
I can write instructions on how to generate a NFT etc .. that should not take too much time but a CLI will need a bit more time


[01/04/2021 7:45 PM] scalahub#2618
lets check with anon if more detailed instructions will be sufficient


[01/04/2021 7:46 PM] scalahub#2618
In fact, we should not need to have separate instructions on "how to generate NFT", but rather refer to some wiki/generic how-to ... perhaps we can make some forum posts on such topics?


[01/04/2021 7:49 PM] scalahub#2618
would you be be able to get response from anon on what he needs?


[01/04/2021 7:49 PM] scalahub#2618
(by tomorrow's call)


[01/05/2021 9:56 AM] Robert K#0722
The point I was thinking about wasn't as much for how to generate a NFT, as much as how to configure the contracts/compile/issue the bootstrap tx assuming the user has already minted all the required tokens


[01/05/2021 9:57 AM] Robert K#0722
Because that is inherently unique to the protocol, and while clear to you, not simple to anyone who hasn't done anything like this before


[01/05/2021 9:58 AM] Robert K#0722
Minting NFTs/tokens already has ergoutils support, so that's self-evident, but say providing an example tx request json to be used with the full node for how a bootstrap would look like could be useful.


[01/05/2021 9:59 AM] Robert K#0722
Anon said it's probably sufficient, but I still think it'd be good to have some barebones instructions for compiling/bootstrapping


[01/05/2021 9:59 AM] Robert K#0722
There's a reason we have so few devs in the ecosystem, it's because no one writes material that makes it easy for them to get started/do the things which may be obvious to those of us who are building.

{Reactions}
üëç 

[01/05/2021 12:46 PM] scalahub#2618
Isn't this same as 1300 UTC üôÇ


[01/05/2021 1:02 PM] kushti#0978
https://meet.google.com/vxi-hhsy-toh ?

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[01/05/2021 1:02 PM] scalahub#2618
To join the video meeting, click this link: 
https://meet.google.com/vxi-hhsy-toh 
 
To join by phone instead, dial (PL) +48 22 163 86 55 and enter this PIN: 774 550 241#

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[01/05/2021 1:43 PM] Robert K#0722
@scalahub https://github.com/Emurgo/ergo-headless-dapp-framework/blob/main/tutorials/Math_Bounty/1-math-bounty-dApp-getting-started.md

{Embed}
https://github.com/Emurgo/ergo-headless-dapp-framework/blob/main/tutorials/Math_Bounty/1-math-bounty-dApp-getting-started.md
Emurgo/ergo-headless-dapp-framework
An easy to use framework for building Ergo headless dApps. - Emurgo/ergo-headless-dapp-framework
https://images-ext-1.discordapp.net/external/Wg0j9L8NNKGNDKW0M1atW7IGSPDmoc7C0Qda8-8lmnY/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/36142236


[01/05/2021 1:44 PM] Robert K#0722
http://sigmaverse.io/


[01/05/2021 2:10 PM] scalahub#2618
we should try to attract some Rust developers

{Reactions}
üëç 

[01/05/2021 2:59 PM] Robert K#0722
@scalahub maybe call it the JSON dApp Environment?


[01/05/2021 3:58 PM] kushti#0978
sounds good


[01/05/2021 4:11 PM] scalahub#2618
@Robert K here is example of register usage in Tx Builder
```inputs: [
{ 
     address: {value: Addr1}, 
     registers: [
    {
        name: x,
        type: Long,
        index: R4
    }
     ]
},
{
     address: {value: Addr2}, 
     registers: [
    {
        name: y,
        type: Long,
        index: R5
    }
     ]
},
{
     address: {value: Addr3}, 
     registers: [
    {
        value: x_plus_y,
        type: Long,
        index: R6
    }
     ]
}
],
binaryOps: [ 
    {name: x_plus_y, first:x, second:y, op: Add}
]```
This will match boxes if R6 of 3rd input equals R4 of first input + R5 of second input
(if the addresses match)


[01/05/2021 4:14 PM] Robert K#0722
Ah, quite interesting


[01/05/2021 4:14 PM] Robert K#0722
I imagine your current `op`s are quite limited?


[01/05/2021 4:15 PM] scalahub#2618
And we can do this and more complex stuff using post conditions
```inputs: [
{ 
     address: {value: Addr1}, 
     registers: [
    {
        name: x,
        type: Long,
        index: R4
    }
     ]
},
{
     address: {value: Addr2}, 
     registers: [
    {
        name: y,
        type: Long,
        index: R5
    }
     ]
},
{
     address: {value: Addr3}, 
     registers: [
    {
        name: z
        type: Long,
        index: R6
    }
     ]
}
],
binaryOps: [ 
    {name: x_plus_y, first:x, second:y, op: Add}
]
postConditions: [ 
    {first: x_plus_y, second:z, op: Eq}
]
```


[01/05/2021 4:15 PM] Robert K#0722
Very declarative, cool


[01/05/2021 4:16 PM] Robert K#0722
I'm guessing you meant writing a scripting languages for ops/conditions would be optimal?


[01/05/2021 4:17 PM] scalahub#2618
current supported ops
Binary: `Add, Sub, Mul, Div, Max, Min`
Unary: `Hash, Neg, Abs, Sum, Avg, Min, Max, ProveDlog, ToCollByte, ToLong, ToInt, ToAddress, ToErgoTree, Count`
Comparison: `Eq, Le, Ge, Lt, Gt, Ne `


[01/05/2021 4:18 PM] scalahub#2618
Earlier I thought that user can upload Scala code snippet but that leads to lot of security issues when running a service.. so this was a more controlled way


[01/05/2021 4:18 PM] scalahub#2618
This will give a quick overview of the supported data types and operations https://github.com/scalahub/Kiosk/blob/master/src/main/scala/kiosk/offchain/compiler/model/Enums.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/main/scala/kiosk/offchain/compiler/model/Enums.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/DAdK_RAt3sl4w2Xre1d-JjS00hkmEEtYYMon-8hHW7Y/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/23208922


[01/05/2021 4:20 PM] scalahub#2618
yes something like that.. so original goal was to allow people to post Scala snippet to server, and so the new scripting language should be more compact like scala/rust


[01/05/2021 4:30 PM] Robert K#0722
Yeah definitely a security issue


[01/05/2021 4:30 PM] Robert K#0722
Quite cool. Is there any way to provide your own inputs?


[01/05/2021 4:35 PM] scalahub#2618
yes sure, like `inputs: [{id: {value: myBoxId}]` 
or `auxInputs: [{id: {value: myBoxId}]`


[01/05/2021 4:36 PM] scalahub#2618
auxInputs are for temp use without putting in data inputs or inputs


[01/05/2021 4:36 PM] scalahub#2618
example we want to use oracle rate but not keep it as data input


[01/05/2021 4:38 PM] Robert K#0722
Nice, this looks like a good tool


[01/05/2021 4:39 PM] Robert K#0722
Just teaching people how to use any of this stuff is still going to be non-trivial


[01/05/2021 4:39 PM] Robert K#0722
Since most don't even understand UTXO lol


[01/05/2021 4:39 PM] scalahub#2618
yes maybe we need to have a session on just UTXO and Ergo's boxes to get everyone up to level


[01/05/2021 4:51 PM] scalahub#2618
This was motivated from all the manual work in oracle pool and the headless dapp framework approach


[01/05/2021 4:53 PM] scalahub#2618
Can be seen as alternative to HDF..  since HDF has the same security issue (need to pase rust source code to server)


[01/05/2021 4:55 PM] scalahub#2618
Sounds good.. let me brainstorm a bit more for anything better


[01/05/2021 4:59 PM] scalahub#2618
So other names I had earlier
Json protocol framework
Dapp builder
Ergo transaction builder
Dapp interactor


[01/05/2021 5:00 PM] scalahub#2618
Json dapp bridge


[01/05/2021 5:31 PM] Robert K#0722
Bridge overloads the Yoroi dApp Bridge which will get confusing


[01/05/2021 6:10 PM] Robert K#0722
Hmm?


[01/05/2021 6:11 PM] Robert K#0722
You don't paste the source code anywhere on a server


[01/05/2021 6:11 PM] Robert K#0722
I would recommend you read through the tutorials to understand how it works.


[01/05/2021 6:12 PM] Robert K#0722
The point is that it's in Rust so you write a Headless dApp which compiles to every target so you can even have it in your client/wallet if you so wish.


[01/05/2021 6:12 PM] Robert K#0722
I suppose for web dApps you do have to trust the dApp is using the headless dApp without editing it/compiling it to something different, but that is a lot lower trust right?


[01/05/2021 6:13 PM] scalahub#2618
I meant in server mode where you allow people to use a hosted service to create tx


[01/05/2021 6:13 PM] Robert K#0722
Right, then yeah.


[01/05/2021 6:14 PM] scalahub#2618
I.e online HDF


[01/05/2021 6:14 PM] Robert K#0722
Well the HDF will never be online, it's a dApp that implements on top of the HDF


[01/05/2021 6:14 PM] scalahub#2618
Most people I assume will prefer web based tools rather than run everything locally first time


[01/05/2021 6:15 PM] scalahub#2618
For ethereum, online solidity really helped me get familiar


[01/05/2021 6:16 PM] scalahub#2618
*browser solidity


[01/05/2021 6:17 PM] Robert K#0722
Web based tools, for dev?


[01/05/2021 6:17 PM] Robert K#0722
I mean if we have an IDE sure, but if not then I assume most people would prefer an editor if they are devs


[01/05/2021 6:18 PM] scalahub#2618
Yup, but more than ide, people prefer to just use browser


[01/05/2021 6:18 PM] Robert K#0722
If you can merge the ErgoScript Playground + this JSON dApp interactor then that could be quite good


[01/05/2021 6:18 PM] scalahub#2618
Will think on those lines.. thanks


[01/05/2021 6:19 PM] Robert K#0722
Because the biggest problem is also going from contracts -> full dApp. And so if we can unify that experience and have it be generalizable then maybe that's the path to take


[01/05/2021 6:21 PM] scalahub#2618
Ok and the workflow could be 
- use online tools to create unsigned tx
- use local node to sign above tx


[01/05/2021 6:23 PM] Robert K#0722
Right, then we'd probably need Yoroi web dApp bridge support


[01/05/2021 6:23 PM] Robert K#0722
Or else it'd probably not be worth having a web experience


[01/05/2021 6:23 PM] Robert K#0722
If you have to run a full node might as well do it all on desktop


[01/05/2021 6:27 PM] scalahub#2618
yes true, once they are fully inducted üôÇ


[01/05/2021 6:28 PM] scalahub#2618
but to get started web based tools will be useful


[01/05/2021 6:28 PM] scalahub#2618
not sure if it makes sense for Yoroi though


[01/05/2021 6:29 PM] Robert K#0722
I still think we need less tools and just really good instructions


[01/05/2021 6:29 PM] Robert K#0722
Tools are shiny, instructions help people actually build stuff


[01/05/2021 6:30 PM] Robert K#0722
And show them how to do a lot of different things so they have the ability to build


[01/05/2021 6:30 PM] scalahub#2618
yes both actually but we have enough tools now


[01/05/2021 6:33 PM] scalahub#2618
so right now if someone wants to play with ergo, this will need to download a node, sync it, etc. which is a hassle.. 
A better way for someone would be to visit some website and play with ergo there (like ergo playground, urlwallet or kioskweb.org)


[01/05/2021 6:34 PM] scalahub#2618
hopefully the video tutorials will be helpful for newcomers

{Reactions}
‚ù§Ô∏è (2) 

[01/09/2021 2:06 PM] scalahub#2618
There is a vulnerability in the update contract 
https://github.com/Emurgo/stablecoin-project/blob/9ac45f54f8f60a8aefe88a87a6971385ee4bae6e/ergo-stablecoin/src/main/scala/stablecoin/v2/Contracts.scala#L156

Currently in the vote collection path, we have:
` validOut && voteAccepted`
This does not prevent the bank box from being spent in this path. 

To prevent this, we should instead have 
` validOut && voteAccepted && INPUTS.forall(_.tokens(2)._1 != bankNFT) // ensure that bank box cannot be spent in vote collection path`

There are other approaches as well that don't need forall, such as
- in update path, require update box to be second input (and bank box to be first)
- in vote collection path require update box to be first input. 
Then spending bank box in vote collection is not possible because bank box must be always first input (even in update scenarios)


[01/09/2021 2:07 PM] scalahub#2618
@kushti @Robert K


[01/09/2021 5:50 PM] scalahub#2618
Actually latter approach is not possible due to the not-so-lazy-evaluation. The contracts expects R4 of first input/output to be Coll[Byte].. I recall that was the reason we had to keep the bank as the 2nd input/output


[01/09/2021 6:07 PM] scalahub#2618
For now fixed the bug by adding the line `&& CONTEXT.dataInputs.size == 0` in the bank-box update path. This ensures that vote collection cannot be used to spend the bank box
https://github.com/Emurgo/stablecoin-project/blob/69536d4a536eb2d59868fb3d87a6413f6b4f2e91/ergo-stablecoin/src/main/scala/stablecoin/v4/Contracts.scala#L136


[01/09/2021 11:17 PM] Robert K#0722
Ah, very good point. Great find.


[01/10/2021 2:20 AM] scalahub#2618
my first two presentations at this url https://drive.google.com/drive/folders/1Q0JMsSYsCDat_9cC9HaiaaNj7f9jZaTh?usp=sharing


[01/10/2021 2:20 AM] scalahub#2618
will add the other two soon

{Reactions}
üëç 

[01/10/2021 3:16 PM] Robert K#0722
Awesome thanks.


[01/10/2021 3:17 PM] Robert K#0722
@kushti Have you made any progress recording videos for the summit?


[01/10/2021 4:36 PM] Dmitry Usov#0134
@scalahub for stablecoin: very tech :DD need some memes üòÑ


[01/10/2021 4:46 PM] Dmitry Usov#0134
guys, what is our goal for stablecoin dApp?


[01/10/2021 6:47 PM] kushti#0978
Nope, spent a lot of time on polishing and testing 4.0, doing slides still (


[01/10/2021 7:59 PM] scalahub#2618
added video about kiosk with slides. 
Tx builder (Json Dapp framework/env). will need a bit more time


[01/10/2021 8:27 PM] Dmitry Usov#0134
I start also working at the stablecoin dapp, if I have questions, will ask to you guys here. 

I think the site structure is:
1. Landing with info and link for the list of the current stablecoins. For now it can redirect for ageusd dashboard.
2. Dashboard with current stablecoins/reservecoins at the address, address profit for current quantity of reservecoins, history, circulating
3. Minting stablecoins/reservecoins, with current price in ergo for mint reserve/stablecoins
4. Redeem stablecoins/reservecoins, with current price in ergo for redeem reservecoins/stablecoins

{Reactions}
‚ù§Ô∏è (2) 

[01/10/2021 8:29 PM] Dmitry Usov#0134
If you can provide feedback, what need to display at each page, or you think need to change this structure, it will be cool!


[01/10/2021 8:32 PM] Dmitry Usov#0134
Maybe you have another vision of the stablecoin dapp in your head, please say me here. 
I need more info for develop design. No one except you, guys, can help me. Let's make a coolest dapp


[01/11/2021 8:18 AM] Robert K#0722
@kushti Is the plan to create a 2nd Stablecoin dApp UI and not use the one anon created?


[01/11/2021 8:19 AM] Robert K#0722
Or are we just creating a landing page as well on top?


[01/11/2021 8:19 AM] Robert K#0722
I'm kind of confused about @Dmitry Usov working on a UI and anon as well


[01/11/2021 8:19 AM] Dmitry Usov#0134
We work together


[01/11/2021 8:20 AM] Dmitry Usov#0134
I help with design/ui/ux, and maybe if anon will want, can help with develop


[01/11/2021 10:54 AM] Robert K#0722
Okay cool, sounds good.


[01/11/2021 10:55 AM] Robert K#0722
So should we create a group to talk about stablecoin UI/site design with anon?


[01/11/2021 11:26 AM] Dmitry Usov#0134
Let me add you to our group with kushti and anon


[01/12/2021 1:01 PM] kushti#0978
do we have a call now @Robert K @scalahub


[01/12/2021 1:03 PM] Robert K#0722
Yes https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[01/12/2021 1:03 PM] Robert K#0722
@kushti


[01/16/2021 3:43 PM] scalahub#2618
@Robert K @kushti my update for summit.. two tasks in progress
- Stablecoin bootstrap module.. made of two components. (ETA Monday)
    1. Address gen (ErgoScript CLI done, to do: add documentation)
    2. Bootstrap tx (in prgress)
        
- JDE (aka Tx Builder) talk (ETA Sunday)
    Presentation in progress
    Going to record my talk tomorrow (will be around 20 mins)

{Reactions}
üëç (2) ‚ù§Ô∏è 

[01/18/2021 12:48 AM] scalahub#2618
@Robert K Uploaded my 4th talk titled "JSON dApp Environment" (about 34 mins) along with the pdf of slides to Google drive
https://drive.google.com/drive/folders/1Q0JMsSYsCDat_9cC9HaiaaNj7f9jZaTh


[01/18/2021 8:25 AM] greenhat#6562
Hey! Can I get the latest version of the stablecoin contracts (needed to be signed in sigma-rust)? I'm focusing on missing IR nodes implementation and tracking my progress in https://github.com/ergoplatform/sigma-rust/issues/117

{Embed}
https://github.com/ergoplatform/sigma-rust/issues/117
Implement IR nodes needed the most ¬∑ Issue #117 ¬∑ ergoplatform/sigm...
The following IR nodes should be implemented in the interpreter first: SELF #143 OUTPUTS #143 CONTEXT.dataInputs #143 register access (ExtractRegisterAs) #157 Option.get #149 arithmetic ops (plus, ...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[01/18/2021 10:41 AM] Robert K#0722
@greenhat

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/800676230864306186/AgeUSDcontracts.scala

{Reactions}
üôè 

[01/19/2021 12:49 PM] kushti#0978
The call is in 10 minutes? @scalahub @Robert K


[01/19/2021 1:02 PM] Robert K#0722
https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[01/19/2021 1:03 PM] Robert K#0722
@scalahub


[01/22/2021 7:36 PM] scalahub#2618
@Robert K @kushti document for TxBuilder (JDE) https://github.com/scalahub/Kiosk/blob/master/src/main/scala/kiosk/offchain/readme.md
Please use this for reference in the talks. Let me know if anything more is needed..

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/main/scala/kiosk/offchain/readme.md
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[01/22/2021 7:44 PM] Robert K#0722
Nice


[01/22/2021 7:45 PM] Robert K#0722
Why not have a new repo? No one is going to find this so deeply embedded in a number of folders


[01/22/2021 7:45 PM] Robert K#0722
Going to look a lot more interesting to people if it's a "brand new project" too.


[01/22/2021 8:16 PM] scalahub#2618
will look at it but will need a little more time.. We can update links once its ready


[01/23/2021 6:47 AM] scalahub#2618
@Robert K Draeth (from bpsaa) got back to me just now about a talk (its actually a mp3). Please see if its possible to include it.. I told that its quite late so not to keep hopes up of it being included


[01/23/2021 6:48 AM] scalahub#2618
uploading the mp3


[01/23/2021 6:48 AM] scalahub#2618
https://cdn.discordapp.com/attachments/692117000972927096/802426812957327360/BPSAA_-_Ergo_Summit.mp3 are you able to access?


[01/23/2021 6:55 AM] kushti#0978
I guess it is late (((


[01/23/2021 6:56 AM] kushti#0978
let's upload as b-side


[01/23/2021 6:56 AM] kushti#0978
maybe


[01/23/2021 9:29 AM] Robert K#0722
Ah it's way too late


[01/23/2021 9:30 AM] Robert K#0722
We're mere hours away from the event, and rendering literally takes 12 hour or so for Sakatas computer


[01/23/2021 9:31 AM] Robert K#0722
Yeah, maybe after the event we can release it the next day or something on the yt channel. Need to listen to see the context


[01/26/2021 10:33 AM] kushti#0978
Will we have a call today ? 1 PM UTC ?


[01/26/2021 10:36 AM] Robert K#0722
Yeah, will be good to catch up on latest events


[01/26/2021 2:04 PM] Robert K#0722
https://github.com/Emurgo/yoroi-ergo-connector

{Embed}
https://github.com/Emurgo/yoroi-ergo-connector
Emurgo/yoroi-ergo-connector
Experimental Connector extension to enable communicaiton between Ergo dApps and the Yoroi Frontend Extension - Emurgo/yoroi-ergo-connector
https://images-ext-2.discordapp.net/external/xHAk_ziRPnkEG9RreCwow25rgpXAukdgRa4kd6p1WIY/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/36142236


[01/26/2021 2:05 PM] scalahub#2618
https://github.com/scalahub/JDE

{Embed}
https://github.com/scalahub/JDE
scalahub/JDE
Contribute to scalahub/JDE development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[01/26/2021 9:42 PM] Robert K#0722
@kushti the connector can be found here actually: https://github.com/Emurgo/yoroi-frontend/tree/ergo-connector/yoroi-ergo-connector

{Embed}
https://github.com/Emurgo/yoroi-frontend/tree/ergo-connector/yoroi-ergo-connector
Emurgo/yoroi-frontend
Yoroi Wallet - Cardano ADA Wallet - Your gateway to the financial world (extension frontend) - Emurgo/yoroi-frontend
https://images-ext-2.discordapp.net/external/1e-t5s_ozw_GZmUTfYYzwoz8bRKHKNjtEbS_wtELy0o/https/repository-images.githubusercontent.com/144911693/91963f00-7e7f-11e9-9385-4f7404177cf6


[01/26/2021 10:04 PM] kushti#0978
@Robert K thanks!


[01/27/2021 2:59 PM] scalahub#2618
@kushti @Robert K I'm down with flu since today morning.. so mostly going to be out of action today/tomorrow


[01/27/2021 3:00 PM] scalahub#2618
(just common cold. looks like)


[01/27/2021 8:36 PM] kushti#0978
@scalahub sad news, take care!


[01/28/2021 3:00 AM] scalahub#2618
@Robert K @kushti as I guessed update is not so easy. If I keep update box at index 0, it fails because the epochPrep box expects OUTPUTS(0).R4 to be Long, while update expects it to be Coll[Byte]. even though they are in different spending paths, so we cannot directly reuse the AgeUSD update mechanism.. need to tweak it


[01/28/2021 3:16 AM] scalahub#2618
Trying to tweak contract so that I can keep the update as 2nd box


[01/28/2021 3:29 AM] scalahub#2618
Managed to tweak the contracts so it works as 2nd input (in the case of stablecoin, we had some issue that prevented this which thankfully is not here)
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPool.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Reactions}
üëç 

[01/28/2021 3:31 AM] scalahub#2618
I've tested this with mocks so please go through the contracts to verify that the tweaks don't cause any issue (check the epochPrep and update scripts)


[01/28/2021 3:32 AM] scalahub#2618
let me know how to proceed with deployment.. meantime I'll start on stablecoin bootstrap


[01/28/2021 5:11 AM] scalahub#2618
@greenhat please have a look at the contracts as well


[01/28/2021 7:10 AM] greenhat#6562
@scalahub looks good. Nothing caught my eye. Although I need much more time to get full understanding what they are doing.


[01/28/2021 9:31 AM] Robert K#0722
Taking a look now


[01/28/2021 9:32 AM] Robert K#0722
Thanks for getting to this quickly


[01/28/2021 9:41 AM] Robert K#0722
@scalahub One improvement I think should be to enforce the output epoch prep box to preserve R5


[01/28/2021 9:41 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/804285025314537502/unknown.png


[01/28/2021 9:41 AM] Robert K#0722
So same thing as this line https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPool.scala#L240

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[01/28/2021 9:42 AM] Robert K#0722
Because technically it looks like whoever issues the update transaction can set R5 to whatever they want which isn't great


[01/28/2021 9:45 AM] Robert K#0722
Otherwise the contract looks good


[01/28/2021 1:19 PM] scalahub#2618
good catch... I guess I removed it during debugging


[01/28/2021 1:21 PM] scalahub#2618
fixed and pushed


[01/28/2021 1:23 PM] Robert K#0722
So are the contracts good to go? As in can I add these new ones to the oracle core repo?


[01/28/2021 1:23 PM] Robert K#0722
Or should we wait another day or so to check them over


[01/28/2021 2:16 PM] scalahub#2618
Lets wait a day.


[01/29/2021 1:26 PM] scalahub#2618
you can release the new code for oracle. what about bootstrap and existing oracle funds?


[01/29/2021 3:17 PM] Robert K#0722
I presume you can take charge for bootstrapping? You still have most of it setup right?


[01/29/2021 3:17 PM] Robert K#0722
Existing oracle funds is a question indeed.


[01/30/2021 3:20 AM] scalahub#2618
yes I'll do the bootstrap.. Will use the addresses already known.


[01/30/2021 3:20 AM] scalahub#2618
(for the operators; and let me know the new ones)


[01/30/2021 9:29 AM] Robert K#0722
@kushti So are the anons joining the pool? You mentioned something about this


[01/30/2021 3:44 PM] scalahub#2618
@Robert K do you have the schema/sample of an unsigned tx that JDE is supposed to output?


[01/30/2021 6:41 PM] Robert K#0722
JSON is the go-to currently


[01/30/2021 6:42 PM] Robert K#0722
For signing with the HDF we generally use the full node (until now with tx assembler for ageusd) and so the signing endpoint in  swagger should have an example


[01/30/2021 7:40 PM] scalahub#2618
also can you point me to the link to tx assembler script?


[02/01/2021 2:44 AM] scalahub#2618
Will be doing some code refactoring of Kiosk, etc (separate core from frontend) and then release JDE..


[02/01/2021 2:45 AM] scalahub#2618
(will be releasing the AgeUSD bootstrap instructions later today)


[02/01/2021 7:06 AM] scalahub#2618
Added AgeUSD bootstrap instructions https://github.com/scalahub/ErgoScriptCompiler/blob/main/AgeUSD-bootstrap.md

{Embed}
https://github.com/scalahub/ErgoScriptCompiler/blob/main/AgeUSD-bootstrap.md
scalahub/ErgoScriptCompiler
ErgoScript compiler CLI. Contribute to scalahub/ErgoScriptCompiler development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/01/2021 7:26 AM] scalahub#2618
@Robert K @kushti you had shared the proxy script code somewhere .. can't find it.. can you point me to the link>


[02/01/2021 9:40 AM] Robert K#0722
@scalahub * Minting: 
```
{
  val properMinting = {
    val myOut = OUTPUTS(1)
    myOut.propositionBytes == fromBase64("$userAddress") &&
      myOut.tokens(0)._1 == fromBase64("$scTokenId") &&
      myOut.tokens(0)._2 == $scAmountL && HEIGHT < $timestampL
  }
  val returnFunds = {
    val total = INPUTS.fold(0L, {(x:Long, b:Box) => x + b.value}) - 4000000
    OUTPUTS(0).value >= total && OUTPUTS(0).propositionBytes == fromBase64("$userAddress")
  }
  sigmaProp(properMinting || returnFunds)
}
```

* Redeeming
```
{
  val scTokenId = fromBase64("$scTokenId")
  val properRedeeming = {
    val myOut = OUTPUTS(1)
    myOut.propositionBytes == fromBase64("$userAddress") &&
      myOut.value >= $redeemAmountL && HEIGHT < $timestampL
  }
  val returnFunds = {
    val total = INPUTS.fold(0L, {(x:Long, b:Box) => x + b.value}) - 4000000
    val totalInSc = INPUTS.fold(0L, {(x:Long, b:Box) => {
      val tok = b.tokens.getOrElse(0, (scTokenId, 0L))
      if (tok._1 == scTokenId) tok._2
      else 0L
    }})
    val tok = OUTPUTS(0).tokens.getOrElse(0, (scTokenId, 0L))
    OUTPUTS(0).value >= total && OUTPUTS(0).propositionBytes == fromBase64("$userAddress") &&
      tok._1 == scTokenId && tok._2 == totalInSc
  }
  sigmaProp(properRedeeming || returnFunds)
}
```

{Reactions}
üëç 

[02/02/2021 11:35 AM] kushti#0978
@Robert K @scalahub can we move the call? It seems the fork will be around 1PM UTC , and a lot of things to check around that


[02/02/2021 11:40 AM] Robert K#0722
Yeah sure, do you want a different day or a few hours later @kushti ?


[02/02/2021 12:06 PM] kushti#0978
@Robert K maybe 1PM UTC is okay if call will be quick enough as the fork will be more like around 2PM it seems


[02/02/2021 12:33 PM] Robert K#0722
Cool


[02/02/2021 12:33 PM] Robert K#0722
Not too much to talk about probably so should be short


[02/02/2021 12:38 PM] kushti#0978
good


[02/02/2021 6:58 PM] kushti#0978
@Robert K @Dmitry Usov UI is broken


[02/02/2021 6:58 PM] kushti#0978
https://explorer.ergoplatform.com/en/oracle-pool-state/ergusd


[02/02/2021 6:59 PM] Dmitry Usov#0134


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/806237274882310184/unknown.png


[02/02/2021 6:59 PM] Dmitry Usov#0134
pool funded = 0


[02/02/2021 7:04 PM] Dmitry Usov#0134
@kushti I will fund, can you also put some ergs to it ? zLSQDVBaHb3fokB31Fv5jdpRdGAbnkNgsFas3BrADM1XBFqfZjGNAh7K94gRRdyjcRtq6B9tGKRkThczZR5vtYzAD5TTdML2bpBmpdZqkGVb6kSj1wH8JEiqx1L54GcU9CtFRdN64B1sccA41DR3t1uYJh3BBCDcBiZyVFqMF3MenohN5gt8JTMcUzwzDjCUbtmt2MULpUDZvNPgnwFmFQTAqEHKEkunaKZPHs8WsnMJzhXHbU


[02/02/2021 7:11 PM] kushti#0978
@Dmitry Usov sent


[02/02/2021 7:11 PM] kushti#0978
but the same for https://explorer.ergoplatform.com/en/oracle-pool-state/adausd ?


[02/02/2021 7:11 PM] kushti#0978
maybe fork-related ?


[02/02/2021 7:12 PM] kushti#0978
@Robert K ^


[02/02/2021 7:12 PM] Dmitry Usov#0134
yes, seems problem is exists


[02/02/2021 7:41 PM] Robert K#0722
It might be the node that is tied to the frontend


[02/02/2021 7:41 PM] Robert K#0722
I'll ping marek


[02/02/2021 7:45 PM] Robert K#0722
He is rescanning the node which the frontend relies on


[02/02/2021 7:45 PM] Robert K#0722
And it's going slowly


[02/02/2021 7:45 PM] Robert K#0722
So until the rescan finishes the frontend shows 0s and is broken


[02/02/2021 9:08 PM] kushti#0978
ok


[02/02/2021 10:43 PM] kushti#0978
fixed!

{Reactions}
üëç 

[02/03/2021 10:38 PM] scalahub#2618
@kushti seems there is a bug in node when issuing tokens
This is the request
```{
  "requests": [
    {
      "address": "9fcrXXaJgrGKC8iu98Y2spstDDxNccXSR9QjbfTvtuv7vJ3NQLk",
      "amount": 12,
      "name": "BAL",
      "description": "Oracle core update ballot token",
      "decimals": 0
    }
  ],
  "fee":3000000
}```


[02/03/2021 10:39 PM] scalahub#2618
The response is attached

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/806655053506019328/message.txt


[02/03/2021 10:39 PM] scalahub#2618
The issued token id is not the first input box id


[02/03/2021 10:40 PM] scalahub#2618
btw bootstrapping oracle pool is little delayed due to hardfork.. all tx taking a while to confirm @Robert K


[02/03/2021 10:55 PM] kushti#0978
@scalahub 
"outputs": [
    {
      "boxId": "347b76b2f0317e26b6223590c7645280beff2e0347f59130581eec181c4cd5ef",
      "value": 57240,
      "ergoTree": "0008cd0290d9bbac88042a69660b263b4afc29a2084a0ffce4665de89211846d42bb30e4",
      "assets": [
        {
          "tokenId": "00483e0ed4a9faba9f6e6c9629d9baca9751316639445ff6ecabd90fb2afa025",
          "amount": 12
        }
      ],
      "creationHeight": 417981,
      "additionalRegisters": {
        "R4": "0e0342414c",
        "R5": "0e1f4f7261636c6520636f7265207570646174652062616c6c6f7420746f6b656e",
        "R6": "0e0130"
      },
      "transactionId": "42a642b0ed289549fb6aef27e1503c1133adbd10006433fe01caf66aaf6b828e",
      "index": 0
    },


[02/03/2021 10:55 PM] kushti#0978
looks good to me


[02/03/2021 10:56 PM] scalahub#2618
token id is 00483e0ed4a9faba9f6e6c9629d9baca9751316639445ff6ecabd90fb2afa025


[02/03/2021 10:56 PM] scalahub#2618
but first input box id is 004b2ca8adbcf9f15c1149fab8264dbcafbdd3c784bb4fae7ee549c16774914b


[02/03/2021 10:57 PM] scalahub#2618
I had already made a previous request to issue token.. this one 
https://explorer.ergoplatform.com/en/transactions/611406f98b7a9c651398f9a08550b1a35f6a881eb26db6069ba939a9b96880c4
But its reusing the same box here


[02/03/2021 10:57 PM] kushti#0978
oh  I see


[02/03/2021 10:57 PM] kushti#0978
Can you please do a GH issue ?


[02/03/2021 10:58 PM] scalahub#2618
yup I'll do shortly


[02/03/2021 10:58 PM] kushti#0978
with the data


[02/03/2021 10:58 PM] scalahub#2618
just wanted to check first if I missed something


[02/03/2021 10:58 PM] kushti#0978
will check & fix tomorrow


[02/03/2021 10:59 PM] kushti#0978
oh so you have another issuance transactions in the mempool ?


[02/03/2021 10:59 PM] kushti#0978
likely an issue


[02/03/2021 10:59 PM] kushti#0978
issuance tx builder does not consider mempool


[02/03/2021 11:04 PM] scalahub#2618
yes but still it should use correct box id? (whatever is issued should correspond to first box id)


[02/03/2021 11:09 PM] scalahub#2618
@kushti I've created an issue anyway https://github.com/ergoplatform/ergo/issues/1283  please check if critical.. maybe can put it low priority

{Embed}
https://github.com/ergoplatform/ergo/issues/1283
Token issuance incorrectly uses token id of an earlier issued token...
I think its easier to explain using an example: I made a token issue request as follows: { &quot;requests&quot;: [ { &quot;address&quot;: &quot;9fcrXXaJgrGKC8iu98Y2spstDDxNccXSR...
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[02/03/2021 11:52 PM] scalahub#2618
@Robert K issued the tokens and updated v5 with new addresses which I'll be using for bootstrapping oracle core
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPoolLive.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPoolLive.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/03/2021 11:53 PM] scalahub#2618
addresses are here
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPoolLiveAddressSpec.scala#L31-L38

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v5/EpochPoolLiveAddressSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/04/2021 9:35 AM] Robert K#0722
Cool, will update the parameters in the oracle core in an hour or two


[02/04/2021 11:28 AM] Robert K#0722
@scalahub Have you deployed/testing update mechanism yet?


[02/04/2021 11:28 AM] Robert K#0722
Probably makes sense to do that first before migrating everyone over to the new pool.


[02/04/2021 11:30 AM] Robert K#0722
The erg-usd config file has been updated in the repo so once we test updating the protocol then we can get everyone to jump over to it


[02/04/2021 2:12 PM] scalahub#2618
Yes I'll be bootstrapping the pool today... Will test update after' that.


[02/04/2021 10:22 PM] scalahub#2618
Here is the bootstrap tx https://explorer.ergoplatform.com/en/transactions/5b6a889732ec0874e5f5b8b430f305b2a383af20f00eaf18ddedfdc0532b15b3
1st is pool box, 2nd is update, 3rd onwards are oracle boxes
Update not yet tested


[02/05/2021 1:22 AM] scalahub#2618
Have tested update.
This is the update tx https://explorer.ergoplatform.com/en/transactions/d8730448350ef9513cff3432baf444315743be2cabb1f849ba76f8666ca60d07
Updated contracts are in v6. This file shows what exactly was updated
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v6/OraclePoolLive.scala#L7-L10

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v6/OraclePoolLive.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/05/2021 7:39 AM] scalahub#2618
(also tested voting and collection in the process)


[02/05/2021 9:03 AM] Robert K#0722
Awesome


[02/05/2021 9:03 AM] Robert K#0722
Can you update the protocol back to the previous parameters? @scalahub


[02/05/2021 9:04 AM] Robert K#0722
Good to see it works.


[02/06/2021 12:29 AM] scalahub#2618
will do over weekend


[02/06/2021 2:33 AM] scalahub#2618
have update JDE repo with initial version, i.e., CLI..
https://github.com/scalahub/jde

{Embed}
https://github.com/scalahub/jde
scalahub/jde
Contribute to scalahub/jde development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/08/2021 12:43 AM] scalahub#2618
done https://explorer.ergoplatform.com/en/transactions/9f18b2353dd2a0ca2fb63a64ac4068d317e8b18d5155d4421967ddc24f60653f

{Reactions}
üëç 

[02/09/2021 6:44 AM] scalahub#2618
Probably in next iteration we can combine collect votes and update bank into single collect-and-update step


[02/09/2021 1:02 PM] Robert K#0722
@scalahub


[02/09/2021 1:27 PM] scalahub#2618
https://github.com/scalahub/jde/blob/main/src/test/resources/AgeUSD/redeemReserveCoin.json

{Embed}
https://github.com/scalahub/jde/blob/main/src/test/resources/AgeUSD/redeemReserveCoin.json
scalahub/jde
Contribute to scalahub/jde development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/09/2021 1:42 PM] scalahub#2618
@Robert K the usecase about loops in JDE, can you elaborate a bit (maybe we can do without it)


[02/09/2021 1:56 PM] Robert K#0722
How many reservecoins can you mint without going over the max reserve ratio.


[02/09/2021 1:57 PM] Robert K#0722
Simplest way to figure that out is to loop through increasing the circ reservecoins and then calculating the reserve ratio at that point, and checking if it is above max.


[02/09/2021 1:57 PM] Robert K#0722
You can simplify that down to an equation as well if you want to do it via math rather than bruteforce computation, but that is an example nonetheless.


[02/15/2021 4:38 PM] scalahub#2618
Added web-service api to JDE and deployed a demo instance at http://jde.kioskweb.org/
To test, issue the following command
`curl --data @getStableCoinRate.json http://jde.kioskweb.org/compile`

keeping the attached file in the same folder

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/810913044929970186/getStableCoinRate.json


[02/15/2021 4:40 PM] scalahub#2618
This is what it should output
```curl --data @getStableCoinRate.json http://jde.kioskweb.org/compile

{
  "dataInputBoxIds" : [ "89fd78a41dd8b8b342c8d0f1cbc8a6f7e6d29567af39404e0bf845cfe712f32c" ],
  "inputBoxIds" : [ "46c6b28fa2d5e13f7625e4f76b1e303346cd26ad6548cd2fb81403cee118c7d6" ],
  "inputNanoErgs" : 95320527948,
  "inputTokens" : [ [ "b240daba6b5f9f9b6d4e6d7fc8b7c0423f1dfa28a883ec626a18b69be6c7590e", 9999999938338 ], [ "a908bf2be7e199014b45e421dc4adb846d8de95e37da87c7f97ac6fb8e863fa2", 9999999998868 ], [ "7bd873b8a886daa7a8bfacdad11d36aeee36c248aaf5779bcd8d41a13e4c1604", 1 ] ],
  "outputs" : [ ],
  "returned" : [ {
    "name" : "scTokenIn",
    "value" : "9999999998868"
  }, {
    "name" : "rcTokenIn",
    "value" : "9999999938338"
  }, {
    "name" : "scCircIn",
    "value" : "1132"
  }, {
    "name" : "rcCircIn",
    "value" : "61662"
  }, {
    "name" : "bcReserveIn",
    "value" : "95320527948"
  }, {
    "name" : "scCircDelta",
    "value" : "10"
  }, {
    "name" : "bcDeltaWithFee",
    "value" : "49268284"
  }, {
    "name" : "scNominalPrice",
    "value" : "4878048"
  }, {
    "name" : "rate",
    "value" : "4878048"
  } ]
}```


[02/15/2021 4:40 PM] scalahub#2618
Ignore the first part and look at the `returned` field, which contains the information needed


[02/15/2021 5:42 PM] Robert K#0722
Nice pretty cool!


[02/15/2021 11:28 PM] scalahub#2618
Will be adding some documentation shortly. In short, there is a "returns" field in the JSON that tells what variables to return,
https://github.com/scalahub/jde/blob/743e6fc62f20e43b49eb01fb0b7645cfbb0c376e/src/test/resources/AgeUSD/exchange/getStableCoinRate.json#L252-L262

{Embed}
https://github.com/scalahub/jde/blob/743e6fc62f20e43b49eb01fb0b7645cfbb0c376e/src/test/resources/AgeUSD/exchange/getStableCoinRate.json
scalahub/jde
Contribute to scalahub/jde development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[02/16/2021 12:59 PM] kushti#0978
call link @Robert K @scalahub ?


[02/16/2021 12:59 PM] Robert K#0722
https://meet.google.com/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[02/16/2021 12:59 PM] scalahub#2618
To join the video meeting, click this link: 
https://meet.google.com/vxi-hhsy-toh 
 
To join by phone instead, dial (PL) +48 22 163 86 55 and enter this PIN: 774 550 241# 
More numbers: https://t.meet/vxi-hhsy-toh

{Embed}
https://meet.google.com/vxi-hhsy-toh
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png

{Embed}
https://t.meet/vxi-hhsy-toh
Join this video meeting
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
https://images-ext-1.discordapp.net/external/GCEsHEuoDTlzmJI_A4QfZk7rhbRzgKpjyZ2wWn9VqrM/https/fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png


[02/23/2021 1:02 PM] Robert K#0722
@scalahub


[02/23/2021 3:44 PM] scalahub#2618
https://www.ergoforum.org/t/updatable-oracle-pool-contract/707?u=scalahub

{Embed}
https://www.ergoforum.org/t/updatable-oracle-pool-contract/707?u=scalahub
Updatable Oracle Pool Contract
Recently a new version of the ERG-USD Oracle-Pool was launched. The only difference from the earlier one is that this version has an updatable contract.  What is an Updatable Contract? Recall that Ergo has the concept of ‚Äúcontractual money‚Äù, which implies to Ergs (primary assets) and tokens (secondary assets) on the Ergo blockchain. Contractual ...

{Reactions}
üëç (2) 

[02/23/2021 4:44 PM] Robert K#0722
Can you share that in the Ergonauts telegram too so that it can be shared on social media


[02/24/2021 8:41 AM] Robert K#0722
@kushti and anyone else who is wondering, Yoroi will be showing more characters for the token name in a coming version which will improve the interface for tokens

{Reactions}
üòç (2) 

[02/24/2021 9:33 AM] kushti#0978
@Robert K good news!


[02/24/2021 9:54 AM] Robert K#0722
It's been deployed


[02/24/2021 9:54 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/814072714548609074/unknown.png


[02/24/2021 9:55 AM] Robert K#0722
So now we have up to 20 characters before it shortens


[02/24/2021 9:56 AM] Robert K#0722
It's already in the latest version of Yoroi, so everyone should have access if they update their extensions


[02/25/2021 7:22 AM] scalahub#2618
Didn;t get a chance to bootstrap new oracle yet.. got tied up in some family business .... will do it by eod


[02/25/2021 7:23 AM] scalahub#2618
same about sending voting tokens


[02/25/2021 7:23 AM] scalahub#2618
also here is the address of anon_real


[02/25/2021 7:23 AM] scalahub#2618
anon_real23/02/2021
Hey!
Kushti told me to get oracle participant token from you.
24 February 2021

scalahubYesterday at 03:45
hey can you send your node address..

anon_realYesterday at 16:53
9escCR6kGHYg5HcJU4fECdueZSWSZhvy3S9AvfDTYBxqfPzRuUm


[02/25/2021 9:14 AM] Robert K#0722
Updated the list of addresses in telegram now


[02/25/2021 9:15 AM] Robert K#0722
@scalahub New oracle address list is:

Robert: `9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF`
Marek: `9hD4D5rAcTyMuw7eVSENfRBmdCZiz3cwmW8xSnoEvZ1H64rFGMn`
Psychomb: `9fckoJSnYpR38EkCzintbJoKaDwWN86wCmNdByiWyeQ22Hq5Sbj`
Emurgo: `9hi3xmKtKf3FVwt9jTiXQsrjMjjtzKzTNCsBUrVMKA2xcYMsvyc`
Alex: `9eh9WDsRAsujyFx4x7YeSoxrLCqmhuQihDwgsWVqEuXte7QJRCU`
Markus: `9fWLaZJbnDA4d7wFopjJasj8SdBkKpzGFAxg92mudVp2uZsRMra`
Amitabh:
`9hkGU5MLBwRtGuuxJ5ZXBWcGF5SaK14Vt5b49u6yHjhxasmQ6w2`
Denys:
`9fQHnth8J6BgVNs9BQjxj5s4e5JGCjiH4fYTBA52ZWrMh6hz2si`
Andrey:
`9em1ShUCkTa43fALGgzwKQ5znuXY2dMnnfHqq4bX3wSWytH11t7`
anon_real:
`9escCR6kGHYg5HcJU4fECdueZSWSZhvy3S9AvfDTYBxqfPzRuUm`
Moein: `9iDs7k9At2SEwAqNQJaSS2CrR6n9ijSg9rMchSCzRqgTHMVPRUk`


[03/01/2021 10:04 AM] kushti#0978
let's have a call today maybe on the current state of the stablecoin @Robert K @scalahub


[03/01/2021 10:20 AM] Robert K#0722
Can we push it to tommorow for our regular weekly meeting? I have a lot to do today.


[03/01/2021 10:20 AM] Robert K#0722
Maybe you and Amitabh can talk today though if you want to asap


[03/01/2021 10:30 AM] kushti#0978
@Robert K the guy is attacking right now


[03/01/2021 10:35 AM] Robert K#0722
So what are we supposed to do?


[03/01/2021 10:36 AM] Robert K#0722
I don't see any solutions no matter what we come up with. And this was always an obvious possibility given the low marketcap and the thin orderbooks in exchanges.


[03/01/2021 10:37 AM] Robert K#0722
Anything that relies on going short/long (or collateralizing and asset) with another asset that is easy to manipulate will have issues.


[03/01/2021 10:37 AM] Robert K#0722
At least we don't have liquidations or else hell would break loose very quickly, but yes they are being attacked.


[03/01/2021 10:40 AM] Robert K#0722
I have a lot of other responsibilities I need to deal with today, and I already spent like 90% of the previous week working and I just don't have the mental or time resources to jump and focus on everything.


[03/01/2021 10:43 AM] Robert K#0722
Tbh it's in the whales best interest for him not to be extremely stupid and keep this up and crash the Erg price and make their bags worth a lot less and cause a lot of fear in users.


[03/01/2021 10:43 AM] Robert K#0722
But that is definitely not a guarantee


[03/01/2021 1:25 PM] scalahub#2618
Yes let's have tomorrow at regular time.. but I'm around now if @kushti wants..


[03/01/2021 1:39 PM] scalahub#2618
@kushti what immediate solution do you suggest? I agree that modifying the oracle will be best..Would we need to modify the smart contract or just the offchain part?


[03/01/2021 1:40 PM] scalahub#2618
If we can use randomness from block headers to get the next epoch end that will be great


[03/01/2021 1:57 PM] kushti#0978
I think we need to inform public in the first place.


[03/01/2021 1:57 PM] kushti#0978
On oracles, let's discuss


[03/01/2021 1:58 PM] kushti#0978
And the problem is not about low marketcap or orderbooks definitely.


[03/01/2021 1:58 PM] kushti#0978
Attacker is just jumping on in the middle of oracle epoch when datapoints posted, if price is going to fall for more than 2%.


[03/01/2021 1:59 PM] kushti#0978
Clearly oracle pool design issue.


[03/01/2021 3:55 PM] mx#5165
if it is as you say above, explanation is usually being posted after things are fixed

{Reactions}
üëç 

[03/01/2021 4:48 PM] Robert K#0722
We should probably take the first step and try to push the oracle pool post time down to 20 or 30 minutes.


[03/01/2021 4:49 PM] Robert K#0722
By updating the oracle pool to epoch prep: 5 and live epoch: 10


[03/01/2021 4:56 PM] Robert K#0722
@scalahub What would be the easiest method to update the protocol? Using the JDE?


[03/01/2021 5:55 PM] scalahub#2618
yes mostly JDE


[03/01/2021 5:56 PM] scalahub#2618
we can do as you suggested now and look at more randomized way if possible in future


[03/01/2021 6:25 PM] Robert K#0722
So what would be the easiest way to do this, just you run the JDE server, use people's addresses to get an unsigned tx, sent the json to them, they submit it via swagger in their full node?


[03/01/2021 6:27 PM] Robert K#0722
@scalahub We could also take the update token back so it's easier for us to issue updates?


[03/01/2021 6:29 PM] Robert K#0722
@kushti And we should probably wait before saying too much publicly until we update the oracle pools and see if this improves the situation


[03/01/2021 6:51 PM] Robert K#0722
Maybe we can also create a new connector that stores the pricing data from the last X epochs and averages them


[03/01/2021 6:57 PM] scalahub#2618
well they just need to vote, so no need to take the token back.. plus it is too much liability for us to take the token back


[03/01/2021 6:57 PM] scalahub#2618
for voting, I'll share the request they need to make to the node


[03/01/2021 6:58 PM] scalahub#2618
once they vote, its just a matter of issuing the collect votes and update


[03/01/2021 7:03 PM] scalahub#2618
when do you want to do it? Can you confirm the changes below?


[03/01/2021 7:03 PM] scalahub#2618
```  override def livePeriod = 10 // blocks
  override def prepPeriod = 5 // blocks
  override def buffer = 4 // blocks
  override def maxDeviation: Int = 5 // percent
  override def minOracleBoxes: Int = 4```


[03/01/2021 7:03 PM] Robert K#0722
I think that should work


[03/01/2021 7:04 PM] Robert K#0722
Would the buffer of 4 work, right?


[03/01/2021 7:04 PM] scalahub#2618
it should work but we can make it less


[03/01/2021 7:04 PM] Robert K#0722
Lets do 3?


[03/01/2021 7:04 PM] scalahub#2618
sure


[03/01/2021 7:06 PM] scalahub#2618
looking at the code,, will share updated addresses soon


[03/01/2021 7:09 PM] Robert K#0722
Maybe divide the rewards by 2


[03/01/2021 7:12 PM] scalahub#2618
done


[03/01/2021 7:20 PM] Robert K#0722
@kushti Maybe the best way to disclose this is not as an attack, but instead as an example of how the protocol works and incentivize people to mint stablecoins.


[03/01/2021 7:22 PM] Robert K#0722
If more normal users own stablecoins then people there will be less liquidity for whales to take advantage of


[03/01/2021 7:22 PM] scalahub#2618
Please check the params:
https://github.com/scalahub/Kiosk/blob/b1a66414abb28848ccf3e16f3eeaa74a8cfd44e5/src/test/scala/kiosk/oraclepool/v6/OraclePoolLive.scala#L7-L9

{Embed}
https://github.com/scalahub/Kiosk/blob/b1a66414abb28848ccf3e16f3eeaa74a8cfd44e5/src/test/scala/kiosk/oraclepool/v6/OraclePoolLive.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Reactions}
üëç 

[03/01/2021 7:23 PM] Robert K#0722
And if users understand how the protocol works then it won't be as big of a problem.


[03/01/2021 7:23 PM] scalahub#2618
addresses
https://github.com/scalahub/Kiosk/blob/b1a66414abb28848ccf3e16f3eeaa74a8cfd44e5/src/test/scala/kiosk/oraclepool/v6/OraclePoolLiveAddressSpec.scala#L33-L40

{Embed}
https://github.com/scalahub/Kiosk/blob/b1a66414abb28848ccf3e16f3eeaa74a8cfd44e5/src/test/scala/kiosk/oraclepool/v6/OraclePoolLiveAddressSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/01/2021 7:24 PM] scalahub#2618
also in the params made the reward half of current value


[03/01/2021 7:28 PM] Robert K#0722
Looks good


[03/01/2021 7:33 PM] Robert K#0722
For the erg-usd connector we should be able to do volume weighting for the past 1-2 weeks as well to try to make it more stable.


[03/02/2021 10:28 AM] scalahub#2618
The issue with oracle design is next epoch data points known in advance


[03/02/2021 10:29 AM] scalahub#2618
Not easily fixable


[03/02/2021 10:30 AM] scalahub#2618
And not sure if fixable without tweaking bank


[03/02/2021 10:30 AM] scalahub#2618
One way would be to use commitment pattern where the exchange rate is locked to a future epochs value


[03/02/2021 11:27 AM] Robert K#0722
That is still liable to mempool attacks


[03/02/2021 11:28 AM] Robert K#0722
Commitment schemes don't solve anything, and actually there is no solution to front running entirely on blockchains because you can always see the datapoint posted in the mempool before it gets confirmed, and with 2 minute block times it is trivial to scan the mempool then post a tx with a high tx fee that gets accepted in the same block as the datapoint commit/update but you get to use the old datapoint


[03/02/2021 11:30 AM] Robert K#0722
Ah, and if you meant a commitment is sent to the blockchain and locked until the next epoch, that is liable to a timing attack.


[03/02/2021 11:30 AM] Robert K#0722
When the commitment is sent anyone can just look at the current oracle rate at that moment and know what was submit.


[03/02/2021 11:31 AM] Robert K#0722
Unless you are going to produce just random datapoints (which defeats the purpose of an oracle) it's effectively impossible to 100% prevent frontrunning.


[03/02/2021 2:00 PM] Robert K#0722
@scalahub Please ping me when you update with the curl command.


[03/02/2021 2:00 PM] Robert K#0722
Going to be in some meetings and will try to find time to do the update


[03/02/2021 2:19 PM] scalahub#2618
I've added curl as the last section in the readme

{Reactions}
üëç 

[03/04/2021 4:04 PM] scalahub#2618
lets have a call


[03/04/2021 7:12 PM] scalahub#2618
here is the fixed oracle pool.
1.  Changes in data-point contract only
2.  Data-point contract is not tied to live-epoch script .. it is now just tied to  the NFT.  Thus data-point address remains same even after update as long as NFT remains same
3. Even though data point not tied to live epoch script, the check of box id in live epoch contract ensure this does not lead to any attacks

https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/OraclePool.scala#L171-L177

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/OraclePool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Reactions}
üëç 

[03/04/2021 7:13 PM] scalahub#2618
the test of not having a bricked live epoch is here
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/RecoverLiveEpochBoxSpec.scala

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/RecoverLiveEpochBoxSpec.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/04/2021 9:12 PM] kushti#0978
@scalahub https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/OraclePool.scala#L171-L177

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v7/OraclePool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/04/2021 9:12 PM] kushti#0978
what was the old condition ?


[03/04/2021 9:13 PM] scalahub#2618
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v6/OraclePool.scala#L171-L172

{Embed}
https://github.com/scalahub/Kiosk/blob/master/src/test/scala/kiosk/oraclepool/v6/OraclePool.scala
scalahub/Kiosk
Ergo node frontend. Contribute to scalahub/Kiosk development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/05/2021 10:02 AM] Robert K#0722
Yeah, I do think removing the live-epoch script dependency on the datapoint contract is the best choice.


[03/05/2021 10:02 AM] Robert K#0722
Simple fix and should address all of the problems.


[03/05/2021 10:03 AM] Robert K#0722
And yeah the box id + NFT should prevent all potential attacks


[03/05/2021 4:13 PM] scalahub#2618
I'll be starting on chain testing with 1 oracle (update + start new epoch + collect)

{Reactions}
üëç 

[03/05/2021 4:30 PM] Robert K#0722
Okay, so going over the different actions possible in the protocol post-bootstrap:

- Commit Datapoint
- Collect Datapoints
- Fund Oracle Pool
- Collect Funds
- Start Next Epoch
- Create New Epoch
- Update Pool


[03/05/2021 4:31 PM] Robert K#0722
When testing it would be good to check that after using the `Update Pool` action, all of the other actions are able to be used in the next 2+ epochs (at least 2 epochs to verify that old box id or data point from before an update didn't end up carrying over and helping or something like that).


[03/05/2021 4:31 PM] Robert K#0722
As such we can verify that no edge case pops-up that was unexpected and suddenly leaves us with a bricked pool.

{Reactions}
üëç 

[03/05/2021 4:55 PM] Robert K#0722
So it seems like this new oracle pool might be much more community owned and we may have more members from the community joining @kushti @scalahub


[03/05/2021 4:56 PM] Robert K#0722
Might be better to decide on who/what in a new group either on Telegram or Discord to try and manage them all together when bootstrapping.

{Reactions}
üíØ 

[03/05/2021 4:57 PM] Robert K#0722
The old telegram group should probably be deprecated as to not have too much confusion once the transition happens.


[03/05/2021 4:58 PM] Robert K#0722
Given the oracle pools now have "governance tokens" it seems that Emurgo won't be running an oracle.


[03/05/2021 4:59 PM] Robert K#0722
And so it can naturally be labeled that this oracle pool deployment as being "community-owned", which should help to get more people engaged and taking part.


[03/05/2021 5:02 PM] Robert K#0722
@Dmitry Usov Since Emurgo won't be running an oracle, you will likely need to connect the oracle pool front-end to an oracle that @kushti or @scalahub are running.


[03/05/2021 5:05 PM] scalahub#2618
Or maybe some community members oracle


[03/05/2021 5:07 PM] Robert K#0722
Yeah definitely possible. Maybe glasgow/unomie could be a great candidate since he's hosting the sigmausd site


[03/05/2021 5:08 PM] Robert K#0722
Just need someone who's technically competent and can expose the front-end data publicly


[03/05/2021 5:16 PM] kushti#0978
Btw why we have the same fee for RSV / USD ?


[03/05/2021 5:17 PM] Robert K#0722
You mean for minting/redeeming RSV?


[03/05/2021 5:17 PM] Robert K#0722
Currently yes


[03/05/2021 5:20 PM] Robert K#0722
This can be changed, but does require changes in both the contract and the headless dApp.


[03/05/2021 9:26 PM] kushti#0978
btw Staticoin relies on very slow oracle


[03/05/2021 9:26 PM] kushti#0978
KRAKEN was chosen as an exchange rate data source as it proves an open API with a 24 hour volume weighted average price for various currencies. Blended 24h quotes from multiple exchanges would be preferable, but APIs for exchanges that matter do not include 24 hour weighted averages.

The 24 hour volume weighted price is chosen as it is assumed to be unlikely that a single individual (or group) would be able to significantly influence an exchange for a period of a day. If the current 24 hour volume weighted price were returned then it would be possible to predict the direction of future movements of the average price with some certainty. The delaying of 24 hours allows for all currently known price information to be removed from the future price quote. The delay for minting/melting also reduces the likelihood that the coin supply will be affected by trading sentiment, although the coins may still be traded immediately on an exchange. As Ethereum matures, the delay time period could be reduced as exchange rates become more liquid and the ability for a single actor to influence prices reduces. The Pricer contract can be replaced by one with a shorter delay, assuming that suitable data feeds are available.


[03/06/2021 10:02 AM] Robert K#0722
Ah right. Staticoin was released when Eth was a lot smaller too and more volatile.


[03/06/2021 11:25 AM] kushti#0978
@Robert K within 1 hour 4% volatility happens with ETH these days as well


[03/06/2021 2:58 PM] scalahub#2618
@kushti are you going to be around tomorrow for testing?


[03/07/2021 10:35 AM] Robert K#0722
@kushti Indeed, front running is impossible to fix.


[03/07/2021 10:35 AM] Robert K#0722
Even if you do it 24 hour weighted, it'll still be front-run (just once a day).


[03/07/2021 10:36 AM] Robert K#0722
But the idea to make the posting schedule as short as possible (probably 20 minutes or maybe a bit lower) + limiting fluctuations to 4% and having a 4% fee prevents the risk-free front-running you were pointing out.


[03/07/2021 10:37 AM] Robert K#0722
If you are looking for a fix to all front-running, that seems like an impossible problem to fix.


[03/08/2021 8:58 AM] kushti#0978
@Robert K Right, but also some averaging would be nice? Idea from the forum: "Using a ‚ÄúMoving Average,‚Äù either SMA or EMA, would smooth things out, and increasing the updates to be as close to realtime as possible would be useful. Fixing the Oracle issue should eliminate the need to increase the fees, which is a bitter pill just to thwart a weakness in the oracle."


[03/08/2021 8:59 AM] kushti#0978
@scalahub I am around, tell me time


[03/08/2021 9:17 AM] Robert K#0722
Yeah that's kind of obvious the making the price more smooth and shortening the updates makes it more useful, that's what the update we were doing was effectively doing (with a simpler smoothing method).


[03/08/2021 9:18 AM] Robert K#0722
But with 2 minute block times and some miners just not including any txs in their blocks, it's not realistic to get very fast updates if we don't have a centralized system trusting just 1 oracle (and/or signed data from a trusted source).


[03/08/2021 9:20 AM] kushti#0978
@Robert K with smoothening, very fast updates not needed also maybe?


[03/08/2021 9:21 AM] kushti#0978
@Robert K also, 2 min is average time, and sometimes you can wait for 10 minutes, that's very ok in PoW


[03/08/2021 9:23 AM] Robert K#0722
Yep, which makes it hard to agressively shorten posting to try to evade front running.


[03/08/2021 9:24 AM] Robert K#0722
Smoothing can help, but it can always be front run, right? The smoothing algo will be public so a bot can always calculate what it is currently & then scan the mempool for txs that post new updates even if we randomize posting schedule.


[03/08/2021 9:24 AM] Robert K#0722
A higher fee is effectively the only way to prevent all frontrunning.


[03/08/2021 9:33 AM] kushti#0978
Only if the fee is prohibitively high I guess


[03/08/2021 9:34 AM] kushti#0978
2% is unlikely solving the issue


[03/08/2021 9:35 AM] kushti#0978
Btw, cooling off is also not a solution, as you can just mint some USD at a peak, and then you minting locked USD at the beginning of shorting, and redeeming the same amount of unlocked USD at the end of it.


[03/08/2021 9:42 AM] scalahub#2618
I'll ping you in a bit. doing single testing now


[03/08/2021 11:11 AM] Robert K#0722
Yep, this is why it's an unsolved problem in Ethereum as well, there's no perfect solution it seems


[03/08/2021 11:59 AM] scalahub#2618
I think we can have a little complex solution.. I'll work on the details once we have bootstrapped the current oracle

{Reactions}
üòç 

[03/08/2021 1:31 PM] scalahub#2618
These are the test cases for the pool


[03/08/2021 1:31 PM] scalahub#2618
```v1 = min 1 oracle needed
v2 = min 2 oracles needed
v3 = min 4 oracles needed and different update NFT

### Test cases

1. Bootstrap epoch prep box (v1)
2. Move to live epoch stage (v1)
3. Move to epoch prep stage (v1)
   
4. Update to epoch prep box (v2)
5. Move to live epoch stage (v2)
6. Move to epoch prep stage (v2)
   
7. Update to epoch prep box (v3)
8. Move to live epoch stage (v3)
9. Move to epoch prep stage (v3)
   
10. Update to epoch prep box (v1)
11. Move to live epoch stage (v1)
12. Move to epoch prep stage (v1)
```
Basically the test should be that it is always possible to come to epoch prep stage of any version starting from anywhere


[03/08/2021 1:32 PM] scalahub#2618
I'm in the middle of 1-5 right now


[03/08/2021 1:33 PM] scalahub#2618
Since the change is only in the data point contract, we actually only need to test above


[03/08/2021 4:39 PM] Robert K#0722
Nico came up with a couple interesting ideas:


[03/08/2021 4:40 PM] Robert K#0722
1. Use block header data (we have access to that right?) as a source of randomness whether datapoints are collected or skipped (and the old datapoint stays put), thereby providing some risk in front running as they have to hold longer with no guarantee the price fluctuations will go their way.


[03/08/2021 4:41 PM] Robert K#0722
2. Run multiple oracle pools (ex. 5) for the same datapoint in parallel, but with an offset in their posting schedules so you can get a new datapoint every block. Then you use an aggregator contract that always has the latest datapoint.


[03/08/2021 4:42 PM] Robert K#0722
#2 of this is pretty complicated to get working and is prone to technical issues for coordinating, but it's interesting conceptually


[03/08/2021 4:45 PM] Robert K#0722
Actually I don't think #1 can work even if we have access to block header data in the contract, because we would need to perform a different state transition depending on the block header, but since we are in EUTXO, all state transition logic has to happen in the off-chain code that creates the tx, and not in the smart contract itself.


[03/08/2021 4:47 PM] Robert K#0722
And so we can't do X if block header hash is `A` or Y if block header hash is `B`, because the tx must already be built to do either only X or only Y; as we're not in the account model.


[03/08/2021 4:53 PM] Robert K#0722
Or could you submit txs for both cases, just one ends up being invalid? (Though that would sound like an attack vector for spam, which makes me wonder if we have access to block header data and being able to creating invalid txs based off of it)


[03/08/2021 5:31 PM] Robert K#0722
Another idea:


[03/08/2021 5:32 PM] Robert K#0722
Have some sort of hash commit -> reveal random number setup for oracles within an oracle pool to generate randomness about whether a datapoint collection will be skipped or not.


[03/08/2021 5:32 PM] Robert K#0722
And during the hash submit phase no one can mint/redeem, only after the collection or collection skipping


[03/08/2021 6:14 PM] kushti#0978
There's access to headers from scripts, not sure that the idea is good though


[03/08/2021 11:22 PM] scalahub#2618
Im done till 4.. will continue testing tomorrow with @kushti


[03/09/2021 3:18 PM] scalahub#2618
@kushti @Robert K also suggesting following change in the pool deposit script:

current:
```
{
  val allFundingBoxes = INPUTS.filter{(b:Box) =>
    b.propositionBytes == SELF.propositionBytes
  }

  val totalFunds = allFundingBoxes.fold(0L, { (t:Long, b: Box) => t + b.value })

  sigmaProp(
    blake2b256(INPUTS(0).propositionBytes) == epochPrepScriptHash &&
    OUTPUTS(0).propositionBytes == INPUTS(0).propositionBytes &&
    OUTPUTS(0).value >= INPUTS(0).value + totalFunds &&
    OUTPUTS(0).tokens(0)._1 == poolNFT
  )
}
```

suggested:
```{
  val allFundingBoxes = INPUTS.filter{(b:Box) =>
    b.propositionBytes == SELF.propositionBytes
  }

  val totalFunds = allFundingBoxes.fold(0L, { (t:Long, b: Box) => t + b.value })

  sigmaProp(
    INPUTS(0).tokens(0)._1 == poolNFT &&  // <---- this line is different
    OUTPUTS(0).propositionBytes == INPUTS(0).propositionBytes &&
    OUTPUTS(0).value >= INPUTS(0).value + totalFunds &&
    OUTPUTS(0).tokens(0)._1 == poolNFT
  )
}
```


[03/09/2021 3:23 PM] Robert K#0722
Ah good catch


[03/09/2021 3:23 PM] Robert K#0722
Yeah this is the kind of stuff why I was saying it'd be good to test all of the actions


[03/09/2021 3:24 PM] Robert K#0722
But good to fix that.


[03/09/2021 3:25 PM] Robert K#0722
The only edge case here would be if someone deposited funds and an update happened before those funds were collected, then they'd be hardlocked unless the pool would be updated back to the previous contract.


[03/09/2021 3:25 PM] Robert K#0722
But smart to remove dependency on the contract when we have the NFT


[03/09/2021 4:09 PM] scalahub#2618
This is the tx for step 5 https://explorer.ergoplatform.com/en/transactions/3123f1559220433d67f9a1723661baa334984eb042d3ea327dbbaa92c717ad45


[03/09/2021 4:10 PM] scalahub#2618
I'll do the test for 6 myself and then get @kushti to test


[03/09/2021 4:13 PM] scalahub#2618
@kushti can you share an address where you know the private key (bigint)


[03/09/2021 4:13 PM] scalahub#2618
you can also get from urlwallet


[03/09/2021 5:17 PM] Robert K#0722
@kushti @scalahub I've updated the oracle-core to do a 0.5% cap for datapoint posting

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/818895195457191996/unknown.png


[03/09/2021 5:18 PM] Robert K#0722
It's now in the latest commit


[03/09/2021 5:19 PM] Robert K#0722
I commented out the logic for 20%+ spikes, since we agreed that all prices changes should always take less than 1 day to manifest and should be fine in 0.5% movements.


[03/09/2021 5:54 PM] scalahub#2618
This is the tx for #6 https://explorer.ergoplatform.com/en/transactions/4c2a17f6175174fd4c7c4bab8fe296350b3375359d0b9f259377d5bb0e6b569a
I emulated the 2nd oracle myself


[03/09/2021 9:32 PM] kushti#0978
@scalahub 
9htmJjmkqVm2ixtQZK7wb7ykZPX8V9axC56DjuEvnUdknyaNq3w


[03/09/2021 9:32 PM] kushti#0978
urlwallet's


[03/10/2021 9:44 AM] scalahub#2618
bootstrapped your oracle https://explorer.ergoplatform.com/en/transactions/a87691bfe09a0326e8fb2683680b9ca5df92cf9456be6c1cce231fc74727e88f


[03/10/2021 9:48 AM] scalahub#2618
also sent some ergs which you will need for testing.. once you are free, I can walk you through the process of sending via jde


[03/10/2021 9:52 AM] scalahub#2618
oh you had already sent some ergs also


[03/10/2021 9:58 AM] scalahub#2618
also sent a voting token https://explorer.ergoplatform.com/en/transactions/5395f53d74678e86d4eb1742d4398c8ca74ddd1dea73bbd2739720250b77ba60


[03/10/2021 12:04 PM] kushti#0978
@scalahub I am ready


[03/10/2021 12:10 PM] scalahub#2618
ok so I have done the test with 2 oracles.. lets do with 4 now?


[03/10/2021 12:20 PM] kushti#0978
ok


[03/10/2021 12:23 PM] scalahub#2618
Here are the instructions for voting for update
```1. open kioskweb.org

2. search for "kiosk.Env.setBigInt"
    
3. In the form that opens, enter your BigInt secret (hex encoded) and give name as "secret" (without quotes)

4. search for "kiosk.Wallet.txBuilder"
    
5. In the form that opens up, insert the code in the attached file (vote-for-update-kushti.json) and in additionalSecrets put "[secret]" (without quotes)
    
6. Set broadcast to "No" and click submit. If all is well it will post Json, which you can inspect and then repeat with broadcast as "yes"
```


[03/10/2021 12:24 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/819183830266150922/vote-for-update-kushti.json


[03/10/2021 12:28 PM] scalahub#2618
see screenshot

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/819185046409183262/Screenshot_from_2021-03-10_17-57-07.png


[03/10/2021 12:29 PM] scalahub#2618


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/819185088955809812/Screenshot_from_2021-03-10_17-56-29.png


[03/10/2021 12:50 PM] kushti#0978
ok will do after the devs chat


[03/10/2021 6:10 PM] kushti#0978
@scalahub there's no "additionalSecrets" field in vote-for-update-kushti.json , please check instructions before sending them


[03/10/2021 6:11 PM] kushti#0978
Also, how to check "2Qgfhy6m7Exe9deFZcYQ9pWN92i4eaW8ceaoQm6aj43yVuhf6ZCVL2yt34GxgfKvLnrQ8vk2B1pwM3zGBt1DgyG7BZmKGtfc5Yo7wgATjuz3eqf5mHkTFFfafEDtTQwgNqS6EnaZAVXKQPAZSmYazje9mauLABEvr5qC3xsjbrYV5E6uwHNACMhVmcrP92hqDsNxiP5JUeLVkGAt3ktvy5hwA2nEC4GbkMb5Gu5Fdu4EzNq5kQdEhiLJtMwW8cav8J1yHNWPjJ23L9Wikr3frLQfSG9YghjQXoX7A2qVJ5yXMcGB678P1AtsgnukLgLC6aneoFzj2cRUqLYD4Ch6PquFJ4NRWySHKKz6Mrfhu95JuFu4gpdLr6mBfMriZAM99Br4UYtsfbLSmmp1D82h8czP2RNG5RW8p7uMPgCYTEABFrpVCCVqcF7hBM3CHni3NExghdZSvBUMkXqQuHYah2dhbYUx1xoLxp2LzZ" ?


[03/10/2021 6:12 PM] kushti#0978
Instructions are still about blind trust


[03/10/2021 6:40 PM] scalahub#2618
@kushti additional secrets in screenshot


[03/10/2021 6:40 PM] scalahub#2618
about the address, yes good question. I will shortly push to repo the details etc


[03/10/2021 6:42 PM] scalahub#2618
For security reasons no secrets are allowed in json


[03/10/2021 6:47 PM] scalahub#2618
@kushti for address check
1. Source https://github.com/scalahub/OraclePool/tree/main/src/main/scala/oraclepool
2. Tests https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala

{Embed}
https://github.com/scalahub/OraclePool/tree/main/src/main/scala/oraclepool
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/10/2021 7:24 PM] kushti#0978
@scalahub can you provide ErgoScript with variables substituted? Then one can use e.g. https://wallet.plutomonkey.com/p2s/


[03/10/2021 7:34 PM] kushti#0978
@scalahub how to check what is in registers of the first output of my voting transaction ?


[03/10/2021 7:35 PM] kushti#0978
@scalahub broadcasted


[03/10/2021 8:06 PM] scalahub#2618
sure will send the ergoscript with variables substituted shortly


[03/10/2021 8:07 PM] scalahub#2618
to check the r4 encoded, the easiest way is to use https://kioskweb.org/session/#kiosk.Env.decodeValue


[03/10/2021 8:41 PM] kushti#0978
@scalahub what is the simplest way to update stablecoin bank contract?


[03/10/2021 8:41 PM] kushti#0978
We have non-tech users there


[03/10/2021 8:41 PM] kushti#0978
For registers, where semantics is defined ?


[03/10/2021 9:08 PM] scalahub#2618
I guess there is no simple way. As per the document, there are 3 steps
1. vote for update
2. collect votes
3. update bank


[03/10/2021 9:09 PM] scalahub#2618
Either we can use JDE or we would need to write a tool like oracle-core


[03/10/2021 9:09 PM] scalahub#2618
for stablecoin, let me point you to the document


[03/10/2021 9:09 PM] scalahub#2618
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/utxo-spec/v0.3/stablecoin-spec.md


[03/10/2021 9:10 PM] scalahub#2618
This is where the semantics of register is defined 
https://github.com/Emurgo/stablecoin-project/blob/utxo-spec/utxo-spec/v0.3/stablecoin-spec.md#Stage-Ballot


[03/10/2021 9:10 PM] scalahub#2618
this is for stablecoin but same logic in oracle pool as well


[03/11/2021 9:07 AM] kushti#0978
@scalahub please make instructions for an average techie Joe, not me


[03/11/2021 9:07 AM] kushti#0978
what's next ?


[03/11/2021 9:35 AM] scalahub#2618
Yes for the update scenario, I will make better instructions and proper documentation once the tests are over. For the normal operation, we already have Roberts code and documentation.


[03/11/2021 9:36 AM] scalahub#2618
next step, I will issue the update and move pool to live epoch state and then you can post some data points.


[03/11/2021 9:37 AM] Robert K#0722
The stablecoin CLI has voting/updates implemented.


[03/11/2021 9:37 AM] scalahub#2618
but will not work for oracle core directly I guess


[03/11/2021 9:37 AM] Robert K#0722
But requires UTXO-set scanning, which is probably not the easiest for most people


[03/11/2021 9:37 AM] Robert K#0722
Yeah, it will not work with the oracle core


[03/11/2021 9:38 AM] Robert K#0722
So might be a better idea then to use the JDE to keep the experience the same for both update mechanisms to not confuse people


[03/11/2021 9:38 AM] scalahub#2618
documentation I can more or less copy and modify from stablecoin


[03/11/2021 9:38 AM] scalahub#2618
not sure about the tooling.. I can give manual steps which are not so hard actually


[03/11/2021 9:39 AM] scalahub#2618
yes but JDE is still unreleased as of now


[03/11/2021 9:40 AM] Robert K#0722
But it's on github and you said it's an option to use?


[03/11/2021 9:41 AM] scalahub#2618
you mean JDE.. yes its there but not announced yet and better to move Kiosk and JDE to ergo after its vetted


[03/11/2021 9:43 AM] scalahub#2618
its an option to use once its released and documented.. but needs some more work before that (mostly will take more than Monday)


[03/11/2021 9:43 AM] scalahub#2618
however, its right now ready to use


[03/11/2021 9:44 AM] scalahub#2618
the work needed is mostly cosmetic and code cleanup


[03/11/2021 11:06 AM] scalahub#2618
Done.
This is finalize votes tx https://explorer.ergoplatform.com/en/transactions/ca85f8082ee135349854d92282f1c6cdfc146e4968100a7b99c251068d544558
This is update tx. https://explorer.ergoplatform.com/en/transactions/f4e722643950233fb7abaed0aa6541c95a87d81352c42d62261ee8d3787ae6ed
This is the create live epoch tx: https://explorer.ergoplatform.com/en/transactions/73a0a97ae6ce07e67e0db5971d4af27199682eb688956cffe904e4bbb4d067e0

This version needs 4 datapoints.. will come back in 30 mins to proceed


[03/11/2021 12:08 PM] scalahub#2618
This is the json for committing datapoint with your pub key @kushti

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/819542283165761536/commit-datapoint-3-kushti.json


[03/11/2021 12:09 PM] scalahub#2618
Please paste as before (with your secret provided in `additionalSecrets` to JDE/txbuilder)


[03/11/2021 12:15 PM] scalahub#2618
I've already committed two..
https://explorer.ergoplatform.com/en/transactions/4fea40a4bb9367cfdd81173cfc7aa1bd918fa48b369cbb855fa6ea6bcedb20e2
https://explorer.ergoplatform.com/en/transactions/0e3b0d34b111a3120cedd4aaf18ce0a3499c21b1cec94150c095579ce34f03f3

We need one more oracle to test this (need to bootstrap and then commit) shall I do that as well?


[03/11/2021 12:15 PM] scalahub#2618
or @kushti you can run one more oracle.. let me know (and if so paste address where you know the secret)


[03/11/2021 12:42 PM] scalahub#2618
I've booted another oracle with this address `9iE24FKYZves4UnhEgTt4eJLQEpmbfafvxssjJMPibKTtNxBTpm` and submitted data point
https://explorer.ergoplatform.com/en/transactions/40a2ded2c3b03b620f5f7050eda7ed44cb7578b285ed2f97539555592034046f


[03/11/2021 12:42 PM] scalahub#2618
so just need @kushti to submit the data point.


[03/11/2021 1:33 PM] scalahub#2618
have submitted 4th datapoint as well
https://explorer.ergoplatform.com/en/transactions/0dd72aeb4ebbd38e8d12245ef787e0ff174813c731d3af920a12b9cf00f7fa01


[03/11/2021 1:34 PM] scalahub#2618
(with fresh oracle)


[03/11/2021 1:52 PM] scalahub#2618
also collected the datapoints
https://explorer.ergoplatform.com/en/transactions/ae91675b8bdf1a19b852485da3d617462282a36eb169df5b742531f90d95384c


[03/11/2021 1:53 PM] scalahub#2618
so have done till `9 Move to epoch prep stage (v3)`


[03/11/2021 4:29 PM] scalahub#2618
I'll complete the rest of the steps in a few hours then we can discuss next steps


[03/11/2021 8:47 PM] scalahub#2618
Let's start a test pool tomorrow.. with 3 of us and one running 2 oracles


[03/11/2021 8:48 PM] scalahub#2618
Using oracle core.. so we will first run a 3-pool using core and then manually update to a 4 pool


[03/12/2021 8:39 AM] scalahub#2618
have done all tests till step 12. This is tx for 12 https://explorer.ergoplatform.com/en/transactions/84cf8d3b72b85f36e608f3d4a24d9006585425211ab7bd74e5101bb4e54bdd8b


[03/12/2021 9:03 AM] scalahub#2618
I'll upload the contracts with hardwired values so you can verify address yourselves


[03/12/2021 9:51 AM] scalahub#2618
@kushti here are the contracts with hardwired values. To verify, get the token ids, convert to base64 and confirm same value in es files
https://github.com/scalahub/OraclePool/tree/main/ergoscript

Here are the token ids used https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/OraclePool.scala#L16-L19

{Embed}
https://github.com/scalahub/OraclePool/tree/main/ergoscript
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/OraclePool.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/12/2021 9:52 AM] scalahub#2618
the es files can be directly pasted in wallet.plutomonkey.com


[03/12/2021 10:54 AM] kushti#0978
@scalahub thanks, much better!


[03/12/2021 10:54 AM] kushti#0978
What are we doing now ?


[03/12/2021 11:06 AM] scalahub#2618
lets do as I suggested above


[03/12/2021 11:53 AM] kushti#0978
ok, let's go


[03/12/2021 11:53 AM] kushti#0978
what to do ?


[03/12/2021 12:50 PM] scalahub#2618
I'll push an update with addresses for minimum 3 oracle posting.. then @Robert K can update oracle core and we can all run it for a few hours before updating to min-4-oracle


[03/12/2021 12:53 PM] scalahub#2618
using these parameters
```  override def livePeriod = 4 // blocks
  override def prepPeriod = 2 // blocks
  override def buffer = 2 // blocks
  override def maxDeviation: Int = 5 // percent
  override def minOracleBoxes: Int = 3
```


[03/12/2021 1:01 PM] kushti#0978
Got many requests on participating in new oracle pool. Are 15 oracles ok ?


[03/12/2021 1:06 PM] Robert K#0722
Any number of oracles should be good, just need to decide on the number of oracles to agree for consensus


[03/12/2021 1:06 PM] Robert K#0722
So if you want 33% of 15, then 5.


[03/12/2021 1:06 PM] Robert K#0722
or 10 for 66%


[03/12/2021 1:07 PM] Robert K#0722
Probably <50% is best especially at start if you don't trust everyone to have everything working immediately so the pool can actually function, but higher is better for more assurance, especially with low-trust new operators.


[03/12/2021 1:07 PM] Robert K#0722
@scalahub Let me know what the addresses are and I can update the configs


[03/12/2021 1:09 PM] scalahub#2618
@Robert K @kushti these are the addresses https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala#L43-L49
I've also update the .es files so you can check if address are right

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/12/2021 2:20 PM] Robert K#0722
Ah you also changd the min pool box value


[03/12/2021 2:21 PM] Robert K#0722
So is it `14000000`? @scalahub


[03/12/2021 2:21 PM] Robert K#0722
And what is the oracle payout price?


[03/12/2021 2:28 PM] scalahub#2618
these are the complete params
```minBoxValue = 1000000 // min value to remain AFTER paying rewards. For min value to keep BEFORE rewards, see minPoolBoxValue
livePeriod = 4 // blocks
prepPeriod = 2 // blocks
buffer = 2 // blocks
maxDeviation: Int = 5 // percent
minOracleBoxes: Int = 3
oracleToken = "5579de48d16e54ddb34df789d418e1f10c119e15a824ea32dc21696c067f9fbe"
poolNFT = "008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339"
updateNFT = "7b8e292c4a89efb509c89b10111468223678e0a855b20607a0b9fce80a9af694"
ballotToken = "f502b38d40208f8faf0e4dd9f74952e17b24d8f96abb9c9f57f8e961d25a8e37"
oracleReward = 1000000 // Nano ergs. One reward per data point to be paid to oracle
maxNumOracles = 12
minVotes = 6
minStorageRent = 10000000
minPoolBoxValue = 14000000
```


[03/12/2021 2:28 PM] scalahub#2618
can modify them as well, since the update process has not been started


[03/12/2021 2:30 PM] Robert K#0722
Remember that when you update the number of oracles in the pool you need to ensure the minPoolBoxValue is updated as well


[03/12/2021 2:32 PM] Robert K#0722
Okay updated the config in the repo with those params


[03/12/2021 5:36 PM] kushti#0978
@scalahub are we going to test with oracle pool now ?


[03/12/2021 7:02 PM] kushti#0978
https://www.ergoforum.org/t/governance-for-oracle-pools-and-the-sigmausd-bank/786/28

{Embed}
https://www.ergoforum.org/t/governance-for-oracle-pools-and-the-sigmausd-bank/786/28
Governance for oracle pools and the SigmaUSD bank
Current oracle operators:  greenhat - ergo-lib (aka sigma-rust) developer  scalahub - core R&D fellow  andyceo - small miner, worked as sysadmin for testnet and other servers in 2017-19  spirestaking - Cardano stake pool operators  psychomb - Cardano stake pool operators (https://stakhanovite.io/)  Moein Zargarzadeh - reference miners developer ...


[03/13/2021 12:39 AM] scalahub#2618
yes lets do it Sat if you are available. If @Robert K is not around, I can run another core


[03/14/2021 7:16 PM] Robert K#0722
What do you need from me @scalahub to run the pool?


[03/14/2021 7:17 PM] Robert K#0722
I updated the parameters to the ones you request above, you should be able to just run the deploy script + follow the instructions as usual


[03/14/2021 7:17 PM] Robert K#0722
Or did you update the oracle pool again and there's new parameters?


[03/14/2021 9:17 PM] scalahub#2618
Im running the oracle-core with 1 oracle now.. (and corresponding new 1-oracle addresses)


[03/14/2021 9:17 PM] scalahub#2618
btw you didn't update the token ids in the config I guess


[03/14/2021 9:19 PM] scalahub#2618
Since you need to change config for the token ids, wait a bit and I'll send the updated yaml for the 3-oracle, which is easier to test


[03/14/2021 9:19 PM] scalahub#2618
just need to test the current single oracle for a few epochs


[03/14/2021 9:37 PM] scalahub#2618
please use this config @Robert K @kushti also need an address (owned by node) for oracle core

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/820772666566901860/oracle-config-min-3-participants.yaml


[03/14/2021 9:50 PM] scalahub#2618
@kushti old address won't work because its not owned by node


[03/14/2021 9:59 PM] scalahub#2618
update is ready.. I'll wait for you both to boostrap your core before issuing the update tx so your scan can pick the new epoch prep box


[03/14/2021 10:03 PM] scalahub#2618
just to summarize, currently the core is running the 1-datapoint version.. and then we will be updating to a 3-datapoint version


[03/14/2021 10:16 PM] scalahub#2618
@Robert K any idea whats causing this?
```
--------------------------------------------------
Failed To Issue `Create New Epoch` Transaction.
Error: The node rejected the request you provided.
Node Response: Bad request List(PaymentRequest(NTkuk55NdwCVifH8NTWdK7o6Z4S6RcZPmprheumFHoc537SDnupXc6VNPGTYm1p93TRoSA1pqMkwuobnJDoUwDnx553shYcwgboPrYtYe5Xit4fDfXAtxvqoEDq8zFxVUnu2qJmy9BH7vN9kVPTkZLEaGvpmQQqcvvqhaCcazd7iapmXu2HsfhMwWshqJwDvxD4miYCGWtmfkppcn3RReFEhEFVZuLhZCFMEEJ8aTMtKvpmir54jk9hiiEfHE6drKNw3HQZyPng2UJq3gAyyPcH7KbZLwAxwHqeUvZvMuSS2ZaFUGn65yGGpzr1vSYjHvbDxRcUfh8B4cxzqJ2on9B9thuzPUDcPrLRvYgbpWQUqvcakhvgMWUDiJyJjKb5Q7y6qX2tiwxKyXH6crSxgz6kuJRKLAPDMKBPhawU5skbAkmcgbuAcpRxABnGqmT5Y5ZLckqSfrsEHyktPpkhrivi1yr5zVG35vmK6kNJrcMDzrGn6GuJanoUzKvqm7DNgmZjVdGDdvafXF8r83kgizHMNP7yzVXeYD7gt58oLa5JpvyXhBdN3vcS2qR,95000000,List(([B@6964f7c9,1)),Map(R4 -> LongConstant(1000000), R5 -> IntConstant(444909), R6 -> ConstantNode(Coll(-114,70,-96,72,34,-5,-110,-60,40,-30,-111,72,-48,-5,87,-74,88,32,-91,5,45,-67,-35,-117,-93,-5,-64,83,-121,74,-123,-80),Coll[SByte$]))), PaymentRequest(2iHkR7CWvD1R4j1yZg5bkeDRQavjAaVPeTDFGGLZduHyfWMuYpmhHocX8GJoaieTx78FntzJbCBVL6rf96ocJoZdmWBL2fci7NqWgAirppPQmZ7fN9V6z13Ay6brPriBKYqLp1bT2Fk4FkFLCfdPpe,1100000,List(),Map())). invalid characters encountered in Hex data```


[03/15/2021 6:49 AM] kushti#0978
@scalahub you can use 9...CU address from the old pool


[03/15/2021 9:16 AM] Robert K#0722
Ah sorry I forgot to change the token ids indeed


[03/15/2021 9:18 AM] Robert K#0722
Okay that's been fixed and pushed to the repo


[03/15/2021 9:21 AM] Robert K#0722
Hmm, are you sure you deleted your `scanIDs.json` and registered new scans with the proper token ids?


[03/15/2021 9:22 AM] Robert K#0722
After you registered scans with the config I left out the proper token ids, the best idea for why this would happen would be that it's still using those scans.


[03/15/2021 9:23 AM] scalahub#2618
It was able to find the datapoint box and move pool to live epoch stage and then collect back.. However, one thing that may help is that I initially added wrong box manually to scan for epoch prep box (had incorrect box id).. then I manually deleted that box from scan and added correct one


[03/15/2021 9:24 AM] scalahub#2618
whats the easiest way to recover from this?


[03/15/2021 9:24 AM] scalahub#2618
does oracle-core store the box details elsewhere apart from the node?


[03/15/2021 9:24 AM] Robert K#0722
Nope


[03/15/2021 9:24 AM] Robert K#0722
Just recreate the scans and delete the json file as I suggeseted.


[03/15/2021 9:25 AM] Robert K#0722
Though you'll have to rescan as well


[03/15/2021 9:25 AM] scalahub#2618
ok and whats the easiest way to manually add box.. is there a way to just use box id?


[03/15/2021 9:25 AM] scalahub#2618
or maybe rescan is good for now


[03/15/2021 9:25 AM] Robert K#0722
Well if you messed around with your scans idk what you did precisely


[03/15/2021 9:25 AM] Robert K#0722
Just easier to start from scratch by registering the scans again + rescan


[03/15/2021 9:26 AM] scalahub#2618
anyway so I'll do it after updating to 3-oracle and bootstrapping yours and Alex's oracle


[03/15/2021 9:26 AM] Robert K#0722
Oh, you want me to test as well?


[03/15/2021 9:26 AM] scalahub#2618
well we have a min 3 datapoint.. how do we test or can we test 2 datapoint?


[03/15/2021 9:26 AM] Robert K#0722
Okay I guess I can do that too, you just didn't mention it prior


[03/15/2021 9:27 AM] scalahub#2618
oh I guess I missed that.. I thought I did


[03/15/2021 9:27 AM] Robert K#0722
Though as we talked about before I/Emurgo won't be running oracles in the live pool due to potential liability concerns with the governance token


[03/15/2021 9:27 AM] scalahub#2618
yes sure anyway for the live we will need new token ids because not many tokens left


[03/15/2021 9:29 AM] scalahub#2618
hope there won't be much liability for oracle.. because that would be something I also dont want


[03/15/2021 9:29 AM] Robert K#0722
Probably not, but we have over aggresive lawyers now going into 2021 who want to be extra safe.


[03/15/2021 9:30 AM] Robert K#0722
There's no precedent in regards to oracles currently so it should be technically fine.


[03/15/2021 9:30 AM] scalahub#2618
hopefully you will still be able to help with oracle-core üôÇ


[03/15/2021 9:30 AM] Robert K#0722
Yeah I can help do bug fixes and so forth, but likely won't have an abundance of free time to add major features or anything.


[03/15/2021 9:31 AM] Robert K#0722
Btw for this testing I primarily will have free time today and I have a pretty packed rest of the week.


[03/15/2021 9:31 AM] scalahub#2618
I'll send the tokens to the same address as the live pool?


[03/15/2021 9:32 AM] Robert K#0722
Yes `9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF`


[03/15/2021 9:38 AM] scalahub#2618
bootstrapped @kushti and yours oracle @Robert K 
https://explorer.ergoplatform.com/en/transactions/fd8beff03acc52901f76fe47d752a124693e1e790a4a0fa61d83fd94d8e8aa3c


[03/15/2021 9:45 AM] scalahub#2618
@Robert K calling /wallet/rescan will do?


[03/15/2021 9:45 AM] Robert K#0722
Yes, it will start rescanning on the next block


[03/15/2021 9:47 AM] scalahub#2618
done so hopefully it'll pick up soon..


[03/15/2021 9:59 AM] Robert K#0722
My wallet is rescanning as well, so will take a bit too.


[03/15/2021 10:12 AM] scalahub#2618
@kushti can you also update the yaml, delete scanids.json, run oracle core and rescan


[03/15/2021 11:35 AM] kushti#0978
@scalahub ok, where to pull the yaml ?


[03/15/2021 11:46 AM] Dmitry Usov#0134
Do we launch sigmausd today?


[03/15/2021 11:48 AM] scalahub#2618
Can you check the above chat..there is file attached


[03/15/2021 11:48 AM] scalahub#2618
@kushti


[03/15/2021 11:53 AM] Robert K#0722
Hmm I get

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/820988118105718814/unknown.png


[03/15/2021 11:53 AM] Robert K#0722
Are the addresses correct @scalahub ?


[03/15/2021 11:54 AM] Robert K#0722
The oracles are not ready at all, so very unlikely.


[03/15/2021 11:55 AM] scalahub#2618
Yes because i have not updated


[03/15/2021 11:55 AM] scalahub#2618
Let me issue


[03/15/2021 11:55 AM] Robert K#0722
Ah right


[03/15/2021 11:55 AM] scalahub#2618
Is it synced by the way? It should have found datapoint boxes


[03/15/2021 11:56 AM] Robert K#0722
I am synced and ready


[03/15/2021 11:56 AM] Robert K#0722
It found everything except the pool box (well which is just my datapoint box)


[03/15/2021 11:58 AM] scalahub#2618
https://explorer.ergoplatform.com/en/transactions/24f3dfa29af025df70b4be0a2a9365c9569c75da7efa91021ef6f1c7a7c235b0


[03/15/2021 11:58 AM] scalahub#2618
this is the update tx.. it should detect if confirmed


[03/15/2021 12:06 PM] Robert K#0722
Yep it's working


[03/15/2021 12:06 PM] Robert K#0722
And my oracle is posting a datapoint now


[03/15/2021 12:16 PM] kushti#0978
@scalahub ok joining


[03/15/2021 12:16 PM] kushti#0978
let's deploy testing bank contract today


[03/15/2021 12:17 PM] kushti#0978
Can you issue update tokens ?


[03/15/2021 12:19 PM] kushti#0978
9eh9WDsRAsujyFx4x7YeSoxrLCqmhuQihDwgsWVqEuXte7QJRCU


[03/15/2021 12:54 PM] scalahub#2618
Update token for oracle pool?


[03/15/2021 1:01 PM] kushti#0978
??


[03/15/2021 1:02 PM] kushti#0978
@scalahub on the oracle pool, that to do now?


[03/15/2021 1:02 PM] kushti#0978
I am proposing to deploy testing contract in parallel


[03/15/2021 1:03 PM] scalahub#2618
For the bank contract?


[03/15/2021 1:04 PM] scalahub#2618
I will issue update tokens.. how many


[03/15/2021 1:20 PM] kushti#0978
@scalahub five


[03/15/2021 1:22 PM] kushti#0978
@scalahub for the oracle pool, we have 12 folks now, so 15 tokens ?


[03/15/2021 1:30 PM] scalahub#2618
issued 5 tokens for bank update
https://explorer.ergoplatform.com/en/transactions/30f67ad6bb6e4cc2c54556d17b8b1ff2bb6f244f033593205c1afcfb06da5a5b
token id 7948cc5ae43318c212c983a39ef14c4cc6dd7ef6f59d21dcd80428201ce3b36e

For oracle pool 15 sounds good.. What do you think @Robert K ?


[03/15/2021 1:37 PM] scalahub#2618
@kushti what about other tokens for bank.. such as bank NFT, update NFT and sc/rc tokens?


[03/15/2021 1:38 PM] Robert K#0722
Sounds good


[03/15/2021 1:46 PM] scalahub#2618
@kushti let me know if any hassles running oracle. Roberts and mine are running and waiting for 3rd data point


[03/15/2021 1:56 PM] kushti#0978
@scalahub where to get yaml ?


[03/15/2021 2:19 PM] Robert K#0722
@kushti It's in the latest commit in the repo now if you want to use the prepare script as usual.


[03/15/2021 2:19 PM] Robert K#0722
Or use this


[03/15/2021 2:27 PM] kushti#0978
nice, thanks


[03/15/2021 2:33 PM] kushti#0978
rescanning

{Reactions}
üëç 

[03/15/2021 4:31 PM] kushti#0978
@scalahub I am there


[03/15/2021 4:31 PM] kushti#0978
`Submit Datapoint` Transaction Has Been Posted.
Transaction Id: "eb2c0edc420fe58cd2335eee76c2419f29da45003c44cf9d1ddb4d8ae4516e1c"


[03/15/2021 4:39 PM] kushti#0978
@scalahub @Robert K where is an updated bank contract ? With the update path and 2% fee.


[03/15/2021 4:50 PM] Robert K#0722
@kushti https://github.com/Emurgo/age-usd/blob/main/ageusd-smart-contracts/v0.4/AgeUSD.scala

{Embed}
https://github.com/Emurgo/age-usd/blob/main/ageusd-smart-contracts/v0.4/AgeUSD.scala
Emurgo/age-usd
The AgeUSD protocol specifications/smart contracts/off-chain code. - Emurgo/age-usd
https://images-ext-2.discordapp.net/external/xHAk_ziRPnkEG9RreCwow25rgpXAukdgRa4kd6p1WIY/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/36142236


[03/15/2021 4:50 PM] Robert K#0722
It's the same contracts from November just with the fee changes to 2%


[03/15/2021 4:50 PM] Robert K#0722
Unless @scalahub wants to change something


[03/15/2021 4:50 PM] Robert K#0722
I'll update the headless dApp right now to 2% as well


[03/15/2021 4:52 PM] Robert K#0722
Also @scalahub you'll need to give me the final NFT id so I can update the HDF and the ageusd headless dApp or else the headless dApp won't work.


[03/15/2021 4:52 PM] Robert K#0722
Not sure if you want to use the current NFT or a new one.


[03/15/2021 4:54 PM] Robert K#0722
I'll use `008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339` for now, ping me if that needs to be changed


[03/15/2021 5:05 PM] scalahub#2618
For the oracle we can use the current NFT.. is that what you meant?


[03/15/2021 5:06 PM] scalahub#2618
(oracle pool)


[03/15/2021 5:07 PM] kushti#0978
Failed collecting datapoints. The minimum consensus number could not be reached, meaning that an insufficient number of oracles posted datapoints within the deviation range.
Triggering a datapoint repost from the Connector.


[03/15/2021 5:14 PM] Robert K#0722
Yes


[03/15/2021 5:16 PM] Robert K#0722
Sorry by mistake had my oracle-core off in the mean time while you were getting set up


[03/15/2021 5:16 PM] Robert K#0722
It's back up and now should be good


[03/15/2021 5:16 PM] Robert K#0722
I think the difference between my old datapoint and your new one was > 5%


[03/15/2021 5:16 PM] kushti#0978
val updateNFT = "" // quantity 1
val ballotTokenId = "" // quantity 1000


[03/15/2021 5:16 PM] kushti#0978
I can do testing deployment maybe


[03/15/2021 5:17 PM] kushti#0978
or let DarkSide do it again ?


[03/15/2021 5:17 PM] Robert K#0722
Up to you


[03/15/2021 5:17 PM] Robert K#0722
I mean if you don't make it public them probably no risk to do it yourself


[03/15/2021 5:32 PM] Robert K#0722
@scalahub @kushti can you share your latest oracle datapoint?


[03/15/2021 5:32 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821073288230338590/unknown.png


[03/15/2021 5:32 PM] Robert K#0722
Specifically the datapoint/when it was last submitted


[03/15/2021 5:32 PM] Robert K#0722
Because it's still failing collecitng


[03/15/2021 5:34 PM] kushti#0978
@Robert K 
Your Latest Datapoint: 571428571
Datapoint Origin Epoch ID: 9d6e053000ca9ff143500965017d6bc207c8d6661f6af8014e3b1c92ee0074e3
Submitted At: 445603


[03/15/2021 5:34 PM] Robert K#0722
Oh wow that a very different datapoint


[03/15/2021 5:34 PM] Robert K#0722
How did that happen


[03/15/2021 5:35 PM] Robert K#0722
That actually makes no sense to me how it could be so different, hmmm.


[03/15/2021 5:35 PM] Robert K#0722
Are you using an old erg-usd-connector binary maybe?


[03/15/2021 5:38 PM] Robert K#0722
Oh I think I know why


[03/15/2021 5:38 PM] Robert K#0722
@scalahub you bootstrapped the datapoints at a really low number right?


[03/15/2021 5:39 PM] Robert K#0722
Well now that we implemented the 0.5% deviation that breaks everything


[03/15/2021 5:39 PM] Robert K#0722
Since our oracles can't agree since I start really far off


[03/15/2021 5:39 PM] Robert K#0722
I guess we have to keep in the 20%+ check, right @kushti ? Or we could do like 100% or something like that


[03/15/2021 5:41 PM] Robert K#0722
Because else currently my oracle is soft locked effectively


[03/15/2021 5:46 PM] Robert K#0722
Okay, I implemented the check if the datapoint difference is > 100% it will post the real datapoint


[03/15/2021 5:46 PM] Robert K#0722
And pushed the commit.


[03/15/2021 5:46 PM] Robert K#0722
Now my oracle is posting a proper datapoint 
```
Submit New Erg-USD Datapoint: 574712643
Transaction ID: 166b6a3577e190346e8a470a4dd549d13b6839b96971837690e41e3fcd39e425
```


[03/15/2021 5:47 PM] Robert K#0722
This will also help with bootstrapping the new pool so all of the new oracle operators don't run into major problems, which allows @scalahub to bootstrap them at a random low data point and be fine.


[03/15/2021 5:55 PM] kushti#0978
Sounds good!


[03/15/2021 5:55 PM] kushti#0978
100% ?


[03/15/2021 6:00 PM] Robert K#0722
Not sure what the best number is?


[03/15/2021 6:00 PM] Robert K#0722
We said 20% originally, but later on we talked about how it would takes less than a day at 0.5% datapoint updates at 20 minute schedule.


[03/15/2021 6:01 PM] Robert K#0722
And that would be fine.


[03/15/2021 6:01 PM] Robert K#0722
So more gradual movements up to 100% seems generally a good in between?


[03/15/2021 6:01 PM] Robert K#0722
I'm fine with whatever, just this way we have the more gradual smooth datapoint posting up to 100%, which guarantees it in like 99% of scenarios


[03/15/2021 6:02 PM] Robert K#0722
(But helps us out on the edge cases)


[03/15/2021 6:21 PM] Robert K#0722
Hmm, I am confused why this is breaking now


[03/15/2021 6:21 PM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821085763626074133/message.txt


[03/15/2021 6:26 PM] Robert K#0722
My oracle core suddenly can't post any datapoints


[03/15/2021 6:31 PM] Robert K#0722
I don't get it, it just broke randomly


[03/15/2021 6:31 PM] Robert K#0722
This transaction happened: https://explorer.ergoplatform.com/en/transactions/cb3a23f43fddf9f6c50c191753906028ab4b3a2b3c2166a1e9c95991b50415f6


[03/15/2021 6:32 PM] Robert K#0722
And the box went from this: https://api.ergoplatform.com/api/v0/transactions/boxes/f14f67b96e3a509e9f93acacb835324144ec9ad68989d047497e2d39a9835517


[03/15/2021 6:32 PM] Robert K#0722
to this: https://api.ergoplatform.com/api/v0/transactions/boxes/fa4406dff063f135c3ef0c8ee361dedbf60d277500ef90e823303611c2b256d1


[03/15/2021 6:32 PM] Robert K#0722
(no state change at all because it was on the old logic)


[03/15/2021 6:33 PM] Robert K#0722
And now I just get that error every time


[03/15/2021 6:33 PM] Robert K#0722
Maybe I'll rescan and see if something got screwed up


[03/15/2021 6:42 PM] kushti#0978
I'm getting


[03/15/2021 6:42 PM] kushti#0978
Failed collecting datapoints. The minimum consensus number could not be reached, meaning that an insufficient number of oracles posted datapoints within the deviation range.
Datapoint has been reposted recently. Waiting for other oracles to repost before retrying once again.


[03/15/2021 6:47 PM] Robert K#0722
That is fine, it's because my oracle couldn't post a data point near yours because @scalahub bootstrapped it very low and I had only 0.5% updates initially.


[03/15/2021 6:47 PM] Robert K#0722
And we have deviation checking consensus of 5% on-chain, and so it's just waiting for my oracle to post a datapoint within 5%.


[03/15/2021 6:47 PM] Robert K#0722
But somehow mine just broke.


[03/15/2021 9:07 PM] Robert K#0722
Okay the rescan actually seemed to have helped


[03/15/2021 9:27 PM] Robert K#0722
Idk what's going on, I think the datapoints are now somehow off


[03/15/2021 9:27 PM] Robert K#0722
And this is annoying because I wanted to get this finished up today but I can't troubleshoot your guys' oracles


[03/15/2021 9:33 PM] Robert K#0722
You shouldn't have said that the oracle pools were being deployed today @kushti when there's been so little testing done with the actual new logic added


[03/16/2021 5:19 AM] scalahub#2618
yes the default dummy datapoint is 1


[03/16/2021 9:29 AM] Robert K#0722
@scalahub @kushti Can you verify that you are using the latest commit of the oracle-core?


[03/16/2021 9:29 AM] Robert K#0722
And can you let me know what datapoint your oracle is posting?


[03/16/2021 9:39 AM] Robert K#0722
Mine just posted `584795321`


[03/16/2021 9:40 AM] Robert K#0722
One of your oracle-cores must be pretty old and not using the new logic


[03/16/2021 9:44 AM] kushti#0978
I am using connector from hardened- branch


[03/16/2021 9:44 AM] kushti#0978
Likely this is the probblem ?


[03/16/2021 9:46 AM] Robert K#0722
Well the hardened folder right? That is good


[03/16/2021 9:46 AM] Robert K#0722
And the logic is in the oracle-core not the connector as mentioned previously


[03/16/2021 9:46 AM] Robert K#0722
So please try the latest commit and delete your old oracle-core


[03/16/2021 9:46 AM] kushti#0978
I see, doing that


[03/16/2021 9:47 AM] Robert K#0722
Could you share your latest datapoint btw?


[03/16/2021 9:47 AM] Robert K#0722
I want to see how far off they are


[03/16/2021 9:47 AM] kushti#0978
Oracle Datapoint State
--------------------
Your Latest Datapoint: 588235294


[03/16/2021 9:48 AM] Robert K#0722
That's not too far off, but that is still probably a slightly old commit so if you could update that'd be great, thanks.


[03/16/2021 9:49 AM] Robert K#0722
I have a feeling amitabh's is farther off


[03/16/2021 9:49 AM] scalahub#2618
Im using this commit
```git log
commit 8bac2bd9c624b153f5e04d1f5067d6350a9cd0a0 (HEAD -> master, origin/master, origin/HEAD)
Author: Robert Kornacki <11645932+robkorn@users.noreply.github.com>
Date:   Fri Mar 12 15:32:07 2021 +0100

    Updates params for erg-usd default config

```


[03/16/2021 9:49 AM] scalahub#2618
`Your Latest Datapoint: 1009823`


[03/16/2021 9:49 AM] Robert K#0722
lol


[03/16/2021 9:49 AM] Robert K#0722
Did you read what I posted yesterday that I was up all night troubleshooting?


[03/16/2021 9:49 AM] Robert K#0722
You need to update to the latest commit


[03/16/2021 9:51 AM] scalahub#2618
I missed that.. let me pull and rebuild


[03/16/2021 10:04 AM] scalahub#2618
it has posted a datapoint.. not showing the value yet


[03/16/2021 10:04 AM] scalahub#2618
1 min its still 1009823


[03/16/2021 10:04 AM] scalahub#2618
should I delete scan ids and rescan?


[03/16/2021 10:08 AM] Robert K#0722
Did you delete the oracle-core binary? @scalahub


[03/16/2021 10:08 AM] scalahub#2618
no I just did `sh prepare-erg-usd-oracle.sh`


[03/16/2021 10:09 AM] scalahub#2618
anyway I've recloned and started fresh


[03/16/2021 10:09 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821324297053405184/unknown.png


[03/16/2021 10:10 AM] Robert K#0722
Use your same scanIds.json


[03/16/2021 10:10 AM] Robert K#0722
Don't rescan


[03/16/2021 10:10 AM] Robert K#0722
Just delete the binary


[03/16/2021 10:10 AM] Robert K#0722
so it can copy the new one


[03/16/2021 10:10 AM] scalahub#2618
Its deleted and started fresh now


[03/16/2021 10:11 AM] Robert K#0722
But use your same scanIDs.json so you don't have to go through scanning again and we have to wait 3 hours


[03/16/2021 10:11 AM] scalahub#2618
ok its compiling.. will copy same json


[03/16/2021 10:11 AM] Robert K#0722
Cool


[03/16/2021 10:11 AM] scalahub#2618
what else ? I dont want to mess anything up now


[03/16/2021 10:11 AM] Robert K#0722
It should just work


[03/16/2021 10:17 AM] scalahub#2618
Its posted data point 
```Oracle Datapoint State
--------------------
Your Latest Datapoint: 588235294
Datapoint Origin Epoch ID: 9d6e053000ca9ff143500965017d6bc207c8d6661f6af8014e3b1c92ee0074e3
Submitted At: 446144
========================================================
```


[03/16/2021 10:18 AM] scalahub#2618
i may need to rescan as somehow I still had the old epoch prep address in config.. but that should not affect the flow if your two oracles can keep collecting datapoints


[03/16/2021 10:18 AM] scalahub#2618
so I'll hold off rescanning for now


[03/16/2021 10:23 AM] Robert K#0722
Yes it should be fine for now


[03/16/2021 10:23 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821327900904783892/unknown.png


[03/16/2021 10:24 AM] Robert K#0722
So now all the oracles seem to be on the same page


[03/16/2021 10:24 AM] Robert K#0722
Let's go through another full epoch and see


[03/16/2021 10:33 AM] kushti#0978
I am rescanning now


[03/16/2021 10:33 AM] kushti#0978
and it is going slow (


[03/16/2021 10:33 AM] scalahub#2618
my rescan was quite fast actually..


[03/16/2021 10:33 AM] scalahub#2618
around an hour or so


[03/16/2021 10:36 AM] scalahub#2618
would be good to add this https://github.com/ergoplatform/ergo/issues/1256

{Embed}
https://github.com/ergoplatform/ergo/issues/1256
Allow rescanning from a given height rather than from beginning ¬∑ I...
It will be preferable if we can ask the node to rescan blockchain and the wallet from some given height instead of from the beginning. Many dApps rely on recently issued transactions so it is often...
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/16/2021 10:40 AM] Robert K#0722
Why are you rescanning @kushti ?


[03/16/2021 10:40 AM] Robert K#0722
Everything was running well so I think your oracle was fine


[03/16/2021 10:41 AM] kushti#0978
It was from the old commit


[03/16/2021 10:41 AM] Robert K#0722
That's fine


[03/16/2021 10:41 AM] Robert K#0722
If no on-chain stuff changes then there's no need to rescan as it's just off-chain logic


[03/16/2021 10:41 AM] scalahub#2618
btw I usually stay late.. but yesterday crashed early so missed the troubleshooting @Robert K


[03/16/2021 10:42 AM] scalahub#2618
hope we can get this tested and launched today


[03/16/2021 10:44 AM] kushti#0978
I propose to introduce EIP for stablecoin contracts now


[03/16/2021 10:44 AM] kushti#0978
https://github.com/ergoplatform/eips/pull/28

{Embed}
https://github.com/ergoplatform/eips/pull/28
SigmaUSD Contracts Standard by kushti ¬∑ Pull Request #28 ¬∑ ergoplat...
SigmaUSD Contracts Standard

Author: kushti, scalahub, Robert Kornacki
Status: Proposed
Created: 12-Mar-2021
Last edited: 12-Mar-2021
License: CC0
Track: Applications, Standards

Motivation
This Er...
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/16/2021 10:44 AM] kushti#0978
And embed constants, thus everyone can check P2S with Jason's web compiler just


[03/16/2021 10:46 AM] Robert K#0722
Yeah I think we should be able to, looks like it's working


[03/16/2021 10:46 AM] scalahub#2618
I think this also mandates a oracle pool standard?


[03/16/2021 10:47 AM] Robert K#0722
Well the oracles have changed a bit, probably best to wait for a standardized version


[03/16/2021 10:48 AM] Robert K#0722
Before posting something


[03/16/2021 10:50 AM] scalahub#2618
@Robert K after launch, I'll add update spec in a separate document to oracle pool. Best to document them separately to keep it clean


[03/16/2021 10:57 AM] Robert K#0722
Sounds good


[03/16/2021 11:12 AM] scalahub#2618
Will we have 15 oracle tokens and 15 update tokens?


[03/16/2021 11:12 AM] scalahub#2618
I'll start preparing for launch


[03/16/2021 11:15 AM] kushti#0978
Yes, 15 is good


[03/16/2021 11:19 AM] kushti#0978
First version with embedding: https://tinyurl.com/ytct793d


[03/16/2021 11:34 AM] Robert K#0722


{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821345746972442624/unknown.png


[03/16/2021 11:41 AM] scalahub#2618
Im getting same error


[03/16/2021 11:48 AM] scalahub#2618
15 tokens issues in this tx which will be for participants
https://explorer.ergoplatform.com/en/transactions/bfdded3c2ae14f8e122dc87bd64cf8933681c6f428afeceb5ffa149a7cad0b39


[03/16/2021 11:57 AM] scalahub#2618
for the voting tokens another 15 issued here
https://explorer.ergoplatform.com/en/transactions/92cce833ba63d3e73a916b2837c57a480ba4ba5a5705090572f044149499299a


[03/16/2021 12:33 PM] scalahub#2618
Is your oracle back online @kushti ?


[03/16/2021 12:53 PM] kushti#0978
nope, ~350K


[03/16/2021 1:00 PM] scalahub#2618
Im joining the call in 2 mins


[03/16/2021 1:34 PM] Robert K#0722
@kushti `008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339` oracle pool nft id


[03/16/2021 2:04 PM] scalahub#2618
@Robert K @kushti here is the plan for oracle pool
1. Test current pool v0 (Robert, Amitabh, Kushti) for few epochs
2. Create pool v1 addresses with new participant tokens, new update NFT and new voting tokens (prep 2, live 4, buffer 2, datapoints **2**, participants 15, min votes 8, total votes 15).
3. Me and Kushti update the oracle core with new config file, delete scan ids, wait for updated pool addresses and run the pool v1 for few hours
4. Find two participants and create pool v2 addresses with same tokens and NFTs as V1 (prep 2, live 4, buffer 2, datapoints **4**, participants 15, min votes 8, total votes 15, please let me know how much reward @Robert K )
5. Four of us delete scan ids and wait for updated pool addresses, and then run the pool v2 for few hours
6. If all goes well, I will send the remaining participant tokens to other pool participants as well as update tokens after they have started their oracle core
 (we can then think of v2 as the production pool)


[03/16/2021 2:05 PM] kushti#0978
Resync done, my oracle is submitting!


[03/16/2021 2:07 PM] scalahub#2618
It should be more or less auto.. I will need you around only to delete the scan ids and restart oracle core


[03/16/2021 2:39 PM] kushti#0978
Pool is stuck now ?


[03/16/2021 2:44 PM] Robert K#0722
What are your datapoints?


[03/16/2021 2:44 PM] Robert K#0722
Mine is `Your Latest Datapoint: 591117646`


[03/16/2021 2:44 PM] scalahub#2618
Your Latest Datapoint: 591117646


[03/16/2021 2:44 PM] kushti#0978
Min votes is 4 on step 2


[03/16/2021 2:45 PM] kushti#0978
Your Latest Datapoint: 588235294
Datapoint Origin Epoch ID: 9d6e053000ca9ff143500965017d6bc207c8d6661f6af8014e3b1c92ee0074e3
Submitted At: 446132


[03/16/2021 2:45 PM] scalahub#2618
I thought we will test with both of us in Step 2 and then update to 4 in Step 4


[03/16/2021 2:45 PM] kushti#0978
Core is submitting new datapoint also


[03/16/2021 2:45 PM] scalahub#2618
446275


[03/16/2021 2:45 PM] kushti#0978
Submit New Erg-USD Datapoint: 595238095
Transaction ID: 2d11e84cfbb664459539938f05385f572f0a7156e30954ebef5406e774be09bf


[03/16/2021 2:45 PM] Robert K#0722
Is your node working @kushti ?


[03/16/2021 2:46 PM] Robert K#0722
`Current Blockheight: 446280`


[03/16/2021 2:46 PM] Robert K#0722
Seems your datapoint hasn't been updated/accepted as a tx for the past 40 minutes that you said your resync is done


[03/16/2021 2:47 PM] kushti#0978
Node is synced , wallet is synced/unlocked


[03/16/2021 2:47 PM] kushti#0978
Oh, it made progress


[03/16/2021 2:47 PM] kushti#0978
Oracle Datapoint State
--------------------
Your Latest Datapoint: 591715976
Datapoint Origin Epoch ID: 496fe6477ff445644e203e3b2c86bdac699e0d2456995e8dbfc72ae32c8a51ea
Submitted At: 446278
========================================================

--------------------------------------------------
`Collect Datapoints` Transaction Has Been Posted.
Transaction Id: "2aea0fde099aeee97d6cacde5fbbd541d49552d9d13262193316126e53194a69"


[03/16/2021 2:48 PM] Robert K#0722
There we go


[03/16/2021 2:48 PM] kushti#0978
@scalahub let's put token ids into EIPs also

{Reactions}
üëç 

[03/16/2021 3:29 PM] Robert K#0722
Are your oracles running? @scalahub @kushti


[03/16/2021 3:30 PM] Robert K#0722
Seems someone's datapoints aren't posting


[03/16/2021 3:31 PM] Robert K#0722
It seems both of your oracles didn't post a datapoint


[03/16/2021 3:37 PM] kushti#0978
"Datapoint has been reposted recently. Waiting for other oracles to repost before retrying once again."


[03/16/2021 3:38 PM] kushti#0978
what does that mean? @Robert K


[03/16/2021 3:38 PM] scalahub#2618
@kushti here is yaml for step 2

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821406993809276938/oracle-config-v2.yaml


[03/16/2021 3:38 PM] scalahub#2618
Don't replace yet. Just sending for future use


[03/16/2021 3:38 PM] scalahub#2618
Oracle Datapoint State
--------------------
Your Latest Datapoint: 591117646
Datapoint Origin Epoch ID: 496fe6477ff445644e203e3b2c86bdac699e0d2456995e8dbfc72ae32c8a51ea
Submitted At: 446280
========================================================


[03/16/2021 3:39 PM] kushti#0978
@scalahub can I run two oracles in parallel? step 1 and step2


[03/16/2021 3:39 PM] scalahub#2618
you should be able to I think in separate folders and may need to change screen id @Robert K ?


[03/16/2021 3:39 PM] kushti#0978
Current Blockheight: 446307
Current Oracle Pool Stage: Live Epoch
Submit Datapoint In Latest Epoch: true
Latest Datapoint: 588235294
===========================================

Submit New Erg-USD Datapoint: 588235294
Transaction ID: 54318ac55126ed9e94a9bbd54f00b0c28a2fcf4f00f7804f3fb8cea7a301b7a3


[03/16/2021 3:40 PM] scalahub#2618
This is full output
```   ____                 _         _____
  / __ \               | |       / ____|
 | |  | |_ __ __ _  ___| | ___  | |     ___  _ __ ___
 | |  | | '__/ _` |/ __| |/ _ \ | |    / _ \| '__/ _ \
 | |__| | | | (_| | (__| |  __/ | |___| (_) | | |  __/
  \____/|_|  \__,_|\___|_|\___|  \_____\___/|_|  \___|
========================================================
Current Blockheight: 446307
Current Tx Base Fee: 1100000
Pool Posting Schedule: 6 Blocks
Oracle Pool NFT ID: 008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339
========================================================
Pool Deposits State
--------------------
Number Of Deposit Boxes: 0
Total nanoErgs In Deposit Boxes: 0

Live Epoch State
-----------------
Total Pool Funds: 85000000
Latest Pool Datapoint: 591317089
Live Epoch ID: 8c8cc6b6c9b259d92fad3c995c4969d215d38bce896cc556c6d77e616556bd14
Commit Datapoint In Live Epoch: false
Live Epoch Ends: 446299

Oracle Datapoint State
--------------------
Your Latest Datapoint: 591117646
Datapoint Origin Epoch ID: 496fe6477ff445644e203e3b2c86bdac699e0d2456995e8dbfc72ae32c8a51ea
Submitted At: 446280
========================================================
```


[03/16/2021 3:40 PM] scalahub#2618
node is synced


[03/16/2021 3:41 PM] scalahub#2618
why is my datapoint old?


[03/16/2021 3:42 PM] scalahub#2618
@Robert K any clue?


[03/16/2021 3:42 PM] kushti#0978
@scalahub I will use different machines as well


[03/16/2021 3:43 PM] scalahub#2618
can you paste full output @kushti


[03/16/2021 3:43 PM] scalahub#2618
maybe restarting core will help?


[03/16/2021 3:44 PM] scalahub#2618
no restarting didn't help


[03/16/2021 3:45 PM] scalahub#2618
ah wait I found the issue


[03/16/2021 3:45 PM] scalahub#2618
wallet has lot of dust.. so not able to post.. let me fund it


[03/16/2021 3:48 PM] scalahub#2618
done should post as soon as its confirmed


[03/16/2021 3:56 PM] Robert K#0722
@scalahub Are you running the erg-usd-connector?


[03/16/2021 3:57 PM] Robert K#0722
Oh


[03/16/2021 3:57 PM] Robert K#0722
lol


[03/16/2021 3:57 PM] scalahub#2618
yes funding tx confirmed and wallet posted datapoint


[03/16/2021 3:57 PM] scalahub#2618
Oracle Datapoint State
--------------------
Your Latest Datapoint: 588419635
Datapoint Origin Epoch ID: 8c8cc6b6c9b259d92fad3c995c4969d215d38bce896cc556c6d77e616556bd14
Submitted At: 446314


[03/16/2021 3:57 PM] Robert K#0722
You can run multiple oracle-cores, but you need to configure different ports or else they will conflict.


[03/16/2021 3:59 PM] kushti#0978
Your Latest Datapoint: 588235294
Datapoint Origin Epoch ID: 8c8cc6b6c9b259d92fad3c995c4969d215d38bce896cc556c6d77e616556bd14
Submitted At: 446314


[03/16/2021 4:06 PM] scalahub#2618
you mean this line? 
```#### Core API Parameters ####
# Port which you wish the Oracle Core GET API server to run on.
# Note, the Oracle Core POST API server (to submit datapoints) will be on
# `core_api_port` + 1.
core_api_port: "9010"```


[03/16/2021 4:07 PM] scalahub#2618
What about these two lines? 
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/run-oracle.sh#L3-L4

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/run-oracle.sh
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/16/2021 4:19 PM] Robert K#0722
Yes that `core_api_port`. Make sure it is at least 5 ports away from your previous


[03/16/2021 4:19 PM] Robert K#0722
So to make it easy, make your next one `9020`


[03/16/2021 4:19 PM] scalahub#2618
thats not working apparantly.. I had to shut the other oracle


[03/16/2021 4:20 PM] scalahub#2618
it doesn't create scanIDs.json and also just exits


[03/16/2021 4:20 PM] Robert K#0722
And yeah if you are using screen you have to name it differently


[03/16/2021 4:20 PM] scalahub#2618
do we need to change anything in runoracle.sh?


[03/16/2021 4:20 PM] Robert K#0722
Change the `Erg-USD-Oracle`


[03/16/2021 4:21 PM] scalahub#2618
well yes I am using screen and mostly everyone will be (since its part of the instructions)


[03/16/2021 4:21 PM] scalahub#2618
cool let me change


[03/16/2021 4:21 PM] Robert K#0722
Yes, but the instructions weren't made for running multiple oracles with the same connector


[03/16/2021 4:22 PM] scalahub#2618
would be good to add.. since we may eventually have to do that


[03/16/2021 4:23 PM] scalahub#2618
but for now its fine.. as long as me and @kushti know üôÇ


[03/16/2021 4:23 PM] Robert K#0722
It's too confusing to add instructions for edge cases that require people to manually edit shell scripts


[03/16/2021 4:23 PM] Robert K#0722
You would update the shell script in the repo for people


[03/16/2021 4:23 PM] Robert K#0722
Not ask them to do it


[03/16/2021 4:23 PM] Robert K#0722
So then they can just pull and run the script, and that does it all for them


[03/16/2021 4:23 PM] Robert K#0722
For new updates


[03/16/2021 4:23 PM] scalahub#2618
@kushti can you run the oracle in parallel so I can bootstrap the datapoint boxes?


[03/16/2021 4:23 PM] scalahub#2618
and then once we are ready I'll issue the update tx.. all ready otherwise


[03/16/2021 4:34 PM] scalahub#2618
@kushti make sure you also change to your oracle address in the yaml


[03/16/2021 4:46 PM] kushti#0978
@scalahub so we're going to step 2 ?


[03/16/2021 4:47 PM] scalahub#2618
I can bootstrap the datapoint boxes for step 2. I've already bootstrapped update box and done the voting protocol


[03/16/2021 4:48 PM] scalahub#2618
Step 2 is just create address, bootstrap the other boxes and continue running oracle in v0..


[03/16/2021 4:48 PM] kushti#0978
ok I can use different machine simply


[03/16/2021 4:48 PM] kushti#0978
need to run away now though


[03/16/2021 4:48 PM] scalahub#2618
Step 3 is where we move to v1.. but that is after we test v0


[03/16/2021 4:48 PM] kushti#0978
will be around in 2 hours


[03/16/2021 4:49 PM] scalahub#2618
no need to use different machine


[03/16/2021 4:49 PM] scalahub#2618
its much easier


[03/16/2021 4:49 PM] scalahub#2618
use same oracle core.. with new port. .let me send instructions


[03/16/2021 4:49 PM] kushti#0978
I am going to leave laptop with v0 oracle anyway


[03/16/2021 4:50 PM] scalahub#2618
v0 and v1 can run in parallel and we can save 2 hrs


[03/16/2021 4:50 PM] scalahub#2618
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/oracle-config.yaml#L13

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/oracle-config.yaml
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/16/2021 4:50 PM] scalahub#2618
change 9010 to 9020


[03/16/2021 4:51 PM] scalahub#2618
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/run-oracle.sh#L1-L5
change the string `Erg-USD-Oracle` to `Erg-USD-Oracle-v1`

{Embed}
https://github.com/ergoplatform/oracle-core/blob/master/scripts/erg-usd-oracle/run-oracle.sh
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/16/2021 4:51 PM] scalahub#2618
thats it


[03/16/2021 4:52 PM] scalahub#2618
anyway we can leave v1 running for 2 hours so either way is fine with me


[03/16/2021 5:02 PM] Robert K#0722
This version seems to be working well, right @scalahub ?


[03/16/2021 5:03 PM] Robert K#0722
6 block posting schedule seems to be fine


[03/16/2021 5:03 PM] scalahub#2618
yes as of now seems to be fine


[03/16/2021 5:04 PM] scalahub#2618
Lets wait for another few epochs


[03/16/2021 5:19 PM] scalahub#2618
I guess we can update whenever @kushti 's node is ready


[03/16/2021 5:53 PM] scalahub#2618
@kushti @Robert K oracle reward is currently 0.001, so if we do 1/4th, it will be 0.00025.. hope that is fine in terms of dust (and does not create economically unspendable outputs)


[03/16/2021 5:54 PM] scalahub#2618
what is the minimum nanoergs possible in a box @kushti ?


[03/16/2021 7:56 PM] Robert K#0722
It should be fine.


[03/16/2021 7:56 PM] Robert K#0722
I paid 0.001 Ergs tx fee for 64 input txs


[03/16/2021 7:58 PM] Robert K#0722
So if we now have like 360 (iirc alex said in the call today) inputs max for these, then 4 will be sufficient at the same price, else it could maybe go up to max 12 inputs of 0.00025 for 360 probably


[03/16/2021 8:03 PM] Robert K#0722
The pool seems to not be collecting again


[03/16/2021 8:03 PM] Robert K#0722
```
Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 446436
========================================================
```


[03/16/2021 8:03 PM] Robert K#0722
What are your datapoints @scalahub @kushti


[03/16/2021 8:04 PM] scalahub#2618
```--------------------
Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 446436
========================================================
```


[03/16/2021 8:05 PM] scalahub#2618
Is it because @kushti 's oracle is offline?


[03/16/2021 8:21 PM] scalahub#2618
Its a bit late so I'll follow up in morning


[03/16/2021 8:27 PM] kushti#0978
@scalahub do I need for another address for v1 ?


[03/16/2021 8:27 PM] scalahub#2618
no same address will do


[03/16/2021 8:28 PM] scalahub#2618
is your oracle offline @kushti btw?


[03/16/2021 8:28 PM] kushti#0978
or the same?


[03/16/2021 8:28 PM] kushti#0978
should be online, but I've left my laptop in the office


[03/16/2021 8:28 PM] kushti#0978
this


[03/16/2021 8:29 PM] kushti#0978
so can't really check


[03/16/2021 8:45 PM] scalahub#2618
ok looks like pool is halted 
https://explorer.ergoplatform.com/en/addresses/2Qgfhy6m7Exe9deGQMEBJqaeVKgSJJyvNU7kBAwyfjvqv1PMqg4SLh1aMDgobaqpqV6Bb8MfzyBVAMVHRw1aQGfyKXNwafriXH1GUmvKnR3uweks3F1u3rp9bPLfxykGKz81bniWeu5nYfjStHcwCJ2iGVqaKusTxbTPAJ38o2zpqKUgTyfovCbAYEtc2zX3A2efvSZdn2W5W1gKVACDTXC4oWzMAa9iqmCTSofwKxycJAV8sTMP94q3QeUpytckTdqsYatV5PhJxk8NeDaaPmsXbf4J6YNMqdyFwAHynggACv6gAL9xMqijxPt3KWiKV6XNwSDsViJRFkHeiLmX9LbYGiyQ1TYy2f6V7GfLjB5deg9gBbCcNNcRwUkhdH1WdRKnzkzmLUTiPQcFGu4JbHrFezgK9vaVd7uCxZJrTcgA871Aia6GrcFCcSSiXB5tDYXsTjE5BCULf2vbHJUgVWocWV5SV5qL6k368J


[03/16/2021 8:46 PM] scalahub#2618
we can do the update now?


[03/16/2021 8:47 PM] scalahub#2618
let me know if I should send the token


[03/16/2021 8:56 PM] kushti#0978
my oracle is keeping posting it seems https://explorer.ergoplatform.com/en/addresses/9eh9WDsRAsujyFx4x7YeSoxrLCqmhuQihDwgsWVqEuXte7QJRCU


[03/16/2021 9:16 PM] Robert K#0722
The only question is what it's posting since it's not able to be collected


[03/16/2021 9:18 PM] Robert K#0722
I guess we can check tomorrow if need be.


[03/17/2021 4:18 AM] scalahub#2618
yes its not getting collected. Here is the output of my oracle btw
```Oracle Datapoint State
--------------------
Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 446677
========================================================
```


[03/17/2021 4:20 AM] scalahub#2618
this is @kushti 's datapoint `502512562`  However the box id is correct in the datapoint.. so its odd
`de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db` is the box id


[03/17/2021 5:24 AM] scalahub#2618
@kushti this seems to be issue with core I think.. so lets update to v1 and see how it goes


[03/17/2021 5:24 AM] scalahub#2618
let me know when you are ready with the core.. so I can bootstrap the oracle


[03/17/2021 8:35 AM] kushti#0978
@kushti can do in ~ 2 hours. good ?


[03/17/2021 9:18 AM] Robert K#0722
That is a very weird datapoint


[03/17/2021 9:18 AM] Robert K#0722
Are you sure you are running the latest commit @kushti ?


[03/17/2021 9:18 AM] Robert K#0722
And you deleted your old oracle-core before running the prepare script?


[03/17/2021 9:19 AM] Robert K#0722
The internal oracle-core logic should be referencing the previous oracle pool datapoint and limiting to 0.5% up/down


[03/17/2021 9:20 AM] Robert K#0722
So if your is posting something that off then either:
1. Your node/scans are screwed up or something and now getting the latest oracle pool datapoint properly (but that would probably make your oracle fail rather than work)
2. You are using an old oracle-core that may have had the 2% logic instead of the 0.5% logic (more likely)


[03/17/2021 9:20 AM] Robert K#0722
I'm 99% sure you are just using an old oracle-core


[03/17/2021 10:11 AM] scalahub#2618
Yes I'm around


[03/17/2021 10:11 AM] scalahub#2618
@kushti


[03/17/2021 11:26 AM] kushti#0978
I'm around


[03/17/2021 11:32 AM] kushti#0978
===========================================
Current Blockheight: 446904
Current Oracle Pool Stage: Live Epoch
Submit Datapoint In Latest Epoch: true
Latest Datapoint: 520833333
===========================================


[03/17/2021 11:32 AM] kushti#0978
what I'm posting now


[03/17/2021 11:33 AM] kushti#0978
I am on commit e68e87060dc09c26af972064810cedf436eb3f59


[03/17/2021 11:33 AM] kushti#0978
an it seems executables are fresh


[03/17/2021 11:35 AM] Robert K#0722
Hmm, that does seem correct now.


[03/17/2021 11:36 AM] Robert K#0722
But last night your oracle was posting out of 0.5% range which Amitabh's and mine were which was odd.


[03/17/2021 11:38 AM] kushti#0978
weird


[03/17/2021 11:56 AM] kushti#0978
should I do rescan?


[03/17/2021 11:59 AM] kushti#0978
other than that, I am ready


[03/17/2021 12:12 PM] Robert K#0722
If you registered the new scans before amitabh did anything then theoretically you should be good.


[03/17/2021 12:12 PM] Robert K#0722
But I guess that is the question.


[03/17/2021 12:13 PM] scalahub#2618
@kushti have you started oracle with new parama?


[03/17/2021 12:19 PM] kushti#0978
v1? no


[03/17/2021 12:19 PM] kushti#0978
@scalahub


[03/17/2021 12:20 PM] kushti#0978
@scalahub are you sure config.yaml is the same as in v0 ?


[03/17/2021 12:34 PM] scalahub#2618
No it's different


[03/17/2021 12:35 PM] scalahub#2618
Give me 10 mins.. will be back


[03/17/2021 12:35 PM] scalahub#2618
I'll double check and resend the yaml


[03/17/2021 12:42 PM] scalahub#2618
In fact let's do after dev meeting


[03/17/2021 12:50 PM] kushti#0978
ok


[03/17/2021 12:50 PM] kushti#0978
@scalahub are you not running your oracle now ?


[03/17/2021 12:57 PM] scalahub#2618
My datapoint
```Oracle Datapoint State
--------------------
Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 446945
========================================================
```


[03/17/2021 12:58 PM] scalahub#2618
@kushti We will be starting v1 now as per the above plan (Step 3)


[03/17/2021 1:00 PM] scalahub#2618
config for v1 (you need to change your oracle address in line 17)

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821729739021746206/oracle-config-v1.yaml


[03/17/2021 1:01 PM] scalahub#2618
so the steps to follow are:
1. copy current oracle "hardned..." folder and delete scanIDs.json


[03/17/2021 1:01 PM] scalahub#2618
2. replace yaml with above one (and your address) and run oracle core


[03/17/2021 1:02 PM] scalahub#2618
Im assuming you are running on a different computer than the current oracle.. in which case thats all you need to do. You can use a different address too


[03/17/2021 1:12 PM] kushti#0978
@scalahub so contract addresses / minConsensus are the same ?


[03/17/2021 1:13 PM] scalahub#2618
no they are different from v0


[03/17/2021 1:14 PM] scalahub#2618
minConsensus gone from 3 -> 2


[03/17/2021 1:14 PM] scalahub#2618
and new contract for 2 addresses


[03/17/2021 1:14 PM] scalahub#2618
```# Address of the pool's "Live Epoch" contract
live_epoch_contract_address: "NTkuk55NdwCZHxPjkWGK2MTkqHopVcbbLYTN4Dt3AMVwT7ynhGR5nzdpLQzN9UyBtRud5TFcj3YetaJXvWcRUeFz5LyJSxSmMtU3TLRk8SpqPcm41o2nBiLUUZiH88Fscaetgc3hbueYA6vhaV4we6CG1LPmkriiPUtbAEKFmW4d7oSyqEDTcqCGpUu5Q2n1Z7HWBvJboqvYuiKNinuRTGh4CwCSjuw6KULtANp2CRT3jirdRQpkoDfmXCMJg2RZyJM9rwuhbwSG1LdoTdBfxqfnjuQCTv8y99oAezMxCQXwWNrWhUTEAgCp8NUqhc8mh2KR38tdXXqYRdijfKfYWe1SYVBe9WbWpDjqtWNkxewAw988PEkvQrm7kzPNhgfy21d15WVnvKuRvEubmFNJ1TY29GhyJw4nQwjhKQiVvGBvDZ4gwoJVqDA8EDzmDu2kaFRqrWUQh9VYmQnUwfJTQVK4xVth6Hx5xoemWsWE95JGcTTUCLUB6FauqqUCFhNMrmeG3yy6F3LkHCzxCUHaWGpbqTxkpRutxFq1qQ8PV8B2YxTDayiouA67Y6"
# Address of the pool's "Epoch Preparation" contract
epoch_preparation_contract_address: "2Qgfhy6m7AAnaiF2eRwbGAYY4HdhX6CRchm6wRAv8LPVrEA9v3V9GkGbwmX3ThtiDCkwseG3wedMawUAVdcQy7uLQucyBFaeuQaVDNDpV7P4riFqk9WFcZw21CR31oCBrqUnxALGTK2UuYhz8HEjMF1qPcAsnCpgY8kmLgrXvTpzEn3yppytH8cU6WcAwSmoKDk49goUoyYpGSFJesEFiEfJdVPnS5BDnVVmuqvEGJZcaACzQxoUzqmWYNeayMET9a6iD7u6YWYQyV9nfvkGkv3N1XiumKMrVGB9AbBqMwuwV2R25TBEU8wx4KUnyfb2PduXMRKFiwDXEs7xNcLoF4RGdigHyYzH5Gkwrg8B8cJhG9jGPJQwovNDxBZcKWK6wTdDC7ZgD8YAni2kG53Qzpj1KEu3twqEBifuVo88tU6VMDSVgQBFdokMwUFKqKXYsqKJZWbhiMaJx46wsMN61eVsKTtHWDwCiZtLmb"
```


[03/17/2021 1:14 PM] scalahub#2618
consensus_num: 2


[03/17/2021 1:15 PM] scalahub#2618
also this is different --> minimum_pool_box_value: 17000000


[03/17/2021 1:15 PM] scalahub#2618
rest all same


[03/17/2021 1:16 PM] scalahub#2618
(earlier I had sent a yaml marked v2 but that is actually v1.. we have not started v2 yet)


[03/17/2021 1:33 PM] kushti#0978
have to run, will be around in 1.5 hrs


[03/17/2021 1:33 PM] kushti#0978
will run the oracle then


[03/17/2021 1:44 PM] scalahub#2618
sure I'll back in an hour or so as well


[03/17/2021 4:54 PM] kushti#0978
@scalahub so let's proceed ?


[03/17/2021 4:54 PM] scalahub#2618
yes Im ready


[03/17/2021 4:55 PM] scalahub#2618
so can you do above steps?


[03/17/2021 5:00 PM] kushti#0978
yes, going to do that


[03/17/2021 5:16 PM] kushti#0978
both steps done, is rescan needed ?


[03/17/2021 5:16 PM] scalahub#2618
no


[03/17/2021 5:16 PM] kushti#0978
The UTXO-Set scans have not found all of the oracle pool boxes yet.

Error: No Boxes Found For Local Oracle Datapoint Scan


[03/17/2021 5:16 PM] kushti#0978
ok


[03/17/2021 5:16 PM] scalahub#2618
gimme few mins


[03/17/2021 5:16 PM] scalahub#2618
keep oracle running


[03/17/2021 5:17 PM] scalahub#2618
whats the address in the config yaml?


[03/17/2021 5:18 PM] kushti#0978
9eh9WDsRAsujyFx4x7YeSoxrLCqmhuQihDwgsWVqEuXte7QJRCU


[03/17/2021 5:20 PM] kushti#0978
@scalahub


[03/17/2021 5:22 PM] scalahub#2618
bootstrapped your datapoint


[03/17/2021 5:22 PM] scalahub#2618
it should pick up on 1 conf
https://explorer.ergoplatform.com/en/transactions/ff70b5cff85e22c36b5e81db88bb13073ca8205a574f5dbe040a76b84a2089ac


[03/17/2021 5:24 PM] scalahub#2618
hmm we will have to fix the datapoint issue as well.


[03/17/2021 5:24 PM] scalahub#2618
because we need to get box into prep stage before we can update


[03/17/2021 5:25 PM] scalahub#2618
now its stuck in live stage because not able to collect datapoints


[03/17/2021 5:26 PM] kushti#0978
Current Blockheight: 447090
Current Tx Base Fee: 1100000
Pool Posting Schedule: 6 Blocks
Oracle Pool NFT ID: 008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339
========================================================
Pool Deposits State
--------------------
Number Of Deposit Boxes: 0
Total nanoErgs In Deposit Boxes: 0
Failed to find Epoch Preparation Box or Live Epoch Box.
========================================================

Oracle Datapoint State
--------------------
Your Latest Datapoint: 0
Datapoint Origin Epoch ID: 01
Submitted At: 447088
========================================================


[03/17/2021 5:28 PM] kushti#0978
So what's going on ?


[03/17/2021 5:29 PM] scalahub#2618
here is my output
```========================================================
Current Blockheight: 447092
Current Tx Base Fee: 1100000
Pool Posting Schedule: 6 Blocks
Oracle Pool NFT ID: 008a94c8c76bbaa1f0a346697d1794eb31d94b37e5533af9cc0b6932bf159339
========================================================
Pool Deposits State
--------------------
Number Of Deposit Boxes: 0
Total nanoErgs In Deposit Boxes: 0

Live Epoch State
-----------------
Total Pool Funds: 53000000
Latest Pool Datapoint: 572904603
Live Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Commit Datapoint In Live Epoch: true
Live Epoch Ends: 446421

Oracle Datapoint State
--------------------
Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 447090
========================================================

Failed collecting datapoints. The minimum consensus number could not be reached, meaning that an insufficient number of oracles posted datapoints within the deviation range.
Datapoint has been reposted recently. Waiting for other oracles to repost before retrying once again.
```


[03/17/2021 5:31 PM] scalahub#2618
@kushti what about your v0 oracle?


[03/17/2021 5:31 PM] kushti#0978
it is down now


[03/17/2021 5:31 PM] scalahub#2618
the one that was running since yesterday


[03/17/2021 5:31 PM] scalahub#2618
we need to fix that..


[03/17/2021 5:31 PM] scalahub#2618
else I can boot another oracle


[03/17/2021 5:32 PM] scalahub#2618
and will post another datapoint then once its in epoch prep stage I can update.. now not possible to update


[03/17/2021 5:32 PM] scalahub#2618
but it will need rescan


[03/17/2021 5:32 PM] kushti#0978
I am confused, what to do and why ?


[03/17/2021 5:33 PM] scalahub#2618
well we need to update from v0 to v1


[03/17/2021 5:33 PM] scalahub#2618
but v0 is now in live epoch and update is not possible


[03/17/2021 5:33 PM] scalahub#2618
so we need to post 3 valid datapoints and then the collect operation will bring it back to prep stage


[03/17/2021 5:34 PM] scalahub#2618
so if your oracle is down, I will bootstrap another and get it done


[03/17/2021 5:34 PM] scalahub#2618
(old oracle)


[03/17/2021 5:35 PM] kushti#0978
ah lemme run v0 in parallel?


[03/17/2021 5:35 PM] scalahub#2618
yes you can


[03/17/2021 5:36 PM] kushti#0978
`Submit Datapoint` Transaction Has Been Posted.
Transaction Id: "a6e04a1a316bd12437c21318c4e839a393035dfeb06041a977a2ba987964cd6c"
--------------------------------------------------


[03/17/2021 5:40 PM] scalahub#2618
what is the datapoint?


[03/17/2021 5:42 PM] kushti#0978
Your Latest Datapoint: 483091787
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 447079
========================================================


[03/17/2021 5:43 PM] scalahub#2618
I think you still running old version of core?
```Your Latest Datapoint: 570097370
Datapoint Origin Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Submitted At: 447092
```


[03/17/2021 5:48 PM] scalahub#2618
or maybe some issue with my side.. I've bootstrapped another oracle as well.. lets see if it posts (without rescan)


[03/17/2021 5:55 PM] scalahub#2618
how to resubmit datapoint?


[03/17/2021 5:56 PM] kushti#0978
I rebuilding the core just in case


[03/17/2021 6:12 PM] kushti#0978
Well, oracle core is the same after rebuilding


[03/17/2021 6:12 PM] kushti#0978
Submit New Erg-USD Datapoint: 467289719
Transaction ID: 5aa9d2ee379468f2a5613d0d1ce5192e2b2f475689f1b533da5ea850d5c05a4c


[03/17/2021 6:13 PM] scalahub#2618
let me do a rescan then


[03/17/2021 6:13 PM] scalahub#2618
Do you know how to submit manually datapoint?


[03/17/2021 6:14 PM] scalahub#2618
My new oracle booted but its not submitting datapoint..
```Live Epoch State
-----------------
Total Pool Funds: 53000000
Latest Pool Datapoint: 572904603
Live Epoch ID: de55716aadb81d8a446205dcc34ed7eaa5466f57b516900745e7d063d6b839db
Commit Datapoint In Live Epoch: false
Live Epoch Ends: 446421

Oracle Datapoint State
--------------------
Your Latest Datapoint: 0
Datapoint Origin Epoch ID: 01
Submitted At: 447096```


[03/17/2021 6:16 PM] kushti#0978
v1 ?


[03/17/2021 6:16 PM] scalahub#2618
v0


[03/17/2021 6:16 PM] scalahub#2618
(new oracle I just booted)


[03/17/2021 6:17 PM] scalahub#2618
nvm I'm rescanning.. will report back in 2 hours or so


[03/17/2021 6:23 PM] kushti#0978
@scalahub will oracle pool NFT be the same ?


[03/17/2021 6:23 PM] kushti#0978
for the real pool


[03/17/2021 6:23 PM] scalahub#2618
thats the plan but only after the update goes successfully I will confirm


[03/17/2021 6:38 PM] scalahub#2618
keep your v1 oracle running btw @kushti


[03/17/2021 6:39 PM] scalahub#2618
I've got two extra tokens for v0, so I've bootstrapped 2 other oracles of v0..(all 3 running in parallel), so after rescan we should be able to get consensus


[03/17/2021 6:46 PM] kushti#0978
ok


[03/17/2021 6:46 PM] kushti#0978
I've put into eIP-15


[03/17/2021 6:46 PM] kushti#0978
val oraclePoolNFT = fromBase64("AIqUyMdruqHwo0ZpfReU6zHZSzflUzr5zAtpMr8Vkzk=")


[03/17/2021 6:46 PM] kushti#0978
please check on your side


[03/17/2021 8:10 PM] scalahub#2618
@kushti can you run your oracle core?


[03/17/2021 8:10 PM] scalahub#2618
for some reason the datapoints not getting collected.


[03/17/2021 8:10 PM] scalahub#2618
for v0


[03/17/2021 8:20 PM] kushti#0978
ok sec


[03/17/2021 8:20 PM] kushti#0978
@scalahub for update protocol


[03/17/2021 8:20 PM] kushti#0978
def validBallotSubmissionBox(b:Box) = b.tokens(0)._1 == ballotTokenId &&
                                              b.R4[Coll[Byte]].get == newValue && // ensure that vote is for the newValue
                                              b.R5[Coll[Byte]].get == SELF.id  // ensure that vote counts only once
       
        val ballots = CONTEXT.dataInputs.filter(validBallotSubmissionBox)


[03/17/2021 8:21 PM] kushti#0978
how this prevents from duplicating voting boxes in dataInputs ?


[03/17/2021 8:23 PM] scalahub#2618
hmm looks like it doesn't.. so we can duplicate data inputs?


[03/17/2021 8:23 PM] kushti#0978
yes, sure


[03/17/2021 8:25 PM] kushti#0978
Submit New Erg-USD Datapoint: 438596491
Transaction ID: c221aded6befc8f5713c47a2ffc5bb19a8bd72f82455c2fbef67b67b136c4dd8


[03/17/2021 8:26 PM] scalahub#2618
need to fix that issue


[03/17/2021 8:27 PM] kushti#0978
Failed collecting datapoints. The minimum consensus number could not be reached, meaning that an insufficient number of oracles posted datapoints within the deviation range.
Triggering a datapoint repost from the Connector.


[03/17/2021 8:30 PM] kushti#0978
"b.R5[Coll[Byte]].get == SELF.id  // ensure that vote counts only once" - the comment is wrong


[03/17/2021 8:31 PM] scalahub#2618
this is not related to "once per tx" but rather "once per update"


[03/17/2021 8:31 PM] scalahub#2618
so comment needs to be fixed


[03/17/2021 8:31 PM] scalahub#2618
how to fix btw?


[03/17/2021 8:36 PM] kushti#0978
the proper formulation would be "the vote is indeed for the update required"


[03/17/2021 8:37 PM] kushti#0978
the simplest option maybe is to convert data input box ids to big int and then check that data inputs are sorted, like in one DEX contract :


[03/17/2021 8:37 PM] kushti#0978
val boxesAreSortedByTokenPrice = { (boxes: Coll[Box]) => 
        boxes.fold((0L, true), { (t: (Long, Boolean), box: Box) => 
          val prevBoxTokenPrice = t._1
          val isSorted = t._2
          val boxTokenPrice = box.R5[Long].getOrElse(0L)
          (boxTokenPrice, isSorted && boxTokenPrice >= prevBoxTokenPrice)
        })._2
      }


[03/17/2021 8:46 PM] kushti#0978
@scalahub actually , simpler option is to put votes in inputs, why do you need to put them into data inputs ?


[03/17/2021 8:46 PM] scalahub#2618
yes was thinking same


[03/17/2021 8:46 PM] scalahub#2618
inputs is easier


[03/17/2021 8:47 PM] scalahub#2618
we have same issue with collect datapoints too?


[03/17/2021 8:47 PM] scalahub#2618
in that case those should be inputs too


[03/17/2021 8:48 PM] kushti#0978
sorry ?


[03/17/2021 8:49 PM] scalahub#2618
collect datapoints also uses them as datainputs


[03/17/2021 8:51 PM] kushti#0978
for oracle pool update ?


[03/17/2021 8:51 PM] kushti#0978
or datapoints collection


[03/17/2021 8:52 PM] scalahub#2618
both actually üôÇ


[03/17/2021 8:52 PM] kushti#0978
https://www.ergoforum.org/t/data-inputs-semantics/654

{Embed}
https://www.ergoforum.org/t/data-inputs-semantics/654
Data Inputs Semantics
Ergo derives from Bitcoin UTXO model, where a transaction is consuming some one-time coins (inputs) and creating new one-time coins (outputs). But it also allows for read-only inputs, also called data inputs.  Data inputs are very efficient (about just 32 bytes per data input is to be put into transaction), provide possibility to read arbitrary ...


[03/17/2021 8:53 PM] scalahub#2618
same attack applies to datapoint collection.. the only requirement is they should be sorted


[03/17/2021 8:53 PM] scalahub#2618
so we need to also consider the same solution


[03/17/2021 8:53 PM] kushti#0978
why datapoints are data inputs ?


[03/17/2021 8:54 PM] scalahub#2618
yes


[03/17/2021 8:54 PM] scalahub#2618
not sure why but think we assumed they cannot be duplicated


[03/17/2021 8:54 PM] scalahub#2618
making them inputs should solve this


[03/17/2021 8:58 PM] kushti#0978
meanwhile


[03/17/2021 8:58 PM] kushti#0978
--------------------------------------------------
`Create New Epoch` Transaction Has Been Posted.
Transaction Id: "e7d8726a3c16a79f8acf515927099ad1f8723678b8a4d38243449d2e542a423f"
--------------------------------------------------


[03/17/2021 8:58 PM] kushti#0978
so somehow oracles agreed


[03/17/2021 8:58 PM] scalahub#2618
I had to manually craft a tx


[03/17/2021 8:59 PM] scalahub#2618
from a different set of oracles


[03/17/2021 8:59 PM] scalahub#2618
(for collection)


[03/17/2021 8:59 PM] scalahub#2618
but the new epoch happened automatically


[03/17/2021 8:59 PM] kushti#0978
but now we need to fix a lot of stuff it seems @Robert K @scalahub


[03/17/2021 8:59 PM] scalahub#2618
yes we will have to hold. lets come back to this tomorrow


[03/17/2021 9:00 PM] scalahub#2618
I will fix the issues you found and then make fresh update


[03/17/2021 9:00 PM] kushti#0978
So we need to update 3 contracts it seems


[03/17/2021 9:00 PM] scalahub#2618
for oracle 2 and for stablecoin 1


[03/17/2021 9:00 PM] kushti#0978
* bank update
* oracle pool update
* datapoints collection

+ offchain parts


[03/17/2021 9:08 PM] scalahub#2618
so lets plan as follows:
1. I'll fix the contracts for oracle pool collection+ pool update contract
2. Once done @Robert K can update the offchain and then we figure out deployment plan


[03/17/2021 9:10 PM] scalahub#2618
We would need to test it once between 3 of us (dummy token ids) and then move to production with new token ids


[03/17/2021 9:10 PM] kushti#0978
@scalahub also, why voteSuccessPath || updatePath ?


[03/17/2021 9:11 PM] Robert K#0722
So what is the issue exactly with data inputs?


[03/17/2021 9:11 PM] scalahub#2618
can you elaborate whats the issue here?


[03/17/2021 9:12 PM] scalahub#2618
data inputs can be duplicated


[03/17/2021 9:12 PM] Robert K#0722
I actually don't have the time to do anything for the oracle core this week and next week


[03/17/2021 9:12 PM] Robert K#0722
Oh, the same input can be?


[03/17/2021 9:13 PM] scalahub#2618
yes unfortunately


[03/17/2021 9:13 PM] Robert K#0722
That is a weird design decision


[03/17/2021 9:14 PM] kushti#0978
You liked this about 5 weeks ago https://www.ergoforum.org/t/data-inputs-semantics/654

{Embed}
https://www.ergoforum.org/t/data-inputs-semantics/654
Data Inputs Semantics
Ergo derives from Bitcoin UTXO model, where a transaction is consuming some one-time coins (inputs) and creating new one-time coins (outputs). But it also allows for read-only inputs, also called data inputs.  Data inputs are very efficient (about just 32 bytes per data input is to be put into transaction), provide possibility to read arbitrary ...


[03/17/2021 9:14 PM] scalahub#2618
if we think about it .. kind of makes sense because its not being spent


[03/17/2021 9:14 PM] Robert K#0722
That sounds like it significantly breaks a lot of use cases for days inputs


[03/17/2021 9:14 PM] Robert K#0722
Yes but i read it at data inputs can be duplicated in a block


[03/17/2021 9:14 PM] Robert K#0722
Which makes sense


[03/17/2021 9:14 PM] Robert K#0722
But i read it wrong


[03/17/2021 9:15 PM] kushti#0978
"data inputs of a transaction may be duplicated" - I guess the statement is pretty clear


[03/17/2021 9:16 PM] Robert K#0722
Yes but i skimmed it most likely because i just finished coordinating the ergo summit and getting everything ready for StableCoin


[03/17/2021 9:16 PM] Robert K#0722
This would have been good to think about during the oracle pool design


[03/17/2021 9:17 PM] kushti#0978
Right


[03/17/2021 9:18 PM] Robert K#0722
But without any clear specs it was easy to overlook it seems


[03/17/2021 9:20 PM] scalahub#2618
I guess not allowing data inputs to repeat in a tx is not in the plan?


[03/17/2021 9:20 PM] Robert K#0722
But yeah i just don't have time to work on the oracle core and fix this anymore. That said it shouldn't be too hard to convert the rust code which creates tx requests with data inputs to normal inputs


[03/17/2021 9:21 PM] Robert K#0722
Tbh this should have been part of the hard fork


[03/17/2021 9:21 PM] kushti#0978
Yellow paper contains a rule for inputs uniqueness (#107), but no such rule for data inputs


[03/17/2021 9:21 PM] kushti#0978
Why ?


[03/17/2021 9:21 PM] kushti#0978
There was no any proposal about that


[03/17/2021 9:21 PM] Robert K#0722
Fair, but it's not like we're going to try to every rule of the yellow paper when designing protocols


[03/17/2021 9:22 PM] Robert K#0722
How are we supposed to keep up with all of these rules with no docs?


[03/17/2021 9:22 PM] kushti#0978
Well, the spec existed at least


[03/17/2021 9:22 PM] Robert K#0722
Data inputs are useful to accumulate data that you can't spend


[03/17/2021 9:23 PM] Robert K#0722
If you can accumulate one box multiple times, that destroys that design pattern and has no benefits that i can think of


[03/17/2021 9:23 PM] kushti#0978
Well, to make something in a HF, there should be proposal, discussions and so on


[03/17/2021 9:23 PM] kushti#0978
Who will do the Rust code ?


[03/17/2021 9:24 PM] Robert K#0722
That's a good question.


[03/17/2021 9:24 PM] Robert K#0722
This should have been pointed out by one of you guys when working on the oracle core/pools in the first place.


[03/17/2021 9:24 PM] Robert K#0722
As you are more familiar with the yellow paper


[03/17/2021 9:24 PM] Robert K#0722
We had time back then allocated to do fixes


[03/17/2021 9:25 PM] Robert K#0722
I don't have infinite time anymore to make these changes and keep up with all of this


[03/17/2021 9:25 PM] Robert K#0722
And Emurgo is getting pissy with me too


[03/17/2021 9:26 PM] Robert K#0722
With my time dedicated to this but only a 1 time small grant


[03/17/2021 9:26 PM] kushti#0978
Ok, then we have to cancel SigmaUSD release and recommend not to use oracle pools,


[03/17/2021 9:27 PM] Robert K#0722
So you literally want to destroy all hope in Ergo for the community?


[03/17/2021 9:27 PM] Robert K#0722
Rather than find someone to make some edits


[03/17/2021 9:28 PM] scalahub#2618
there may be simpler fix to use in data inputs?


[03/17/2021 9:28 PM] scalahub#2618
like we check that for each data input box id exists only once


[03/17/2021 9:28 PM] kushti#0978
Well, with no responsibility for the work done from Emurgo why should others take it ?


[03/17/2021 9:29 PM] Robert K#0722
So it's our responsibility when we don't know literally everything about Ergo and you guys don't clarify anything about how data inputs work even after half a year of oracle pools existing?


[03/17/2021 9:30 PM] Robert K#0722
It's our responsibility when Amitabh fu cks up the update protocol and breaks the StableCoin


[03/17/2021 9:31 PM] Robert K#0722
Like wtf man, I have put so much time and effort into this shit and wanted to see it succeed


[03/17/2021 9:31 PM] Robert K#0722
But if something goes wrong we just take all the responsibility?


[03/17/2021 9:31 PM] kushti#0978
Nope


[03/17/2021 9:31 PM] kushti#0978
I realized  issues, made my part, Amitabh is making his


[03/17/2021 9:31 PM] kushti#0978
But then what to do with Emurgo's part ?


[03/17/2021 9:32 PM] Robert K#0722
We've been supporting this entire dabacle of the stablecoin for the past month


[03/17/2021 9:32 PM] Robert K#0722
We were supposed to create the stablecoin + oracle pools with Emurgo + Ergo devs


[03/17/2021 9:33 PM] Robert K#0722
It was created and we've been doing our best to make sure nothing implodes


[03/17/2021 9:33 PM] Robert K#0722
But I've litterally been telling people above me in the company everything is finished for the past 1.5 months


[03/17/2021 9:33 PM] Robert K#0722
And they keep saying that we've done too much already based on the funding we received from the grant


[03/17/2021 9:34 PM] kushti#0978
Working stablecoin + pools or what we have now ?


[03/17/2021 9:35 PM] Robert K#0722
I don't get what you want from me, sure you're pissed I get it, but what we're supposed to figure everything about Ergo ourselves and take all responsibility?


[03/17/2021 9:35 PM] Robert K#0722
You and your team created the system


[03/17/2021 9:35 PM] Robert K#0722
Why is it our fault when data-inputs fuck up everything


[03/17/2021 9:35 PM] scalahub#2618
Lets talk about the fix that does not involve major overhaul of the code


[03/17/2021 9:35 PM] Robert K#0722
Why is it our fault when the deployed stablecoin breaks everything because of shitty update protocol


[03/17/2021 9:35 PM] kushti#0978
This is joint work isn't it ?


[03/17/2021 9:35 PM] scalahub#2618
so I believe we can get away with data inputs for collection


[03/17/2021 9:36 PM] Robert K#0722
So if stuff keeps fucking up for infinity we just need to keep giving resources


[03/17/2021 9:36 PM] Robert K#0722
Especially on these two incidents we had no knowledge or power to prevent it


[03/17/2021 9:37 PM] Robert K#0722
You're the Ergo experts who built the system, how are we supposed to look at literally every single detail by ourselves


[03/17/2021 9:37 PM] Robert K#0722
And by "us" at Emurgo, it's literally just me for all the smart contract suff


[03/17/2021 9:37 PM] Robert K#0722
So I'm just supposed to look at literally everything Amitabh has ever done


[03/17/2021 9:37 PM] Robert K#0722
Before he deploys or does anything


[03/17/2021 9:37 PM] Robert K#0722
So he doesn't break the stablecoin


[03/17/2021 9:38 PM] Robert K#0722
I need to read every whitepaper, yellow paper, forum post, and random discord comment you make


[03/17/2021 9:38 PM] Robert K#0722
So I know the oracle pools aren't broken even though you don't say anything for months


[03/17/2021 9:38 PM] Robert K#0722
Like fuck man


[03/17/2021 9:39 PM] kushti#0978
You can always ask questions, the forum post appeared after some question.


[03/17/2021 9:39 PM] Robert K#0722
I got Emurgo to work on Ergo by myself and carried this shit for months and months with people above me saying it was a stupid grant


[03/17/2021 9:39 PM] kushti#0978
I can't look after everything also.


[03/17/2021 9:39 PM] scalahub#2618
tbh the update protocol was a last-minute patch taken from stablecoin and inserted into oracle pool. And oraclepool was not really created by me


[03/17/2021 9:39 PM] kushti#0978
So I am making as much public info as possible.


[03/17/2021 9:39 PM] scalahub#2618
we should have tested the update before hardwiring to stablecoin


[03/17/2021 9:40 PM] Robert K#0722
Genuinely if you want me to fuck off after I did my best in 2020 supporting a tiny project that no one gave a shit about, then sure just blame me


[03/17/2021 9:40 PM] Robert K#0722
I spent the majority of 2020 supporting this shit with the majority of my weekends doing something for Ergo


[03/17/2021 9:40 PM] Robert K#0722
doing the Ergo cast


[03/17/2021 9:41 PM] Robert K#0722
editing articles


[03/17/2021 9:41 PM] Robert K#0722
helping build examples for smart contracts


[03/17/2021 9:41 PM] Robert K#0722
and 200 other things


[03/17/2021 9:41 PM] Robert K#0722
And I had to keep Emurgo happy because Ergo looked like a shit deal


[03/17/2021 9:41 PM] Robert K#0722
And now when shit goes a bit bad, we're just supposed to infinitely keep doing more work


[03/17/2021 9:41 PM] Robert K#0722
And it's our fault


[03/17/2021 9:42 PM] Robert K#0722
Like genuinely do you want me just to leave and fuck off from Ergo?


[03/17/2021 9:42 PM] Robert K#0722
Why would anyone want to build on an ecosystem like this if this is what you expect?


[03/17/2021 9:43 PM] kushti#0978
How can we build an ecosystem if something broken must be considered as finished because a tiny project must be okay with that ?


[03/17/2021 9:44 PM] kushti#0978
I am pretty confused.


[03/17/2021 9:44 PM] Robert K#0722
Okay, so we just need to take all responsibility for everything if something goes wrong.


[03/17/2021 9:44 PM] kushti#0978
Well, we need to fix the things ?


[03/17/2021 9:45 PM] Robert K#0722
What have the past 1.5 months been?


[03/17/2021 9:46 PM] scalahub#2618
@Robert K you said you will continue working on core


[03/17/2021 9:47 PM] Robert K#0722
I said I'll just keep working on it forever, on demand, whenever you need it, with major upgrades?


[03/17/2021 9:48 PM] scalahub#2618
well I had in mind usual bug fixes


[03/17/2021 9:48 PM] scalahub#2618
and updates


[03/17/2021 9:48 PM] scalahub#2618
but I can also start looking at the code since you don't have time anymore


[03/17/2021 9:49 PM] kushti#0978
I am ready to hire a Rust dev


[03/17/2021 9:49 PM] scalahub#2618
better that this flaw is discovered now than after launch


[03/17/2021 9:49 PM] kushti#0978
but as this could be slow process


[03/17/2021 9:50 PM] kushti#0978
for now we need likely to have some announcement, better from Emurgo\


[03/17/2021 9:50 PM] scalahub#2618
yes rust dev would be good


[03/17/2021 9:51 PM] scalahub#2618
for a quick fix, we could test in smart contract itself and not touch offchain


[03/17/2021 9:52 PM] kushti#0978
data inputs sorting ?


[03/17/2021 9:52 PM] scalahub#2618
would it not work?.. for each datainput, count the number of boxes with same box id and ensure its 1


[03/17/2021 9:52 PM] scalahub#2618
datainput sorting is already there for datapoints


[03/17/2021 9:52 PM] kushti#0978
O(N^2) operation


[03/17/2021 9:53 PM] kushti#0978
with strict inequality ?


[03/17/2021 9:53 PM] kushti#0978
how comparison works?


[03/17/2021 9:53 PM] scalahub#2618
no they can be equal


[03/17/2021 9:54 PM] scalahub#2618
box(i) >= box(i+1)


[03/17/2021 9:54 PM] kushti#0978
it does not work then


[03/17/2021 9:54 PM] scalahub#2618
why is O(N^2) a problem? for 5 boxes?


[03/17/2021 9:55 PM] kushti#0978
well,  with current AOT costing such expressions could be impossible to express even


[03/17/2021 9:56 PM] kushti#0978
e.g. fold/flatmap closure args likely can't receive collections


[03/17/2021 10:02 PM] scalahub#2618
or we can add another simple condition that 
```if (datapoint(i) == datapoint(i+1)) then boxId(i) > boxId(i+1)```


[03/17/2021 10:03 PM] kushti#0978
for datapoints case could work


[03/17/2021 10:03 PM] kushti#0978
but for updates ?


[03/17/2021 10:03 PM] scalahub#2618
update is not part of oracle core so its manual


[03/17/2021 10:03 PM] scalahub#2618
we can spend the vote box


[03/17/2021 10:04 PM] scalahub#2618
for update its even simpler because there is no pre-sorting due to datapoint


[03/17/2021 10:04 PM] scalahub#2618
so we could also continue data input


[03/17/2021 10:06 PM] kushti#0978
for the update protocol , if we're going with greenhat's fold, better to replace most significant byte to 0 to have unsigned bigint


[03/17/2021 10:07 PM] scalahub#2618
hmmm yes good idea


[03/17/2021 10:07 PM] scalahub#2618
whats issue with signed?


[03/17/2021 10:11 PM] scalahub#2618
For update we can look at both .. inputs can also work. because the this can be done manually


[03/17/2021 10:12 PM] scalahub#2618
and fold is also not an issue because update is very rare


[03/17/2021 10:13 PM] scalahub#2618
I'll get the fixed contracts for oracle pool ready by tomorrow hopefully
1. using the above check on box id if datapoint is equal for collection
2. using fold for update (keeping votes as data inputs)


[03/17/2021 10:18 PM] scalahub#2618
why is signed a problem and how to replace MSB?


[03/17/2021 10:18 PM] kushti#0978
then you need to provide correct min value


[03/17/2021 10:19 PM] scalahub#2618
hmm ok instead of 0


[03/17/2021 10:20 PM] scalahub#2618
or there are some workarounds like using the first and last values and checking < condition only.. see oracle collection code


[03/17/2021 10:27 PM] kushti#0978
first value - 1 and > condition only ?


[03/17/2021 10:35 PM] scalahub#2618
first value = boxes(0).id


[03/17/2021 10:45 PM] kushti#0978
I guess


[03/17/2021 10:47 PM] kushti#0978
val preFirstValue = boxes(0).id - 1

and then check for every box that its id > prevValue, prevValue == preFirstValue initially


[03/17/2021 10:49 PM] scalahub#2618
yes that works too.. ,probably cleaner


[03/17/2021 11:03 PM] scalahub#2618
@kushti how to convert box id to bigInt?


[03/17/2021 11:08 PM] scalahub#2618
nvm its `byteArrayToBigInt`


[03/17/2021 11:39 PM] kushti#0978
yeah


[03/17/2021 11:41 PM] kushti#0978
and to replicate sorting offchain, this is implementation :


[03/17/2021 11:41 PM] kushti#0978
def byteArrayToBigInt(bytes: Coll[Byte]): BigInt = {
    val bi = new BigInteger(bytes.toArray).to256BitValueExact
    this.BigInt(bi)
  }


[03/17/2021 11:42 PM] kushti#0978
@scalahub do we have .tail in ErgoScript?


[03/17/2021 11:42 PM] kushti#0978
please remove MSB


[03/17/2021 11:43 PM] kushti#0978
then no worries about   .to256BitValueExact semantics


[03/17/2021 11:44 PM] scalahub#2618
checking


[03/17/2021 11:44 PM] scalahub#2618
for collection this is the fixed contract.. please review

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821891756785139722/message.txt


[03/17/2021 11:44 PM] scalahub#2618
line 37 and 43


[03/17/2021 11:56 PM] scalahub#2618
For update, is this version ok without MSB

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/821894840957534228/message.txt


[03/17/2021 11:57 PM] scalahub#2618
lines 32-41


[03/17/2021 11:57 PM] kushti#0978
only two lines changed ?


[03/17/2021 11:57 PM] kushti#0978
doing some tests on my side


[03/17/2021 11:58 PM] scalahub#2618
yes two lines with the important checks and then related references in two other lines


[03/17/2021 11:59 PM] scalahub#2618
To be precise following changes in the collection


[03/18/2021 12:00 AM] kushti#0978
should be ok without stripping MSB  off it seems


[03/18/2021 12:01 AM] scalahub#2618
lines 27, 29, 35 - 37 and 43


[03/18/2021 12:02 AM] kushti#0978
looks good


[03/18/2021 12:02 AM] kushti#0978
will do another round in my morning


[03/18/2021 12:02 AM] kushti#0978
then I'll update EIP


[03/18/2021 12:02 AM] scalahub#2618
same.. I'll write scalatests for the edge cases


[03/18/2021 12:04 AM] scalahub#2618
what about this comment? any confusion here?


[03/18/2021 12:08 AM] kushti#0978
why || ?


[03/18/2021 12:09 AM] kushti#0978
but let's continue in the morning )


[03/18/2021 12:09 AM] scalahub#2618
ok


[03/18/2021 12:09 AM] kushti#0978
please take some rest


[03/18/2021 12:13 AM] scalahub#2618
hopefully cost wont be too high.. will do on chain tests tomorrow


[03/18/2021 6:27 AM] scalahub#2618
have pushed fixed contracts to github https://github.com/scalahub/OraclePool/blob/8629d216cf11f56efe941eb2e3a697a0041bef62/src/main/scala/oraclepool/Contracts.scala#L81
https://github.com/scalahub/OraclePool/blob/8629d216cf11f56efe941eb2e3a697a0041bef62/src/main/scala/oraclepool/Contracts.scala#L250

And tests here 
https://github.com/scalahub/OraclePool/blob/8629d216cf11f56efe941eb2e3a697a0041bef62/src/test/scala/oraclepool/OraclePoolSpec.scala#L208-L212
https://github.com/scalahub/OraclePool/blob/d05b191b9bf70ba600dd9f143f79d7ea584e3027/src/test/scala/oraclepool/VotingSpec.scala#L120-L146

Will do on-chain tests today

{Embed}
https://github.com/scalahub/OraclePool/blob/8629d216cf11f56efe941eb2e3a697a0041bef62/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/OraclePool/blob/8629d216cf11f56efe941eb2e3a697a0041bef62/src/test/scala/oraclepool/OraclePoolSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/OraclePool/blob/d05b191b9bf70ba600dd9f143f79d7ea584e3027/src/test/scala/oraclepool/VotingSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/18/2021 7:33 AM] kushti#0978
ok going to check


[03/18/2021 7:38 AM] kushti#0978
data inputs uniqueness can be supported via a soft-fork actually


[03/18/2021 7:38 AM] kushti#0978
But we need to discuss this anyway


[03/18/2021 7:39 AM] scalahub#2618
yes that will be really nice.. of course we cannot do ad hoc changes without proper discussion..


[03/18/2021 7:43 AM] scalahub#2618
I cannot think of any use-case on the top of my head for allowing duplicates


[03/18/2021 7:54 AM] scalahub#2618
@kushti for update contract
```...
sigmaProp(
       |    validIn && (
       |      voteSuccessPath ||
       |      updatePath
       |    )
       |  )
}```
Here one path is "collect votes", where we modify the R4 of the update box (to new pool-box hash), and the other path is "update" where we generate new pool box but preserve R4 of the update box.


[03/18/2021 7:54 AM] scalahub#2618
Does it cause any issues?


[03/18/2021 7:54 AM] scalahub#2618
We will need `||` here I think


[03/18/2021 8:03 AM] scalahub#2618
For oracle core, we will only need to modify `sort_datapoint_boxes` for the additional case of equality
https://github.com/ergoplatform/oracle-core/blob/e68e87060dc09c26af972064810cedf436eb3f59/src/actions.rs#L324-L331

{Embed}
https://github.com/ergoplatform/oracle-core/blob/e68e87060dc09c26af972064810cedf436eb3f59/src/actions.rs
ergoplatform/oracle-core
Core off-chain component of Oracle Pools. Contribute to ergoplatform/oracle-core development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/-KRVlD4_nyV4m1pVCd9KQWWbk8Kzhe9Rdnel6es6kxo/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/27490654


[03/18/2021 8:55 AM] kushti#0978
looks good, going further


[03/18/2021 9:01 AM] kushti#0978
Do I need to update stablecoin bank update contract accordingly  @scalahub ?


[03/18/2021 9:01 AM] kushti#0978
Please do onchain tests


[03/18/2021 9:03 AM] kushti#0978
btw maybe we can take 8 bytes and convert to long. I imagine it would be simpler for offchain part in rust to convert 8 bytes to signed long value


[03/18/2021 9:12 AM] scalahub#2618
Not the bank contract but the stablecoin update contract should be updated. Most likely we can preserve the bank NFT


[03/18/2021 9:13 AM] scalahub#2618
I will finish them in few hours


[03/18/2021 9:14 AM] kushti#0978
https://wallet.plutomonkey.com/p2s/?source=ewogIGJ5dGVBcnJheVRvTG9uZyhmcm9tQmFzZTY0KCJleSIpLnNsaWNlKDAsIDgpKSA9PSAwCn0=


[03/18/2021 9:14 AM] kushti#0978
example with long


[03/18/2021 9:15 AM] scalahub#2618
Ok that may make more sense


[03/18/2021 9:17 AM] scalahub#2618
Maybe 7 bytes to avoid signed long?


[03/18/2021 9:18 AM] kushti#0978
yeah, sounds good


[03/18/2021 9:30 AM] kushti#0978
Maybe we can start test deployment with DarkSide ?


[03/18/2021 9:56 AM] scalahub#2618
yes can we run test deployment in parallel to my on chain testing


[03/18/2021 9:56 AM] scalahub#2618
(I am manually crafting transactions so good to test with oracle core as well)


[03/18/2021 10:55 AM] kushti#0978
@scalahub 
prevOracleBoxId < currOracleBoxId
prevOracleDataPoint >= currOracleDataPoint 

it is simpler (so better) to have the same ordering I guess


[03/18/2021 10:55 AM] kushti#0978
not a big issue though


[03/18/2021 10:56 AM] scalahub#2618
Ok you mean box prev box id > curr box id?yes should not be a problem to do it


[03/18/2021 11:28 AM] kushti#0978
@scalahub so update to be  done manually for both stablecoin and oracle pool updates ?


[03/18/2021 11:49 AM] kushti#0978
@scalahub we need to use inputs, not data inputs it seems


[03/18/2021 11:50 AM] scalahub#2618
For voting?


[03/18/2021 11:50 AM] kushti#0978
for data points collection also, but there an issue is not so critical


[03/18/2021 11:50 AM] kushti#0978
*    data input may refer to UTXO set before the first transaction of the block, or any UTXO created in the block (before the transaction or after)


[03/18/2021 11:51 AM] kushti#0978
so still you can vote with one token by submitting ballot box in the same block


[03/18/2021 11:52 AM] kushti#0978
not sure about data points aggregation contract (how data points are protected from spending), but for updates we need to fix now


[03/18/2021 11:54 AM] scalahub#2618
I see yes for update it's crucial. For data point collection also then it could be possible to attack by spending and creating new data point .


[03/18/2021 11:55 AM] scalahub#2618
The requirement to create new data point is to have outputs R5 contain box id of pool box


[03/18/2021 11:56 AM] scalahub#2618
And pool box is data input to create tx


[03/18/2021 11:58 AM] scalahub#2618
So we will still have issue of utxo created in the block before the collection tx


[03/18/2021 11:59 AM] kushti#0978
ok, let's start with update contracts


[03/18/2021 12:01 PM] scalahub#2618
Ok makes sense .. will share code soon.. major change is to just add separate spending path to ballot boxes when used for vote collection


[03/18/2021 4:25 PM] scalahub#2618
@kushti here is the modified update script
```{ // This box:
  // Registers empty 
  // 
  // ballot boxes (Inputs)
  // R4 the new control value
  // R5 the box id of this box

  // collect and update in one step now!
  val poolBoxIn = INPUTS(0) // pool is 1st input
  
  val poolBoxOut = OUTPUTS(0) // pool is the 1st output
  val updateBoxOut = OUTPUTS(1)
  
  val poolBoxOutHash = blake2b256(poolBoxOut.propositionBytes)
  
  val validPoolIn = poolBoxIn.tokens(0)._1 == poolNFT
  val validPoolOut = poolBoxIn.tokens == poolBoxOut.tokens && 
                     poolBoxIn.R4[Long].get == poolBoxOut.R4[Long].get &&
                     poolBoxIn.R5[Int].get == poolBoxOut.R5[Int].get &&
                     poolBoxIn.value == poolBoxOut.value

  
  val validUpdateIn = SELF.id == INPUTS(1).id // this is 2nd input
  
  val validUpdateOut = SELF.tokens == updateBoxOut.tokens && 
                       SELF.propositionBytes == updateBoxOut.propositionBytes &&
                       SELF.value >= updateBoxOut.value

  def validBallotSubmissionBox(b:Box) = b.tokens(0)._1 == ballotTokenId &&
                                        b.R4[Coll[Byte]].get == poolBoxOutHash && // ensure that vote is for the poolBoxOutHash
                                        b.R5[Coll[Byte]].get == SELF.id  // ensure that vote corresponds to this update only
  
  val ballotsIn = INPUTS.filter(validBallotSubmissionBox)
  
  val ballotCount = ballotsIn.fold(0L, { (accum: Long, box: Box) =>  accum + box.tokens(0)._2 })
  
  val voteAccepted = ballotCount >= $minVotes

  sigmaProp(validPoolIn && validPoolOut && validUpdateIn && validUpdateOut && voteAccepted)
}```


[03/18/2021 4:26 PM] scalahub#2618
much simpler


[03/18/2021 4:27 PM] scalahub#2618
same for stablecoin; collect and update will be single step


[03/18/2021 4:32 PM] scalahub#2618
shall I work on data point? then the two can be tested together


[03/18/2021 4:34 PM] scalahub#2618
BTW, if we had depth, we could have used depth to avoid this attack and continue to use data inputs (`box.depth > 1`)


[03/18/2021 5:39 PM] scalahub#2618
@kushti Please review the contracts for modified oracle pool. (no data inputs usage)
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
I'll be writing the tests now

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/18/2021 5:41 PM] scalahub#2618
here is side by side comparison of differences
https://github.com/scalahub/OraclePool/commit/f3e206dbb5c63271d6cd70831934d85ccb7900dd#diff-1ad9b3c7e922faad382b771065dd4780fffcf215aeef75afacefe38c4edfcca2

{Embed}
https://github.com/scalahub/OraclePool/commit/f3e206dbb5c63271d6cd70831934d85ccb7900dd
Don't use data inputs for collect or vote ¬∑ scalahub/OraclePool@f3e...
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/18/2021 6:22 PM] kushti#0978
lemme check


[03/18/2021 6:35 PM] kushti#0978
Including "inclusionHeight" is not simple, as for unconfirmed and confirmed boxes representation would be different


[03/18/2021 6:36 PM] kushti#0978
Alternative option is to authenticate the height via UTXO set auth tree, but this is also complicating things a lot


[03/18/2021 6:50 PM] scalahub#2618
for now lets just do update of stablecoin with the new logic and keep the collection using data inputs as you suggested


[03/18/2021 6:50 PM] scalahub#2618
so I will revert with my testing and new contracts tomorrow


[03/18/2021 6:51 PM] kushti#0978
much simpler indeed, looks good from the first look


[03/18/2021 6:51 PM] scalahub#2618
stablecoin + oracle


[03/18/2021 6:51 PM] kushti#0978
yes


[03/18/2021 6:51 PM] scalahub#2618
please ignore the contracts file now.. they have modified collection


[03/18/2021 6:56 PM] kushti#0978
so with stablecoin + oracle pool update contracts we can start testing in parallel


[03/18/2021 7:56 PM] kushti#0978
@scalahub so the plan would be: 
1) stablecoin + oracle pool contracts, I am reviewing them 
2) I am working with DarkSide to deploy testing stablecoin bank, you test oracle pool update
3) We test stablecoin bank update, then oracle pool update
4) Oracle pool launch
5) Stablecoin launch 

...
XX) Oracle pool update with proper datapoint collection contract


[03/18/2021 8:02 PM] scalahub#2618
Ok I'm working on update protocol test. To adapt the same for stablecoin we need to tweak a bit


[03/18/2021 8:02 PM] kushti#0978
Pretty complex contract and non-trivial changes, let's postpone a review


[03/18/2021 8:04 PM] scalahub#2618
Yes please ignore the chance to oracle pool contract.. that is, ignore the entire GitHub link . Just look at the update code I pasted above. The contract change is step XX


[03/18/2021 8:05 PM] kushti#0978
Yes


[03/18/2021 8:05 PM] kushti#0978
Update good is looking good for now, will check it for more


[03/19/2021 3:12 AM] scalahub#2618
There is also going to be a specialised voting contract that allows update action to spend the voting box while preserving the script


[03/19/2021 5:18 AM] scalahub#2618
maybe simpler to enforce that in update contract itself.. let me check


[03/19/2021 7:21 AM] scalahub#2618
I think its much cleaner to have separate voting contract. Keeps the update much simpler. Here is the voting contract (which locks voting token)
```{ // This box (ballot box):
  // R4 the value voted for (hash of the new epoch prep script)
  // R5 the box id of the update box
  // R6 the group element of the owner of the ballot token
  
  val pubKey = SELF.R6[GroupElement].get
  
  def isBasicCopy(b:Box) = b.R6[GroupElement].get == pubKey && 
                           b.propositionBytes == SELF.propositionBytes &&
                           b.tokens == SELF.tokens && b.value > $minStorageRent

  def isUpdateOut(b:Box) = isBasicCopy(b) && b.value >= SELF.value
  
  val isUpdate = INPUTS(1).tokens(0)._1 == updateNFT && OUTPUTS.exists(isUpdateOut)
  
  val isVote = proveDlog(pubKey) && OUTPUTS.exists(isBasicCopy) 
  // voter should ensure that in addition to isBasicCopy, the output should be of correct form, otherwise vote will be rejected
                           
  sigmaProp(isVote || isUpdate)
}```


[03/19/2021 7:37 AM] kushti#0978
and how update contract looks like then ?


[03/19/2021 7:38 AM] kushti#0978
your script does not contains definition for updateNFT at least


[03/19/2021 7:38 AM] kushti#0978
we can proceed with yesterday's contract


[03/19/2021 7:39 AM] kushti#0978
let's minimize changes


[03/19/2021 7:39 AM] kushti#0978
@scalahub


[03/19/2021 7:45 AM] scalahub#2618
update contract is same as yesterdays


[03/19/2021 7:45 AM] scalahub#2618
this is to allow the update contract to spend the voting box


[03/19/2021 7:45 AM] kushti#0978
do you have stablecoin bank update contract ?


[03/19/2021 7:46 AM] scalahub#2618
haven't fixed that yet.. can you wait few hours for me to finish my tests then I'll send


[03/19/2021 7:49 AM] kushti#0978
ok and please send all the contracts by then @scalahub I will have another look


[03/19/2021 7:49 AM] kushti#0978
@greenhat if you can take a quick look also would be great


[03/19/2021 8:20 AM] greenhat#6562
I'll take a look later today. Sorry, I have to deal with family medical emergency now.


[03/19/2021 8:21 AM] kushti#0978
oh best wishes

{Reactions}
üôè 

[03/19/2021 11:16 AM] kushti#0978
@scalahub any help needed ?


[03/19/2021 11:17 AM] kushti#0978
but as bank contract is using updateNFT just, I can ping DarkSide to deploy the testing bank contract


[03/19/2021 11:17 AM] kushti#0978
also going to recheck the bank contract


[03/19/2021 11:17 AM] scalahub#2618
well I'm trying to test and getting following error `Cost of transaction ErgoLikeTransactionTemplate ....  exceeds limit 1000000`


[03/19/2021 11:18 AM] kushti#0978
oracle pool NFT is fixed I guess ?


[03/19/2021 11:18 AM] kushti#0978
008A94C8C76BBAA1F0A346697D1794EB31D94B37E5533AF9CC0B6932BF1593


[03/19/2021 11:18 AM] scalahub#2618
seems like getting index etc is quite costly


[03/19/2021 11:18 AM] kushti#0978
.map is costly


[03/19/2021 11:18 AM] kushti#0978
but limit is 5+M in the mainnet now


[03/19/2021 11:18 AM] kushti#0978
where do you get the error ?


[03/19/2021 11:18 AM] kushti#0978
Can you modify context there ?


[03/19/2021 11:18 AM] scalahub#2618
Im using mocks.. maybe I can increase there


[03/19/2021 11:19 AM] scalahub#2618
basically before testing on mainnet I need to make sure the mocks work perfectly


[03/19/2021 11:19 AM] scalahub#2618
let me check by modifying mock context.. (in appkit)


[03/19/2021 11:19 AM] kushti#0978
maxBlockCost    5062531


[03/19/2021 11:19 AM] kushti#0978
in the mainnet


[03/19/2021 11:32 AM] kushti#0978
or maybe we can do some workaround if you show me contracts


[03/19/2021 11:36 AM] kushti#0978
@scalahub I am going away from the laptop to check bank contract again in silence, will check TG periodically please ping me where if something is needed


[03/19/2021 11:37 AM] greenhat#6562
Where are the contacts?


[03/19/2021 11:39 AM] kushti#0978
We are waiting for new versions from @scalahub


[03/19/2021 11:49 AM] scalahub#2618
Trying to locate the source of the error.. Will paste the code soon


[03/19/2021 12:00 PM] scalahub#2618
setting higher limit seems to work


[03/19/2021 12:00 PM] scalahub#2618
will send soon


[03/19/2021 1:38 PM] scalahub#2618
@kushti @greenhat here are the init version of the contract tested using mocks
1. Update contract: https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala#L241-L283
2. Ballot contract: https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala#L212-L237
3. Test for voting + update: https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/UpdateSpec.scala

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/UpdateSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/19/2021 1:42 PM] scalahub#2618
Due to the not-so lazy evaluation, I have to keep one dummy register in the ballot boxes (R5) Int


[03/19/2021 1:43 PM] scalahub#2618
see https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala#L246
and https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala#L274

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/19/2021 1:56 PM] kushti#0978
@scalahub going to check!


[03/19/2021 2:33 PM] kushti#0978
DarkSide is deploying test bank contract


[03/19/2021 2:33 PM] scalahub#2618
The stablecoin update will be similar.. Let me test that as well and revert


[03/19/2021 2:43 PM] kushti#0978
ok


[03/19/2021 2:44 PM] scalahub#2618
some very minor changes such as bankNFT is at index 2 and R5 is Long instead of Int


[03/19/2021 3:15 PM] kushti#0978
Contracts looking good to me


[03/19/2021 3:40 PM] greenhat#6562
I'm starting to review contacts now.

{Reactions}
üòç (2) 

[03/19/2021 3:49 PM] scalahub#2618
Added update for stablecoin as well.
1. Update contract: https://github.com/scalahub/AgeUSD/blob/main/src/main/scala/stablecoin/v5/Contracts.scala#L174-L217
2. Ballot contract: https://github.com/scalahub/AgeUSD/blob/main/src/main/scala/stablecoin/v5/Contracts.scala#L145-L170
3. Tests for voting + update: https://github.com/scalahub/AgeUSD/blob/main/src/test/scala/stablecoin/v5/UpdateSpec.scala

{Embed}
https://github.com/scalahub/AgeUSD/blob/main/src/test/scala/stablecoin/v5/UpdateSpec.scala
scalahub/AgeUSD
Contribute to scalahub/AgeUSD development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922

{Embed}
https://github.com/scalahub/AgeUSD/blob/main/src/main/scala/stablecoin/v5/Contracts.scala
scalahub/AgeUSD
Contribute to scalahub/AgeUSD development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/19/2021 3:49 PM] scalahub#2618
Mock tests passed so now moving to on chain tests


[03/19/2021 4:21 PM] scalahub#2618
@kushti re your comment about ordering of data inputs using datapoint collection, I tried decreasing order of bigInt values but getting this issue
```byteArrayToBigInt(...) - 1 // results in BigInt
byteArrayToBigInt(...) + 1 // gives some type error```
Anyway I'll try to use Int instead of BigInt


[03/19/2021 4:25 PM] greenhat#6562
Nothing caught my eye, both update and ballot contract are looking good to me.


[03/19/2021 4:40 PM] kushti#0978
Use long yes


[03/19/2021 4:41 PM] greenhat#6562
One thing that bothers me is the final check in bankScript: `|  sigmaProp(isExchange || INPUTS(0).tokens(0)._1 == updateNFT)`. I mean anyone having this NFT token can "spend" the bank contract box. I think I don't know enough about NFT. Do we have any explanation on how does NFT work?


[03/19/2021 4:43 PM] scalahub#2618
Well NFT means that the token exists in quantity 1. So whichever box contains the token will be valid for 1st input


[03/19/2021 4:44 PM] scalahub#2618
then the other restrictions are in the update contract which locks the update NFT


[03/19/2021 4:44 PM] scalahub#2618
version with long https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala#L65-L69
All tests passing

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/19/2021 4:48 PM] greenhat#6562
How is NFT token minted? Who holds it?


[03/19/2021 4:49 PM] scalahub#2618
This will be minted by the person who launches the stablecoin .. and we will be able to test from blockchain that it was minted in quantity exactly 1. It will be locked in a box with the update contract
https://github.com/scalahub/AgeUSD/blob/main/src/main/scala/stablecoin/v5/Contracts.scala#L174-L217

{Embed}
https://github.com/scalahub/AgeUSD/blob/main/src/main/scala/stablecoin/v5/Contracts.scala
scalahub/AgeUSD
Contribute to scalahub/AgeUSD development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/19/2021 4:49 PM] kushti#0978
Ah but we can use old contract as this one is broken anyway


[03/19/2021 4:49 PM] kushti#0978
So please do bank update contract


[03/19/2021 4:49 PM] kushti#0978
The most needed part


[03/19/2021 4:50 PM] kushti#0978
and real-chain testing


[03/19/2021 4:50 PM] scalahub#2618
yes so bank update contract mock testing is done.. I'll do onchain test now


[03/19/2021 4:50 PM] scalahub#2618
maybe we can do together with darkside? or you want me to do indepdently?


[03/19/2021 4:52 PM] scalahub#2618
@kushti please check above contracts (new stablecoin update with ballots as inputs)


[03/19/2021 4:52 PM] kushti#0978
Could be you and me


[03/19/2021 4:52 PM] kushti#0978
oh sorry missed somehow


[03/19/2021 4:52 PM] scalahub#2618
so let me do alone first.. much faster


[03/19/2021 4:52 PM] scalahub#2618
then we can do together


[03/19/2021 4:58 PM] greenhat#6562
Thanks, got it. Update and ballot contracts for stablecoin look good to me.

{Reactions}
üëç 

[03/19/2021 5:19 PM] kushti#0978
Bank update and ballot contracts look good to me as well @scalahub


[03/19/2021 8:45 PM] kushti#0978
@scalahub how's it going? I can tell DarkSide to set the update contract up


[03/19/2021 8:47 PM] scalahub#2618
On-chain testing of oracle-pool update is done. Going to do collect datapoints.. (final step). You can follow the details using the addresses here

{Attachments}
https://cdn.discordapp.com/attachments/702853765660934194/822572021451849748/message.txt


[03/19/2021 8:50 PM] scalahub#2618
pool updated worked so stablecoin update should work as well. You can ask darkside to go ahead


[03/19/2021 9:00 PM] scalahub#2618
one full round testing done.. this is the collect tx
https://explorer.ergoplatform.com/en/transactions/edf085c6c5d6888910b6eddb1f9850e260b862d13b64a7b092bc88a06ef63633


[03/19/2021 9:29 PM] kushti#0978
@scalahub awesome!


[03/19/2021 9:34 PM] kushti#0978
@scalahub I guess 4 datapoints would be enough for a quorum as the contract is temporary anyway


[03/19/2021 10:17 PM] scalahub#2618
yes 4 should be enough


[03/20/2021 5:11 AM] scalahub#2618
@kushti here are the details of the current test oracle pool (in case you want to use for stablecoin)
```
  lazy val poolNFT = "c3f12f8055e697391d8173d867ddb2f6fc7000165bf386cd7705df95fd893b9f" // 1 token issued
  lazy val oracleToken = "834c46884299abecb5caab08a04e95b7303436672507daeef703b1b0cc22e2d4" // 15 tokens issued
  lazy val updateNFT = "551023bc00000965340153f6a602ff28b877b9569d4438ae35504d49f0aee77d" // 1 token issued
  lazy val ballotToken = "8f3cee01b8c34cb9d36fd4706dd6c0762e4dba4ed239a22ecbedce8d604c1833" // 15 tokens issued```


[03/20/2021 5:43 AM] scalahub#2618
Let's run the test oracle using the above params.. currently the min posting is 2 oracles.  
Instead of adding sorting by box id to oracle core, we can add random integer in range -10000 to +10000 for each datapoint


[03/20/2021 8:01 AM] scalahub#2618
I'll start on my own onchain tests for stablecoin using above oracle params


[03/20/2021 9:53 AM] kushti#0978
@scalahub in the testing stablecoin another pool NFT is used already


[03/20/2021 9:53 AM] kushti#0978
real one


[03/20/2021 10:16 AM] kushti#0978
"we can add random integer in range -10000 to +10000 for each datapoint" - why ?


[03/20/2021 10:17 AM] kushti#0978
it is not solving the issue I guess


[03/20/2021 10:17 AM] kushti#0978
I'm ready for tests


[03/20/2021 11:06 AM] kushti#0978
@scalahub I am off for few hours


[03/20/2021 1:45 PM] scalahub#2618
@kushti lets connect in a couple of hours.


[03/20/2021 1:46 PM] scalahub#2618
I'll send the yaml in the meantime..


[03/20/2021 1:52 PM] scalahub#2618
let me know when you will be around @kushti


[03/20/2021 6:09 PM] scalahub#2618
I'm running with 2-oracle setup
https://explorer.ergoplatform.com/en/addresses/EfS5abyDdubWBrpCFPmLvSpXQ23qAJysHKcG7tgAH4FLobWPa1o3DvB1hK3byf4nAh5E1aCVDi5fTcKkac9uebzeBptn3hExvMJw3gJJv9rie4yAcgF5ddEzcgrHajvVLXsVTDzj2KAzUYFLQhLzwqRAjuVHEzDqgPHKv18z8YMFdNfHWKxVS9Ziw36wun3TjmJgHYqPtNkU7mCdAP6M9WQ4pfhJs43bpgHvCrDgTbTH2kfNJUNW63xxHodu4Qyi5XFWDgs3biZ3ykzyPwvV3BKrwXiZCg6yTMeonq7Fx7DraVj7XFxYkSx8ppdkdUN74vZVnzRG4JYYaHpvTmKBUgXXbsjEA6oo4NtN95X5rnsZxjpzgVkHAqtgFZq4LrE3F2AHUhyALKDcXzjo922wdX9Yzhxvhu43caejcyqA7R8JxARRrd5CsSrrfqxqgjRS5EENuanGTrLBVCuJBfLr7KvQZvWM1nQn7Z8uPD4wr5p6csp


[03/20/2021 6:39 PM] kushti#0978
@scalahub I am around


[03/20/2021 6:47 PM] scalahub#2618
me too


[03/20/2021 6:47 PM] scalahub#2618
what should be the next step?


[03/20/2021 6:51 PM] kushti#0978
@scalahub so oracle pool update is okay?


[03/20/2021 6:51 PM] kushti#0978
let's update real oracle pool then ?


[03/20/2021 6:52 PM] scalahub#2618
need to fix the offchain to add sorting by boxid


[03/20/2021 6:53 PM] scalahub#2618
and what parameters for real pool?


[03/20/2021 6:55 PM] kushti#0978
why ?


[03/20/2021 6:55 PM] kushti#0978
As I said, no need to update contracts, as sorting by id is not solving the problem with chained datapoints in the same block


[03/20/2021 7:05 PM] kushti#0978
@scalahub what are the current oracle contracts? we need to make an EIP out of them


[03/20/2021 7:06 PM] scalahub#2618
ok I had added the sorting by byteArrayToLong


[03/20/2021 7:06 PM] scalahub#2618
Should I remove?


[03/20/2021 7:08 PM] scalahub#2618
there is some workaround to prevent chained contracts for datapoints:
1. Datapoint takes as data input the live epoch box id
2. We can add the condition that current box Id (stored in R5) is different from new value


[03/20/2021 7:10 PM] kushti#0978
How (1) can prevent chaining ?


[03/20/2021 7:10 PM] scalahub#2618
The current contracts are here https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/main/scala/oraclepool/Contracts.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/20/2021 7:10 PM] scalahub#2618
not 1 alone but 1 and 2 together


[03/20/2021 7:11 PM] scalahub#2618
for datapoint to be valid, it must have live epoch box id in R5.. and the above two ensure that R5 can change at most once per epoch


[03/20/2021 7:12 PM] scalahub#2618
for chained tx, they would need to create datapoint with same R5 (since they must correspond to same epoch).. This is prevented with #2


[03/20/2021 7:13 PM] scalahub#2618
so I think chained tx can be easily prevented.. duplicate data inputs not so easy without the box Id check


[03/20/2021 7:15 PM] scalahub#2618
this will prevent them from posting datapoints more than once per epoch.. not sure if this is a added feature or bug


[03/20/2021 7:19 PM] kushti#0978
Then (2) + boxids sorting can prevent problems with oracle pool


[03/20/2021 7:19 PM] kushti#0978
but we need to fix offchain part and also would be good to carefully analyze all the contracts


[03/20/2021 7:23 PM] scalahub#2618
yes so we can for now remove the 2 + boxId sorting and add it later via update


[03/20/2021 7:23 PM] scalahub#2618
what do you think?


[03/20/2021 7:24 PM] kushti#0978
Possible


[03/20/2021 7:24 PM] kushti#0978
Let's have a call now ?


[03/20/2021 7:24 PM] scalahub#2618
if we remove that then oracle pool part is same as before


[03/20/2021 7:24 PM] scalahub#2618
yes lets have call


[03/20/2021 7:24 PM] kushti#0978
To plan the things


[03/20/2021 7:47 PM] kushti#0978
New plan: 
1) we're launching new oracle pool with new NFT and new update contract +15 voting token + 15 participant tokens (4 datapoints for consensus, 8 votes to update)
2) we're updating current bank contract to one using new oracle pool NFT


[03/20/2021 7:56 PM] kushti#0978
Tickers:
"ERGUSD-NFT"
"ERGUSD-VT"
"ERGUSD-PT"

Descs:
"ERG/USD Oracle Pool NFT"
"ERG/USD Oracle Pool Voting Token"
"ERG/USD Oracle Pool Participant Token"


[03/20/2021 8:36 PM] scalahub#2618
do we also make the payment 0.00025 per datapoint? @kushti


[03/20/2021 8:45 PM] kushti#0978
as in previous pool ?


[03/20/2021 8:45 PM] kushti#0978
yes


[03/20/2021 8:45 PM] scalahub#2618
earlier it was 0.001


[03/20/2021 8:46 PM] scalahub#2618
also for update token
"ERGUSD-U-NFT" 
"ERG/USD Oracle Pool Update NFT"


[03/20/2021 9:44 PM] kushti#0978
epoch_preparation_contract_address: "EfS5abyDe4vKFrJ48K5HnwTqa1ksn238bWFPe84bzVvCGvK1h2B7sgWLETtQuWwzVdBaoRZ1HcyzddrxLcsoM5YEy4UnqcLqMU1MDca1kLw9xbazAM6Awo9y6UVWTkQcS97mYkhkmx2Tewg3JntMgzfLWz5mACiEJEv7potayvk6awmLWS36sJMfXWgnEfNiqTyXNiPzt466cgot3GLcEsYXxKzLXyJ9EfvXpjzC2abTMzVSf1e17BHre4zZvDoAeTqr4igV3ubv2PtJjntvF2ibrDLmwwAyANEhw1yt8C8fCidkf3MAoPE6T53hX3Eb2mp3Xofmtrn4qVgmhNonnV8ekWZWvBTxYiNP8Vu5nc6RMDBv7P1c5rRc3tnDMRh2dUcDD7USyoB9YcvioMfAZGMNfLjWqgYu9Ygw2FokGBPThyWrKQ5nkLJvief1eQJg4wZXKdXWAR7VxwNftdZjPCHcmwn6ByRHZo9kb4Emv3rjfZE"


[03/20/2021 9:44 PM] kushti#0978
@scalahub how can I get this address ?


[03/20/2021 9:53 PM] scalahub#2618
I will share the script as well after bootstrap


[03/20/2021 9:55 PM] scalahub#2618
In summary https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala#L47-L55

{Embed}
https://github.com/scalahub/OraclePool/blob/main/src/test/scala/oraclepool/AddressSpec.scala
scalahub/OraclePool
Contribute to scalahub/OraclePool development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/uuR26tlXE0UBdKRDrFXb0Zui3fY0yC7mLKsf2Kiyby0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/23208922


[03/20/2021 11:02 PM] scalahub#2618
pinned instructions.. once the oracles start working, I'll bootstrap the 11 voting boxes as well


==============================================================
Exported 7,958 message(s)
==============================================================
