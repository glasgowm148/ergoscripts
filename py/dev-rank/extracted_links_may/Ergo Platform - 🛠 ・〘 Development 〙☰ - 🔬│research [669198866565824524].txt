==============================================================
Guild: Ergo Platform
Channel: üõ† „Éª„Äò Development „Äô‚ò∞ / üî¨‚îÇresearch
Topic: https://ergoplatform.org/en/documents/
==============================================================

[01/23/2020 7:28 AM] kushti#0978
@Robert K @jasondavies  @scalahub I thought for a little bit to create channel called "broth" to recreate the spirit of those exciting discussions we had in first months after the launch , and have this channel more formal. But lets mix for now.

{Reactions}
üëç (4) 

[01/23/2020 3:33 PM] Robert K#0722
I suppose it's worth mentioning that if anyone hasn't been on the forum lately there's been a bit more public discussions about the on-chain Auction protocol with a slightly new small attack found and a few ideas for ways to overcome them: https://www.ergoforum.org/t/auctions-on-ergo/122/7

{Embed}
https://www.ergoforum.org/t/auctions-on-ergo/122/7
Auctions On Ergo
Hi Robert, yes there are some potential issues with usd token and sudden price drops. But this problem is in most applications based on rate.  Btw ergo auctions are a great idea‚Ä¶ hopefully some real world use will be seen


[01/23/2020 3:33 PM] Robert K#0722
If someone has ideas, feel free to jump into the conversation.


[01/23/2020 9:59 PM] kushti#0978
@Robert K thanks a lot, I had it in open tabs but it was mostly forgotten. I've added my 2 cents
@scalahub please check if my claim is valid 
https://www.ergoforum.org/t/auctions-on-ergo/122/10

{Embed}
https://www.ergoforum.org/t/auctions-on-ergo/122/10
Auctions On Ergo
I think both solutions proposed by Jason, so forced mining fee and minimum step are working but make a scheme dependent on concrete numbers during an instantiation. Minimum step is simpler and widely used in many real-world auctions AFAIK (for the same reason?).  solution by ...


[01/24/2020 3:10 AM] scalahub#2618
Maybe putting a joining fee


[01/24/2020 8:42 AM] kushti#0978
bid fee ?


[01/24/2020 1:06 PM] scalahub#2618
I mean for registration, some small fee is needed (similar to trustless LETS), and that fee can be later adjusted with the bid


[01/24/2020 1:11 PM] kushti#0978
for the 2-phase scheme ?


[01/24/2020 1:31 PM] scalahub#2618
yes though I admit it may still have the same flaw as the original üôÇ


[01/24/2020 1:32 PM] scalahub#2618
Idea was to not allow spam attack in the registration phase by using auction box as data input (so multiple parties can use)


[01/24/2020 1:35 PM] kushti#0978
isnt' that the same as minimum step if registration fee is "step-1" ?


[01/24/2020 4:25 PM] kushti#0978
@Hongsheng what are new state-of-art research in ZK ? anything interesting after Halo ?


[01/28/2020 7:42 AM] kushti#0978
https://iohk.io/en/research/library/papers/the-extended-utxo-model/

{Embed}
https://iohk.io/en/research/library/papers/the-extended-utxo-model/
The Extended UTXO Model - IOHK Research
The Extended UTXO Model, , January/2020
https://images-ext-1.discordapp.net/external/8mVxJyncPBbwTJsfT1RMBplNGyp9wyvQjrtNa9ckZbI/https/ucarecdn.com/898961f7-4113-42f7-b96d-1adedae97c1a/


[01/28/2020 11:27 AM] jasondavies#8712
I'm surprised Ergo was not referenced as an example of the EUTXO model. Or is there some aspect of EUTXO that Ergo doesn't support?


[01/28/2020 11:27 AM] jasondavies#8712
At a glance it seems like Ergo implements it.


[01/28/2020 12:06 PM] morphic#4133
Yes, indeed, same model. Seems there are things in Ergo which they don't support, however this may be for simplicity of mechanised proofs. Need to check further.


[01/28/2020 3:39 PM] Robert K#0722
Last I checked when I was doing Plutus/following their updates they didn't allow constraining the output boxes script from within the smart contract but relied heavily on the "DataScript" as the state + using custom tokens as representations of actions.


[01/28/2020 3:42 PM] Robert K#0722
As such, Ergo's design pattern of smart contracts being focused on constraining the next box, rather than constraining based purely on DataScript + current tokens in the box, inherently brings about entirely different encodings of the same protocol compared to on Ergo


[01/28/2020 3:47 PM] Robert K#0722
Given that is the case, that may be why they potentially didn't cite Ergo? Though that's still doesn't explain why they didn't end up citing any of the paper's behind Ergo at all about the UTXO model for smart contracts.


[01/28/2020 5:48 PM] morphic#4133
Well, in the end they seemed to copied Ergo model, simplified and restricted for the sake of proving theorems.


[01/28/2020 7:08 PM] Robert K#0722
I wouldn't specifically say "copy" since they don't have the concept of registers either, but highly inspired/borrowed from for sure.


[02/11/2020 3:15 AM] kushti#0978
@jasondavies @Dmitry Meshkov @scalahub @morphic @Ilya | Spectrum  I think we should do an EIP on keys. What should be included there? Pre-EIP0003 BIP32 , EIP-0003, raw (big integer) keys, what else ?


[02/11/2020 8:03 AM] kushti#0978
oh, Diffie-Hellman tuple keys also


[02/18/2020 1:38 PM] jasondavies#8712
Will chained transactions (within a block) be supported in a future release?


[02/18/2020 1:41 PM] jasondavies#8712
Just thinking about certain limitations of contracts where you rely on chained spends of a contract box. Chained transactions within blocks will of course allow many more spends of such contracts.


[02/18/2020 1:43 PM] jasondavies#8712
Although client-side implementors would ideally need to monitor the mempool to construct an appropriate linear chain in case of a conflict.


[02/18/2020 1:44 PM] jasondavies#8712
And the longest chain should get mined assuming it generates more fee income


[02/18/2020 1:49 PM] jasondavies#8712
BTW if we wanted to implement a decentralised DNS system on Ergo, presumably due to AVL tree size we would have to come up with a way to shard the data e.g. separate AVL trees for each name prefix?


[02/18/2020 1:50 PM] jasondavies#8712
@scalahub I think I talked to you about this but I've forgotten how you said it might work


[02/18/2020 1:55 PM] jasondavies#8712
The conversation is probably lost in Slack somewhere üò¶


[02/18/2020 1:57 PM] jasondavies#8712
I guess you don't always need to enforce protocol stuff such as unique names on-chain. You can store an off-chain database of names and ignore any attempts to claim names using the on-chain part of the protocol.


[02/18/2020 2:05 PM] scalahub#2618
> The conversation is probably lost in Slack somewhere üò¶
@jasondavies I believe some tree-based structure (AVL?) or using bloom filter if you can manage with the false positives


[02/18/2020 2:09 PM] jasondavies#8712
@scalahub Ah yes, bloom filters. I personally would think they are not sensible when you need an absolute guarantee of ownership though


[02/18/2020 3:41 PM] kushti#0978
@jasondavies chained transactions support is in the "develop" branch already, will be in 3.2.1


[02/18/2020 3:45 PM] kushti#0978
mempool and miner will support them


[02/18/2020 3:46 PM] kushti#0978
then in further releases the in-built wallet will be able to generate such transactions


[02/18/2020 3:49 PM] kushti#0978
> I guess you don't always need to enforce protocol stuff such as unique names on-chain. You can store an off-chain database of names and ignore any attempts to claim names using the on-chain part of the protocol.
@jasondavies via some dispute resolution protocol ?


[02/18/2020 3:58 PM] jasondavies#8712
@kushti Not exactly, I just mean that if I already own a name because I successfully won it via on-chain auction, if someone else tries to start a new auction for the same name, it won't be prevented, but all client software will agree that the first auction takes precedence


[02/18/2020 4:00 PM] jasondavies#8712
I suppose there might be a race condition if there are two simultaneous auctions for the same thing but you can just have a precedence based on some hash


[02/18/2020 4:00 PM] kushti#0978
so conflicts resolved on client side ?


[02/18/2020 4:00 PM] jasondavies#8712
exactly. and there is no risk or loss for normal users


[02/18/2020 4:01 PM] jasondavies#8712
the on-chain portion of the protocol only deals with the auction


[02/21/2020 4:00 PM] jasondavies#8712
Regarding chained transactions, would it be worth supporting CPFP weighting in the mempool, or is this already done? @kushti


[02/21/2020 4:02 PM] jasondavies#8712
Also in terms of the minimum tx fee


[02/21/2020 4:59 PM] kushti#0978
@jasondavies CPFP is about considering family of transactions? already done )


[02/21/2020 4:59 PM] kushti#0978
I mean aggregate fee for a family


[02/21/2020 9:49 PM] jasondavies#8712
Yes. Great!

{Reactions}
üíØ 

[02/27/2020 9:56 AM] Ben#8656
had a look at this


[02/27/2020 9:56 AM] Ben#8656
https://pdfs.semanticscholar.org/d51b/51fd136b1b74ece7caa6a7cb9c8f74b1b829.pdf


[02/27/2020 9:56 AM] Ben#8656
is there any good journal for Cryptocurrency/blockchain (yet)?


[03/19/2020 6:05 PM] kushti#0978
There are gateways around, e.g. Waves gateways (started as coinomat gateways on top of Nxt back in 2014 I believe) . Basically, it is centralized component which is exchanging tokens on one blockchain (e.g. wBTC on top of Waves) to tokens on another (native BTC tokens ).

Centralized component has trust problems, and I'm thinking how to do secured gateway (with collateral)

{Reactions}
üëç 

[04/03/2020 3:41 PM] kushti#0978
https://www.twitch.tv/dionyziz

{Embed}
https://www.twitch.tv/dionyziz
dionyziz - Twitch
PhD defence: Decentralized Blockchain Interoperability [Friday, 16:00‚Äì18:00 Greek time]
https://images-ext-1.discordapp.net/external/NzRdY9I6gYJnFQyHcHFi4RCpfbjLD6lY_gc-IoAAocU/https/static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png

{Reactions}
üëç (2) 

[04/03/2020 3:42 PM] kushti#0978
Ph. D. defense of Dionyziz (on NiPoPoWs ad follow-up stuff) online streaming


[04/08/2020 6:10 PM] jasondavies#8712
there's so much research on possible ways to implement wrapped BTC - here is another one that I've been reading today (tBTC): https://docs.keep.network/tbtc/index.pdf

{Reactions}
üíØ (3) 

[04/08/2020 6:11 PM] jasondavies#8712
uses the concept of collateral (150%) backing the wrapped tokens


[04/08/2020 6:12 PM] jasondavies#8712
it does seem like if ETH has good liquidity for BTC/ETH it may be simpler for Ergo to have a bridge with ETH and that will open up liquidity with BTC


[04/08/2020 6:39 PM] kushti#0978
@jasondavies both-directions bridge ?


[04/08/2020 6:41 PM] kushti#0978
let's start playin with stablecoins )


[04/08/2020 10:12 PM] kushti#0978
@scalahub started playing with one-way convertible stablecoin: https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/5?u=kushti

{Embed}
https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/5?u=kushti
Tethering a token to USD using the rate oracle
Made one-way conversion script box by using the following script (using an oracle I‚Äôm running): https://wallet.plutomonkey.com/p2s/?source=ewogIHZhbCBuZXdTZWxmID0gT1VUUFVUUygwKQogIHZhbCBib2JPdXQgPSBPVVRQVVRTKDEpCiAKICB2YWwgYm9iTmFub0VyZ3MgPSBib2JPdXQudmFsdWUKICB2YWwgdmFsaWRCb2...

{Reactions}
üíØ (3) 

[04/09/2020 12:15 AM] jasondavies#8712
@kushti @scalahub Cool, I managed to buy a token!

{Reactions}
üíØ 

[04/09/2020 9:47 AM] kushti#0978
oh nice! so the first (and the most primitive) stablecoin demo is done!


[04/09/2020 11:42 AM] kushti#0978
https://www.youtube.com/watch?v=1v0zzqnlgX


[04/09/2020 11:42 AM] kushti#0978
looks similar to the Yield protocol, but on top of options


[04/10/2020 6:42 PM] kushti#0978
@jasondavies so I guess we should run a new oracle which is delivering nanoErgs per USD ?


[04/10/2020 6:50 PM] kushti#0978
and then run the same one-way stablecoin contract but updated oracle


[04/10/2020 6:51 PM] kushti#0978
also I think for stability we need to consider aggregated oracles


[04/10/2020 6:54 PM] jasondavies#8712
@kushti Yes, either we create a new oracle or we modify the stablecoin contract. I wonder what pricing direction ETH uses?


[04/10/2020 6:55 PM] kushti#0978
good question )


[04/10/2020 6:58 PM] jasondavies#8712
I just wonder if it would be less confusing for users if we stick with standard price basis. So ERG/USD, ERG/BTC, BTC/USD. Normally in forex, the "bigger" currency is used as the basis, usually USD or EUR.


[04/10/2020 7:01 PM] jasondavies#8712
I agree some aggregation would be good. It provides some defence against a bad oracle operator. Presumably the aggregation should reduce the influence of a stale pricing oracle (if it hasn't been updated because the operator is offline for too long) and it should also have some kind of smoothing to prevent sudden temporary price changes which could have bad effects.


[04/10/2020 7:30 PM] kushti#0978
@jasondavies so ERG/USD or USD/ERG ?


[04/10/2020 7:31 PM] kushti#0978
the former is done


[04/10/2020 7:31 PM] kushti#0978
but the contract is working with the latter option


[04/10/2020 7:31 PM] kushti#0978
(nanoErgs per cent )


[04/11/2020 12:06 PM] jasondavies#8712
@kushti yes, my personal feeling is we should stick with standard prices on the oracle side. So we just need a new stablecoin contract.


[04/11/2020 12:09 PM] jasondavies#8712
@kushti BTW we might consider reusing work by MakerDAO on Oracles V2: https://www.youtube.com/watch?v=lpPfqj88hho

{Embed}
ETHDenver
https://www.youtube.com/watch?v=lpPfqj88hho
MakerDAO: Deconstructing the Oracle Stack ‚Äì Niklas Kunkel
This talk is from ETHDenver, the world‚Äôs largest Web3 BUIDLathon and Community Gathering. ETHDenver‚Äôs content is crypto and blockchain focused. 

Subscribe to our channel to learn more + connect on Twitter: https://twitter.com/EthereumDenver. 

Speaker: Nik Kunkel of Maker DAO...
https://images-ext-2.discordapp.net/external/1LOsIfScvC5JnceWxNbbNwg7pAgjbC15Iw3bOhmueio/https/i.ytimg.com/vi/lpPfqj88hho/maxresdefault.jpg

{Reactions}
üíØ 

[04/11/2020 8:19 PM] kushti#0978
@jasondavies will check, thanks a lot!


[04/13/2020 10:16 PM] Robert K#0722
I'm currently going through a lot of the top 150 projects for some research and just wanted to mention that the storage-rent fee really is a superb idea.
Majority of latest projects which are attempting to address blockchain size bloat end up making the whole user experience much worse by moving as much as possible off-chain.
Having the ability to actually keep contracts and data on-chain with 0 bloat and fees to reward miners is seriously a great innovation that most haven't understood yet imo.

{Reactions}
üíØ (3) 

[04/14/2020 8:22 AM] morphic#4133
I feel like the problem of "storage rent fee" is this "fee" part, which may look as disadvantage. 
However, programmers can quickly realise the importance of it by just imagining the life without garbage collection in their language of choice. For non-programmers it may take a little longer because real world garbage collectors are not that fast either üôÇ 
I have always been thinking about this component as GC.
Maybe we should market it from this perspective as well.


[04/14/2020 10:31 AM] kushti#0978
@Robert K @morphic with offchain solutions still there's a problem of adversarial blockchain bloat , e.g. in some blockchains they were bulk coin drops (of dusty amounts), presumably to track the users (as wallets auto-collect such inputs along with meaningful ones); Bitcoin network had a "stress-testing" during blocksize debates, and so on. Also onchain protocols always simpler, so attractive. And with custom tokens on top of Ergo we can expect token airdrops  which are also pretty wasteful. 
And if it not possible to eliminate the spam , let's make it profitable (for miners) üôÇ


[04/14/2020 2:22 PM] Robert K#0722
I think marketing it through the lens of something like "on-chain garbage collection" which solves blockchain bloat will likely be a lot more interesting to people. It gets them to ask "What is that" or "How does it work" which then naturally leads to the concept of storage-rent

{Reactions}
üíØ 

[04/14/2020 2:23 PM] Robert K#0722
It's essentially selling the benefit to people via the name, not being pedantic and specifying the method in the name

{Reactions}
üíØ 

[04/14/2020 2:55 PM] morphic#4133
In fact the method (box recreation) have a drawback (all boxes have limited lifetime) which will make some contracts more complex.


[04/14/2020 4:35 PM] scalahub#2618
Yes we should not use boxid in hard-coded fashion


[04/14/2020 5:05 PM] scalahub#2618
I have a rationale of why making full mix boxes more aggressively is better.  Will write on it soon


[04/14/2020 5:05 PM] scalahub#2618
So I think anon is on right track


[04/14/2020 5:07 PM] scalahub#2618
But maybe it's better to stick to paper idea until it's formally analyzed @kushti


[04/15/2020 3:48 PM] kushti#0978
@scalahub still I've investigated anon's approach very briefly


[04/15/2020 3:49 PM] kushti#0978
well, yes, before analysis maybe better not to do rushy things, especially in deterministic fashion


[04/15/2020 3:49 PM] kushti#0978
any kind of deterministic behavior is not good in the mixer


[04/15/2020 3:50 PM] kushti#0978
@scalahub btw after getting some stats from the anon's mixer I think we need to do research on larger-scale mixing


[04/15/2020 3:52 PM] kushti#0978
> I think marketing it through the lens of something like "on-chain garbage collection" which solves blockchain bloat will likely be a lot more interesting to people. It gets them to ask "What is that" or "How does it work" which then naturally leads to the concept of storage-rent
@Robert K sounds interesting @hir0 let's make an article for general public on storage rent ?


[04/15/2020 3:59 PM] scalahub#2618
> @scalahub btw after getting some stats from the anon's mixer I think we need to do research on larger-scale mixing
@kushti ok what are the main problem with large-scale mixing exactly?


[04/15/2020 4:05 PM] kushti#0978
@scalahub a solution for it is not known ) current technique do not scale well


[04/15/2020 4:05 PM] kushti#0978
maybe additional assumptions would be needed


[04/15/2020 4:06 PM] kushti#0978
e.g. some matcher (non-custodial)


[04/15/2020 7:10 PM] Robert K#0722
This might be an interesting idea for collateral in some DeFi dApps for Ergo in the future https://github.com/AtomicLoans/atomicloans-rfc/wiki/System-Overview

{Embed}
https://github.com/AtomicLoans/atomicloans-rfc/wiki/System-Overview
AtomicLoans/atomicloans-rfc
Atomic Loans Specifications. Contribute to AtomicLoans/atomicloans-rfc development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/18A89_SKaHXCmCQlLtfYdXOqpD7kLeQyXQHbapB_LDc/%3Fs%3D400%26v%3D4/https/avatars3.githubusercontent.com/u/47122898

{Reactions}
üíØ 

[04/15/2020 7:10 PM] Robert K#0722
Though it is a bit complicated to implement.


[04/16/2020 2:59 PM] jasondavies#8712
@kushti @scalahub @morphic I posted my pool collateral script for review: https://www.ergoforum.org/t/collateral-script-for-pool-mining/200

{Embed}
https://www.ergoforum.org/t/collateral-script-for-pool-mining/200
Collateral script for pool mining
As some of you know, I‚Äôve been working on my own collateral-based mining pool.  This will just be another option along with @mhs_sam‚Äôs pool.  I thought I would post my collateral box script here for public review, in case I‚Äôve missed any obvious issues:  {   val poolReward = 6...

{Reactions}
üíØ (4) 

[04/17/2020 9:39 AM] morphic#4133
@jasondavies have you tried this script already on the network?


[04/17/2020 9:41 AM] morphic#4133
According to my understanding it shouldn't work because the script relies on lazy || operation
`OUTPUTS.size == 1 || {` which is not lazy with the current costing.


[04/17/2020 10:23 AM] jasondavies#8712
@morphic Yes, a slightly simpler version worked (without some of the conditions that I added later)


[04/17/2020 10:25 AM] morphic#4133
This is the problem we have now with AOT costing.


[04/17/2020 10:27 AM] morphic#4133
It severely limits the conditional logic you can write in contracts. In particular when the contracts have, what I call, alternative spending paths.


[04/17/2020 10:29 AM] morphic#4133
There is a workaround it, but it is ugly. In your specific case you need to have 2 outputs in every spending transaction. This means in some cases you need to create fake (or helper) second output.


[04/17/2020 10:30 AM] morphic#4133
So, this is the burden on the client application (which crafts a transaction)


[04/17/2020 10:31 AM] jasondavies#8712
I understand why AOT costing has limitations generally due to unknown types, but in this particular case I'm not sure I understand why OUTPUTS.size ends up being a problem, since the types are all known?


[04/17/2020 10:34 AM] jasondavies#8712
(btw: it seems strange that I had to call decodePoint on minerPubKey, as I would expect this to be a GroupElement rather than a byte array)


[04/17/2020 11:01 AM] morphic#4133
> (btw: it seems strange that I had to call decodePoint on minerPubKey, as I would expect this to be a GroupElement rather than a byte array)
@jasondavies you can access GroupElement from CONTEXT.preHeader.minerPk


[04/17/2020 11:02 AM] jasondavies#8712
Ah yes. I did actually try this but my serialised ErgoTree was slightly longer so I opted for the "shorter" one üôÇ This probably has lower costs though?


[04/17/2020 11:04 AM] jasondavies#8712
BTW, I just checked the compiled ErgoTree for the OUTPUTS.size conditional. It compiles OUTPUTS.size into a ValDef and then there are a couple of ValUse checking if it's equal to constant 1 or constant 2.


[04/17/2020 11:04 AM] morphic#4133
> I understand why AOT costing has limitations generally due to unknown types, but in this particular case I'm not sure I understand why OUTPUTS.size ends up being a problem, since the types are all known?
@jasondavies This is not a problem of types, it is a problem of || is not lazy during costing. So both branches are "processed" during costing, and that "processing" unfortunately involves access OUTPUT(1), which should be present on all spendings


[04/17/2020 11:05 AM] jasondavies#8712
@morphic I was able to spend it to a single output with no issues


[04/17/2020 11:07 AM] jasondavies#8712
This is one of the compiled parts that we're talking about: `EQ(ExtractScriptBytes(ByIndex(Outputs$(165),IntConstant(1),None)),ExtractScriptBytes(Self$(167)))`


[04/17/2020 11:31 AM] morphic#4133
Which exactly contract you used?


[04/17/2020 11:40 AM] jasondavies#8712
@morphic `{
  val poolReward = 67500000000L
  {
    decodePoint(CONTEXT.minerPubKey) == alice &&
    OUTPUTS(0).value == poolReward && {
      OUTPUTS.size == 1 || {
        OUTPUTS.size == 2 &&
        OUTPUTS(1).propositionBytes == SELF.propositionBytes
      }
    }
  } || proveDlog(alice)
}`


[04/17/2020 11:45 AM] morphic#4133
could you show the transaction in the explorer?


[04/17/2020 11:45 AM] jasondavies#8712
@morphic https://explorer.ergoplatform.com/en/transactions/20ff719c116bae151e1edda1dd6506ea8cb95d1ebc657d4979a73fac0717daf2


[04/17/2020 12:15 PM] morphic#4133
@jasondavies Hm, the transaction indeed have only one output. The OUTPUTS(1) is not processed by costing for some reason.


[04/17/2020 12:16 PM] jasondavies#8712
I would have expected OUTPUTS(1) to result in something like `None`


[04/17/2020 12:17 PM] jasondavies#8712
is it possible to generate a cost graph for any given ErgoTree + context? That might be useful for debugging situations like this


[04/17/2020 12:27 PM] morphic#4133
it is possible, but require writing a test case
I think such kind of tooling is better be done using EIP5

{Reactions}
üòã 

[04/21/2020 7:28 PM] Robert K#0722
Interesting new blockchain-agnostic dApp specification language that allows you to compile down to supported VMs/platforms, and allows you to verify invariants using Z3 https://github.com/reach-sh/reach-lang

{Embed}
https://github.com/reach-sh/reach-lang
reach-sh/reach-lang
DApps as Easy as Apps: Blockchain for Everyone. Contribute to reach-sh/reach-lang development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/QibdCS-OrPD7K9LIPXEVUdKQyEbW004KuzAcR4V9mNI/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/54276604

{Reactions}
üëçüèª 

[04/21/2020 7:29 PM] Robert K#0722
I've gotten to know the founder and they're doing a pretty decent job. Probably not worth it for Ergo any time soon (it's also nascent) but good to keep in mind for the future potentially.


[04/24/2020 12:08 AM] jasondavies#8712
https://www.ergoforum.org/t/a-perpetual-token/205

{Embed}
https://www.ergoforum.org/t/a-perpetual-token/205
A perpetual token
In other words, a token which is guaranteed to exist forever, unless it gets garbage-collected!  {   val isPerpetual = {(b: Box) =>     b.propositionBytes == SELF.propositionBytes && b.tokens == SELF.tokens   }    sigmaProp(OUTPUTS.exists(isPerpetual)) }

{Reactions}
üëçüèª 

[04/24/2020 10:19 PM] kushti#0978
@jasondavies started nanoergs per USD oracle: 

2020-04-25 00:12:58,837 [INFO] Ergo Price in USD: 0.159608091334
2020-04-25 00:12:58,837 [INFO] Nanoergs per USD: 6265346522
2020-04-25 00:12:58,839 [INFO] Address: 9ft3CTtLfyscKo96AdQiAyLcQR4tTNYjE63mLnhc2nKTz56JYeB
2020-04-25 00:12:58,840 [INFO] Box ID: d3dc1f48e0db2f4d159310f453ffeebe755a66fe6cc130980db92b075c4f9648
2020-04-25 00:12:58,840 [INFO] Token ID: 1b26f80bb93977e85ffda7b54572e31a68d77295fc4c8a1b762071a44350bad6
2020-04-25 00:12:58,840 [INFO] Encoded Price: 05b6e78cd72e

{Reactions}
üëç 

[04/24/2020 10:23 PM] jasondavies#8712
@kushti looking good

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/703355524241948773/visualization_4.png


[04/24/2020 10:28 PM] kushti#0978
@jasondavies oh so you can draw numerical data from any oracle ? )


[04/24/2020 10:28 PM] kushti#0978
I mean quickly


[04/24/2020 10:28 PM] kushti#0978
by token id ?


[04/24/2020 10:28 PM] jasondavies#8712
yes

{Reactions}
üëç 

[04/24/2020 10:29 PM] kushti#0978
nice!


[04/24/2020 10:30 PM] Robert K#0722
Very cool


[04/24/2020 10:35 PM] Robert K#0722
Is it easy to find a box which holds a token via the current wallet api?


[04/24/2020 10:37 PM] jasondavies#8712
> Is it easy to find a box which holds a token via the current wallet api?
@Robert K within your own wallet, you can iterate over your unspent boxes to find it. otherwise there isn't a simple way to do it AFAIK


[04/24/2020 10:51 PM] kushti#0978
in the new explorer there're API methods to work with tokens I guess , @Ilya | Spectrum can provide details


[04/24/2020 11:00 PM] Ilya | Spectrum#0494
There is a special method allowing to find issuing box by token id, but I guess Robert talks about a method returning all the boxes containing specified token

 /api/v0/assets/{p1}/issuingBox:
    get:
      operationId: getApiV0AssetsP1Issuingbox
      parameters:
      - name: p1
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputInfo'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        default:
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownErr'


[04/24/2020 11:02 PM] Robert K#0722
Ah cool. Yeah I think it could be useful to have one for all existing boxes that have a specific token.


[04/24/2020 11:03 PM] Robert K#0722
I suppose you could find the issuing box and then follow all spends.


[04/24/2020 11:22 PM] kushti#0978
> https://www.ergoforum.org/t/a-perpetual-token/205
@jasondavies simple and nice pattern! )

{Embed}
https://www.ergoforum.org/t/a-perpetual-token/205
A perpetual token
In other words, a token which is guaranteed to exist forever, unless it gets garbage-collected!  {   val isPerpetual = {(b: Box) =>     b.propositionBytes == SELF.propositionBytes && b.tokens == SELF.tokens   }    sigmaProp(OUTPUTS.exists(isPerpetual)) }  (Actually, this is a ...


[04/26/2020 11:43 PM] kushti#0978
@scalahub @jasondavies @Robert K finally, example of one-way convertible tokens being bought from the holding contract https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/9

{Embed}
https://www.ergoforum.org/t/tethering-a-token-to-usd-using-the-rate-oracle/118/9
Tethering a token to USD using the rate oracle
Another attempt:  An oracle associated with singleton token 1b26f80bb93977e85ffda7b54572e31a68d77295fc4c8a1b762071a44350bad6 now tracking price of USD in nanoErgs (based on CoinMarketCap data).  Slightly modified script:  https://wallet.plutomonkey.com/p2s/?source=ewogIHZhbCBu...

{Reactions}
üíØ (4) 

[05/07/2020 12:05 PM] jasondavies#8712
Updated pool collateral scripts, please send any comments or suggestions: https://blog.plutomonkey.com/2020/05/collateral-based-pool-for-ergo/

{Embed}
https://blog.plutomonkey.com/2020/05/collateral-based-pool-for-ergo/
Collateral-based Pool for Ergo ¬∑ PlutoMonkey

{Reactions}
üëç (2) üëçüèª 

[05/07/2020 2:17 PM] scalahub#2618
What were the issues with earlier script? AOT bug?


[05/07/2020 2:19 PM] jasondavies#8712
@scalahub Main limitation with the old script was that only one unspent collateral box should exist at any time, but this could not be enforced. The new script allows any number of inputs to the reward transaction, using the singleton token to enforce only one reward tx per block.


[05/07/2020 2:20 PM] scalahub#2618
Oh I thought old script already had singleton token


[05/07/2020 2:20 PM] jasondavies#8712
AFAIK there were no AOT bugs with the old script (I tested it and everything worked fine).


[05/07/2020 2:21 PM] jasondavies#8712
Also the new script correctly calculates the pool reward, so collateral boxes will be valid for all time i.e. when the reward starts going down.


[05/07/2020 2:22 PM] jasondavies#8712
I thought a perpetual token would be sufficient but I had to add the creationHeight condition to prevent the token from changing it creationHeight in a separate tx


[05/07/2020 3:22 PM] scalahub#2618
and creation height need not be the real creation height?


[05/07/2020 3:25 PM] jasondavies#8712
> and creation height need not be the real creation height?
@scalahub it needs to match the current block height for the constraint to work


[05/07/2020 11:00 PM] kushti#0978
@jasondavies why this perpetual token and then there can be many input collateral boxes ?


[05/07/2020 11:00 PM] kushti#0978
@jasondavies what's the collateral script cost? ) it is one of the most complex to date )


[05/07/2020 11:02 PM] jasondavies#8712
@kushti Well, it's true that we could restrict to just one input collateral box, but I didn't see any reason to do so (unless cost is too high). Alternatively we might want a method to merge collateral boxes because we expect them to be used for pool payouts, and the payout amounts will probably be small.


[05/07/2020 11:02 PM] jasondavies#8712
But like this, we can merge collateral boxes at the same time as collecting the pool reward.


[05/07/2020 11:03 PM] jasondavies#8712
The only case where it might not work is if we have a huge number of small-value collateral boxes, and the cost of validating each one is too high. Yes, I should probably check the cost üôÇ


[05/07/2020 11:08 PM] kushti#0978
@jasondavies "users might accidentally create more than one unspent collateral box for the same miner public key, which would then allow a pool to claim more than one reward in the same block." => well, it seems actual reason for the perpetual token is to enforce 1 pool reward transaction per block ?


[05/07/2020 11:09 PM] jasondavies#8712
@kushti Yes, exactly. Is that sentence unclear?


[05/07/2020 11:09 PM] jasondavies#8712
It starts with "Without this technique..."


[05/07/2020 11:09 PM] kushti#0978
yeah


[05/07/2020 11:09 PM] kushti#0978
well, I think the sentence is okay


[05/07/2020 11:09 PM] kushti#0978
what I'm thinking about


[05/07/2020 11:09 PM] jasondavies#8712
Cost is approximately 11196 btw


[05/07/2020 11:09 PM] kushti#0978
is that this can be a good design pattern in general


[05/07/2020 11:10 PM] kushti#0978
for cases when you want to prevent e.g. chained transactions in a block


[05/07/2020 11:10 PM] jasondavies#8712
Yes


[05/07/2020 11:10 PM] kushti#0978
> Cost is approximately 11196 btw
@jasondavies pretty good!


[05/07/2020 11:10 PM] kushti#0978
about 2 proveDlogs


[05/07/2020 11:11 PM] jasondavies#8712
(I need to check a bit more properly in case I missed something)


[05/07/2020 11:11 PM] jasondavies#8712
I'm literally writing an IDE now üôÇ

{Reactions}
üëçüèª 

[05/07/2020 11:12 PM] kushti#0978
Ergo IDE )


[05/07/2020 11:12 PM] jasondavies#8712
I might suggest some improved APIs, but probably OK for now


[05/07/2020 11:13 PM] jasondavies#8712
for example, executeWithContext takes a full ErgoScript


[05/07/2020 11:13 PM] kushti#0978
please let me know if something is needed


[05/07/2020 11:13 PM] jasondavies#8712
but it might actually be useful to have 2 stages: 1) compile to ErgoTree 2) executeTreeWithContext


[05/07/2020 11:13 PM] jasondavies#8712
and in stage 1, if we can provide source + namedConstants, that would be good


[05/07/2020 11:14 PM] jasondavies#8712
right now I can get the serialised ErgoTree but I have to generate the P2S address, then convert P2S to ErgoTree


[05/07/2020 11:14 PM] jasondavies#8712
and generating P2S only takes source, no namedConstants


[05/07/2020 11:14 PM] kushti#0978
you also have emission schedule heh


[05/07/2020 11:15 PM] kushti#0978
for next ~2 years 67.5 would be enough


[05/07/2020 11:15 PM] jasondavies#8712
Have to protect users' collateral for when the reward starts to change üôÇ


[05/07/2020 11:15 PM] jasondavies#8712
Otherwise it will be like the Y2K bug üôÇ


[05/07/2020 11:15 PM] jasondavies#8712
I thought I would leave it in, if it's cheap


[05/07/2020 11:16 PM] jasondavies#8712
and it's copied verbatim from the emission script, so I'm confident it's correct


[05/07/2020 11:21 PM] kushti#0978
yeah


[05/07/2020 11:23 PM] kushti#0978
after few rounds forth and back, looks good !


[05/07/2020 11:23 PM] jasondavies#8712
Thanks!


[05/08/2020 12:02 AM] jasondavies#8712
BTW, have you seen the updates on Yield Protocol?


[05/08/2020 12:02 AM] jasondavies#8712
https://twitter.com/niemerg/status/1258488654437195779

{Embed}
Allan (@niemerg)
https://twitter.com/niemerg/status/1258488654437195779
I‚Äôm excited to announce Yield, a company bringing fixed-term, fixed-rate lending and interest-rate markets to decentralized finance. 

The @yieldprotocol builds on a paper published by @danrobinson from @paradigm, and we‚Äôre thrilled to have a seed investment from Paradigm.
Likes
131
Twitter


[05/08/2020 12:02 AM] jasondavies#8712
Looks like someone has decided to turn it into a startup


[05/08/2020 12:18 AM] kushti#0978
oh interesting


[05/08/2020 12:19 AM] kushti#0978
and Paradigm is funding it heh


[05/08/2020 7:22 PM] scalahub#2618
@jasondavies why this condition?
```val totalSelf = INPUTS.fold(0L, {(a: Long, b:Box) =>
    if (b.propositionBytes == SELF.propositionBytes) {
      a + b.value
    } else {
      a
    }
  })```


[05/08/2020 7:22 PM] scalahub#2618
why not allow other boxes to fund this transaction,


[05/08/2020 7:23 PM] scalahub#2618
Someone could provide a loan to Alice so maybe we should allow it?


[05/08/2020 7:24 PM] jasondavies#8712
This is calculating the total value of the input collateral boxes


[05/08/2020 7:24 PM] scalahub#2618
yes so why only collateral boxes? any problem if we allow non collateral boxes?


[05/08/2020 7:25 PM] jasondavies#8712
This value is only used to ensure the pool doesn't claim more than the expected block reward


[05/08/2020 7:27 PM] jasondavies#8712
It's only used in the "pool reward tx" case, which is a tx constructed by the pool itself


[05/08/2020 7:27 PM] scalahub#2618
hmmm what will be the problem like this?
```val totalSelf = INPUTS.fold(0L, {(a: Long, b:Box) =>    
      a + b.value
    }
  })```


[05/08/2020 7:27 PM] scalahub#2618
u mean blocks are not user-specific?


[05/08/2020 7:27 PM] jasondavies#8712
Ideally I wanted to exclude the perpetual token box value from the calculation


[05/08/2020 7:28 PM] scalahub#2618
yes you should exclude the perpetual token value


[05/08/2020 7:29 PM] jasondavies#8712
inputs should be: {token box}, {collateral box}, ... (any number)


[05/08/2020 7:29 PM] scalahub#2618
good point


[05/08/2020 7:29 PM] jasondavies#8712
outputs should be: {remainder to self (if > 0)}, {pool reward}, {token box}


[05/08/2020 7:30 PM] scalahub#2618
but maybe we could deduct the perpetual token value from remainder?


[05/08/2020 7:30 PM] jasondavies#8712
yes I guess an alternative could be to exclude the token box value instead. I'm not sure specifically whether the pool would ever use other inputs, can you give an example?


[05/08/2020 7:30 PM] scalahub#2618
totalSelf using new method and remainder = totalSelf - perpetual token box value


[05/08/2020 7:31 PM] scalahub#2618
I was considering possibility that someone could loan alice some collateral directly


[05/08/2020 7:31 PM] scalahub#2618
(if censorship resistant, or via pool in the current model)


[05/08/2020 7:31 PM] jasondavies#8712
oh you mean in the case of user-provided tx?


[05/08/2020 7:32 PM] scalahub#2618
yes or even via pool provided tx


[05/08/2020 7:33 PM] scalahub#2618
I could instruct pool to give to alice


[05/08/2020 7:34 PM] scalahub#2618
The perpetual token also forms a class of design patterns that allow us to extend the context beyond level 3, such as enforce only one tx per block

{Reactions}
üëçüèª üëç 

[05/08/2020 7:35 PM] scalahub#2618
another interesting question is given a set of identical boxes, how will a box determine if its sibling boxes have been spent


[05/08/2020 7:35 PM] scalahub#2618
("am I the first spender in ergomix")


[05/08/2020 7:36 PM] kushti#0978
proving opposite fact is easy


[05/08/2020 7:36 PM] kushti#0978
that another box is not spent


[05/08/2020 7:36 PM] jasondavies#8712
dataInputs

{Reactions}
üëç 

[05/08/2020 7:37 PM] jasondavies#8712
> ("am I the first spender in ergomix")
@scalahub hmm how would this be useful in practice?


[05/08/2020 7:37 PM] scalahub#2618
tweaking the fee model so that "first spender pays fee"

{Reactions}
üëç 

[05/08/2020 7:39 PM] jasondavies#8712
we're talking about spending of full-mix boxes presumably


[05/08/2020 7:39 PM] scalahub#2618
yes, and I think data inputs will solve "am I the first spender"

{Reactions}
üëç 

[05/08/2020 7:39 PM] jasondavies#8712
where does the fee actually come from in that case?


[05/08/2020 7:39 PM] jasondavies#8712
mix tokens I guess?


[05/08/2020 7:40 PM] scalahub#2618
yes mix tokens and an extra box with "reedemable" fee by the second spender


[05/08/2020 7:40 PM] scalahub#2618
but havent really thought in detail


[05/08/2020 7:40 PM] jasondavies#8712
yeah that would be nice


[05/08/2020 7:40 PM] kushti#0978
proving that something does no exist (i.e. not in the UTXO set) is not quite possible in general I guess


[05/08/2020 7:41 PM] jasondavies#8712
yes, I guess you can use incentives in certain cases but that has limitations


[05/08/2020 7:42 PM] jasondavies#8712
penalty that can be claimed by anyone who provides a proof of existence


[05/08/2020 7:42 PM] scalahub#2618
@kushti in limited cases its possible


[05/08/2020 7:42 PM] scalahub#2618
for example if there are only two boxes of a certain type, then its possible


[05/08/2020 7:43 PM] jasondavies#8712
ooh how?


[05/08/2020 7:43 PM] scalahub#2618
but those boxes have to depend on tokens


[05/08/2020 7:44 PM] jasondavies#8712
I think in the ErgoMix case, the incentives are aligned, because you only pay no fees if you can provide a positive proof that the other box has been spent. If you are the first spender, then you cannot provide such a proof. No negative proof is required as such.


[05/08/2020 7:45 PM] scalahub#2618
actually in ergomix, the negative proof is necessary


[05/08/2020 7:45 PM] scalahub#2618
second spender has to prove that other full mix box does not exist to redeem fee


[05/08/2020 7:45 PM] jasondavies#8712
oh right


[05/08/2020 7:45 PM] jasondavies#8712
yes, I got that the wrong way around üôÇ


[05/08/2020 7:47 PM] Robert K#0722
This is sort of similar to something I've been thinking about recently, I believe you can come up with schemes for both negative and positive proofs (or accumulation of blockchain-wide data/context into a single box) with incentivization schemes that require people to provide data inputs.


[05/08/2020 7:48 PM] Robert K#0722
So you can incentivize people with a reward if they can prove that X boxes are in Y address in a given Z epoch (span of block heights).


[05/08/2020 7:49 PM] Robert K#0722
Or like what Jason was saying with offering a reward if someone can provide a data input that counters a statement as a box actually exists.


[05/08/2020 7:50 PM] Robert K#0722
And using that you can also have people accumulate blockchain-wide context/data, by paying out whoever finds the largest number of boxes and uses them as data-inputs that meet a certain set of restrictions/logical checks (could be as simple as new boxes at a specific contract)

{Reactions}
üëç (2) 

[05/08/2020 7:51 PM] Robert K#0722
The only thing is that you need a steady stream of fees entering the system from users of whatever dApp/Contract uses said data.


[05/08/2020 7:51 PM] scalahub#2618
Basic idea of how proof of non-existence in limited context (ergomix) but not very sure how complex the script will be.. using tokens BTW (from advanced ergosript tutorial)

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/708390672649945126/firstSpenderPaysFee.png

{Reactions}
üëç 

[05/08/2020 7:51 PM] Robert K#0722
Which isn't too hard to do. You're essentially just creating on-chain proof contests for specific durations of time.


[05/08/2020 7:55 PM] scalahub#2618
this could be interesting for DEX, where you need to prove no lower (or higher) order exists


[05/08/2020 8:47 PM] scalahub#2618
Btw the current perpetual token based pool contract seems fine based on initial analysis..

{Reactions}
üëç 

[05/08/2020 8:49 PM] jasondavies#8712
Thanks!


[05/09/2020 1:43 AM] Robert K#0722
I thought about the above some more today, and I think this might actually be a major benefit no one understands yet of Ergo's design with UTXOs & data-inputs that sets it apart from all other models.


[05/09/2020 1:44 AM] Robert K#0722
We can efficiently make claims about the entire state of the blockchain by using these incentive schemes where anyone who can provide proof via a data-input receives a reward.


[05/09/2020 1:45 AM] Robert K#0722
As such we're outsourcing scanning the utxo set off-chain to automated bots who can do it for cheap, rather than to the validators (which is way too costly to be reailistic).


[05/09/2020 1:45 AM] Robert K#0722
This allows us to make any claim at all, about any piece of data/token in any register that is part of any dApp on the entire blockchain.


[05/09/2020 1:46 AM] Robert K#0722
In Ethereum you can't have access to data stored in other contracts or make claims about them at all, unless you specifically know the contract and call a function via your contract to the receiving contract.


[05/09/2020 1:48 AM] Robert K#0722
As such, if we were to build out software that makes it trivial for users to run bots to act kind of like oracles do but only perform utxo set scanning/searching/accumulating, Ergo contracts can actually have the whole blockchain as context available to them.


[05/09/2020 1:49 AM] Robert K#0722
This also allows people to set up the bots locally, or on AWS, and earn Erg while helping distributed protocols run. This can be a great way to get people in the community who want to do something beneficial earning Erg with a low barrier of entry and actually performing something genuinely useful.


[05/09/2020 1:55 AM] Robert K#0722
I'm going to write out some more thoughts on this in a post on the forum and I'll share the link here instead of a 50 line long monologue

{Reactions}
üëç 

[05/09/2020 2:30 AM] Robert K#0722
Do we have access to the block height a box was accepted/posted on the blockchain in the smart contract context if it's an input in our transaction?


[05/09/2020 4:07 AM] Robert K#0722
Alright, here's the resulting post on the topic with reasonable depth: https://www.ergoforum.org/t/efficient-global-context-claims-accumulators-in-blockchains/211

{Embed}
https://www.ergoforum.org/t/efficient-global-context-claims-accumulators-in-blockchains/211
Efficient Global Context Claims & Accumulators In Blockchains
Recently I have been working through designing various DeFi protocols in the Ergo contract model, and the thought came to mind that to make things more efficient it would be of great benefit if we could make claims about the global state of the blockchain/UTXO-set. This lead m...

{Reactions}
üëçüèª üëç 

[05/10/2020 11:11 PM] kushti#0978
> Do we have access to the block height a box was accepted/posted on the blockchain in the smart contract context if it's an input in our transaction?
@Robert K there's "creationHeight" field in a box (part of R3 register), but value for it is provided by user, protocol checks only that creationHeight <= HEIGHT (actual) . Used in storage rent


[05/10/2020 11:12 PM] kushti#0978
> Alright, here's the resulting post on the topic with reasonable depth: https://www.ergoforum.org/t/efficient-global-context-claims-accumulators-in-blockchains/211
@Robert K that's very neat write-up! In addition to sharding / sidechains, I think this idea would fit very well for stateless clients

{Embed}
https://www.ergoforum.org/t/efficient-global-context-claims-accumulators-in-blockchains/211
Efficient Global Context Claims & Accumulators In Blockchains
Recently I have been working through designing various DeFi protocols in the Ergo contract model, and the thought came to mind that to make things more efficient it would be of great benefit if we could make claims about the global state of the blockchain/UTXO-set. This lead m...


[05/11/2020 6:23 AM] scalahub#2618
@Robert K Maybe you can combine "reward" with "penalty" to obtain stronger security?


[05/11/2020 2:47 PM] Robert K#0722
@kushti Right, I think creationHeight can be useful for creating inventive schemes even if it's essentially just an upperbound, good to know thanks.


[05/11/2020 2:47 PM] Robert K#0722
Also can you expand on your thoughts about the relation to stateless clients?


[05/11/2020 2:51 PM] Robert K#0722
@scalahub Yeah, this is something I thought about too a bit last week. The lack of a penalty allows for seamless entry and was easier to convey for getting the idea out.


[05/11/2020 2:53 PM] Robert K#0722
I primarily thought about having reward/penalty schemes for data accumulation (in order to enforce data accumulation in certain time intervals to have "finalized checkpoints" every X blocks), but I think it should be possible to do something similar for claims as well.


[05/11/2020 2:55 PM] Robert K#0722
For claims, we can probably separate time into epochs/intervals as well, and anyone who joins a "Claim Pool" for a specific claim has to put up some collateral on entry which shows that they are actively checking said claim.


[05/11/2020 2:59 PM] Robert K#0722
Whoever first posts the counter-proof to the claim gets the reward (or maybe we can use a 1st (65%) 2nd (25%) 3rd (10%) payout scheme). However all other participants must also post the counter-claim as well within a given time duration to prove their active participation. If one participant fails to do so then it shows that they have failed to perform their task, and therefore their collateral is given to all of the other active participants in equal portions.


[05/11/2020 3:04 PM] Robert K#0722
We could even incorporate residual-payout schemes with such Claim pools, where there is a large reward for proving the counterclaim, however verifiers still receive a reward in every epoch if no counter-proof is produce by any participant. This way you incentivize active checking for a long duration of time while still providing enough funds for verifiers to continue. (Though we'd need the per-epoch fee to be several orders of magnitude smaller than the reward so that game theoretically it is always in everyone's best interest to claim the reward rather than all participants colluding and just getting passive rewards for doing nothing).


[05/11/2020 3:07 PM] Robert K#0722
To make this even more robust, we could theoretically also add the ability for outsiders to provide counter-proofs to the claim after an epoch has finished in the proceeding epoch. Thus if the pool participants colluded to not provide the counter-proof data-input and someone else can prove that the claim has been disproven via a data-input, then said outsider can redeem the reward and all of the collateral of all pool participants.


[05/11/2020 3:09 PM] Robert K#0722
As such pool participants receive a small residual-income for actively checking, and if they fail to do their job then outsiders have an incentive to double-check in order to receive the reward and "liquidate" all of the pool participants' collateral.


[05/11/2020 3:30 PM] Robert K#0722
Going further, we could also encode arbitrary entry conditions for joining a Claim Pool. It could just be submitting collateral and redeeming a "pool entry token" allowing for seamless entry/exit, could be semi-permissioned, and/or there could be hard-caps to the total number of verifiers (could be useful if residual payout scheme is in place).

{Reactions}
üëçüèª (2) 

[05/11/2020 3:32 PM] Robert K#0722
There's a lot of flexibility with all of this, and I think it should be possible to create some sort of a go-to default scheme which provides solid security together with good incentives for active claim checking.

{Reactions}
üëçüèª (2) 

[05/11/2020 9:44 PM] kushti#0978
@Robert K with stateless clients, most (or almost all) nodes in the network do not hold the state, but with rewarding schemes it will be incentivized to scan the chain in order to extract and store certain information from it


[05/12/2020 8:37 AM] scalahub#2618
@Robert K Maybe we can do it in a "query-response" fashion, where someone wants to make some arbitrary query on the past history of the blockchain, and the response will be based on incentives / punishment schemes over the next few blocks.


[05/12/2020 4:41 PM] Robert K#0722
@scalahub By past history, do you mean the current utxo-set/state (and so past history = past actions which have existing utxos)?


[05/12/2020 4:43 PM] Robert K#0722
But the query-response scheme is not a bad idea either. I think it'll end up depending on the use case and what is required. I can imagine certain protocols requiring claims to be true for the whole existence of the dApp, while others just need it over intervals and could maybe have a query-response scheme.


[05/12/2020 5:14 PM] Robert K#0722
Hmm, I just realized that with global context claims we can easily create trustless prediction markets for the state of any dApp/contract/data on-chain.

{Reactions}
üëçüèª 

[05/12/2020 5:15 PM] Robert K#0722
And then we can extend that design pattern to external sources of data via oracles.


[05/12/2020 10:17 PM] kushti#0978
@Robert K sounds intriguing!


[05/12/2020 10:26 PM] Robert K#0722
Essentially you could just mint 2 different tokens and lock them in a contract that has a claim in it. People can buy a "True" token or a "False" token, and if the claim gets proven before an expiration block height then say "True" token holders get paid out, else if the block height arrives then the "False" holders get paid out. The claim can be proven by anyone via a data-input, and so we could just have a basic prize, or a full fledged claim pool to make it secure.

{Reactions}
üëçüèª 

[05/12/2020 10:26 PM] Robert K#0722
Or even 0 reward if the people behind the market want to verify/find the data-input themselves.


[05/13/2020 2:13 PM] jasondavies#8712
@kushti @scalahub in case you want to check my updated contract, I posted it here: https://gist.github.com/jasondavies/fa5804a3ebe9aac94f898c3cd9cee4a5 the main difference is that (a) I now allow top-up by anyone (including pool) and (b) fixed an exception bug when checking INPUTS(0).tokens(0)

{Embed}
https://gist.github.com/jasondavies/fa5804a3ebe9aac94f898c3cd9cee4a5
gist:fa5804a3ebe9aac94f898c3cd9cee4a5
GitHub Gist: instantly share code, notes, and snippets.
https://images-ext-1.discordapp.net/external/v2ToTBFZ7zHPk2sQlBt80EaH2hhwBfD3Zdf1J_uxMxs/https/github.githubassets.com/images/modules/gists/gist-og-image.png

{Reactions}
üëçüèª (3) 

[05/13/2020 2:14 PM] jasondavies#8712
This demonstrates the benefits of actually testing all cases (2 pool reward cases, one with remainder and one without; top-up case; withdrawal case)


[05/13/2020 2:15 PM] jasondavies#8712
Execution cost is now around 12k


[05/14/2020 8:09 AM] scalahub#2618
> @scalahub By past history, do you mean the current utxo-set/state (and so past history = past actions which have existing utxos)?
@Robert K I think I had in mind some claim like "There existed such a UTXO at this point in time (but does not exist anymore)"


[05/14/2020 9:26 AM] kushti#0978
oh even this seems to be possible I guess, you just need to have some contract which puts UTXO commitments into an AVL+ tree and stores its digest


[05/14/2020 2:23 PM] Robert K#0722
Hmm, interesting. I imagine it's rather inefficient to do past queries like that using AVL+ trees, but it's cool to know there's a possibility.


[05/14/2020 2:25 PM] Robert K#0722
I think for the majority of protocols you can have a claim be live on-chain during the time duration you need to check it, which makes the whole thing a lot easier.


[05/14/2020 2:56 PM] scalahub#2618
yes of course based on current utxo set is much easier and more useful.. so we should focus on that first


[05/15/2020 11:11 AM] jasondavies#8712
https://www.ergoforum.org/t/attaching-arbitrary-conditions-to-unconfirmed-transactions/214

{Embed}
https://www.ergoforum.org/t/attaching-arbitrary-conditions-to-unconfirmed-transactions/214
Attaching arbitrary conditions to unconfirmed transactions
This is motivated by the ‚ÄúShort-lived Unconfirmed Transactions: Paying for Coffee‚Äù example in section 2.1 of the ‚ÄúAdvanced ErgoScript Tutorial‚Äù:  alice && HEIGHT <= getVar[Int](1).get  This contract allows Alice to pick an expiry height when they create a spending transaction,...

{Reactions}
üëçüèª (4) 

[05/15/2020 12:40 PM] kushti#0978
https://twitter.com/IACRePrint/status/1261243230202605571

{Embed}
IACR ePrint Updates (@IACRePrint)
https://twitter.com/IACRePrint/status/1261243230202605571
[New] ZeroJoin: Combining ZeroCoin and CoinJoin (Alexander Chepurnoy and Amitabh Saxena)  https://t.co/1DspM1fFab
Twitter

{Reactions}
üëç (4) 

[05/15/2020 9:57 PM] kushti#0978
> https://www.ergoforum.org/t/attaching-arbitrary-conditions-to-unconfirmed-transactions/214
@jasondavies interesting observation, maybe applications will appear later )

{Embed}
https://www.ergoforum.org/t/attaching-arbitrary-conditions-to-unconfirmed-transactions/214
Attaching arbitrary conditions to unconfirmed transactions
This is motivated by the ‚ÄúShort-lived Unconfirmed Transactions: Paying for Coffee‚Äù example in section 2.1 of the ‚ÄúAdvanced ErgoScript Tutorial‚Äù:  alice && HEIGHT <= getVar[Int](1).get  This contract allows Alice to pick an expiry height when they create a spending transaction,...


[05/15/2020 10:03 PM] jasondavies#8712
@kushti I tested it just now with `height < expiry` üôÇ But I found that any scripts that reduce to `false` initially won't even be broadcast, such as `minHeight < height`.


[05/15/2020 10:04 PM] kushti#0978
pools are rejecting them yes


[05/15/2020 10:07 PM] jasondavies#8712
oh I just thought of one... you can require particular votes for your tx to be mined ü§£

{Reactions}
üòÇ (2) 

[05/15/2020 10:07 PM] jasondavies#8712
on-chain bribing


[05/15/2020 10:09 PM] kushti#0978
üòÅ


[05/15/2020 10:10 PM] kushti#0978
yes, seems possible


[05/15/2020 10:12 PM] kushti#0978
btw, it is also possible to make a contract which is paying for ZK proof that certain El-Gamal ciphertext indeed encrypting certain value


[05/15/2020 10:12 PM] kushti#0978
and El-Gamal used widely in e-voting


[05/15/2020 10:14 PM] Robert K#0722
Very cool


[05/15/2020 10:15 PM] Robert K#0722
It's exciting to see how new innovations and cool ideas are being thought up what feels like every few days now.


[05/15/2020 10:19 PM] jasondavies#8712
> yes, seems possible
@kushti I think the mempool would reject such tx at the moment, I just checked


[05/15/2020 10:21 PM] kushti#0978
ah yes


[05/15/2020 10:22 PM] kushti#0978
sigma-protocol for proposition "El-Gamal ciphertext is encrypting x" is described in https://github.com/kushti/scapi-cookbook/blob/master/SDK_Pseudocode.pdf, Sec 2.7


[05/15/2020 10:22 PM] kushti#0978
basically, it is just DH tuple protocol


[05/15/2020 10:24 PM] jasondavies#8712
nice


[05/15/2020 10:24 PM] jasondavies#8712
I wonder about adding Pedersen commitments


[05/15/2020 10:25 PM] kushti#0978
well, proposition like "Pedersen commitment is bound to X" already supported


[05/15/2020 10:26 PM] jasondavies#8712
oh, true


[05/15/2020 10:26 PM] kushti#0978
but "I know opening of the commitment C" is not )


[05/15/2020 10:26 PM] kushti#0978
whether the latter is needed I don't know )


[05/15/2020 10:26 PM] jasondavies#8712
yeah probably need to wait for some use cases


[05/15/2020 10:28 PM] kushti#0978
it can be added via soft-fork if needed


[05/19/2020 7:40 AM] mx#5165
https://anyhedge.com/downloads/AnyHedge%20Whitepaper.pdf


[05/19/2020 11:41 AM] jasondavies#8712
@scalahub @kushti Should be easy to implement this in Ergo with dataInputs: https://eprint.iacr.org/2020/580

{Reactions}
üíØ 

[05/19/2020 11:42 AM] jasondavies#8712
"TxChain: Efficient Cryptocurrency Light Clients via Contingent Transaction Aggregation"


[05/19/2020 12:02 PM] kushti#0978
@jasondavies thanks! will check the paper in my evening) its already in a queue since published on eprint, but sooo many papers in the queue ( hard to catch up with everything these days


[05/19/2020 12:35 PM] scalahub#2618
> @jasondavies thanks! will check the paper in my evening) its already in a queue since published on eprint, but sooo many papers in the queue ( hard to catch up with everything these days
@kushti +1 from me as well. Will add to the queue üôÇ


[05/19/2020 12:42 PM] kushti#0978
@jasondavies btw it seems that the storm of new ZK Proof systems is over? and so good time to compare them )


[05/19/2020 1:58 PM] jasondavies#8712
> @jasondavies btw it seems that the storm of new ZK Proof systems is over? and so good time to compare them )
@kushti Yes, it's been crazy... I haven't really kept up


[05/19/2020 2:56 PM] Robert K#0722
TxChain looks really good. The fact Ergo seems to be the only Blockchain that natively supports it efficiently thanks to data-inputs and can use it in tandem with NiPoPoW for the most efficient cross-blockchain tx validity proofs, is actually quite exciting.


[05/19/2020 2:58 PM] Robert K#0722
Honestly, the more time passes I think UTXO + Data-inputs seem to be one of the most pivotal design choices with serious implications in nearly every use case that will really set Ergo apart. I think once people realize how much potential there is, there will be a lot of forks/copies of this design.

{Reactions}
üëç (2) 

[05/19/2020 3:36 PM] Robert K#0722
Hmm, I wonder if unlike sharding in say Eth 2.0 where smart contracts are trapped in 1 shard providing no scaling, if we can eventually have cross-chain dApps where Ergo sidechains have users interact via generating their own UTXOs, which the state gets folded together via data-accumulation pools, and then via NiPoPoW + TxChain then get shared across sidechains into a unified state.


[05/19/2020 3:41 PM] Robert K#0722
The more pure/functional natue of UTXOs may end up proving to be a better fit for distributed computation without bottlenecks on blockchains just like classically.

{Reactions}
üëç 

[05/19/2020 4:01 PM] kushti#0978
@gtklocker ^ I think you may find TxChain interesting )

{Reactions}
‚úÖ 

[05/19/2020 4:02 PM] kushti#0978
> Hmm, I wonder if unlike sharding in say Eth 2.0 where smart contracts are trapped in 1 shard providing no scaling, if we can eventually have cross-chain dApps where Ergo sidechains have users interact via generating their own UTXOs, which the state gets folded together via data-accumulation pools, and then via NiPoPoW + TxChain then get shared across sidechains into a unified state.
@Robert K sounds mind-blowing but also nothing unrealistic here it seems. Need to think a lot about it )


[05/19/2020 4:04 PM] kushti#0978
@Robert K @morphic @greenhat EIP-11 initial draft: https://github.com/ergoplatform/eips/pull/8 please let me know if something is confusing there. I will polish it further anyway, also, started implementation

{Embed}
https://github.com/ergoplatform/eips/pull/8
EIP-11: Distributed Signatures by kushti ¬∑ Pull Request #8 ¬∑ ergopl...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654

{Reactions}
üëç 

[05/19/2020 4:50 PM] Robert K#0722
The draft looks good all in all.


[05/19/2020 4:53 PM] Robert K#0722
A thought that just came up in regards to TxChain, I think there is inherent overlap between TxChain and the ideas I had on claims/data accumulation pools since they both are possible thanks to data-inputs. I don't pretend to completely understand the paper in it's entirety, however a data-accumulation pool in essence trustlessly folds the data down into a single value, and with TxChain, it may be possible to use that tx as a trustless proof for cross-chain dApp data transfer.

{Reactions}
üëçüèª 

[05/19/2020 4:55 PM] Robert K#0722
Since the data-inputs are used to create the accumulated datapoint, we don't even need to trust the accumulation but we could theoretically doublecheck on the sidechain I believe if we wanted high security.


[05/19/2020 4:57 PM] Robert K#0722
And we can likely create some sort of a perpetual claim box/contract which rewards people for performing the task of referencing contingent UTXOs in some predefined hierarchical way that as a result allows for easy and predictable use of TxChain. This would work similarly to the oracle pool payout scheme I've mentioned prior, where an individual is rewarded if they perform the required job in a timely manner with a posting schedule of when they are required to post/redeem reward. Though I guess that if we end up using data-accumulation pools constantly as design pattern to scale dApps, then if they were to accumulate often enough maybe we could get TxChain proofs about the state of the entire blockchain for free with no need for a dedicated claim box/contract.

{Reactions}
üëçüèª 

[05/20/2020 12:58 PM] gtklocker#2347
I skimmed TxChain just now. The use case of proving multiple transactions in many unrelated blocks does not seem so appealing/usual to me tbh. Also there's privacy concerns. For example if want to use this for wallet syncing and you somehow figure out the entirety of a user's txs then you upload this contingent tx on chain which basically links all the txs together, costs you in fees and leaks them.


[05/20/2020 12:58 PM] gtklocker#2347
Not sure how the aforementioned data-inputs work as I'm still an ErgoScript newbie but it should be viable.


[05/20/2020 12:59 PM] gtklocker#2347
Btw if you control the protocol and you can soft-fork other solutions can be also applied like a commitment over all txs on the block header/coinbase, then you can just provide a single multi-element tx proof which is conceptually much simpler and does not lose out on privacy as demonstrated.


[05/20/2020 1:24 PM] gtklocker#2347
@kushti ^


[05/20/2020 2:50 PM] Robert K#0722
I don't believe you need to specifically create contingent tx chains that link all txs together, but you do need at least a subset of blocks which are related to the UTXOs, so I don't believe it's as much of a privacy concern as you make it out to be. Furthermore, this is completely optionally and works in tandem with NiPoPoWs and so for the privacy-worried they can not even touch TxChain and just use NiPoPoWs instead for their wallet.


[05/20/2020 2:51 PM] Robert K#0722
The much bigger aspect imo is that this can be used for sidechains/cross-chain proofs for interoperability and the fact that it is actually easy to implement in a lot of blockchains.


[05/20/2020 2:52 PM] Robert K#0722
Also since dApps natively use inputs/data-inputs, we might even be able to get a bunch of TxChain proofs for free without changing anything.


[05/20/2020 4:49 PM] scalahub#2618
Made a post with some design patterns I could think of. https://www.ergoforum.org/t/ergoscript-design-patterns/222

{Embed}
https://www.ergoforum.org/t/ergoscript-design-patterns/222
ErgoScript Design patterns
Based on the recent posts, I thought I‚Äôd start this thread listing the common design patterns we have seen in ErgoScript use-cases.   Singleton Token: Essentially a token which exists as a singleton (i.e., when token was issued in quantity one). The box in which token is store...

{Reactions}
üëç (2) 

[05/20/2020 7:54 PM] morphic#4133
@kushti @greenhat regarding full interpreter in sigma-rust. 
Existing Sigma implementation have almost complete meta-model of the language (ErgoTree) for the reduceToCrypto part of the evaluation process. 
This allows to generate all serialization format tables in ErgoTree spec document (those are quite complext `tex` files). So existing meta-model is enough to generate ALL ErgoTree serializers for sigma-rust. 
This approach is often used for DSL implementations and even formalized and have a name https://en.wikipedia.org/wiki/Software_product_line
Because the language by itself is quite simple (in contrast to AOT costing part), the model can be extended, so that full ErgoTreeEvaluator with JIT costing implementation can be generated from the model automatically. 
The generator is basically consists of `language INdependent` generator logic part and `language dependent` code generation plugin. 
The benefit of this approach, is that we can repeat this for many languages Rust, JS, etc. 
In addition it will greatly unify implementations, and improve quality.
The drawback - it is less straightforward. If this approach looks attractive, I can help with the first version of the generator.

{Embed}
https://en.wikipedia.org/wiki/Software_product_line
Software product line
Software product lines (SPLs), or software product line development, refers to software engineering methods, tools and techniques for creating a collection of similar software systems from a shared set of software assets using a common means of production.The Carnegie Mellon S...


[05/20/2020 7:59 PM] morphic#4133
The complete meta-model of the ErgoTree may also be useful in tooling (like IDE) and other use cases, not only for sigma-rust. I think it is worth to keep in mind as well.


[05/20/2020 10:04 PM] kushti#0978
@gtklocker @jasondavies @Robert K well, it seems no data inputs even are needed in case of Ergo, light client can just ask for box proofs against a UTXO set commitment (included in a block header)

{Reactions}
üëç (3) 

[05/20/2020 10:07 PM] kushti#0978
@morphic I am more fond of organizing and simplifying Scala code at the moment


[05/20/2020 11:14 PM] Cheng Wang#1571
> @Robert K @morphic @greenhat EIP-11 initial draft: https://github.com/ergoplatform/eips/pull/8 please let me know if something is confusing there. I will polish it further anyway, also, started implementation
@kushti What will be the proof size complexity in your m-of-n threshold signature?

{Embed}
https://github.com/ergoplatform/eips/pull/8
EIP-0011: Distributed Signatures by kushti ¬∑ Pull Request #8 ¬∑ ergo...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[05/21/2020 6:33 AM] greenhat#6562
@morphic This sounds interesting! However, I'm still fighting with Rust compiler every day on ownership, borrowing, and other type level stuff. I don't feel confident enough to step up and write code that "writes" Rust code. üôÇ


[05/21/2020 6:38 AM] greenhat#6562
Regarding other languages I believe we will cover the majority with Rust codebase alone. WASM will get us JS/TS bindings. C bindings will get us Swift, Java/Kotlin (via JNI). Pretty much every mainstream language has good C FFI story nowadays.

{Reactions}
üíØ 

[05/21/2020 8:47 AM] kushti#0978
@morphic @greenhat also, manual rewriting involves auditing, which is of independent interest )


[05/21/2020 8:48 AM] kushti#0978
@Cheng Wang linear in "n" . btw I am not aware about sublinear threshold signatures. For ring signatures there are some log-size schemes, such as Groth-Kohlweiss


[05/21/2020 8:49 AM] kushti#0978
but for them a new sigma-protocol is needed in the core


[05/21/2020 3:42 PM] morphic#4133
> @morphic This sounds interesting! However, I'm still fighting with Rust compiler every day on ownership, borrowing, and other type level stuff. I don't feel confident enough to step up and write code that "writes" Rust code. üôÇ
@greenhat Yep, this is the main curve in the learning Rust. Similar to FP, you need to change the way you think about your program. But considering the Rust is bootstrapped, it is possible to write complex logic in managable way.


[05/21/2020 3:44 PM] morphic#4133
I have similar experience, that is why I looked to Dart, which is easier to lean even comparing to Java


[05/21/2020 3:44 PM] morphic#4133
But, Rust have many benefits agains Dart.


[05/21/2020 3:49 PM] greenhat#6562
Yeah, most of the time I don't even argue with rustc, just left surprised that he caught a potential bug or unwanted behaviour. "Fighting" was too harsh of a word. But reward is awesome. Close to "if it compiles - it works" kind of feeling.


[05/21/2020 4:01 PM] morphic#4133
And I didn't know it is so cross platform, I missed the WASM thing.


[05/21/2020 4:02 PM] Robert K#0722
This isn't really relevant, but related to "if it compiles - it works" I recall seeing some work being put into exploring implementing dependent types inside of Rust a year or two ago. If that ever actually materializes, then maybe indeed we can make such claims officially üòâ


[05/21/2020 4:03 PM] morphic#4133
Url?


[05/21/2020 4:03 PM] kushti#0978
@jasondavies @greenhat @morphic @scalahub @Robert K https://www.ergoforum.org/t/proof-of-work-backed-tokens/224

{Embed}
https://www.ergoforum.org/t/proof-of-work-backed-tokens/224
Proof-of-Work Backed Tokens
In Ergo, one token per transaction can be issued, and the token id must be the same as id of the box of the first input.  Thus if you have generated a box you know id of the future token. And this id is calculated via hashing.  Thus via iterating over a register (e.g. R4) used...

{Reactions}
‚ù§Ô∏è (6) 

[05/21/2020 4:07 PM] morphic#4133
This is very cool


[05/21/2020 11:10 PM] kushti#0978
https://github.com/reflexer-labs/whitepapers/blob/master/rai.pdf

{Embed}
https://github.com/reflexer-labs/whitepapers/blob/master/rai.pdf
reflexer-labs/whitepapers
Papers that describe what Reflexer Labs is building - reflexer-labs/whitepapers
https://images-ext-1.discordapp.net/external/__znfptV6SJOLsEO1rpJ9trrmPXIVlcqACg0awfUJyc/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/62448000


[05/21/2020 11:12 PM] kushti#0978
"Rai: A Low Volatility, Trust Minimized Collateral for the DeFi Ecosystem"


[05/29/2020 1:53 PM] kushti#0978
@scalahub https://arxiv.org/pdf/2005.04842.pdf

{Reactions}
üëç 

[06/04/2020 8:41 AM] kushti#0978
https://arxiv.org/pdf/2005.14051.pdf

{Reactions}
üëç 

[06/04/2020 11:30 AM] scalahub#2618
> https://arxiv.org/pdf/2005.14051.pdf
@kushti The technique used by current Ethereum mixers (as per the above paper) is `depositAccount-----deposit----> MixerContract <----withdraw_req-----withdrawAccount` What I don't understand is  `withdrawAccount` must have non-zero ethers to begin with to fire the `witdraw_req`. How will those initial ethers appear? Won't the source of those ethers defeat anonymity?

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/718049065644064788/Screenshot_from_2020-06-04_15-58-02.png


[06/04/2020 11:31 AM] kushti#0978
Good question


[06/04/2020 11:31 AM] kushti#0978
With accounts, leakage is much more likely I guess


[06/04/2020 11:31 AM] scalahub#2618
unless eth allows zero fee tx for withdraw


[06/04/2020 11:33 AM] scalahub#2618
which I don't think is still possible (fire tx from an account with zero balance)


[06/04/2020 3:03 PM] Sebastien#0653
https://twitter.com/IACRePrint/status/1268536462527598595

{Embed}
IACR ePrint Updates (@IACRePrint)
https://twitter.com/IACRePrint/status/1268536462527598595
[Revised] ZeroJoin: Combining ZeroCoin and CoinJoin (Alexander Chepurnoy and Amitabh Saxena)  https://t.co/1DspM1fFab
Twitter

{Reactions}
üëç (2) 

[06/06/2020 11:49 AM] scalahub#2618
how does `atLeast(bound, collection)` work? Does it use Shamir secret sharing? I guess uses the secret sharing described in  (Cramer, Damgard, Schoenmakers CRYPTO'94)


[06/08/2020 2:37 PM] kushti#0978
yes, CDS'94 under the hood


[06/10/2020 4:07 PM] Robert K#0722
Ergo is mentioned in IOHK's hydra paper on page 3: https://iohk.io/en/research/library/papers/hydrafast-isomorphic-state-channels/

{Embed}
https://iohk.io/en/research/library/papers/hydrafast-isomorphic-state-channels/
Hydra: Fast Isomorphic State Channels - IOHK Research
Hydra: Fast Isomorphic State Channels, ePrint Archive, March/2020
https://images-ext-1.discordapp.net/external/8mVxJyncPBbwTJsfT1RMBplNGyp9wyvQjrtNa9ckZbI/https/ucarecdn.com/898961f7-4113-42f7-b96d-1adedae97c1a/


[06/18/2020 7:41 PM] Robert K#0722
It should be possible to use Ergs from boxes at a P2S address (if you have the right to spend them) for tx fees if you have an input box with tokens inside, right?


[06/18/2020 7:42 PM] Robert K#0722
As in, can you spend a token-only input box (with near 0 Ergs) and use Ergs from a box under a contract to pay for tx fees?


[06/18/2020 7:43 PM] Robert K#0722
That's essentially what is used in the ErgoMix implementation if i recall correctly? I'd just like to verify to be sure.


[06/19/2020 11:14 AM] jasondavies#8712
@Robert K Yes, assuming the scripts for all input boxes allow this. It might be the case that some scripts are _too_ strict but in general I suspect that most scripts do not place stringent requirements on the inputs to the spending transaction, so any number of inputs can be spent, and one or more of these inputs might contain ERG that would be used for mining fees.


[06/19/2020 11:15 AM] jasondavies#8712
A trivial example of a script that would be too strict would be something that says `INPUTS.size == 1`. Such a box can only be spent as part of a transaction that has a single input.


[06/19/2020 2:02 PM] Robert K#0722
Right, makes sense. Perfect, thank you @jasondavies.


[06/19/2020 8:55 PM] kushti#0978
@jasondavies @scalahub @Robert K @morphic @anon2020s  another solution for improving privacy is using stealth addresses. A stealth address preserves recipient privacy without per-transaction interaction needed (so receiver published an address e.g. on its website, and then sender can obtain some unique one-time address from it.

A solution in Ergo can be based on non-interactive Diffie-Hellman key exchange again. So a merchant, for example, is publishing its public key g^x corresponding to the secret x. Then the buyer with public key g^y obtains shared secret (g^x)^y = (g^y)^x , then the box created by the buyer could be protected by prove_dlog(g^xy for generator g^y). Unfortunately, Ergo does not have prove dlog with custom generator, but it can be bypassed by proveDHTuple(g^y, g^y, g^xy, g^xy) (a little bit weird trick but okay). To have one-time keys, buyer can use one-time secret g^r.

Then the stealth address application could be as follows: https://wallet.plutomonkey.com/p2s/?source=ewogIHZhbCBneSA9IFNFTEYuUjRbR3JvdXBFbGVtZW50XS5nZXQKICB2YWwgZ3h5ID0gU0VMRi5SNVtHcm91cEVsZW1lbnRdLmdldAoKICBwcm92ZURIVHVwbGUoZ3ksZ3ksZ3h5LGd4eSkKfQ== , so single address covering all the stealth transfers. However, the merchant needs to listen to all the payments to this address and to try to resolve every transfer (not so high load though)

{Reactions}
üíØ (2) 

[06/19/2020 9:41 PM] scalahub#2618
Quite interesting.. so buyer may tell merchant offchain to look for given txid?


[06/19/2020 9:42 PM] scalahub#2618
why would merchant listen? I mean no one will be sending donations. so when the purchase is made in offchain transaction, buyer may tell merchant the tx id


[06/19/2020 9:42 PM] kushti#0978
@scalahub yes, but scanning all the transactions of the stealth-receive contract is also not terrible at all I guess


[06/19/2020 9:43 PM] scalahub#2618
Very interesting application of Diffie Hellman key exchange


[06/19/2020 9:43 PM] kushti#0978
for secp256k1 you can do like 1000/checks per second easily


[06/19/2020 9:43 PM] scalahub#2618
yes for stealth donations üôÇ


[06/19/2020 9:46 PM] scalahub#2618
also, receiver need not publish on website (thereby hiding the intention of receiving stealth payments) and simply send g^x to buyer offchain


[06/19/2020 9:52 PM] scalahub#2618
> @jasondavies @scalahub @Robert K @morphic @anon2020s  another solution for improving privacy is using stealth addresses. A stealth address preserves recipient privacy without per-transaction interaction needed (so receiver published an address e.g. on its website, and then sender can obtain some unique one-time address from it.
> 
> A solution in Ergo can be based on non-interactive Diffie-Hellman key exchange again. So a merchant, for example, is publishing its public key g^x corresponding to the secret x. Then the buyer with public key g^y obtains shared secret (g^x)^y = (g^y)^x , then the box created by the buyer could be protected by prove_dlog(g^xy for generator g^y). Unfortunately, Ergo does not have prove dlog with custom generator, but it can be bypassed by proveDHTuple(g^y, g^y, g^xy, g^xy) (a little bit weird trick but okay). To have one-time keys, buyer can use one-time secret g^r.
> 
> Then the stealth address application could be as follows: https://wallet.plutomonkey.com/p2s/?source=ewogIHZhbCBneSA9IFNFTEYuUjRbR3JvdXBFbGVtZW50XS5nZXQKICB2YWwgZ3h5ID0gU0VMRi5SNVtHcm91cEVsZW1lbnRdLmdldAoKICBwcm92ZURIVHVwbGUoZ3ksZ3ksZ3h5LGd4eSkKfQ== , so single address covering all the stealth transfers. However, the merchant needs to listen to all the payments to this address and to try to resolve every transfer (not so high load though)
@kushti Can you make a forum post of the idea?


[06/19/2020 9:53 PM] kushti#0978
yeah, will do over the weekend


[06/19/2020 9:53 PM] Robert K#0722
Ah I see, very cool.


[06/19/2020 9:53 PM] kushti#0978
currently on a machine with no forum credentials )


[06/19/2020 9:53 PM] scalahub#2618
P2S playground is very useful üôÇ


[06/19/2020 9:59 PM] Robert K#0722
Thinking about it, this is essentially of how Ethereum's Whisper protocol works but for the tx context and not messaging.


[06/19/2020 10:00 PM] Robert K#0722
Where you go through all messages that pass your node attempting to decrypt to figure out of the message is for you.


[06/19/2020 10:01 PM] Robert K#0722
It's essentially the same design pattern to preserve anonymity. I've thought about this in the messaging context quite a bit in the past, very nice insight @kushti that it's just as useful in this context as well.


[06/19/2020 10:05 PM] kushti#0978
ah, can be used for messaging also btw, as from g^xy a key for symmetric encryption/decryption can be derived, and a message can be put in a register (R6)

{Reactions}
üëç 

[06/19/2020 10:07 PM] scalahub#2618
@Robert K @kushti good observation; so I guess stealth payment imply stealth messaging


[06/19/2020 10:08 PM] Robert K#0722
Yep, but it's inefficient obviously. Consensus + messaging = ridiculous fees + bloat.


[06/19/2020 10:08 PM] Robert K#0722
It's good for starting off-chain protocols, and that's what may end up being it's use case.


[06/19/2020 10:09 PM] Robert K#0722
If it's possible to encrypt as well, then it could be possible to provide ids/identifiers for off-chain networks (or centralized systems as well)


[06/19/2020 10:10 PM] Robert K#0722
I wonder if this could theoretically be used to initiate private state channels potentially?


[06/19/2020 10:11 PM] scalahub#2618
surely encryption is possible; and ElGamal type encryption can be done in smart contracts


[06/19/2020 10:13 PM] kushti#0978
> I wonder if this could theoretically be used to initiate private state channels potentially?
@Robert K I guess so!


[06/19/2020 10:17 PM] Robert K#0722
I think there are a lot of really interesting use cases laying await with this idea for future, especially since we also have sigma protocols.


[06/19/2020 10:18 PM] Robert K#0722
And having this seamlessly work with the smart contract layer makes this potentially quite powerful.


[06/21/2020 2:31 PM] kushti#0978
https://www.ergoforum.org/t/stealth-address-contract/255

{Embed}
https://www.ergoforum.org/t/stealth-address-contract/255
Stealth Address Contract
Another solution for improving privacy is using stealth addresses. A stealth address preserves recipient privacy without per-transaction interaction needed (so receiver published an address e.g. on its website, and then sender can obtain some unique one-time address from it). ...


[06/25/2020 4:01 PM] kushti#0978
Seems it is still better to wait and watch for the Cambrian explosion of ZK proof systems

https://eprint.iacr.org/2020/735.pdf


[06/26/2020 11:01 PM] kushti#0978
@jasondavies @scalahub  @mx @Robert K @morphic  https://www.ergoforum.org/t/self-sovereign-defi/260

{Embed}
https://www.ergoforum.org/t/self-sovereign-defi/260
Self-Sovereign DeFi
Some time ago I expressed an idea that Ergo can be good for ‚Äúself-sovereign‚Äù DeFi without a clear explanation what could be that about. I still do not have a concrete definition, but let me show an example which I have in my mind.  So let‚Äôs take the crowdfunding pledge contrac...

{Reactions}
üëç (3) 

[06/26/2020 11:10 PM] mx#5165
it is hard to imagine that DeFi term in 2020 needs another adjectives, oh well, practice makes the master i guess


[06/26/2020 11:37 PM] kushti#0978
heh here by self-sovereign I meant that you define your contract, but still it can have valuable interactions


[06/26/2020 11:41 PM] mx#5165
"you define" is pretty big deal it seams these days


[06/27/2020 12:37 AM] Robert K#0722
> @jasondavies @scalahub  @mx @Robert K @morphic  https://www.ergoforum.org/t/self-sovereign-defi/260
@kushti Cool thought I hadn't really considered before. Replied with a different way of viewing what you wrote through more of the lens of multi-stage protocols (where my mind has been in, in recent weeks)

{Reactions}
üôèüèª 

[06/28/2020 11:21 AM] scalahub#2618
> @jasondavies @scalahub  @mx @Robert K @morphic  https://www.ergoforum.org/t/self-sovereign-defi/260
@kushti Very cool variation of crowdsourcing .. also I think there is a typo üôÇ 
`Then Alice can claim Carol‚Äôs pledge before deadline as well. She can claim Alice‚Äôs funds before Alice‚Äôs pledge deadline if Carol‚Äôs pledge is not less than 25 ergs.`
Shouldn't this be 
`Then Alice can claim Carol‚Äôs pledge before deadline as well. She can claim Bob‚Äôs funds before Bob‚Äôs pledge deadline if Carol‚Äôs pledge is not less than 25 ergs.` ?

{Embed}
https://www.ergoforum.org/t/self-sovereign-defi/260
Self-Sovereign DeFi
Some time ago I expressed an idea that Ergo can be good for ‚Äúself-sovereign‚Äù DeFi without a clear explanation what could be that about. I still do not have a concrete definition, but let me show an example which I have in my mind.  So let‚Äôs take the crowdfunding pledge contrac...


[06/29/2020 12:36 PM] kushti#0978
@scalahub oh, right, fixed! thanks!


[07/07/2020 10:54 AM] fffffff1#4381
Hello ,I have been following this project and have some idea for app , I am not developer .
The idea of the app is to create derivative market on the difficulty of the network .

How it will work ? 
- two tokens will be created 
Up token and down token 
- smart contract will be created 
The user will be able to send erg coins to the contract and get up and down tokens 

Example : first user who send the coins is the creator of the market so he gets 1 up and 1 down token for each coin and the contract records the difficulty of the block at which the market created for this two tokens.

Note : there can be multiple time frames for the market determined by the user or by some kind of contract operator .

Then anyone who sends coins gets up and down tokens propotionaly to the difference between the difficulty at the time of the market creation and the time at which the user sends more coins to the contract.
So if diff at block at time zero ( once the first user the creator of the market sends coins ) is 100 and user sends 10 coins he will get 10 up and 10 down tokens . Then another user after some time sends 10 coins and the difficulty at the block he send coins is 110 he will get 11 down tokens and 9 up tokens become the difference between 100 and 110 is 10% .

Note : once the market is created a time experation period is diturmend 
For example one month , represented in amount of blocks during one month . 

Users have this actions to do :
1. Get up and down tokens - sending coins to the contract .
2. redeem coins - sending tokens to the contract and getting propotional  amount of coins .
For example :
There are  currently 22 wining tokens ( up tokens for this meter as currently the difficulty is above the difficulty at block at time zero ) and user send 4 up tokens he has to the contract then he will get 4/22 the amount of coins in the contract .
3. Claim coins - same as redeem only difference is that it's possible only after the experation period of the contract.


[07/07/2020 10:54 AM] fffffff1#4381
Note : this contract should work fine for trading  the difficulty of the network but can be more even better if there was something like balancer,uniswap or curve ( as on ethereum ) where the up and down tokens can be traded and have automatic market making functions for providing market liquidity collecting trading fees , generating yeld and so on .. 

I am not sure how understandable what I wrote here so I am ready to answer questions


[07/07/2020 2:36 PM] Robert K#0722
Ah, kind of interesting, though sounds like a very niche target audience for something like this


[07/07/2020 3:00 PM] fffffff1#4381
I believe that blockchain economic development should grow inside and not only outside itself meaning getting it's resilience and strength from the build in game theory involving pow , difficulty , technological advancement in mining equipment and so on .. 
So in my mind creating derivative market on such fundamental pow blockchain property is archyimportent and will make the mining network and all its actors much stronger and more independent .


[07/07/2020 3:09 PM] Robert K#0722
Sure, but as we've seen recently, complex DeFi protocols can end up causing weird incentives and outcomes to come about so I am a bit hesitant to say that it'll inherently add resilience.


[07/07/2020 3:10 PM] Robert K#0722
That said, this isn't something that will drive adoption anyways, and that is probably the biggest hurdle Ergo has at the moment. Good pursuit once a large community has been established.


[07/07/2020 3:15 PM] fffffff1#4381
I don't know what's ergo plans for Mass adoption , my idea sure not the best for this goal , but any idea and it's purpose is only doable if the effort is less then the potential gain so I am interested in it delivery only if it's easy to do using ergo  .
I am sorry if it sounds complicated what I wrote here my goal was to make it as simple as possible not the other way around .


[07/07/2020 3:23 PM] kushti#0978
@fffffff1 sounds like prediction market for difficulty? We can think about other derivatives, e.g. options


[07/07/2020 3:25 PM] kushti#0978
In general, mining power derivatives sound promising, we discussed them a bit with @jasondavies many months ago. On user base etc, DEX is needed at least (and coming), as well as better infrastructure for creating apps (also coming)


[07/07/2020 3:31 PM] fffffff1#4381
> @fffffff1 sounds like prediction market for difficulty? We can think about other derivatives, e.g. options
@kushti  Yes , for insurance purposes for miners who want to add or disconnect or upgrade there mining equipment . And also for speculators and yeld farmers .


[07/07/2020 3:33 PM] kushti#0978
Yeah


[07/07/2020 3:36 PM] fffffff1#4381
> In general, mining power derivatives sound promising, we discussed them a bit with @jasondavies many months ago. On user base etc, DEX is needed at least (and coming), as well as better infrastructure for creating apps (also coming)
@kushti  , it's actually difficulty derivatives , but also as you point out can be seen as mining power derivatives . It's interesting that this market can be priced or can use kwh as unit of account but I am not sure about that ..


[07/07/2020 3:40 PM] Robert K#0722
Definitely a unique DeFi aspect for Ergo as the majority of blockchains are going PoS these days with smart contracts.


[07/07/2020 3:44 PM] kushti#0978
@fffffff1 on fixing kwh as UoA, it could be about a stablecoin, another option btw is to tie emission of a token with difficulty and also some parameter indicating technological advancements in mining hardware


[07/07/2020 3:53 PM] fffffff1#4381
This virgen and unexplored field of defi around difficulty and mining industry can have multiple products and use cases , I just thought about and suggested the one that I thought about in terms of architecture and else . BTW I also thought about business model and some solutions for transmiting the difficulty value to the contract .


[07/07/2020 5:28 PM] kushti#0978
@fffffff1 one solution is to use oracle pools. In fact, Ergo allows for access to difficulty from last 10 block headers , but in encoded form ("nbits", the same format as in Bitcoin), and it could be tricky to parse it in a script. @greenhat   @morphic maybe we can add simplified access to difficulty in 4.0 ?


[07/07/2020 5:50 PM] kushti#0978
https://arxiv.org/pdf/2007.01046.pdf

{Reactions}
üëç 

[07/07/2020 5:52 PM] Robert K#0722
`Finally, we propose a modification to theBitcoin consensus rule that allows users to upload a certain subsetof preimage resistant problems and let the mining process solvethem.`


[07/07/2020 5:52 PM] Robert K#0722
That's actually a kind of cool idea. A "mempool" of problems.


[07/07/2020 6:03 PM] Robert K#0722
I imagine the big problem facing useful PoW is always having a steady stream of "useful" problems that people want to pay for. Will put this paper on my to-read list.


[07/07/2020 7:29 PM] kushti#0978
@fffffff1 btw it seems (big) miners can earn tokens by jumping on/off the digging the ergs ?


[07/07/2020 7:46 PM] fffffff1#4381
To get tokens coins must be sent to contact , big miners can send coins then try to manipulate the direction of the difficulty but effectively they will just create market for speculators and other miners , if the mining network is decentralized then this function of having derivative market on difficulty will make it even more so and will add fairness as it will offer less big miners opportunity to compete with bigger miners


[07/08/2020 10:23 AM] kushti#0978
https://fmbc.gitlab.io/2020/program.html


[07/08/2020 5:10 PM] kushti#0978
@fffffff1 can I put your proposal on the forum ? To be not forgotten and implemented eventually ?


[07/08/2020 5:11 PM] fffffff1#4381
Yes , tnx


[07/08/2020 5:11 PM] fffffff1#4381
Pm me link once you post


[07/08/2020 5:16 PM] fffffff1#4381
> @fffffff1 one solution is to use oracle pools. In fact, Ergo allows for access to difficulty from last 10 block headers , but in encoded form ("nbits", the same format as in Bitcoin), and it could be tricky to parse it in a script. @greenhat   @morphic maybe we can add simplified access to difficulty in 4.0 ?
@kushti 
In case something like this is implemented , I may just write it open source , if it will be simple .


[07/08/2020 6:19 PM] kushti#0978
And another problem, anonymous on-chain sharing: https://www.ergoforum.org/t/lets-sign-collectively-distributed-signatures-api/259/4?u=kushti

{Embed}
https://www.ergoforum.org/t/lets-sign-collectively-distributed-signatures-api/259/4?u=kushti
Let's sign collectively! Distributed signatures API
Using blockchain only is possible, the only problem is to decide who will be a real signer and who will be simulated, and also who will simulate (the latter can be decided deterministically once real signers set is decided, e.g. a signer with the first key from the real keys s...


[07/08/2020 6:19 PM] kushti#0978
@fffffff1 ok, will post!


[07/08/2020 6:19 PM] kushti#0978
> @kushti 
> In case something like this is implemented , I may just write it open source , if it will be simple .
@fffffff1 you can code something you mean ?


[07/08/2020 6:22 PM] fffffff1#4381
Yes


[07/08/2020 6:22 PM] fffffff1#4381
But not promise anything


[07/08/2020 6:25 PM] kushti#0978
@fffffff1 anyway! What's your stack ?


[07/08/2020 6:29 PM] fffffff1#4381
Wrote this https://diffdapp.gitlab.io/dd/source.sol 
https://t.co/C1GPbkOnVu?amp=1
It's kind of first version of the idea


[07/13/2020 12:45 AM] kushti#0978
https://www.ergoforum.org/t/ergotree-as-an-authentication-language/274

{Embed}
https://www.ergoforum.org/t/ergotree-as-an-authentication-language/274
ErgoTree as an Authentication Language
While contract developers are using higher-level languages, such as ErgoScript (see its whitepaper: https://ergoplatform.org/docs/ErgoScript.pdf ), they are to be compiled into ErgoTree representation, which is stored on the blockchain. ErgoTree is not an assembly imperative l...


[07/13/2020 1:50 PM] kushti#0978
@fffffff1 looks good! Will post the idea soon


[07/13/2020 1:52 PM] fffffff1#4381
Ok tnx


[07/20/2020 7:05 PM] kushti#0978
@fffffff1 please let me know if everything is okay: https://www.ergoforum.org/t/mining-power-derivatives-two-tokens-approach/277

{Embed}
https://www.ergoforum.org/t/mining-power-derivatives-two-tokens-approach/277
Mining Power Derivatives - Two Tokens Approach
The following idea was published on the Discord by ‚Äúnyzblossom‚Äù. I‚Äôm posting it here for archival purposes since mining power derivatives can be popular at some point of Ergo Platform development:  ==============  I have been following this project and have some idea for app ,...


[07/21/2020 5:52 AM] fffffff1#4381
Looks fine , thanks again , really hope there will be interest from. The community about this . If this idea is implemented on many pow blockchains on same platform this will be huge as the market for all pow blockchains is in the multi billions . The  idea it uses unique version of  bonding curve to determine price , unlike traditional order books system , make it scaleble and very similar to uniswap on ether.

{Reactions}
üëçüèª (3) 

[07/21/2020 3:46 PM] kushti#0978
https://www.youtube.com/watch?v=oN9pRXHicKc&list=PLaJFazkEqvN4oAEG55BFXZ_neo6tCVVXv&index=3&t=0s

{Embed}
FMBC 2020
https://www.youtube.com/watch?v=oN9pRXHicKc&start=0s
Summary of Bitcoin Trace-Net: Formal Contract Verification at Signi...
https://images-ext-1.discordapp.net/external/n4SefjbFcZ3s49vrluR5LZsRfEFx6ZkKv5gc9dIqbcg/https/i.ytimg.com/vi/oN9pRXHicKc/sddefault.jpg


[07/21/2020 3:48 PM] kushti#0978
> Looks fine , thanks again , really hope there will be interest from. The community about this . If this idea is implemented on many pow blockchains on same platform this will be huge as the market for all pow blockchains is in the multi billions . The  idea it uses unique version of  bonding curve to determine price , unlike traditional order books system , make it scaleble and very similar to uniswap on ether.
@fffffff1 oh you mean that we can have e.g, (oracles-powered) contracts around ZCash difficulty on top of Ergo ?


[07/21/2020 4:19 PM] fffffff1#4381
Yes, 
And as price discovery done by having a pool of ergo coins against down / up tokens , claims on the underlying collateral , similar to how uniswap protocol works in the sence that it's not using traditional order books for price discovery, this can be implemented at scale on all difficulty supported APIs ( or Oracle's) and fees can be collected by the protocols dao and distributed to all dao tokens ( shares in this case ) holders for example ... 
There can be by default so called automatic market maker or liquidity provider in this case actually creating the market by setting the expiration date and initial ergo pool and then maybe incentivized by the protocol to do so by alocating some % of the fees the pool is generating , this will add ergo yeild farming market .
Basically the idea is to take all technological advancement happened and keep happening in ether DeFi space and use it for the purpose of financiaizing crypto POW industry which is multi billion market at the core of btc ,eth and other top pow blockchains that is currently not financialized by crypto assets in any way


[07/23/2020 11:29 AM] jasondavies#8712
Is it worth looking into integration with tokenisation platforms such as RenVM? https://renproject.io/

{Embed}
https://renproject.io/
Ren Project
Introducing RenVM, our core product providing access to inter-blockchain liquidity for all decentralized applications. Bringing BTC, BCH and ZEC to your Ethereum dApp.
https://images-ext-2.discordapp.net/external/wjdC7DR_TX5dDhMHf0gd-yQaODf8Fp_boF3ZSnTqIPE/https/renproject.io/share.jpg


[07/23/2020 3:00 PM] Robert K#0722
@jasondavies Do you know if Ren is fulfilling it's intended goals/is doing well? I read the whitepaper a while back and have been curious to see if it's working well.


[07/23/2020 3:01 PM] Robert K#0722
I think my take was that the project was sounding kind of over-ambitious with wanting to be a perfect relay allowing anyone from X blockchain to be able to trigger a contract on Y blockchain seamlessly (which is going to have ridiculous fees, problems with data transfers between different blockchains/contracts and so on-forth).


[07/23/2020 4:20 PM] fffffff1#4381
It has renvm run on ether


[07/23/2020 4:20 PM] fffffff1#4381
The fees are small


[07/23/2020 4:22 PM] fffffff1#4381
It has 10 mil of peged assets issued most of it renbtc


[07/23/2020 4:24 PM] fffffff1#4381
Integrating Ren or any other project that pegs coins using ethereum network is the same as integrating erc20 tokens


[07/23/2020 4:28 PM] fffffff1#4381
Imo ergo has zero chance getting any real market share trying to compete with ether , only way is to make it complementary to ether or creating its own unique market where ergo will have bought competitive advantage and first market mover advantage .


[07/23/2020 5:09 PM] jasondavies#8712
@Robert K not sure to be honest!


[07/28/2020 9:26 PM] Robert K#0722
@morphic If I recall correctly you mentioned a while ago that you came up with the idea for data-inputs to be implemented. Is that right, or was I misremembering wrong?


[07/28/2020 9:27 PM] Robert K#0722
For the next Emurgo Research piece I'm diving into data-inputs and wanted to give direct credit since I think it's actually one of the most valuable additional innovations on top of the UTXO model which unlocks a lot imo.


[07/28/2020 11:12 PM] mx#5165
@16739263 all your posts fit greatly general channel and other official ones, random is like for things happening outside cryptocurrency and some interesting things happening in different cryptocurrencies


[07/28/2020 11:29 PM] mx#5165
most things on top of Ergo will be in the form of a protocols with self-sovereign participants, not a centralized contract, additionally privacy-preserving applications, it doesn`t need to compete with ether, not being run also by people trying to do it, ether has different competitors coming at the moment to be afraid of


[07/28/2020 11:47 PM] mx#5165
promotion of extended UTXO is pretty big promotion for Ergo itself above its other unique things, we believe it should do fine, then Ergo can be very serious competitor to Bitcoin Cash, Raven for example


[07/29/2020 12:23 AM] kushti#0978
@Robert K if my memory serves me well, @morphic 's idea initially was about to support global shared libraries, which is not compatible with stateless and light clients though, then during a brainstorm (  @Dmitry Meshkov , @morphic and me were there) the idea of data-inputs was born


[07/29/2020 8:35 AM] Dmitry Meshkov#1652
Another use case of data inputs is to provide access to some data in the blockchain. E. G. If there is an oracle box with ERG price, you can refer to it in your transaction as data input, whereas you can't spend it.


[07/29/2020 10:55 AM] morphic#4133
> @Robert K if my memory serves me well, @morphic 's idea initially was about to support global shared libraries, which is not compatible with stateless and light clients though, then during a brainstorm (  @Dmitry Meshkov , @morphic and me were there) the idea of data-inputs was born
@kushti @Robert K My original proposal was to introduce read-only inputs as a way to give access to the arbitrary UTXO boxes from ErgoScript. They are readonly as opposed to normal boxes which change their status in a transaction. This was actually in response to someone asking in TG about code reuse possibiles in Ergo. There was also LibraryInputs name for some time in circulations, but my original idea was about immutability of boxes over transactions, hence ReadOnly boxes name.


[07/29/2020 10:57 AM] morphic#4133
I still think ReadonlyInputs is a better name BTW then dataInputs. It better expresses the original intentions and their essence.


[07/29/2020 2:11 PM] Robert K#0722
Yeah, when explaining the concept to people I tend to say read-only inputs first, and then tell them they are called data-inputs. `Data-inputs` is more succint at least, so while less clear it's at least shorter/easier to write.


[07/29/2020 2:16 PM] Robert K#0722
Alright thanks for the background info.


[07/30/2020 4:36 PM] fffffff1#4381
> @fffffff1 please let me know if everything is okay: https://www.ergoforum.org/t/mining-power-derivatives-two-tokens-approach/277
@kushti 
https://m.youtube.com/watch?v=heaRcsaQpyg
 see minute 20 " hashrate futures market " plz update on forum maybe imo it's validation of everything I have wrote here about this issue

{Embed}
https://www.ergoforum.org/t/mining-power-derivatives-two-tokens-approach/277
Mining Power Derivatives - Two Tokens Approach
The following idea was published on the Discord by ‚Äúnyzblossom‚Äù. I‚Äôm posting it here for archival purposes since mining power derivatives can be popular at some point of Ergo Platform development:  ==============  I have been following this project and have some idea for app ,...

{Embed}
RT
https://www.youtube.com/watch?v=heaRcsaQpyg
Keiser Report | When Life Imitates Money Printer Go Brrr Art | E1573
In this episode of the Keiser Report, Max and Stacy discuss the front page of the Economist asking if central bank money printing has an end. They look at historical gold, dollar and Fed Funds rate charts to see if they can‚Äôt find answers in there. In the second half, Max inte...
https://images-ext-1.discordapp.net/external/e1mzAMyEbimqJihbaPPAON89C6vD8MnddvOu4PmcfGw/https/i.ytimg.com/vi/heaRcsaQpyg/maxresdefault.jpg


[07/30/2020 4:38 PM] Robert K#0722
I think it'd be more sensible if you could write out what you are thinking @fffffff1.


[07/30/2020 4:40 PM] fffffff1#4381
I think I already wrote


[07/30/2020 4:42 PM] kushti#0978
@morphic can we modify context for 4.0 ? to add difficulty presented as a number. Another solution is to add "decodeNbits" operation to get from nbits encoding to bigInt. Then we can have trustless difficulty data for Ergo, for other blockchains we'll use oracles.

{Reactions}
üòã 

[07/30/2020 4:43 PM] kushti#0978
@fffffff1 thanks! Going to listen in the background )


[07/30/2020 8:59 PM] morphic#4133
> @morphic can we modify context for 4.0 ? to add difficulty presented as a number. Another solution is to add "decodeNbits" operation to get from nbits encoding to bigInt. Then we can have trustless difficulty data for Ergo, for other blockchains we'll use oracles.
@kushti yes, I'm in favor of adding operation which extracts some useful value out of nBits


[07/31/2020 2:06 PM] kushti#0978
by @greenhat : https://ergoplatform.org/en/blog/2020-07-31-decentralized-exchange-contracts-on-ergo/

{Embed}
https://ergoplatform.org/en/blog/2020-07-31-decentralized-exchange-contracts-on-ergo/
Decentralized Exchange Contracts on Ergo
Ergo has expressive smart ‚Ä¶
https://images-ext-2.discordapp.net/external/gsf51SD_y3kfWgn9bvkpxRjol8EuY6pbUeh3bOQPDOc/https/ergoplatform.org/img/uploads/pexels-pixabay-210607-1-.jpg

{Reactions}
üíØ (2) üí™ üëç 

[09/01/2020 9:15 PM] kushti#0978
https://cyber.technion.ac.il/2020-summer-school-on-cyber-computer-security/2020-summer-school-on-cyber-computer-security-program/

{Embed}
cyber
https://cyber.technion.ac.il/2020-summer-school-on-cyber-computer-security/2020-summer-school-on-cyber-computer-security-program/
2020 Summer School on Cyber & Computer Security ‚Äì  Program


[09/01/2020 10:43 PM] jasondavies#8712
https://eprint.iacr.org/2020/1057 @kushti @scalahub

{Reactions}
üëçüèª (3) 

[09/01/2020 10:43 PM] jasondavies#8712
"MuSig-DN: Schnorr Multi-Signatures with Verifiably Deterministic Nonces"


[09/01/2020 11:49 PM] kushti#0978
Will give a talk tomorrow at https://decrypto.org/seminar/

{Reactions}
üçª (3) 

[09/01/2020 11:49 PM] kushti#0978
on pools to bypass NO-PoW


[09/15/2020 9:11 PM] kushti#0978
@scalahub https://www.youtube.com/watch?v=Adrh6BCc_Ao

{Embed}
IEEE Symposium on Security and Privacy
https://www.youtube.com/watch?v=Adrh6BCc_Ao
Bulletproofs: Short Proofs for Confidential Transactions and More
Bulletproofs: Short Proofs for Confidential Transactions and More
Benedikt B√ºnz (Stanford University)
Presented at the 
   2018 IEEE Symposium on Security & Privacy
   May 21‚Äì23, 2018
   San Francisco, CA
   http://www.ieee-security.org/TC/SP2018/

ABSTRACT
We propose Bulletpr...
https://images-ext-1.discordapp.net/external/zuc9e1ANvq2MRj1kZTDdJROkyvLI619M71BwaPP4dwM/https/i.ytimg.com/vi/Adrh6BCc_Ao/maxresdefault.jpg

{Reactions}
üëç (3) 

[09/21/2020 11:04 AM] kushti#0978
anyone knows this paper ? https://arxiv.org/abs/2003.06552

{Embed}
https://arxiv.org/abs/2003.06552
Generic Superlight Client for Permissionless Blockchains
We conduct a systematic study on the light client of permissionless
blockchains, in the setting where the full nodes and the light clients are
rational. Under such a game-theoretic model, we...


[09/21/2020 2:18 PM] Cheng Wang#1571
it requires clients to write all the relay responses into a special contract, which seems too heavy on-chain

{Reactions}
‚ù§Ô∏è (2) 

[09/21/2020 8:03 PM] jasondavies#8712
https://talk.lazyledger.io/t/accounts-strict-access-lists-and-utxos/37

{Embed}
https://talk.lazyledger.io/t/accounts-strict-access-lists-and-utxos/37
Accounts, Strict Access Lists, and UTXOs
Thanks to Mustafa Al-Bassam (@musalbas), James Prestwich (@prestwich), and Sam Wilson (@SamWilsn) for review.  HackMD mirror: https://hackmd.io/KOJdKANHSvaGC_8IugEAJA  To date there has been widespread confusion around the limits of the UTXO data model, with claims that it is ...
https://images-ext-1.discordapp.net/external/yk5AhVxvkK1AJ-10Vt8Cw-XQV4-pMYu8B3hFfuLqvgI/https/talk.lazyledger.io/uploads/default/original/1X/36b9772c2be8c300603f6a8cc91c241102ef0fd5.png

{Reactions}
üëç (2) 

[09/22/2020 5:09 PM] kushti#0978
https://twitter.com/comit_network/status/1308275116711669760

{Embed}
COMIT (@comit_network)
https://twitter.com/comit_network/status/1308275116711669760
Let's talk research on #Bitcoin: one of our recent projects is a PoC for the A¬≤L protocol -
a #trustless #coinjoin/#coinswap protocol to improve #privacy and #fungibility for #Bitcoin transactions.

You can find it at https://t.co/OcG8RfGo8p #opensource
https://images-ext-2.discordapp.net/external/rhp65Ea4nUWHxvR2VJ8dzX3Zit6dq3xm8WVxHj_CJX4/%3Fformat%3Dpng%26name%3D144x144_2/https/pbs.twimg.com/card_img/1306598276309819392/tVCjdKbb
Twitter


[09/25/2020 10:33 PM] kushti#0978
https://github.com/Mikerah/awesome-foundations-of-DeFi

{Embed}
https://github.com/Mikerah/awesome-foundations-of-DeFi
Mikerah/awesome-foundations-of-DeFi
An Awesome List for resources on the foundations of Decentralized Finance (DeFi) - Mikerah/awesome-foundations-of-DeFi
https://images-ext-1.discordapp.net/external/kTiUI0SuOEBIURMCeD5I_keRSH8jqfE3GVtuv2i3fwI/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/4249799

{Reactions}
thinkingblublublu üî• (5) üßê 

[10/01/2020 9:02 AM] kushti#0978
@morphic could be interesting for you I guess https://arxiv.org/pdf/2009.12140.pdf

{Reactions}
üíØ 

[10/05/2020 9:08 PM] kushti#0978
https://www.youtube.com/watch?v=0VuBELYfChM

{Embed}
IC3 Initiative for Cryptocurrencies and Contracts
https://www.youtube.com/watch?v=0VuBELYfChM
Andrew Miller- "MPC as a Blockchain Confidentiality Layer"
Andrew Miller (UIUC) presented "MPC as a Blockchain Confidentiality Layer" at the IC3 Blockchain Camp 2020.

Learn more about The Initiative for CryptoCurrencies and Contracts (IC3)
Website https://www.initc3.org
Twitter https://twitter.com/initc3org
https://images-ext-2.discordapp.net/external/Av-m6Rkq1ebLnIBvz-G-ECJhQ-erFyMNH6G7Lszd-Zg/https/i.ytimg.com/vi/0VuBELYfChM/maxresdefault.jpg


[10/08/2020 9:30 AM] scalahub#2618
Is there a simple way to ensure that a box has at least a certain "depth", i.e. , `HEIGHT - height_at_which_box_was_created`?


[10/08/2020 9:32 AM] scalahub#2618
it'll be quite a useful primitive/design pattern


[10/08/2020 10:11 AM] greenhat#6562
@scalahub I cannot come up with anything simpler than `HEIGHT - box.creationInfo._1 > X`


[10/08/2020 10:15 AM] scalahub#2618
Is it foolproof? Because I can create a much recent box with creationInfo._1 = 1


[10/08/2020 10:17 AM] kushti#0978
@scalahub no, by consensus protocol rules creationInfo._1 (aka creationHeight) <= current height


[10/08/2020 10:17 AM] kushti#0978
so you can be sure that some minimal depth is met


[10/08/2020 10:17 AM] scalahub#2618
Yes so 1 is less than current height


[10/08/2020 10:18 AM] scalahub#2618
And every box I create I set to 1


[10/08/2020 10:18 AM] scalahub#2618
So this check can be fooled I think


[10/08/2020 10:19 AM] scalahub#2618
This is a useful primitive for example where we want to ensure a commitment is "ripe" i.e. has a certain age


[10/08/2020 10:20 AM] kushti#0978
ah I see , btw, we discussed that back in 2019, for some protocol in Advanced tutorial ?


[10/08/2020 10:21 AM] scalahub#2618
Which example there?


[10/08/2020 10:21 AM] kushti#0978
I guess the solution is about requiring a stage where creation height is checked

{Reactions}
üëÜ 

[10/08/2020 10:21 AM] kushti#0978
sec


[10/08/2020 10:29 AM] scalahub#2618
would it be too hard to add a DEPTH instruction to ErgoScript in next hard fork üòõ


[10/08/2020 10:31 AM] kushti#0978
@scalahub but why?


[10/08/2020 10:32 AM] kushti#0978
And what could it be about ?


[10/08/2020 10:32 AM] kushti#0978
Cant' find examples around, so maybe we just discussed that without fixing on paper


[10/08/2020 11:22 AM] scalahub#2618
the reason is for example in namecoin someone will commit to a name by putting a hash


[10/08/2020 11:22 AM] scalahub#2618
then we want to ensure that name can be claimed only if commitment is at least 10 blocks old


[10/08/2020 11:23 AM] scalahub#2618
so the hypothetical way would be to add `commitmentBox.DEPTH > 10`


[10/08/2020 11:24 AM] scalahub#2618
I remember discussing this during development and we somehow decided not to go ahead.. possibly because there was some alternative


[10/08/2020 11:31 AM] kushti#0978
in the namecoin example, you can put creationHeight check into the commit phase


[10/08/2020 11:49 AM] scalahub#2618
hmm but if we don't have control or don't want to control that commit


[10/08/2020 11:50 AM] scalahub#2618
a more interesting example is this.. there is a math problem whose solution is worth 10000 Ergs.. so I lock this Ergs in a box and then require that the solution be submitted along with a commitment. The box is protected by the script `check(solution) == true && checkCommitment(solution, commitmentBox) == true && commitmentBox.DEPTH > 100`


[10/08/2020 11:51 AM] scalahub#2618
if we also control the commitment phase then we end up having a DoS attack problem where someone can keep the commitment box locked all the time


[10/08/2020 11:57 AM] scalahub#2618
so thousands of people will try this problem in parallel and may want to commit to a solution.. but a commitment box controlled by me can be used only once at a time (thereby DoS), while if I have depth check, I can let anyone create commitment box


[10/08/2020 11:59 AM] scalahub#2618
I thought of using the perpetual token idea of Jason but it again has the DoS problem


[10/08/2020 12:13 PM] Robert K#0722
The person who locked the math problem can probably just use a "participant token" type of design pattern.


[10/08/2020 12:14 PM] Robert K#0722
Where they create say 1000 participant tokens, each in their own box, and anyone can spend one of those to "enter into the protocol" and thus acquire said token by spending it into a commitment phase.

{Reactions}
üëçüèª (2) 

[10/08/2020 12:15 PM] Robert K#0722
And then the main prize box with the funds can only be spent by a person who has the participant token + right answer + correct range of height for example.


[10/08/2020 12:16 PM] scalahub#2618
yes but the depth solution would have been much more elegant


[10/08/2020 12:16 PM] Robert K#0722
Fair enough, that is true.


[10/08/2020 12:17 PM] scalahub#2618
but if someone decides that they don't want anyone to solve the problem, they could capture all 1000 tokens


[10/08/2020 12:17 PM] Robert K#0722
I do think that having something like depth/a direct block height query function would make protocol design simpler in other caess as well.


[10/08/2020 12:18 PM] Robert K#0722
> but if someone decides that they don't want anyone to solve the problem, they could capture all 1000 tokens
@scalahub That's why you'd probably do upfront fees + the ability for someone else to take control of the token after X blocks if the person didn't submit an answer.


[10/08/2020 12:19 PM] Robert K#0722
Or you'd create a "Answer Token Mass Emission Box" that every X blocks someone can spend to release another 200 unowned answer token boxes


[10/08/2020 12:25 PM] scalahub#2618
I think the problem is solvable using such indirect approaches like you suggest .. though if we are doing a hardfork, this will be a good instruction to add as I believe it doesn't cause any scalability issues


[10/08/2020 12:28 PM] Robert K#0722
Yeah, I actually agree that this would be a good addition if it doesn't conflict with anything else.


[10/08/2020 5:43 PM] kushti#0978
https://arxiv.org/pdf/2010.01347.pdf

{Reactions}
üëç 

[10/09/2020 12:00 PM] kushti#0978
@scalahub if I understand DEPTH semantics correctly, it needs for real inclusion height to be stored into a box. Which is possible but not so trivial


[10/09/2020 12:09 PM] scalahub#2618
> @scalahub if I understand DEPTH semantics correctly, it needs for real inclusion height to be stored into a box. Which is possible but not so trivial
@kushti Not in the box, but in the UTXO index at least


[10/09/2020 12:09 PM] scalahub#2618
so box semantics need not be modified.


[10/10/2020 10:08 PM] kushti#0978
@scalahub how so? DEPTH is about using real height of box inclusion right ?


[10/11/2020 9:46 AM] scalahub#2618
Yes but is miner public key stored in box? Mostly it's not. So how does node verify transactions that reference miner pub key? I guess we could do it in same way


[10/11/2020 9:51 AM] scalahub#2618
Though technically I agree that its equivalent to storing the inclusion height in the box.. but if we could do it without modifying box semantics and just let the implementation handle it . Maybe that would work?


[10/11/2020 9:52 AM] scalahub#2618
A full node will always have this info


[10/11/2020 10:52 AM] scalahub#2618
https://github.com/ergoplatform/ergo/issues/1214

{Embed}
https://github.com/ergoplatform/ergo/issues/1214
Add inclusion height to ErgoTree ¬∑ Issue #1214 ¬∑ ergoplatform/ergo
AFAIK, the current context of ErgoTree does not have contain height of a box (i.e., the height at which the box was included). This is quite useful in contracts, for example we can get the &quo...
https://images-ext-1.discordapp.net/external/7ow6w19rs4z17zegDBdf-Ioan6Q9DfyYbxg1vtgnJk4/%3Fs%3D400%26v%3D4/https/avatars1.githubusercontent.com/u/27490654


[10/11/2020 10:53 AM] scalahub#2618
created an issue for the same. Hope the community takes this up


[10/11/2020 8:16 PM] kushti#0978
@scalahub minerPK is stored in a block header, not a box. But for depth, actual height to be included into a box


[10/11/2020 11:43 PM] kushti#0978
https://github.com/john-light/sidechains

{Embed}
https://github.com/john-light/sidechains
john-light/sidechains
A comprehensive list of sidechains resources. Contribute to john-light/sidechains development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/9Cn5vY13Hl8kG-6n3ahuRFaeFUIM-p0a15nNmjQU4uU/%3Fs%3D400%26v%3D4/https/avatars2.githubusercontent.com/u/9424721


[10/12/2020 1:04 PM] scalahub#2618
> @scalahub minerPK is stored in a block header, not a box. But for depth, actual height to be included into a box
@kushti yes in that case I agree that the cleanest way would be to store the inclusion height in the box.


[10/14/2020 11:04 AM] jasondavies#8712
> then we want to ensure that name can be claimed only if commitment is at least 10 blocks old
@scalahub Maybe I'm missing something, but surely you can check if age(box) > value easily using creationHeight? Because `age(box) = HEIGHT - box.creationInfo._1` so you can guarantee that it has a *minimum age*. On the other hand, you can't easily guarantee that a box was created recently ("fresh"), age(box) < value, but you could of course do this using dataInputs if you know that some boxes were created with a constrained creationHeight (maybe some other part of the protocol creates such boxes, for example).


[10/14/2020 11:14 AM] Robert K#0722
@jasondavies This idea of "minimum age" doesn't really provide us with anything useful though right?


[10/14/2020 11:15 AM] Robert K#0722
So you are forced to have a constrained creationHeight/requiring the user to save current block height(+/- a few blocks) in a register like is done in oracle pools for example, which means you need at least a minimum of 2 txs + some contract logic to simulate approximate depth.


[10/14/2020 12:35 PM] scalahub#2618
@jasondavies unless I missed something, you can check that the box is "fresh" by checking that `box.creationInfo._1 > HEIGHT - someValue`, which will guarantee that the box was created within the last `someValue` blocks. On the other hand, checking that the box is not fresh is quite hard because we can actually put anything in `box.creationInfo._1` (even 1), as long as its less then the height at which the box was mined.


[10/14/2020 12:54 PM] jasondavies#8712
Yes, sorry, I'm not disagreeing with the idea of maybe adding a new capability, I'm just being pedantic about which way round we are able to currently check age(box) üôÇ


[10/14/2020 12:57 PM] jasondavies#8712
> you can check that the box is "fresh" by checking that box.creationInfo._1 > HEIGHT - someValue, which will guarantee that the box was created within the last someValue blocks
Hmm, yes. Any box that passes this constraint was definitely mined within the last someValue blocks.


[10/14/2020 12:58 PM] jasondavies#8712
But if this is the case, that checking for a "fresh" box is easy, then as @Robert K says, why is it useful to check that a box is "old"?


[10/14/2020 12:59 PM] jasondavies#8712
Maybe for timestamping?


[10/14/2020 1:00 PM] jasondavies#8712
Sorry, I guess you already gave the example of commitments

{Reactions}
üëç 

[10/14/2020 1:33 PM] Cheng Wang#1571
> Is there a simple way to ensure that a box has at least a certain "depth", i.e. , `HEIGHT - height_at_which_box_was_created`?
@scalahub is this info `height_at_which_box_was_created` available in the Merkle tree of boxes? otherwise will need to update the storage


[10/14/2020 4:34 PM] kushti#0978
https://www.youtube.com/watch?v=OaB0ZVH12Z8

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=OaB0ZVH12Z8
ZK Podcast: John Adler on Optimistic vs ZK Rollups & the data avail...
Episode 151. Aired Oct 14th 2020: 

To Follow the Zero Knowledge Podcast and find the links to this episode: - https://www.zeroknowledge.fm/151

-------

In this episode we chat with John Adler, co-founder of Lazy Ledger and Fuel labs. We compare Optimistic Rollups and ZK Roll...
https://images-ext-2.discordapp.net/external/P8AFpVBc5T93Qyb46gQ4_lrFs7ixq4AiAmifSqvA2f0/https/i.ytimg.com/vi/OaB0ZVH12Z8/sddefault.jpg


[10/14/2020 4:44 PM] jasondavies#8712
is anyone here working on NFTs?


[10/14/2020 4:44 PM] jasondavies#8712
@kushti


[10/14/2020 5:12 PM] kushti#0978
answered in PM )


[10/14/2020 7:29 PM] jasondavies#8712
https://eprint.iacr.org/2020/1261

{Reactions}
üëç (3) 

[10/21/2020 1:32 PM] kushti#0978
To listen in the background ) https://aft.acm.org/program-2020

{Embed}
admin
https://aft.acm.org/program-2020
Program 2020


[10/21/2020 1:39 PM] scalahub#2618
talks seem nice..


[10/21/2020 1:39 PM] scalahub#2618
sadly no links üò¶


[10/21/2020 2:02 PM] kushti#0978
@scalahub "Links to the online video conference will be sent by email to registered attendees."


[10/21/2020 2:03 PM] scalahub#2618
saw that.. they should at least make videos public


[10/21/2020 2:08 PM] jasondavies#8712
I signed up just now but haven't received an email yet


[10/21/2020 2:12 PM] scalahub#2618
same.,. I think they have filled all slots


[10/21/2020 2:16 PM] scalahub#2618
(or its a manual process)


[10/22/2020 3:54 PM] kushti#0978
https://twitter.com/guidosalva/status/1151444461207134208

{Embed}
Guido Salvaneschi (@guidosalva)
https://twitter.com/guidosalva/status/1151444461207134208
Multitier Modules in ScalaLoci define a *distributed* reusable functionality (e.g., backup). Distributed systems are assembled by composing multitier modules, each encapsulating a subsystem. Pascal Weisenburger @ECOOPconf #ScalaLoci #PL4DS 
https://t.co/9u3ik9Ih3V
https://images-ext-2.discordapp.net/external/lXKYPGJ66LhwhngCnp403TUhgd_26RbTuQPg9X06QIM/https/pbs.twimg.com/media/D_rAQKoXkAI8jrS.jpg%3Alarge
Twitter


[10/22/2020 10:39 PM] morphic#4133
Hm, interesting. Funny thing, I implemented a PoC prototype of similar architecture back in 2017, but using Kotlin instead of Scala and model-driven approach instead of embedded DSL and macro hacking. So, the idea is interesting, but the solution is too heavy-weight IMO.


[10/24/2020 10:51 PM] kushti#0978
https://twitter.com/chepurnoy/status/1320120499972734976

{Embed}
Alex Chepurnoy (@chepurnoy)
https://twitter.com/chepurnoy/status/1320120499972734976
Trade-offs in Merkle tree based accumulators : https://t.co/L5RRswEZMs PoC implementation (by my students) : https://t.co/4RT28KQTNg
https://images-ext-2.discordapp.net/external/VX857HtJoc7LfhdjNmS-LDYT362vOAhEkBxk2tN6-jA/%3Fformat%3Dpng%26name%3D144x144_2/https/pbs.twimg.com/card_img/1320120447724380162/UJWX34Fs
Twitter


[10/27/2020 2:04 PM] kushti#0978
http://fc21.ifca.ai/defi/

{Embed}
http://fc21.ifca.ai/defi/
Decentralized Finance (DeFi) Workshop - 2021
Financial Cryptography and Data Security is a major international forum for research, advanced development, education, exploration, and debate regarding information assurance, with a specific focus on commercial contexts. The conference covers all aspects of securing transacti...

{Reactions}
ycashsymbol 

[10/29/2020 2:22 PM] kushti#0978
https://twitter.com/dominik0_/status/1321804075533508610

{Embed}
Dominik Harz (@dominik0_)
https://twitter.com/dominik0_/status/1321804075533508610
Earlier this year we described a flash-loan attack scenario on @MakerDAO. It seems like someone has actually executed an attack by utilizing a weakness in Maker's Governance Security Module (GSM): https://t.co/GjubkEFYIz

Reference: https://t.co/om6MGDtUaZ
https://images-ext-1.discordapp.net/external/n3ncJelHUhKuQONzHvrEm7zQ6PryBLXVsBqEJ-BNfk0/%3Fformat%3Djpg%26name%3D600x314/https/pbs.twimg.com/card_img/1320049574044553216/AEdkm1CL
Twitter


[10/29/2020 2:40 PM] jasondavies#8712
No flash loans in Ergo üôÇ


[10/29/2020 2:46 PM] Robert K#0722
@jasondavies Are you saying flash loans can't work on Ergo?


[10/29/2020 2:47 PM] jasondavies#8712
@Robert K Right. The unit of execution is a transaction, so it's not possible to borrow, spend, and pay back within a transaction. You can borrow and immediately pay back, but that's not really much use.


[10/29/2020 2:49 PM] Robert K#0722
Hmm, good point. Most contracts have way too strict checks on inputs/outputs to make it feasible.


[10/29/2020 2:51 PM] Robert K#0722
There may be some edge cases in between protocols where the logic *may* overlap and thus two UTXOs from different protocols both have a given check on Output #2 and as such you might be able to get away with something, but that's not a flash loan, just more of a generic exploit due to lax contracts.

{Reactions}
üëç (2) 

[11/03/2020 2:09 PM] kushti#0978
https://lightning.engineering/lightning-pool-whitepaper.pdf


[11/08/2020 11:30 PM] kushti#0978
https://www.youtube.com/watch?v=HQejQ6Lm4bU

{Embed}
MIT Digital Currency Initiative
https://www.youtube.com/watch?v=HQejQ6Lm4bU
P2P & Broadcast Survey - Gleb Naumenko - CES Summit '19
P2P & Broadcast Survey - Gleb Naumenko - Cryptoeconomic Systems Summit '19. 

Part of the "Long-Term Security" session. 

https://www.cryptoeconomic.systems #CESSummit2019
https://images-ext-1.discordapp.net/external/P0-yBpjDN0uRjDTgW5JNNdAwwHSUSDw8kuP182Vbm9s/https/i.ytimg.com/vi/HQejQ6Lm4bU/maxresdefault.jpg


[11/09/2020 12:29 AM] kushti#0978
https://www.youtube.com/watch?v=XT1Pad0DM24

{Embed}
The BIU Research Center on Applied Cryptography and Cyber Security
https://www.youtube.com/watch?v=XT1Pad0DM24
Sigma Protocols (part1) - Benny Pinkas
The 9th BIU Winter School on Cryptography - Zero Knowledge, which was held on February 18-21, 2019
https://images-ext-2.discordapp.net/external/_hmC0rV0sw37-d3U-ovT7lmlryJ3SsJ4-sT-UTN7zEk/https/i.ytimg.com/vi/XT1Pad0DM24/sddefault.jpg


[11/11/2020 6:36 PM] kushti#0978
https://www.youtube.com/watch?v=iJK_6BbLTAc

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=iJK_6BbLTAc
ZKPodcast: Testing PoW Consensus Algorithm Security with Ren Zhang ...
Episode 155. Aired Nov 11, 2020:

To Follow the Zero Knowledge Podcast and find the links to this episode - https://www.zeroknowledge.fm/155

---------------

In this week‚Äôs episode, we revisit the topic of consensus algorithms with Ren Zhang - a researchers at Nervos and prev...
https://images-ext-1.discordapp.net/external/hhVqESIA8ZAQMBE7kNa1lS5lrqQzJ2WD7JFef1kh45g/https/i.ytimg.com/vi/iJK_6BbLTAc/maxresdefault.jpg


[11/11/2020 11:41 PM] jasondavies#8712
https://www.ergoforum.org/t/wrapped-erg-wrapping-native-erg-as-a-1-1-token/469

{Embed}
https://www.ergoforum.org/t/wrapped-erg-wrapping-native-erg-as-a-1-1-token/469
Wrapped ERG: wrapping native ERG as a 1:1 token
Similar to ‚Äúwrapped ETH‚Äù, I thought it might be interesting to wrap ERG as a token.  In other words, create a token such that it can always be trustlessly exchanged 1:1 for native ERG.  I don‚Äôt see any immediate uses for this, but in theory, it could simplify applications that...

{Reactions}
‚ù§Ô∏è 

[11/12/2020 9:48 AM] anon_real#2768
https://www.ergoforum.org/t/some-details-about-ergo-auction-house/428/10

{Embed}
https://www.ergoforum.org/t/some-details-about-ergo-auction-house/428/10
Some Details About Ergo Auction House
The Ergo Auction House is updated! It is now possible to use any wallet in a trustless and secure manner to place bids thanks to the assembler service.  Also, the update contains some improvements for interacting with the explorer.  Enjoy the Auction House with your favorite w...

{Reactions}
‚ù§Ô∏è 

[11/15/2020 7:56 PM] anon_real#2768
https://www.ergoforum.org/t/a-simpler-collective-spending-approach-for-everyone/476

{Embed}
https://www.ergoforum.org/t/a-simpler-collective-spending-approach-for-everyone/476
A Simpler Collective-Spending Approach for Everyone!
The aim of this post is to provide another approach for having and working with threshold signatures like 3-of-5 or any other using the assembler service!  Why Not ZK-Treasury Currently, using threshold signatures and collective signing is possible using the ZK-Treasury, howev...

{Reactions}
‚ù§Ô∏è (2) 

[11/19/2020 12:16 PM] anon_real#2768
Is there any known design pattern for ergo script to prove that a box is created by a particular person (pk)?


[11/19/2020 12:16 PM] anon_real#2768
In other words, the box is created in a transaction in which the input box of the tx was owned by a particular pk?


[11/19/2020 12:48 PM] Robert K#0722
@anon_real I don't think it's been done yet but I think we have all the design patterns to do so


[11/19/2020 12:50 PM] Robert K#0722
I think the simplest way is to mint 64-bit of a token, lock them all in a token emission box that emits tokens only if the PK has signed the tx.


[11/19/2020 12:51 PM] Robert K#0722
And if you want a 100% guarantee that no one else is allowed to acquire said token, then the output script from the token emission box can be a script that only allows said token to be spent by the PK holder.


[11/19/2020 12:53 PM] Robert K#0722
And then in your protocol where you want to guarantee PK created box X, then that token just needs to be in said box (or potentially make whatever protocol you are trying to establish be tied to the emission of the tokens and keeps the PK token stuck in the protocol so it can't leave/be used by someone else)


[11/19/2020 12:57 PM] anon_real#2768
Ok, then how can an outsider know a particular token is associated with the pk?


[11/19/2020 12:57 PM] anon_real#2768
Unless she keeps a database of such pairs?


[11/19/2020 1:00 PM] anon_real#2768
I think I have a simple solution which has some nice properties!


[11/19/2020 1:00 PM] Robert K#0722
Right, you would need to keep track.


[11/19/2020 1:01 PM] Robert K#0722
Ah nice, looking forward to reading about it


[11/19/2020 1:31 PM] anon_real#2768
https://www.ergoforum.org/t/ergoscript-design-patterns/222/16

{Embed}
https://www.ergoforum.org/t/ergoscript-design-patterns/222/16
ErgoScript Design patterns
Proving that a box is created by a particular PK The only thing that needs to be done is to issue a token in a transaction and put it in the output in which you want to prove you have created, also put the INPUTS(0).bytes in one of its registers!  Obviously, the token id is eq...

{Reactions}
üëç (3) 

[11/19/2020 1:45 PM] Robert K#0722
Pretty neat solution, good thinking


[11/19/2020 1:46 PM] Robert K#0722
I didn't think too much about the fact that the relation between token forging and input 0 are a way to effectively have a proof claim.

{Reactions}
üëç (3) 

[11/19/2020 2:42 PM] kushti#0978
https://www.youtube.com/watch?v=fDYn43hIiMM

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=fDYn43hIiMM
ZK Podcast: Stateless validation with Alin Tomescu
Episode 156. Aired Nov 18, 2020:

To Follow the Zero Knowledge Podcast and find the links to this episode - https://www.zeroknowledge.fm/156

---------------

In this week‚Äôs episode, Anna and Fredrik chat with Alin Tomescu, a post-doc researcher at VMWare Research Group, about...
https://images-ext-2.discordapp.net/external/Bw-ROUFRllvatyOlOCLCfW8fznGXx0xJsBfbZm8I3ZM/https/i.ytimg.com/vi/fDYn43hIiMM/maxresdefault.jpg


[11/19/2020 2:42 PM] kushti#0978
RMCI17 paper Ergo is based on is mentioned, as well as CPZ18


[11/19/2020 2:51 PM] kushti#0978
@morphic "please let me know the correct way to get Box from its serialized bytes (box.bytes)." - do we have such a function in ErgoScript or ErgoScript even ?


[11/19/2020 2:54 PM] kushti#0978
@anon_real interesting pattern indeed, but what are you exactly proving with it? Seems like that input #0 of transaction which created input of your transaction is associated with a certain pubkey ?


[11/19/2020 3:13 PM] anon_real#2768
> @anon_real interesting pattern indeed, but what are you exactly proving with it? Seems like that input #0 of transaction which created input of your transaction is associated with a certain pubkey ?
@kushti Right.
In other words, a particular person has participated in our protocol (no one else could create such a token); can be interpreted as allowing an external system/dApp for doing something (like spending a box that requires such participation to be spent)


[11/19/2020 3:18 PM] anon_real#2768
As a concrete example, the locking contract here: https://www.ergoforum.org/t/running-a-business-on-top-of-ergo/423 can be spent only if Alice signs the tx! However, no wallet currently supports such a thing. So this contract can be changed to be spendable if Alice follows the above protocol, hence, allowing the box to be spent without herself signing it or sharing her secret!


[11/19/2020 4:42 PM] kushti#0978
@anon_real ah, right, sounds good! For these certain cases, pretty good solution then


[12/09/2020 6:15 AM] kushti#0978
https://www.youtube.com/watch?v=kyjNH3QorGA

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=kyjNH3QorGA
zkSummit6: Rescue-Prime: a Standard Specification Alan Szepieniec ‚Äì...
This was recorded at the zkSummit6 on Nov 23 2020. 
https://www.zksummit.com/

Title: Rescue-Prime: a Standard Specification ‚Äì Alan Szepieniec ‚Äì AS Discrete Mathematics & Nervos

Description: This talk is about a paper of the same title ("Rescue-Prime: a Standard Specification") which specifies a simple standard for the Rescue-Prime hash functio...
https://images-ext-1.discordapp.net/external/SGYngiEFMGBvpqzeVKdYnacTj5ft3kqSheyalXPLxC4/https/i.ytimg.com/vi/kyjNH3QorGA/sddefault.jpg

{Reactions}
sminem 

[12/10/2020 10:32 AM] kushti#0978
https://eprint.iacr.org/2020/1527.pdf


[12/10/2020 10:33 AM] kushti#0978
Zero-Knowledge Succinct Arguments with a Linear-Time Prover


[12/10/2020 10:33 AM] kushti#0978
Another breakthrough in ZK )


[01/11/2021 2:21 PM] jasondavies#8712
https://fc21.ifca.ai/defi/

{Embed}
https://fc21.ifca.ai/defi/
Decentralized Finance (DeFi) Workshop - 2021
Financial Cryptography and Data Security is a major international forum for research, advanced development, education, exploration, and debate regarding information assurance, with a specific focus on commercial contexts. The conference covers all aspects of securing transactions and systems. Original works focusing on both fundamental and appli...

{Reactions}
‚ù§Ô∏è (3) 

[01/13/2021 2:04 PM] kushti#0978
FC21 program:


[01/13/2021 2:10 PM] kushti#0978
http://fc21.ifca.ai/program.html

{Embed}
http://fc21.ifca.ai/program.html
FC'21 : Program
Financial Cryptography and Data Security is a major international forum for research, advanced development, education, exploration, and debate regarding information assurance, with a specific focus on commercial contexts. The conference covers all aspects of securing transactions and systems. Original works focusing on both fundamental and appli...


[01/19/2021 8:10 AM] kushti#0978
https://www.youtube.com/watch?v=tm4uSGD-lHg&feature=emb_logo

{Embed}
USENIX
https://www.youtube.com/watch?v=tm4uSGD-lHg
USENIX Security '19 - StrongChain: Transparent and Collaborative Pr...
StrongChain: Transparent and Collaborative Proof-of-Work Consensus

Pawel Szalachowski, Singapore University of Technology and Design (SUTD)

Bitcoin is the most successful cryptocurrency so far. This is mainly due to its novel consensus algorithm, which is based on proof-of-work combined with a cryptographically-protected data structure and a r...
https://images-ext-1.discordapp.net/external/bL6z1Zig9LZpCsmiheUjh_46juRf0eHyHLoW-553ZfM/https/i.ytimg.com/vi/tm4uSGD-lHg/maxresdefault.jpg


[01/19/2021 7:20 PM] kushti#0978
https://www.grassrootseconomics.org/post/static-vs-bonded-liquidity-pools-for-cics


[01/19/2021 10:00 PM] scalahub#2618
https://fc21.ifca.ai/wtsc/cfp.html

{Embed}
https://fc21.ifca.ai/wtsc/cfp.html
Trusted Smart Contracts 2021
Financial Cryptography and Data Security is a major international forum for research, advanced development, education, exploration, and debate regarding information assurance, with a specific focus on commercial contexts. The conference covers all aspects of securing transactions and systems. Original works focusing on both fundamental and appli...


[01/20/2021 9:03 AM] kushti#0978
"Payment Trees: Low Collateral Payments for Payment Channel Networks" -  seminar starting right now https://decrypto.org/seminar/


[01/20/2021 7:48 PM] kushti#0978
https://arxiv.org/pdf/2101.05589.pdf

{Reactions}
üëç 

[01/21/2021 3:26 PM] kushti#0978
https://static.perez.sh/research/2021/defi-sok/defi-sok.pdf


[01/21/2021 3:26 PM] kushti#0978
SoK: Decentralized Finance (DeFi)


[01/31/2021 7:15 AM] Sabevia#5935
Team ,  COTI released their roadmap for 2021. I see something related to Adapay. I'm trying to connect to dots on how ERGO fit's into this whole ecosystem with the developing stable coin. Is a relationship with ERGO > Coti Adapay imminent?

{Reactions}
üâê 

[02/11/2021 7:39 AM] kushti#0978
https://arxiv.org/pdf/2102.02247.pdf


[02/11/2021 7:40 AM] kushti#0978
"Low-cost attacks on Ethereum 2.0 bysub-1/3 stakeholders"

{Reactions}
üëç (4) 

[02/11/2021 7:41 AM] kushti#0978
https://eprint.iacr.org/2021/143


[02/19/2021 9:10 AM] glasgowm#9381
**SmartOTPs: An Air-Gapped 2-Factor Authentication for Smart-Contract Wallets**

- We propose SmartOTPs, a framework for smart-contract cryptocurrency wallets, which provides 2FA against data stored on the blockchain.
- The main goal of this work is to propose a cryptocurrency wallet framework that provides a secure and usable way of managing crypto-tokens.

- The main drawback of this solution is that each OTP can be trivially derived from any previous one, and thereby this scheme does not meet the requirement of OTPs on independence.

- With consumption of up to ‚àº150k gas units per operation, our approach is comparable to equivalent 2FA solutions using smart contracts: Gnosis Wallet requires ‚àº 275k gas units and TrezorMultisig2of3 requires ‚àº 95k gas units 10 per operation.

https://www.researchgate.net/publication/347578629_SmartOTPs_An_Air-Gapped_2-Factor_Authentication_for_Smart-Contract_Wallets


[03/03/2021 9:00 AM] kushti#0978
https://www.youtube.com/channel/UCLtXEnasHw3vJqKsupq80Ig/featured

{Embed}
https://www.youtube.com/channel/UCLtXEnasHw3vJqKsupq80Ig/featured
ifca
IFCA stands for the International Financial Cryptography Association. IFCA organizes the annual Financial Cryptography and Data Security conference, which marks its 25th year in 2021.
https://images-ext-2.discordapp.net/external/2k_SC5yyzYJgIdE_ST762lkc6cCQJyjiww00rvdoGjk/https/yt3.ggpht.com/ytc/AAUvwnjgk2Hwn-clNRfNTjF_9romV4gKUGcQo5Tj454U%3Ds900-c-k-c0x00ffffff-no-rj


[03/06/2021 12:31 PM] kranebitt#0334
How do you want to tackle the energy inefficiency of PoW in Ergo?


[03/06/2021 3:03 PM] morphic#4133
https://twitter.com/yassineARK/status/1360343382556483587

{Embed}
Yassine Elmandjra (@yassineARK)
https://twitter.com/yassineARK/status/1360343382556483587
1/ Bitcoin critics continue to assert that mining is wasteful and disproportionately damaging to the environment. 

Contrary to consensus thinking, we believe the impact of bitcoin mining is a net positive for the environment.

Here's why:
Retweets
5206
Likes
24429
Twitter


[03/06/2021 5:53 PM] kranebitt#0334
Well - that‚Äôs oversimpliying things to feel better


[03/07/2021 8:26 AM] kranebitt#0334
I would rather suggest the introduction of Proof of human work (PoH) mechanisms to preserve the value of the ERGO tokens, yet drastically reduce energy use: https://eprint.iacr.org/2016/145.pdf

{Reactions}
ü§£ (2) ‚ùå 

[03/17/2021 5:22 PM] kushti#0978
https://www.youtube.com/watch?v=wuJqFusH-xo

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=wuJqFusH-xo
ZKPodcast: ZK languages with Alex Ozdemir
Episode 172. Aired March 17rd, 2021:

To Follow the Zero Knowledge Podcast and find the links to this episode ‚Äî https://www.zeroknowledge.fm/172

--------
In this week‚Äôs episode, Anna has a one-on-one chat with Alex Ozdemir, a PhD student at Stanford researching formal methods, cryptography and distributed systems. Alex‚Äôs work is closely tied to...
https://images-ext-1.discordapp.net/external/lBjM9LZaJexyc1t6X6ZfzEy7kAiTaky9TEbV_h7MZJA/https/i.ytimg.com/vi/wuJqFusH-xo/maxresdefault.jpg


[03/17/2021 5:23 PM] kushti#0978
I worked with HSZ back in 2016-17, he wasn't serious about the paper as well )

{Reactions}
üëç 

[03/18/2021 7:23 PM] kushti#0978
https://eprint.iacr.org/2021/327.pdf

{Reactions}
üëç 

[03/19/2021 2:15 PM] kushti#0978
https://www.youtube.com/watch?v=C_eZS13RXNI

{Embed}
ifca
https://www.youtube.com/watch?v=C_eZS13RXNI
FC21: Shielded Computations in Smart Contracts Overcoming Forks
Talk by Vincenzo Botta, Daniele Friolo presented at Financial Cryptography and Data Security 2021
 on a paper titled "Shielded Computations in Smart Contracts Overcoming Forks" by Vincenzo Botta, Daniele Friolo, Daniele Venturi, Ivan Visconti. 

The paper is online at https://fc21.ifca.ai/papers/253.pdf and the conference program is at https://f...
https://images-ext-2.discordapp.net/external/HW55lafU3cbsQj9qAB85pDNP93s_U64tQNdz7lB_bIc/https/i.ytimg.com/vi/C_eZS13RXNI/maxresdefault.jpg


[03/19/2021 5:37 PM] kushti#0978
https://www.youtube.com/watch?v=diB5hPS-p0Q

{Embed}
ifca
https://www.youtube.com/watch?v=diB5hPS-p0Q
Project Wallfacer: Demystifying Generalized Frontrunning Bots
Talk by Alex Manuskin presented at 1st Workshop on Decentralized Finance
https://images-ext-2.discordapp.net/external/i6OWM5_a15zXvXU7MIN3h22bjrVIY-Y2TXkU1WfFKjk/https/i.ytimg.com/vi/diB5hPS-p0Q/maxresdefault.jpg

{Reactions}
üëç (2) 

[03/19/2021 8:51 PM] cymatic#8185
Very informative and interesting. Are the frontrunning techniques he covered unique to the Ethereum network or would any other smart contract platform be susceptible to these types of replacement attacks?


[03/26/2021 1:41 PM] kushti#0978
https://www.youtube.com/watch?v=LLTAVGqk2Hg

{Embed}
Zero Knowledge
https://www.youtube.com/watch?v=LLTAVGqk2Hg
ZKPodcast: The Challenge of Building Private AMMs with Guillermo An...
Episode 173. Aired March 24th, 2021.

To Follow the Zero Knowledge Podcast and find the links to this episode ‚Äî https://www.zeroknowledge.fm/172‚Äã

---------

This week, Anna & Tarun take an in-depth look into AMMs with Guillermo Angeris, a PhD student in Stanford who co-authored a number of papers on fundamental AMM properties. His most recent p...
https://images-ext-2.discordapp.net/external/HM-kbJ5VXLV18KD0VgZ30fjHUoX19fsvwzx6YyUUlfs/https/i.ytimg.com/vi/LLTAVGqk2Hg/maxresdefault.jpg

{Reactions}
üëç 

[03/27/2021 11:59 AM] glasgowm#9381
https://www.horizen.io/assets/files/A-Penalty-System-for-Delayed-Block-Submission-by-Horizen.pdf


[03/27/2021 12:02 PM] glasgowm#9381
https://github.com/KomodoPlatform/komodo/wiki/Delayed-Proof-of-Work-%28dPoW%29-Whitepaper#attacks

{Embed}
https://github.com/KomodoPlatform/komodo/wiki/Delayed-Proof-of-Work-%28dPoW%29-Whitepaper
KomodoPlatform/komodo
Komodo. Contribute to KomodoPlatform/komodo development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/22LglkYqJGgf5n05qZ_ycizyn0hhH24aNCqZC6jt6CI/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/21276113


[04/15/2021 7:51 PM] kidamoianlicci#1768
@anon2020s   @morphic  who is working on Ergo **atomic swaps/dex** product?
Here some recent events I have for you, seems huge market potential in the future for true  trustless swaps:D 


currently from my research there is just two atomic dex by the Komodo and Thor projects. This means your product would be in **world's TOP3** almost with no competition. 

Read below some copied quotes from Komodos twitter. They show the unique benefits of why atomic dex can have big market potential. Maybe this motivates some of you again 

    Many DEXs in the blockchain space today aren‚Äôt genuinely non-custodial since user funds placed in liquidity pools are constantly exposed to impermanent loss, rug pulls, and vampire attacks. They rely upon automated market makers (AMMs).


In contrast, @AtomicDEX
  avoids these issues by using decentralized P2P order books. When an atomic swap takes place both traders receive the funds they desire, or nothing happens at all and both traders retain the funds they started with (minus a very small transaction fee).
- doesn‚Äôt limit trading to a single blockchain protocol.
- offers the widest cross-chain and cross-protocol support
- no proxy tokens required
- continuously adding support for new protocols

another second big recent event was Thor project atomic dex launch which again highlights the large demand in the market for trustless cross chain swaps:  

> "Thorchain has no bridges. it has no bridges. it has no wrapping. it is native assets, swapped across chains in a decentralized way, without having to trust an intermediary.

{Reactions}
üî• (2) 

[04/15/2021 8:49 PM] kranebitt#0334
Just stubled upon Fiat-Shamir-protocols and I al astonished that I would never once have to insert my private data into any form anymore -> zk proofs


[04/15/2021 8:49 PM] kranebitt#0334
Truly fascinating


[04/15/2021 8:50 PM] kranebitt#0334
If I had any background in it, I would desicate half a year of research ok them - funded by Darkpool0


[04/15/2021 9:10 PM] morphic#4133
@Ilya | Spectrum ^


[04/16/2021 3:47 PM] glasgowm#9381
ty you for the tip üôÇ

{Reactions}
üëç 

[04/16/2021 4:04 PM] Ilya | Spectrum#0494
Thanks:)
Actually ErgoDEX combines both AMM and atomic swaps through order-book. As for impermanent loss issue with classical AMM pools, I guess we will solve it finally when concentrated positions pools are ready.


[04/16/2021 4:06 PM] Ilya | Spectrum#0494
There is already a prototype of such contract but I'm too involved with basic ErgoDEX features polishing for now


[04/17/2021 9:55 PM] kushti#0978
https://www.youtube.com/watch?v=XyxWH008tzM

{Embed}
Axelar
https://www.youtube.com/watch?v=XyxWH008tzM
Axelar guest Speaker Series with Alin Tomescu | Hyperproofs
Axelar Guest Speaker Series Episode 2: Hyperproofs: Merkle Trees with Aggregation and Unstealability, with Alin Tomescu.

Postdoctoral Researcher at VMware Research Alin Tomescu discusses his new work Hyperproofs, a Merkle Tree construction with aggregation and unstealability. 

Follow us across our socials:

Twitter: https://twitter.com/axelarc...
https://images-ext-1.discordapp.net/external/O6CjHQ8HtbcgIi1xdljKKl3uhgLDfxagF-z267jar3c/https/i.ytimg.com/vi/XyxWH008tzM/hqdefault.jpg


[04/17/2021 10:34 PM] kidamoianlicci#1768
@morphic  nice:D and please try to achieve maximum possible **non custodial decentralization**  during the whole dex swap process.


There are many swap tools claiming to  be non custodial but when you check they rely on centralized trusted server or one or few nodes who could collude.

As you are PoW this should be easier I guess as you already have many nodes on your network you could leverage them also for the Dex


[04/18/2021 6:26 AM] Ilya | Spectrum#0494
In fact only order-book matcher is centralized, but it is completely trustless


[04/18/2021 11:18 PM] kidamoianlicci#1768
@kushti   who is working on ergo nft marketplace?  I want to know where nft files, the actual images/songs  are stored? And second, where the metadata of the file is stored?


[04/19/2021 6:41 AM] olliten#5885
Here's a list of ideas for sources: https://boinc.berkeley.edu/wiki/Project_list

{Embed}
https://boinc.berkeley.edu/wiki/Project_list
Project list


[04/19/2021 11:45 AM] kushti#0978
@anon_real is the developer


[04/19/2021 12:08 PM] anon_real#2768
In case of image, it is uploaded to imgbb.com. In case of audio, user has to provide a direct link to the audio when issuing the artwork.


[04/19/2021 9:05 PM] kidamoianlicci#1768
so you are not using **any** of the ^popular decentralized storage layers, like SIA or Arweave?

Why, any plans to do it?  

is imgbb  centralized one-server provider? 

If storage breaks the entire nft breaks. Meaning of NFT Is to be available for eternity. 

If you buy a song you expect to hear it tomorrow and 10 years later too, people look at the same Art for decades.

Twitter is already full of nft examples stored on ipfs which are not available anymore for example. The backend needs to be reliable

Hope you can find a reliable storage solution  @kushti

{Reactions}
üëç ‚ûï 

[04/19/2021 9:36 PM] Dergler#0451
you're welcome to mint an NFT outside of the readily available tooling to add custom storage solutions that fit your needs. file storage solutions are an important and fascinating part of collecting NFTs, I personally through the media files onto my own servers as well, just in case imbb goes down.


[04/21/2021 2:27 PM] pragmaxim#0778
can pls anyone review this? https://github.com/ergoplatform/eips/pull/27/files#r617466488  ... the way I see it, these two buy/sell scripts will each protect a box and these 2 input boxes then will be part of a single transaction ... in this case I believe there is a mistake

{Embed}
https://github.com/ergoplatform/eips/pull/27/files
EIP-0014: Decentralized Exchange Contracts  by kushti ¬∑ Pull Reques...
Author: kushti, Ilya Oskin
Status: Proposed
Created: 12-Mar-2021
Last edited: 15-Mar-2021
Track: Standards

Motivation
Act of exchange without trusted parties is a most basic primitive for decentra...
https://images-ext-2.discordapp.net/external/rsa6ycXXY3S3c-TE7ESGsrjv0vna2Xs7dD5qxiqT6Ss/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/1972441


[04/21/2021 2:37 PM] kushti#0978
@Ilya | Spectrum ^


[04/21/2021 7:31 PM] pragmaxim#0778
I think I forgot that the scripts were just explanatory examples


[04/21/2021 7:46 PM] Ilya | Spectrum#0494
These scripts only check that swap is done fairly from user‚Äôs perspective. So strictly it should be ‚ÄúamountUserCanAfford == reward * price‚Äù, but user is also ok with getting more so <=

{Reactions}
üëå (2) 

[05/04/2021 3:28 PM] glasgowm#9381
https://static1.squarespace.com/static/5966eb2ff7e0ab3d29b6b55d/t/5f989987fc086a1d8482ae70/1603837124500/defi_governance_paper.pdf

{Reactions}
üòç (4) 

[05/05/2021 9:18 PM] kushti#0978
https://eprint.iacr.org/2021/577.pdf

{Reactions}
üòÆ 

[05/05/2021 9:19 PM] kushti#0978
Quite cool, and I thought about possibilities to soft-fork Ergo monetary policy recently

{Reactions}
üëÄ 

[05/07/2021 10:35 PM] glasgowm#9381
@anon2020s is ergomixer dev

{Reactions}
üíØ 

[05/07/2021 11:19 PM] kushti#0978
@kidamoianlicci you can mix BTC tokens on top of Ergo, the only problem here is cross-chain


[05/08/2021 2:54 AM] Dergler#0451
stahp already. the tech is overwhelming ergo my face melts.

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/840406224096985088/NEWSPAPER-Ergonaut.jpg


[05/12/2021 11:00 PM] root7Z#8699
i don't understand the paper but if you mean that making coin distribution less aggressive i think it's a good idea. Late entries can have more chance to participate in the network by this way, however it's a matter of choice


[05/18/2021 2:37 PM] Louis Berlin#1103
Hi all, 

I'm interested in creating a system for decentralised public services on Ergo. 

You can read a bit about my work during C-19 here, creating a National Food Service, to ensure everyones right to food is met in the U.K:
https://www.independent.co.uk/independentpremium/lifestyle/national-food-service-community-movement-food-waste-inequality-social-isolation-a9517021.html

The idea i have is an Extended, Open, Social Co-operative structure. 

**Extended **means that not only the workers, managers have a share in decision making process, but there are structures and systems in place that allow the end users to have a clear say. This is to resolve issues of unresponsive social and public services.¬†

**Open,** means that vast barriers to entry are lowered. These include financial, but also barriers like people being unable to contribute time to attend meetings, meaning multiple systems of contribution are facilitated- with on chain governance tokens.

**Decentralised **means a system that gives power to people at the edges, and has no single point of failure, prioritising lateral rhyzombic networks of organisation that 'hive of new cells as organisation grows'. 

**Social** Means that it has an agenda to eliminate inequality and alleviate poverty and need. I envisage system for transparent donation that function better than tax can happen only when we rewire how public services work.

**Co-operative** means mutual assistance and the collective work towards a common goal and shared ownership that is equitable to contribution and use. This can also become an infrastructure for direct donation lowering wealth inequality.

I think that Ergo is the right kind of platform to develop this kind of idea given it has an agenda to be for the people.  

Would anybody be interested.

Let me know what you think.

{Embed}
https://www.independent.co.uk/independentpremium/lifestyle/national-food-service-community-movement-food-waste-inequality-social-isolation-a9517021.html
Inside the community-led movement taking on food waste, inequality ...
A movement grown in the warmth of the Sheffield community is not only a means for survival for those in need right now, but a vision for a more secure, more hopeful future, discovers Zo√´ Beaty
https://images-ext-2.discordapp.net/external/Hc0-wuR8x6QHA9Fdr1oZ6dw2insuI19HZTjd4KAwG0Y/%3Fwidth%3D1200%26auto%3Dwebp%26quality%3D75/https/static.independent.co.uk/s3fs-public/thumbnails/image/2020/05/15/15/4o2a5795.jpg

{Reactions}
üëÄ (6) üî• üëè 

[05/23/2021 9:02 AM] Dmitry Meshkov#1652
For the Russian-speaking community there will be promising blockchain-related (online) seminars soon organized by Institute of Mechanics Lomonosov Moscow State University :
```
25 –º–∞—è (–í–¢–û–†–ù–ò–ö) –≤ 19:15 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –æ—á–µ—Ä–µ–¥–Ω–æ–µ –∑–∞—Å–µ–¥–∞–Ω–∏–µ —Å–µ–º–∏–Ω–∞—Ä–∞ "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞".
–¢–µ–º–∞ –¥–æ–∫–ª–∞–¥–∞: "–§—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ—É–º–µ–Ω—å—à–∞–µ–º–æ–π –ø–∞–º—è—Ç—å—é –¥–ª—è –±–ª–æ–∫—á–µ–π–Ω–æ–≤ –∏ —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π (memory hard functions)"
–î–æ–∫–ª–∞–¥—á–∏–∫–∏: –•–æ–≤—Ä–∞—Ç–æ–≤–∏—á –î. (Ethereum Foundation)

27 –º–∞—è (–ß–ï–¢–í–ï–†–ì) –≤ 19:15 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –æ—á–µ—Ä–µ–¥–Ω–æ–µ –∑–∞—Å–µ–¥–∞–Ω–∏–µ —Å–µ–º–∏–Ω–∞—Ä–∞ "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞".
–¢–µ–º–∞ –¥–æ–∫–ª–∞–¥–∞: "–û –ø—Ä–æ—Ç–æ–∫–æ–ª–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å –Ω—É–ª–µ–≤—ã–º —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ–º Bulletproof"
–î–æ–∫–ª–∞–¥—á–∏–∫–∏: –ö—è–∂–∏–Ω –°.–ù. (–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –±–ª–æ–∫—á–µ–π–Ω –°–±–µ—Ä–±–∞–Ω–∫–∞)
```


[05/23/2021 10:43 PM] kushti#0978
Would be happy to help!

{Reactions}
üòç 

[05/26/2021 9:51 AM] glasgowm#9381
Sounds very interesting, I have a project in mind similar to this too

{Reactions}
üíØ 

[05/31/2021 4:23 PM] Louis Berlin#1103
Hey all. 
I have just seen these messages. 

Fantastic! Feel honoured @kushti is interested.  @glasgowm I would love to talk about it more with you.

I think it's best if i write more to expand on this idea as a piece of research. If you could share your thoughts once i have written a proposal that would be fantastic. I will send it to you once done.

In the meantime you can check out some of the things i have been reading:

Very interested in this research about the community paradigm in public service provision:
https://www.newlocal.org.uk/wp-content/uploads/The-Community-Paradigm_FINAL.pdf

Utopia of rules by graeber:
https://theanarchistlibrary.org/library/david-graeber-the-utopia-of-rules

Aswell the things i am doing around this subject most recently:

I am doing a talk in this conference later this month about public-commons partnerships, and the trials and tribulations we face to create new commons systems:
https://www.eventbrite.co.uk/e/democratic-by-design-tickets-154828178249

I also have some work featured in the Venice Bienalle this year, which is on a similar theme:
https://www.itsliquid.com/thegardenofprivatiseddelights.html

**Some thoughts:**
I have a hope that we could use blockchain to create a new system to go beyond the beuracratic limitations of traditional public systems in the last century, and in this same breath to create public services that follow more Extended, Open, Social Co-operative structures mentioned before.


[05/31/2021 7:43 PM] Louis Berlin#1103
**Where does this fit with Ergo and Cardano?**
Charles often states that nation states would run on Cardano. But we need to ask what does this actually look like? What are the real implications of entire public service systems using blockchain infrastructure if nation states do it in their current form? 

If this area isn't designed well; we may see immutable blockchain systems used for class and social oppression. What happens when social class becomes immutable, and the services you are provided is based on this? As with all revolutionary technologies blockchain has the potential to be either liberating and oppressive in equal measure.

So we need to create a public system framework native to the blockchain, closer in line with mutualist, peer to peer agenda  - which is more is the heart and the roots of blockchain projects such as bitcoin and ergo. 

The idea is by creating prototypes and models, and testing at a grassroots level we can design some universal applications for new public services.


[06/02/2021 6:49 PM] olliten#5885
Abstract. We put forth a keyless wallet, a cryptocurrency wallet in which money can be spent using a password alone, and no private keys are required. It requires a smart contract blockchain. We propose two schemes. In the first, the user sets a short wallet password and can spend their money at a prespecified maturity date using the password alone. Using this as a stepping stone, we propose a second scheme, in which the user uses an OTP authenticator seed to generate a long series of timebased OTP passwords for the foreseeable future. These are encrypted and organized in a Merkle tree whose root is stored in a smart contract.

The user can spend funds at any time by simply visually providing the current OTP password from an air gapped device. These OTPs can be relatively short: Just 6 alphanumeric characters suffice. Our OTP scheme
can work in proof-of-stake as well as static and variable difficulty proofof-work blockchains. The low-entropy in the passwords and OTPs in our scheme is protected from brute force attempts by requiring that an
adversary accompany any brute force attempt by a transaction on the chain. This quickly incurs enormous economic costs for the adversary. Thus, we develop the first decentralized rate limiting scheme. We use
Witness Encryption (WE) to construct a timelock encryption scheme in which passwords are encrypted from past into future blocks by leveraging the NP-language expressing proof-of-work or proof-of-stake performed as
the witness. Witness Encryption is a currently impractical cryptographic primitive, but our scheme may become practical as these primitives are further developed

https://eprint.iacr.org/2021/715.pdf

{Reactions}
ü™¥ 

[06/03/2021 10:33 PM] kushti#0978
Also , it is quantum-resistance )

{Reactions}
üëç (3) 

[06/06/2021 2:47 AM] Louis Berlin#1103
Hi all, 

Here is some writing expanding on the idea i shared above. 

Please let me know your feedback either here or in private messages. 

Please also share if you see any way this proposal could be improved or reasons that it might not work.

Thanks in advance.

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/850913879303258142/Public_systems_on_blockchain__1.pdf

{Reactions}
üòç (5) 

[06/06/2021 11:11 AM] kushti#0978
https://eprint.iacr.org/2021/727

{Reactions}
üëç (2) 

[06/06/2021 11:13 AM] kushti#0978
SoK: Privacy-Preserving Computing in the Blockchain Era


[06/06/2021 9:28 PM] Louis Berlin#1103
Please bear in mind its first draft.


[06/11/2021 8:26 PM] anon_real#2768
https://www.ergoforum.org/t/a-simpler-collective-spending-approach-for-everyone/476/4

{Embed}
https://www.ergoforum.org/t/a-simpler-collective-spending-approach-for-everyone/476/4
A Simpler Collective-Spending Approach for Everyone!
Complete contract protecting a team‚Äôs funds:  {   // request details   val reqId = INPUTS(1).R4[Coll[Byte]].get     // some random request ID designed to distinguish between different payments   val ergAmount = INPUTS(1).R5[Long].get       // asked ERG amount   val tokenId = INPUTS(1).R6[Coll[Byte]].get   // asked token ID, e.g, SigUSD's ID   va...

{Reactions}
ergo_white (5) 

[06/17/2021 10:35 AM] glasgowm#9381
https://iohk.io/en/research/library/papers/pay-to-wincheapcrowdfundablecross-chain-algorithmic-incentive-manipulation-attacks-on-pow-cryptocurrencies/

{Embed}
https://iohk.io/en/research/library/papers/pay-to-wincheapcrowdfundablecross-chain-algorithmic-incentive-manipulation-attacks-on-pow-cryptocurrencies/
Pay To Win: Cheap, Crowdfundable, Cross-chain Algorithmic Incentive...
Pay To Win: Cheap, Crowdfundable, Cross-chain Algorithmic Incentive Manipulation Attacks on PoW Cryptocurrencies, , March/2021
https://images-ext-1.discordapp.net/external/8mVxJyncPBbwTJsfT1RMBplNGyp9wyvQjrtNa9ckZbI/https/ucarecdn.com/898961f7-4113-42f7-b96d-1adedae97c1a/

{Reactions}
üëçüèª (2) 

[06/27/2021 4:09 AM] WilfordGrimley#0124
Current version of Ergo SmartPools paper on eprint:

https://eprint.iacr.org/2021/846

{Reactions}
‚ô•Ô∏è (2) 

[06/28/2021 5:39 PM] olliten#5885
"We study the scalability issue in present blockchain architecture and
propose a design which decouples the data hosting, execution and
verification. We discuss few suitable primitives for the construction
of a data hosting layer that guarantees data availability. We sketch
out the system goals, design, security and implementation details
of Polygon Avail which is our availability focussed blockchain
solution."

https://github.com/maticnetwork/data-availability/blob/master/reference%20document/Data%20Availability%20-%20Reference%20Document.pdf

{Embed}
https://github.com/maticnetwork/data-availability/blob/master/reference%20document/Data%20Availability%20-%20Reference%20Document.pdf
maticnetwork/data-availability
Contribute to maticnetwork/data-availability development by creating an account on GitHub.
https://images-ext-2.discordapp.net/external/GNU1qnLXpTPmfKkJEaRBANbpM0Q9YxD90rp2pa6UsKg/https/opengraph.githubassets.com/3d002582d1bdf27336c56601c2cde2f374a35f7e594bb89528cc9a9362f4c7e3/maticnetwork/data-availability


[06/30/2021 2:33 PM] kushti#0978
Sounds like LazyLedger from 2019:


[06/30/2021 2:33 PM] kushti#0978
https://arxiv.org/abs/1905.09274

{Embed}
https://arxiv.org/abs/1905.09274
LazyLedger: A Distributed Data Availability Ledger With...
We propose LazyLedger, a design for distributed ledgers where the blockchain
is optimised for solely ordering and guaranteeing the availability of
transaction data. Responsibility for executing...
https://images-ext-1.discordapp.net/external/HUrD-HZewQUxSbAMnSSFsIbyHy5XOTAomBRxj_HAOMc/https/static.arxiv.org/icons/twitter/arxiv-logo-twitter-square.png


[07/01/2021 3:19 PM] glasgowm#9381
https://iohk.io/en/research/library/papers/mithrilstake-based-threshold-multisignatures/

{Embed}
https://iohk.io/en/research/library/papers/mithrilstake-based-threshold-multisignatures/
Mithril: Stake-based Threshold Multisignatures - IOHK Research
Mithril: Stake-based Threshold Multisignatures, , June/2021
https://images-ext-1.discordapp.net/external/8mVxJyncPBbwTJsfT1RMBplNGyp9wyvQjrtNa9ckZbI/https/ucarecdn.com/898961f7-4113-42f7-b96d-1adedae97c1a/


[07/08/2021 5:06 AM] Kaven#6681
i find this project very interesting https://www.radixdlt.com/

{Embed}
https://www.radixdlt.com/
Radix DLT | Layer 1 DeFi done right.
A decentralized network where developers will build quickly without security risks, where code contributors get rewarded, and where scale is never a bottleneck.
https://images-ext-1.discordapp.net/external/V8xlmvcT-ZkDJ_UW0JYuSb277cvqa3UpGXfxA8_-EvE/https/assets-global.website-files.com/6053f7fca5bf627283b582c2/60b0dd8b4901f288997e0078_OG%2520Image.png

{Reactions}
üëçüèª 

[07/08/2021 5:08 AM] Kaven#6681
they talk about composable defi contracts on rails and functional programming


[07/08/2021 5:09 AM] Kaven#6681
most interesting is the claims of arbitrarily large sharding 'soon'‚Ñ¢Ô∏è  üòâ


[07/08/2021 5:10 AM] Kaven#6681
not shilling, just putting on radar :ergo_orange:


[07/08/2021 8:36 AM] Awdi4Life#9782
and folders that im missing


[07/12/2021 7:58 AM] Vesi Hiisi#2550
Something Ergo could also pursue? Zero knowledge KYC

https://eprint.iacr.org/2021/907.pdf

{Reactions}
ergo_orange (5) 

[07/26/2021 7:40 PM] pragmaxim#0778
https://github.com/BLAKE3-team/BLAKE3


[08/11/2021 1:02 PM] WilfordGrimley#0124
https://www.tomshardware.com/news/researchers-develop-chip-for-quantum-resistant-security

{Embed}
https://www.tomshardware.com/news/researchers-develop-chip-for-quantum-resistant-security
Researchers Develop RISC-V Chip for Quantum-Resistant Encryption
The goal is to pre-empt the fall of traditional cryptography likely to follow the quantum revolution.
https://images-ext-1.discordapp.net/external/kG00M64jHYpZSArn_vZQBXAhcOlYC_M_d76NfGbUHe0/https/cdn.mos.cms.futurecdn.net/u5LXhJyLDkriTzXDmTcyRg-1200-80.jpg


[08/11/2021 7:25 PM] Lollipop#8640
So, is this like a prank?


[08/11/2021 7:25 PM] Lollipop#8640
The new encryption method is called "SIKE"

{Reactions}
üòÜ 

[08/16/2021 10:02 PM] kushti#0978
https://www.youtube.com/watch?v=8esvJD0tGuM

{Embed}
Israeli Algorithmic Game Theory Seminar
https://www.youtube.com/watch?v=8esvJD0tGuM
Aviv Zohar: Pricing Cryptocurrency Mining Hardware
Speaker: Aviv Zohar (The Hebrew University of Jerusalem)
Title: Pricing Cryptocurrency Mining Hardware  
Date: November 3, 2020

Abstract: 
Cryptocurrencies that are based on Proof-of-Work often rely on special purpose hardware (ASICs) to perform mining operations that secure the system.We argue that ASICs have been mispriced by miners and selle...
https://images-ext-2.discordapp.net/external/Bde0-X61Up8IAmG_62WMbWei1ATjLIx2ZMZfujfAkCA/https/i.ytimg.com/vi/8esvJD0tGuM/maxresdefault.jpg

{Reactions}
üëç 

[08/24/2021 3:56 AM] CypherPet#3447
What would happen if I time locked a box for 10-20 years? Would storage rent start melting it? Also could a fork make my box unusable at some point? I have no intention in doing this right now lol but I'm just curious.


[08/24/2021 10:32 AM] glasgowm#9381
I'm not sure the mechanism for time-locking a box but I think storage rent only applies to erg stored in wallets and not smart-contracts. (Not sure though)


[08/24/2021 10:33 AM] glasgowm#9381
Tons of resources and research here:

https://github.com/orgs/sourcecrypto/repositories

{Embed}
https://github.com/orgs/sourcecrypto/repositories
SourceCrypto
SourceCrypto has 45 repositories available. Follow their code on GitHub.
https://images-ext-1.discordapp.net/external/aobjsTzoZIiFcXlfJ3k028WDtWWVhJ7_rkhFyb1IFPU/%3Fs%3D280%26v%3D4/https/avatars.githubusercontent.com/u/51543365


[08/24/2021 11:23 AM] morphic#4133
It applies to any box, even under smart contract. The only way to escape it is to recreate the box (and pay TX fee for that)


[08/24/2021 11:33 AM] glasgowm#9381
Thanks for the info, must be thinking of something else.


[08/24/2021 4:24 PM] scalahub#2618
It will very slowly start getting depleted. If you have 20 ergs, that box will be around for few hundred years (just a ballpark calculation)


[08/24/2021 4:26 PM] scalahub#2618
The only way you _may_ make the box unspendable is if its contract depends on value or R3 (creation height)


[08/24/2021 4:27 PM] scalahub#2618
It can make other boxes unspendable though if their contract depends on this box's boxId. Hence it's considered an antipattern to use boxId in contract.. although some use cases do require it


[08/24/2021 4:34 PM] scalahub#2618
@kushti about storage rent, would like to propose that miner cannot take tokens (they have to be burned if box is destroyed). I know you suggested that tokens have lot of value.. but most have value precisely because they are locked and cannot be freed


[08/24/2021 4:35 PM] CypherPet#3447
the goal is to keep the blockchain size to around 8 years worth of data right? so after 8 years, those utxos are sent back to the end of the chain minus the fees?


[08/24/2021 4:36 PM] scalahub#2618
Technically it won't be the same box, but a copy with reduced amount.. hence the box id and height will change


[08/24/2021 4:38 PM] CypherPet#3447
I've been playing around setting up nodes and I can only imagine how long syncing will eventually get on ethereum or bitcoin. I'm glad to see some "future-proof" design embeded in it.


[08/24/2021 4:39 PM] scalahub#2618
So the idea is to not have a box unspent for a long time . If it stays unspent then rent will be deducted.


[08/24/2021 4:49 PM] CypherPet#3447
You know if there will be extra fees for handling those utxo renewal? or only the base fee to create the transaction for sending the content to the newly created utxo? I could easily imagine a wallet that keeps track of the oldest utxos and automatically manage/send them to a newer box..


[08/24/2021 5:06 PM] scalahub#2618
It's some fee based on value decided by miners so it can increase in future


[08/24/2021 5:12 PM] scalahub#2618
Basically the base fee per kb


[08/24/2021 5:19 PM] scalahub#2618
Exact details probably @kushti or @morphic can provide


[08/24/2021 5:46 PM] morphic#4133
This method is called for each box being spent https://github.com/ergoplatform/ergo/blob/0a6fd12b49d32847ca7c0e4ac5b2a01d467e3143/ergo-wallet/src/main/scala/org/ergoplatform/wallet/interpreter/ErgoInterpreter.scala#L49
It verifies additional conditions not related to the contract logic. If the method returns true (only for old enough boxes), then the box can be spent regardless of the contract.


[08/24/2021 8:05 PM] CypherPet#3447
thanks


[08/27/2021 1:13 AM] WilfordGrimley#0124
Just dove a little bit deeper into Constellation. Trades as $DAG. Claims to be a Layer 0 DAG based chain of chains. Wants to be feeless for small transactions and charge for DApps using the tokens as utility. Smart contract and state channel enabled. 

It‚Äôs tokenomics are totally stupid: PoS but only 40% goes to stakers, the rest to founders, devs, investors etc. Apparently need 250k to operate a node (almost as bad as Avalanche). 


If nothing else, poaching some of their devs could be worthwhile. 

Thing is, it‚Äôs written in Scala, so it‚Äôs layer zero features could be absorbed by Ergo, extending the capability of Ergo Oracles, enabling DAG based sidechains, and scalability. 

It would also likely be possible to lift their staking contracts and adapt them into ErgoScript, could be used for crowdfunding, etc.


[08/27/2021 1:23 PM] olliten#5885
I have no idea whether these results apply to eUTXO

https://twitter.com/tarunchitra/status/1430939240569851904?s=20

{Embed}
Tarun Chitra (@tarunchitra)
https://twitter.com/tarunchitra/status/1430939240569851904?s=20
‚ö†Ô∏è¬†üì∞üíßüö®
Tired but true: Private Uniswap can‚Äôt exist
Wired: *Differentially Private* Uniswap does exist

This month‚Äôs paper (9th in a row!): can‚Äôt get the mechanism we want, but there exists one that we need 

https://t.co/TxhOEGq5rE

(Storytime! üìì)

https://t.co/mybhAEWsZG
Likes
104
Twitter

{Reactions}
üëçüèª 

[08/27/2021 3:56 PM] glasgowm#9381
bit easier to read

https://threadreaderapp.com/thread/1430939240569851904.html

{Embed}
https://threadreaderapp.com/thread/1430939240569851904.html
Thread by @tarunchitra on Thread Reader App
Thread by @tarunchitra: ‚ö†Ô∏è¬†üì∞üíßüö® Tired but true: Private Uniswap can‚Äôt exist Wired: *Differentially Private* Uniswap does exist This month‚Äôs paper (9th in a row!): can‚Äôt get the mechanism we want, but there exists on...‚Ä¶
https://images-ext-1.discordapp.net/external/e2fkXx9YvUiiwYNPYdUfCSRpe_--IoFs5DtWgPWUahk/https/threadreaderapp.com/images/screenshots/thread/1430939240569851904.jpg


[08/27/2021 3:58 PM] glasgowm#9381
https://github.com/ergolabs/ergo-dex

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/880828653435502642/unknown.png

{Embed}
https://github.com/ergolabs/ergo-dex
GitHub - ergolabs/ergo-dex: An Automated Decentralized Exchange
An Automated Decentralized Exchange. Contribute to ergolabs/ergo-dex development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/Avq-aICmJGY1Ja045neiCOcHqF3rv4Sf64u-KK8Pddo/https/opengraph.githubassets.com/88742c5b4885dd3837bcc2de85265adb81de4e1dd45af8a777380227974ac9d3/ergolabs/ergo-dex


[08/27/2021 4:02 PM] glasgowm#9381
So it's saying you can infer trade size from classic amm pools I think, I'm not exactly sure how it impacts privacy though. i,e; If you use mixed coins, but not read indepth. 

Also ergodex will have concentrated pools so I dont imagine it applies there


[08/27/2021 4:03 PM] glasgowm#9381
and the algorithm proposed could probably be implemented on ergo if it's as good as they're claiming


[08/27/2021 4:03 PM] glasgowm#9381
but don't know eutxo that well so feel free to correct me anyone


[08/30/2021 8:49 PM] kushti#0978
From the abstract "can be implemented in any blockchain system that allows smart contracts to access a verifiable random function", so not sure it can be implemented anywhere atm, but need to check details. Also, privacy model is pretty relaxed likely, but need to check the full paper as well


[09/02/2021 7:32 PM] olliten#5885
https://twitter.com/tusharjain_/status/1433479289933029377?s=21

{Embed}
Tushar Jain (@TusharJain_)
https://twitter.com/tusharjain_/status/1433479289933029377?s=21
0/ I am excited to announce that Multicoin has led an investment into @UXDProtocol to build a stablecoin which solves the stablecoin trilemma.

Building a stablecoin which is decentralized, capital efficient, and stable in price is one of the biggest opportunities in crypto.
Twitter


[09/05/2021 9:51 AM] olliten#5885
https://forum.celestia.org/t/accounts-strict-access-lists-and-utxos/37

{Embed}
https://forum.celestia.org/t/accounts-strict-access-lists-and-utxos/37
Accounts, Strict Access Lists, and UTXOs
Thanks to Mustafa Al-Bassam (@musalbas), James Prestwich (@prestwich), and Sam Wilson (@SamWilsn) for review.  HackMD mirror: https://hackmd.io/KOJdKANHSvaGC_8IugEAJA  To date there has been widespread confusion around the limits of the UTXO data model, with claims that it is more challenging if not impossible to implement Ethereum-style smart c...
https://images-ext-1.discordapp.net/external/T9JOmkAPQgd4Ho1WZ2nRxn-7c6Yb-rkZe4x6JP1ouDE/https/forum.celestia.org/uploads/default/original/1X/ad86dded9f7be5f4802796c9c620d0d6f61806f9.png


[09/06/2021 4:50 PM] 34r7h#7363
any research for POW that solves real-world problems?


[09/18/2021 8:48 AM] vegycslol#1714
Anyone checked the new btc scaling solution? https://github.com/JohnLaw2/btc-iids/blob/main/iids13.pdf

{Embed}
https://github.com/JohnLaw2/btc-iids/blob/main/iids13.pdf
btc-iids/iids13.pdf at main ¬∑ JohnLaw2/btc-iids
Contribute to JohnLaw2/btc-iids development by creating an account on GitHub.
https://images-ext-2.discordapp.net/external/_qXRlNewgtr6W00wKN5J3-m6SnU7AvjX3YWNRgx3lAY/https/opengraph.githubassets.com/a7d78506f951bfad296fc4da53a0218b10229cc9d09b1d4c1552f6cab7922f6a/JohnLaw2/btc-iids


[09/19/2021 6:15 AM] Walrus#9577
RIP Primecoin


[09/20/2021 10:47 PM] vegycslol#1714
what's looking like a solid solution to have faster L1 transactions that could potentially end up in ergo? bitcoinNG paper? maybe something else?


[09/21/2021 9:03 AM] glasgowm#9381
```
Ergo Platform is one of the most sophisticated protocols in the space with stateless clients (for true full-nodes), NiPoPoWs (for light clients), and the ability for miners to vote on parameter changes like increasing the block size easily. 

L0: A lot of efficiency improvements in the node have been completed starting from v4.0.8.  We are going to count every memory allocation and every operation. 20-50x improvements are likely still possible by just optimizing the node code. Implementations for bootstrapping with NiPoPoW proofs and UTXO set snapshots are planned.

L1: Ergo's blocks have an *extension section* which allows the implementation of a wide variety of other scaling solutions such as *BitcoinNG-style macroblocks* and *Sharding* -- and even lets us do generic sidechains with velvet or soft forks.

L2 (off-chain) - Ergo could support the Lightning Network, Rainbow network, Zero-Knowledge Contingent Payments, and FairSwap/FastSwap protocols - and many others. Our implementation here will depend on the applications.
```


[09/21/2021 9:11 AM] vegycslol#1714
Yeah I've read this, was just wondering whether i should check bitcoinNG or if there's something better. I like bitcoinNG but it seems to me like it bloats the chain and the leader could decide to not mine micro blocks. Sure he has incentives to mine them but if he wants to hurt the coin then that's just a price he has to pay to hurt it (he might not hold the coins but has switched from another crypto just to create problems here)


[09/21/2021 9:19 AM] glasgowm#9381
I dont think anything has been decided yet, that's me just paraphrasing kushti above. I think v5 of the node is the priority and kushti is working on utxo set snapshots and state tree optimisations / JIT costings.


[09/21/2021 9:22 AM] glasgowm#9381
mining stuff at that level is a bit outside my comfort zone, not sure if you've seen this but might be relevant? https://www.youtube.com/watch?v=s05ypkSC7gk

{Embed}
Ergo Platform
https://www.youtube.com/watch?v=s05ypkSC7gk
Ergoversary 20201 - Logarithmic Mining Update from Dionysis
In celebration of Ergo's 2nd birthday, Dionysis Zindros from The University of Athens gives us an update on the progress they have made in the field of logarithmic mining.
https://images-ext-1.discordapp.net/external/kJCSij-Vjnbeet5StUkDp1H7LjunEeVj8RO3M60Zi4k/https/i.ytimg.com/vi/s05ypkSC7gk/maxresdefault.jpg


[09/21/2021 10:05 AM] vegycslol#1714
Thanks for all the info, I haven't watched this one yet, will check it out


[09/24/2021 12:56 AM] Marty#4039
Anyone know where the ergo platform is registered legally? Or ergodex? Doing KYA instead of KYC I'm curious what jurisdiction they're in, if any


[10/08/2021 3:24 PM] glasgowm#9381
Incorporating in Singapore 

https://www.youtube.com/watch?v=Nw3ehU3ILLI

{Embed}
Ergo Platform
https://www.youtube.com/watch?v=Nw3ehU3ILLI
ERGOHACK II - Introduction
Welcome to ErgoHack 2.0! 

Ergo's business manager Ameanio gives his thoughts on blockchain, updates us on some Ergo news, and kicks off the hackathon. Have fun!
https://images-ext-1.discordapp.net/external/kfnn2NZlUeBOvZbhBqbC9xiMCrhLi-V-__5WXGqJ9h0/https/i.ytimg.com/vi/Nw3ehU3ILLI/maxresdefault.jpg


[10/22/2021 7:38 AM] glasgowm#9381
ADA discussions on throughput:

https://github.com/input-output-hk/cardano-node/issues/3247

{Embed}
https://github.com/input-output-hk/cardano-node/issues/3247
[FR] - Increase network throughput ¬∑ Issue #3247 ¬∑ input-output-hk/...
Internal/External Internal Area Other Any other topic (Delegation, Ranking, ...). Note: this is partially related to cardano-node, partially related to ouroboros-network Note Hello! If you&#39;...
https://images-ext-2.discordapp.net/external/lSkRO3nlDYhjBbAvEkeHaTbg2pQTdcRGxSmb6OV_ONo/https/opengraph.githubassets.com/2c0707f89e6f368085191efd6b65787c4daf79b40ee355174375634009ce8a98/input-output-hk/cardano-node/issues/3247

{Reactions}
üëç (2) 

[10/27/2021 6:37 AM] olliten#5885
Zexe: Enabling Decentralized Private Computation - multiple references to UTXO
https://eprint.iacr.org/2018/962.pdf


[10/27/2021 6:54 AM] olliten#5885
Is the implication of this paper that one could perhaps build private smart contracts on Ergo?


[10/29/2021 9:07 AM] notmork#0302
Very interesting read! Thanks üôè


[10/29/2021 10:28 AM] kushti#0978
maybe, on  a sidechain


[10/29/2021 10:29 AM] kushti#0978
https://arxiv.org/abs/1907.13531

{Embed}
https://arxiv.org/abs/1907.13531
HotPoW: Finality from Proof-of-Work Quorums
A fundamental conflict of many proof-of-work systems is that they want to
achieve inclusiveness and security at the same time. We analyze and resolve
this conflict with a theory of proof-of-work...
https://images-ext-1.discordapp.net/external/HUrD-HZewQUxSbAMnSSFsIbyHy5XOTAomBRxj_HAOMc/https/static.arxiv.org/icons/twitter/arxiv-logo-twitter-square.png

{Reactions}
üëç (2) 

[11/02/2021 8:56 PM] kushti#0978
https://www.youtube.com/watch?v=V3d1uO42s0w

{Embed}
Juliana Passos
https://www.youtube.com/watch?v=V3d1uO42s0w
Issues of Blockchain Sharding
In this video Juliana explains what is sharding and the main concerns when adopting this model as a blockchain architecture. Protocols will need to adopt sharding to solve the scalability issues and improve the transaction validation process. But at what cost? Is security compromised?
https://images-ext-1.discordapp.net/external/cdF0wC0hQJ0O_09XbHy5NvSuDZ4AqBBfFKgbHEdSd_g/https/i.ytimg.com/vi/V3d1uO42s0w/maxresdefault.jpg


[11/02/2021 8:56 PM] kushti#0978
pretty accessible and still good video


[11/06/2021 3:48 PM] olliten#5885
Assuming zk-rollups and volitions and modular architectures are the future meaning that execution, data availability and settlement will happen in different layers, what is Ergo‚Äôs role in this future? Some specialization might be needed? 

https://twitter.com/epolynya/status/1448529584236888070?s=21

{Embed}
polynya (@epolynya)
https://twitter.com/epolynya/status/1448529584236888070?s=21
Rollups, data availability layers & modular architectures are the only way the blockchain industry attains global scale to millions of TPS. Monolithic blockchains (L1s) are cripplingly inefficient. Here's a meta post collecting some of my ramblings: 
https://t.co/kRVD3bPfjB
Retweets
107
Likes
481
Twitter


[11/09/2021 6:27 PM] andee#4722
https://www.ergoforum.org/t/a-scalability-plan-for-ergo/226

{Embed}
https://www.ergoforum.org/t/a-scalability-plan-for-ergo/226
A Scalability Plan for Ergo
We need to think how to tackle with scalability issues even when blockchain is not full at all like now. However, it is hard to predict what applications will have demand for, so it is better to understand for now what is doable for the Ergo Platform protocol (with no breaking changes), and start implementations only when needed.  So let‚Äôs consi...


[11/09/2021 8:17 PM] olliten#5885
Thanks! What I‚Äôm thinking about is that there might be only 1 or 2 settlement layers when the space mature. So I‚Äôm wondering if Ergo wants to be one of them. Or a data availability layer.


[11/09/2021 9:08 PM] glasgowm#9381
```The main power of Ergo is that it enables many unique dApps (ones already implemented, ones already discovered and many more not yet discovered). In addition Ergo enables many layer 2 solutions (like sidechains, which kushti already mentioned as work in progress). 
Those leyer 2 solutions/protocols will be the main source of actual scalability. The general idea, roughtly, is that large chunks of transactions can happen in layer 2 and the whole chunks will be setled in Ergo blockchain using single transaction. Thanks to the high flexibility of ErgoScript programming model (what we call eUTXO), many different protocol will be possible on layer2, each one solving scalability problem in a specific domain (like simple payment transactions).
Thus, Ergo blockchain can be thought as common settlement layer for many level2 protocol and applications```


[11/11/2021 9:56 PM] kushti#0978
https://eprint.iacr.org/2021/1474


[11/11/2021 9:57 PM] kushti#0978
"In blockchains such as Bitcoin and Ethereum, users compete in a transaction fee auction to get their transactions confirmed in the next block. A line of recent works set forth the desiderata for a ‚Äúdream‚Äù transaction fee mechanism (TFM), and explored whether such a mechanism existed. A dream TFM should satisfy 1) user incentive compatibility (UIC), i.e., truthful bidding should be a user‚Äôs dominant strategy; 2) miner incentive compatibility (MIC), i.e., the miner‚Äôs dominant strategy is to faithfully implement the prescribed mechanism; and 3) miner-user side contract proofness (SCP), i.e., no coalition of the miner and one or more user(s) can increase their joint utility by deviating from the honest behavior. The weakest form of SCP is called 1-SCP, where we only aim to provide resilience against the collusion of the miner and a single user. Sadly, despite the various attempts, to the best of knowledge, no existing mechanism can satisfy all three properties in all situations..."


[11/19/2021 12:52 AM] Q86#4155
https://twitter.com/Wolf9466/status/1461223065656991748 interesting maybe for this place


[12/07/2021 5:58 PM] olliten#5885
Based on the scalability innovation (zk-rollups, optimistic rollups, etc.) and modularity (not multichain but separation of settlement, data availability, and execution) that happens around Ethereum, it seems to me that it's very hard to compete with Ethereum on becoming the best settlement layer for rollups. 

Do you believe there's a need for multiple settlement layers globally? Or will it be about winner takes it all? Why would Ergo be one of the winners? 

Thousands of rollups (e.g. maybe Solana needs to become one), perhaps tens of specialized DA layers, and one settlement layer is something that many envision right now.

Vitalik's view now - based on "End game" (https://vitalik.ca/general/2021/12/06/endgame.html) is that the best route forward is that: "We get a chain where block production is still centralized, but block validation is trustless and highly decentralized, and specialized anti-censorship magic prevents the block producers from censoring."

Ergo is focusing on decentralized block production, and it's important but is it really enough of an edge to compete? 

Trying to get clarity on Ergo's strategy in this fast paced industry...

{Embed}
https://vitalik.ca/general/2021/12/06/endgame.html
Endgame
https://images-ext-1.discordapp.net/external/EpmVrfqfsZLKyvVHX8C3E4oj8nq4zCVGb9Y_-qmV4jY/http/vitalik.ca/images/icon.png


[12/07/2021 10:51 PM] glasgowm#9381
Hard to predict what there will be a need for - I'm sure there will be always be competition. Over the edge Ergo has is that it's UTXO based. Account-based doesn't make sense for a blockchain and won't last imo. Then you have sigma protocols, multi-stage contracts, and all the other additions to eutxo and ergo.


[12/20/2021 7:51 AM] anon_real#2768
https://www.ergoforum.org/t/a-more-efficient-utxo-voting/3144

{Embed}
https://www.ergoforum.org/t/a-more-efficient-utxo-voting/3144
A more efficient UTXO voting
Let‚Äôs say we have a voting contract or a joint-spending contract similar to here. In this setting voters have some specific token that allows them to have a specific ‚Äúvoting power‚Äù. For example, if there are a total of 100 of token x and Alice owns 15 x then she has 15% of the entire voting power.  We‚Äôd like to have an efficient way of voting. V...


[12/20/2021 7:54 PM] kushti#0978
https://link.springer.com/chapter/10.1007/978-3-030-92075-3_22

{Embed}
https://link.springer.com/chapter/10.1007/978-3-030-92075-3_22
Generalized Channels from Limited Blockchain Scripts and Adaptor Signa
Decentralized and permissionless ledgers offer an inherently low transaction rate, as a result of their consensus protocol demanding the storage of each transaction on-chain. A prominent proposal to...
https://images-ext-1.discordapp.net/external/FM90LKyV2aXfTM9GL5mHH1ImNUxvt_74weiPpLOxeUg/https/static-content.springer.com/cover/book/978-3-030-92075-3.jpg


[02/14/2022 7:12 PM] scalahub#2618
https://www.ergoforum.org/t/yet-another-mixing-protocol/3359

{Embed}
https://www.ergoforum.org/t/yet-another-mixing-protocol/3359
Yet Another Mixing Protocol
Below is an idea for mixing coins motivated from ErgoMixer (aka zerojoin). Hence, some basic idea of ErgoMixer will be useful in understanding the motivation.   Motivation The primary motivation is to develop a better variant of ErgoMixer.    Mix more than 2 boxes: In ErgoMixer, we can mix only two boxes at a time and it will be good to have a s...


[02/22/2022 9:38 PM] glasgowm#9381
https://github.com/plebbit/whitepaper/discussions/2

{Embed}
https://github.com/plebbit/whitepaper/discussions/2
Plebbit: A serverless, adminless, decentralized Reddit alternative ...
Plebbit: A serverless, adminless, decentralized Reddit alternative (Whitepaper v0.2.0) Abstract A decentralized social media has 2 problems: How to store the entire world&#39;s data on a blockc...
https://images-ext-2.discordapp.net/external/h3bFjHLQiUtlHbCGoy4y-85bQMQti9b3JtikWeSagQs/https/opengraph.githubassets.com/e44ece52ec07c6e28e61857c7f1dc16d6b05b28a156d60e06c7bfca996d20e50/plebbit/whitepaper/discussions/2


[03/02/2022 3:16 PM] glasgowm#9381
https://www.ergoforum.org/t/dexy-usd-simplest-stablecoin-design/1430

https://github.com/ergoplatform/ergo-jde/tree/main/kiosk/src/test/scala/kiosk/dexy

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948599767049588807/unknown.png


[03/02/2022 3:17 PM] glasgowm#9381
https://github.com/Ergo-Lend/ergo-lend-documentation/blob/main/contracts/SingleLender/contracts.scala#L53

https://github.com/ergoplatform/ergo-jde/blob/e5f43b96f1e09549042d5a18d59d92f63d189ae1/kiosk/src/test/scala/kiosk/dexy/DexySpec.scala#L148

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948599837539061822/unknown.png


[03/02/2022 3:17 PM] glasgowm#9381
https://github.com/ergolabs/ergo-dex/blob/token_lock/contracts/locking/TokenLock.sc

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948599898809442335/unknown.png


[03/02/2022 3:17 PM] glasgowm#9381
https://github.com/ergoplatform/eips/blob/eip14/eip-0014.md

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948599981290455080/unknown.png


[03/02/2022 3:18 PM] glasgowm#9381


{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948600151986036756/unknown.png


[03/02/2022 3:18 PM] glasgowm#9381
https://github.com/Ergo-Lend/ergo-lend-documentation/blob/main/contracts/SingleLender/contracts.scala

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/948600194415591505/unknown.png


[04/03/2022 9:04 PM] root7Z#8699
Just saw this is released 4 days ago, Dionysis Zindros contributed: Light Clients for Lazy Blockchains https://arxiv.org/abs/2203.15968

{Embed}
https://arxiv.org/abs/2203.15968
Light Clients for Lazy Blockchains
Decoupling consensus from transaction verification and execution is an
important technique to increase the throughput of blockchains, a technique
known as a lazy blockchain. Lazy blockchains can...
https://images-ext-1.discordapp.net/external/HUrD-HZewQUxSbAMnSSFsIbyHy5XOTAomBRxj_HAOMc/https/static.arxiv.org/icons/twitter/arxiv-logo-twitter-square.png


[04/04/2022 12:39 AM] soysor#6001
Is there plans to add arbitrary address balance lookups to ergo node?

I'm still reading the paper and working to learn more about light clients but something I don't understand for an ergo implementation is account balances. Any light client is still going to need to get account balances from an external indexing service as things are now right? I guess it would still be a light client, but partially centralized? ü§∑‚Äç‚ôÇÔ∏è


[04/08/2022 9:42 AM] glasgowm#9381
https://www.reddit.com/r/ergonauts/comments/tyymax/tracking_storage_rent_potential/

{Embed}
https://www.reddit.com/r/ergonauts/comments/tyymax/tracking_storage_rent_potential/
r/ergonauts - Tracking storage rent potential
0 votes and 1 comment so far on Reddit


[04/13/2022 7:26 PM] glasgowm#9381
ETH 2.0 AND ITS IMPACTS BASED ON EIP-1559
https://assets.staticimg.com/cms/media/7QUQgKOvwAoPPjCkcsCGbi8spvKvZ4vNOKuN1PmHP.pdf

{Reactions}
ergo_black (2) 

[04/19/2022 10:34 AM] glasgowm#9381
**On One-way Functions and Kolmogorov Complexity**

https://arxiv.org/abs/2009.11514

> Is there a better way to verify the robustness of security algorithms. The answers seem to be in a new paper that just won the National Security Agency(NSA)‚Äôs ‚ÄúBest Cybersecurity Research Paper Competition‚Äù
> 
> Titled ‚ÄúOn One-way Functions and Kolmogorov Complexity‚Äù the paper provides an answer to one of the quincentennial problems in cryptography. The problem at hand is related to the existence of a mathematical construct called ‚Äúone-way functions‚Äù that can prove whether a method such as a zero knowledge proof in an L2 blockchain, is cryptographically secured.
> 
> The Cornell paper provides an empirical way to evaluate the robustness of cryptographic techniques used in L1 and L2 blockchains. This is particularly relevant considering the emergence of L2 runtimes based on cryptographic techniques such as secure multi party computations or zero knowledge proofs. Determining whether an algorithm is KC complex is fundamentally simpler than determining the existence of one-way-functions. Granted, this problem expands way beyond the blockchain ecosystem but, if we are talking about building the rails of a new financial system, cryptographic robustness is a foundational capabilities.
> 
> https://medium.com/intotheblock/the-paper-that-can-change-the-foundations-of-all-blockchain-cryptography-6df9f077e9d3

{Reactions}
ergo_orange (2) üî• (2) 

[04/19/2022 10:40 PM] glasgowm#9381
**SoK: Blockchain Governance**

https://arxiv.org/pdf/2201.07188.pdf


[06/09/2022 7:09 AM] pgwada#0227
I am working on formal verification of onchain contracts. I am planning to use deep and shallow embedding into Coq and use MetaCoq framework for extraction. I am still writing the paper. The idea is that we can use this framework for any eUTXO blockchain and my focus right now is for Cardano and Ergo. A draft of this is at https://www.deepchainada.com/paper/valcert-paper

Any suggestions / feedback pls let me know

{Embed}
https://www.deepchainada.com/paper/valcert-paper
Blockchain and AI - Valcert Paper
Valcert Paper
https://images-ext-2.discordapp.net/external/ICcFftyNRpp5feJhMdIusguogq3VFzbu5Gp1u5V5-6E/https/lh4.googleusercontent.com/7TxPJaelRe6gyvYm76ZNE50VvZ0IMELN7kaV74srLjICaFkywincTDJGW1i6LDq1S3OispdXduEopK1AJdyW-GU%3Dw16383

{Reactions}
üëçüèª 

[07/06/2022 4:48 AM] WilfordGrimley#0124
https://www.nature.com/articles/s41562-022-01383-x

{Embed}
https://www.nature.com/articles/s41562-022-01383-x
Human-centred mechanism design with Democratic AI
Nature Human Behaviour - Koster, Balaguer et al. show that an AI mechanism is able to learn to produce a redistribution policy which is preferred to alternatives by humans in an incentivized game.
https://images-ext-1.discordapp.net/external/CqSIqXXxuVJ1Boim72lBDeRe12eyqnHMUpuN37zGhCE/https/media.springernature.com/full/springer-static/image/art%253A10.1038%252Fs41562-022-01383-x/MediaObjects/41562_2022_1383_Fig1_HTML.png


[08/17/2022 1:29 PM] glasgowm#9381
https://iohk.io/en/blog/posts/2022/08/16/introducing-ofelimos-a-proof-of-useful-work-consensus-protocol/

{Embed}
https://iohk.io/en/blog/posts/2022/08/16/introducing-ofelimos-a-proof-of-useful-work-consensus-protocol/
Introducing Ofelimos: a proof-of-useful-work consensus protocol - I...
IOG research introduces a new, provably secure, consensus protocol to minimize the energy wastage of proof-of-work blockchains
https://images-ext-2.discordapp.net/external/6fjTUrq8bWx7V-Uog40-CksOJYOp4FahdFuXMwSWNU4/https/ucarecdn.com/45e9fe15-265b-4ecb-801b-3aeb4bc307ce/


[09/17/2022 5:46 AM] Porridge#8651
https://eprint.iacr.org/2021/1474.pdf


[09/17/2022 5:46 AM] Porridge#8651
Foundations of Transaction Fee Mechanism Design


[11/18/2022 11:36 AM] glasgowm#9381
SoK: A Stratified Approach to Blockchain Decentralization
https://arxiv.org/abs/2211.01291

Notably being used in the `EDI` (Edinburgh Decentralisation Index) https://www.ed.ac.uk/informatics/blockchain/edi/vision

{Embed}
https://arxiv.org/abs/2211.01291
SoK: A Stratified Approach to Blockchain Decentralization
Decentralization has been touted as the principal security advantage which
propelled blockchain systems at the forefront of developments in the financial
technology space. Its exact semantics...
https://images-ext-1.discordapp.net/external/HUrD-HZewQUxSbAMnSSFsIbyHy5XOTAomBRxj_HAOMc/https/static.arxiv.org/icons/twitter/arxiv-logo-twitter-square.png

{Embed}
https://www.ed.ac.uk/informatics/blockchain/edi/vision
Our vision
Find out about how the EDI will work and our vision for its future.
https://images-ext-2.discordapp.net/external/RxhFetsMmp7OVhxrCTwSFT85NXGoKE2itexc5ku5SfU/%3Fitok%3DHufwsM7_/https/www.ed.ac.uk/sites/default/files/styles/panel_breakpoints_theme_uoe_mobile_1x/public/thumbnails/image/eye-669157_1920.jpeg


[11/22/2022 12:49 PM] dusek#6153
could ergo theoretically support something like Merkelized Alternative Script Trees (MAST), ideally for P2PK addresses? That way you could have hidden spending conditions inside an address and it would look just like a regular P2PK address (with the same cost to spend too, since you wouldn't reveal the branches), until you spend one. Could open up a lot of possibillities for privacy and functionality like allowing someone else to claim your UTXOs if you pass away


[11/22/2022 12:49 PM] dusek#6153
Bitcoin has these with Taproot


[11/22/2022 12:50 PM] dusek#6153
MAST would kind of be like turning a SigmaOr into a merkle tree, only revealing the branch which evaluates to true, and hiding the root hash of the tree inside a regular schnorr signature


[11/22/2022 2:24 PM] glasgowm#9381
Is this relevant? From an old set of slides but not much more info given

{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/1044619458230108190/image.png


[11/22/2022 2:25 PM] glasgowm#9381


{Attachments}
https://cdn.discordapp.com/attachments/669198866565824524/1044619516161830952/2018_07_17_Ergo-1.pdf


[11/23/2022 6:52 AM] dusek#6153
this seems to be it yeah, although i'm not sure how you would use it in practice in ergoscript.


[12/09/2022 6:27 PM] pgwada#0227
I played a little with the AVID from paper "Information Dispersal with Provable Retrievability for Rollups" .  Are rollups in roadmap of Ergo and need for data availablity as a sperate layer?


[12/13/2022 12:00 PM] morphic#4133
MAST is possible, here is example https://github.com/ScorexFoundation/sigmastate-interpreter/blob/a2aff03a962ffcdb223b2adb72354418839976f9/sigmastate/src/test/scala/sigmastate/utxo/examples/MASTExampleSpecification.scala#L29
But it is not supported by ErgoScript, so ErgoTrees need to be created directly.
Also Appkit don't have helpers for MAST.
But the protocol allows it.


[12/13/2022 1:03 PM] glasgowm#9381
They've been discussed a bit in #layer2


[12/13/2022 4:33 PM] augustov#8298
Is there a way to access that channel? or is it private?


[12/13/2022 4:43 PM] glasgowm#9381
Added to #deleted-channel

{Reactions}
üëçüèº 

[12/13/2022 4:52 PM] augustov#8298
Thank you sir!


[12/13/2022 4:55 PM] augustov#8298
for some reason is not opening yet


[12/13/2022 4:58 PM] glasgowm#9381
My bad, that should be it now.

{Reactions}
üëçüèº 

[12/13/2022 5:14 PM] pgwada#0227
Thanks I put out the message in Layer2 channel also.


[12/15/2022 4:44 PM] glasgowm#9381
https://mitchellpkt.medium.com/fingerprinting-a-flood-forensic-statistical-analysis-of-the-mid-2021-monero-transaction-volume-a19cbf41ce60

{Embed}
https://mitchellpkt.medium.com/fingerprinting-a-flood-forensic-statistical-analysis-of-the-mid-2021-monero-transaction-volume-a19cbf41ce60
Fingerprinting a flood: forensic statistical analysis of the mid-20...
Contributors: Isthmus (Mitchell P. Krawiec-Thayer), Neptune, Rucknium, Jberman, Carrington
https://images-ext-1.discordapp.net/external/afs5Tmm0PcXadV3fvUMnhtnKyhIFaRrL-dhkUFsV1DI/https/miro.medium.com/max/1200/1%2A7Q4RStd2oLwe5ku1RLLShg.png


[12/22/2022 3:46 PM] liquid_phase#4605
Random idea I had while meditating:

FPGA cryptographic stasis module

device locked to a hardware identifier and with changing over time random codes based on initial seed. initial seed on stasis module must be provisioned by a node at current block height based on similar algorithms used in 2FA

the circuit is continually in ‚Äòstasis‚Äô as long as it is revolving through keys from the seed - as long as the circuit is in stasis, the unit is recognized by the network as a 'latent node'

when the circuit signal changes, as when audio or visual data is being transcoded for final export and upload to wherever, the circuit stasis is broken and the unit connects to the blockchain to validate starting at (currentHeight - 1000blocks) - once it validates 1000 + N blocks, the unit can perform operations such as minting, payment validation, mixer client, etc. and then continue to validate for n(currentHeight at time of operation) +1000 blocks.

Key ideas:
‚Ä¢ cryptographic stasis 
‚Ä¢ Thin client
‚Ä¢ light node
‚Ä¢ hardware as a service
‚Ä¢ minting as a service
‚Ä¢ data transcoding and analysis


[12/22/2022 3:50 PM] liquid_phase#4605
@Wolf9466 - feasible?


[12/22/2022 3:52 PM] Wolf9466#6211
probably not - not unless you want it completely centralized


[12/22/2022 3:52 PM] liquid_phase#4605
well, it would require node changes to adjust for thse units are light clients. if the network recognized them and prepared for them in a specific way, would it be possible? or is the replication of a random seed too easy


[12/22/2022 3:56 PM] liquid_phase#4605
thinking more about it, the seed to be recognized on both ends would require the blockchain to store copies of the key, which wouuld be public ultimately. so it would maybe not be so feasible


[12/22/2022 4:00 PM] liquid_phase#4605
perhaps if there was a network of trusted oracles which performed certain operations like encrypting and decrypting the private keys


[12/22/2022 4:00 PM] liquid_phase#4605
but seems like a stretch the more i think about it


[01/11/2023 6:51 PM] Repampanoz#4088
Hey guys, I've been doing a some research on the off-line bot and ergo nodes
I'm currently running a btc full + lighting node on a pi4


[01/11/2023 6:52 PM] Repampanoz#4088
Would it even be possible to run BTC full + lighting plus Ergo node + off - chain bot on the same device?

I have no trouble in getting another pi4 for ergo haha, just wanted to know if it's possible


[01/11/2023 7:43 PM] glasgowm#9381
off-chain bots require a bit of resources I think, best asking in the #spectrum discord. Think they have a channel for bot operators.


[01/12/2023 12:15 AM] Repampanoz#4088
Thanks, will do!


[01/12/2023 4:18 AM] MGpai#4313
no


[01/12/2023 4:25 AM] Repampanoz#4088
Time to get a new pi thenüòÖ


[01/12/2023 4:25 AM] Repampanoz#4088
First will test in the one I have if it can handle node + bot


[03/18/2023 7:04 PM] Marty#4039
I'd love to see ergo devs consider speeding up block times. There are way too many 5+ minute blocks


[03/18/2023 7:05 PM] Marty#4039
the research was done several years ago to make things faster on PoW
https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time


[03/18/2023 7:05 PM] Marty#4039
https://blog.ethereum.org/2015/09/14/on-slow-and-fast-block-times


[03/28/2023 8:09 PM] glasgowm#9381
Fully Adaptive Schnorr Threshold Signatures
https://eprint.iacr.org/2023/445.pdf

{Reactions}
k_thumbs_up 

[04/13/2023 11:27 PM] deathgripson#2395
I'm starting to draw up a design for an atomic swap or potentially bridging protocol that leverages zkps to handle scalability relating to the modularity of the transfer amount. In a standard swap you need to commit to scalar through its public key effectively, the limitation being that this is the only scalar value that can be used in the transaction. If we can consider that the original commitment could be merklized some way that preserves the Discrete Log hardness of the scalar then I believe we can use these branches to denominate coins locked to this script without creating extra inputs that require more transactions or committing to all of them upfront. It likely means the denomination scalars need to be derived from the original scalar that was committed to. Let me know if anyone has thoughts on this.

{Reactions}
üî• 

[04/14/2023 8:46 PM] deathgripson#2395
found a very funny and insightful video about applied cryptography https://www.youtube.com/watch?v=mVbmbO5cH3o

{Embed}
AarhusCrypto
https://www.youtube.com/watch?v=mVbmbO5cH3o
OMG! People are Actually Implementing my MPC Papers!
Talk by Yehuda Lindell at TPMPC 2022.
https://images-ext-1.discordapp.net/external/rrHa4NVUHAwRX-00G6b1wHM4Bp400eAgb0pkxjCLX7s/https/i.ytimg.com/vi/mVbmbO5cH3o/maxresdefault.jpg


[04/27/2023 3:26 AM] deathgripson#2395
RSK sidechain on BTC apparently has also implemented a form of storage rent: https://github.com/rsksmart/RSKIPs/blob/master/IPs/RSKIP113.md

{Embed}
https://github.com/rsksmart/RSKIPs/blob/master/IPs/RSKIP113.md
RSKIPs/RSKIP113.md at master ¬∑ rsksmart/RSKIPs
RSK Improvement Proposals. Contribute to rsksmart/RSKIPs development by creating an account on GitHub.
https://images-ext-1.discordapp.net/external/3ZiWOzQJPOjs2c2t2svEJI9q_crLa1IcpW8VQzpiCqA/https/opengraph.githubassets.com/768127ba53729d095bf41622261afc9241d78c4b8e697ea5e611ddaacbae451f/rsksmart/RSKIPs


==============================================================
Exported 817 message(s)
==============================================================
